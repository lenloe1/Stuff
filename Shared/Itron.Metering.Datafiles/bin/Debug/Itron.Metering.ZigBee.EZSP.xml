<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Itron.Metering.ZigBee.EZSP</name>
    </assembly>
    <members>
        <member name="T:Itron.Metering.Zigbee.Enums.OTAStatusCodes">
            <summary>
            OTAStatusCodes enum for OTA status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.Success">
            <summary>Success</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.ABORT">
            <summary>ABORT</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.NOT_AUTHORIZED">
            <summary>NOT AUTHORIZED</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.INVALID_IMAGE">
            <summary>INVALID IMAGE</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.WAIT_FOR_DATA">
            <summary>WAIT FOR DATA</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.NO_IMAGE_AVAILABLE">
            <summary>NO IMAGE AVAILABLE</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.MALFORMED_COMMAND">
            <summary>MALFORMED COMMAND</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.UNSUP_CLUSTER_COMMAND">
            <summary>UNSUP CLUSTER COMMAND</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAStatusCodes.REQUIRE_MORE_IMAGE">
            <summary>REQUIRE MORE IMAGE</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.Enums.OTAPayloadType">
            <summary>
            OTAPayloadType enum for OTA status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAPayloadType.Query_jitter">
            <summary>Query jitter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAPayloadType.Query_jitter_and_manufacturer_code">
            <summary>Query jitter and manufacturer code</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAPayloadType.Query_jitter_and_manufacturer_code_and_image_type">
            <summary>Query jitter and manufacturer code and image type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAPayloadType.Query_jitter_manufacturer_code_image_type_and_new_file_version">
            <summary>Query jitter manufacturer code_image type and new file version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAPayloadType.Reserved">
            <summary>Reserved</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.Enums.OTAFlowStatus">
            <summary>
            OTAFlowStatus enum for which state in processe of downloading an image
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Image_not_available">
            <summary> Image_not_vailble or Image_querry has not begun yet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Image_available">
            <summary>Image_availble</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_requested">
            <summary>Next Image requested</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_received">
            <summary>Next Image received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_Block_requested">
            <summary>Next Image Block requested</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_Block_received">
            <summary>Next_Image_Block_received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Image_Block_error">
            <summary>Image Block error</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_blocks_end">
            <summary>Next Image blocks end</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.OTAFlowStatus.Next_Image_Abort">
            <summary>Next_Image_Abort</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.Enums.Payload">
            <summary>
            Payload enum
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.Payload.Query_jitter">
            <summary> Query jitter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.Payload.Query_jitter_and_manufacturer">
            <summary>Query jitter and manufacturer code</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.Payload.Query_jitter_manufacturer_and_image">
            <summary>Query jitter, manufacturer code, and image type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.Enums.Payload.Query_jitter_manufacturer_image_and_file_version">
            <summary>Query jitter, manufacturer code, image type, and new file version</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SmartEnergyClusters">
            <summary>
            The Smart Energy ZigBee Cluster ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.Price">
            <summary>Pricing</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.DRLC">
            <summary>Demand Response Load Control</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.SimpleMetering">
            <summary>Simple Metering</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.Messaging">
            <summary>Messaging</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.SmartEnergyTunneling">
            <summary>SE Tunneling</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.PrePayment">
            <summary>Pre-Payment</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyClusters.KeyEstablishment">
            <summary>Key Establishment</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.GeneralClusters">
            <summary>
            The General ZigBee Clusters ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Basic">
            <summary>Basic</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.PowerConfiguration">
            <summary>Power Configuration</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.DeviceTemperatureConfiguration">
            <summary>Device Temperature Configuration</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Identify">
            <summary>Identify</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Groups">
            <summary>Groups</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Scenes">
            <summary>Scenes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.OnOff">
            <summary>On/Off</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.OnOffSwitchConfiguration">
            <summary>On/Off Switch Control</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.LevelControl">
            <summary>Level Control</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Alarms">
            <summary>Alarms</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Time">
            <summary>Time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.RSSILocation">
            <summary>RSSI Location</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.Commissioning">
            <summary>Commissioning</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralClusters.OTA">
            <summary>Bind to the OTA Cluster</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLStatus">
            <summary>
            ZCL Status Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.Success">
            <summary>Success</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.Failure">
            <summary>Failure</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.NotAuthorized">
            <summary>Not Authorized</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.ReservedFieldNotZero">
            <summary>Reserved Field Not Zero</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.MalformedCommand">
            <summary>Malformed Command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnsupportedClusterCommand">
            <summary>Unsupported Cluster Command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnsupportedGeneralCommand">
            <summary>Unsupported General Command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnsupportedManufacturerClusterCommand">
            <summary>Unsupported Manufacturer Cluster Command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnsupportedManufacturerGeneralCommand">
            <summary>Unsupported Manufacturer General Command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InvalidField">
            <summary>Invalid Field</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnsupportedAttribute">
            <summary>Unsupported Attribute</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InvalidValue">
            <summary>Invalid Value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.ReadOnly">
            <summary>Read Only</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InsufficientSpace">
            <summary>Insufficient Space</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.DuplicateExists">
            <summary>Duplicate Exists</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.NotFound">
            <summary>Not Found</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.UnreportableAttribute">
            <summary>Unreportable Attribute</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InvalidDataType">
            <summary>Invalid Data Type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InvalidSelector">
            <summary>Invalid Selector</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.WriteOnly">
            <summary>Write Only</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InconsistentStartupState">
            <summary>Inconsistent Startup State</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.DefinedOutOfBand">
            <summary>Defined Out Of Band</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.Abort">
            <summary>Abort</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.InvalidImage">
            <summary>Invalid Image</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.WaitForData">
            <summary>Wait for Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.NoImageAvailable">
            <summary>No Image Available</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.RequireMoreImage">
            <summary>Require More Image</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.HardwareFailure">
            <summary>Hardware Failure</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.SoftwareFailure">
            <summary>Software Failure</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLStatus.CalibrationError">
            <summary>Calibration Error</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SmartEnergyBindingClusters">
            <summary>
            Used to specify which Smart Energy Clusters the device should bind to
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.None">
            <summary>Don't bind to any clusters</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.SimpleMetering">
            <summary>Bind to the Simple Metering Cluster</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.Messaging">
            <summary>Bind to the Messaging Cluster</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.Price">
            <summary>Bind to the Pricing Cluster</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.DRLC">
            <summary>Bind to the DRLC Cluster</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.Time">
            <summary>Bind to the Time Cluster</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SmartEnergyBindingClusters.OTA">
            <summary>Bind to the OTA Cluster</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DRLCServerCommands">
            <summary>
            Server side DRLC Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCServerCommands.LoadControlEvent">
            <summary>Schedule a load control event</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCServerCommands.CancelLoadControlEvent">
            <summary>Cancel an individual load control event</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCServerCommands.CancelAllLoadControlEvents">
            <summary>Cancel all load control events</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DRLCClientCommands">
            <summary>
            Client side DRLC Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientCommands.ReportEventStatus">
            <summary>Reports the status of an event back to the DRLC server</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientCommands.GetScheduledEvents">
            <summary>Requests the list of scheduled events</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAClientCommands">
            <summary>
            OTA Client Commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientCommands.QueryNextImage">
            <summary>QueryNextImage</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientCommands.ImageBlockRequest">
            <summary>ImageBlockRequest</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientCommands.ImagePageRequest">
            <summary>ImagePageRequest</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientCommands.UpgradeEndRequest">
            <summary>UpgradeEndRequest</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientCommands.QueryDeviceSpecificFileRequest">
            <summary>QueryDeviceSpecificFileRequest .</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAServerCommands">
            <summary>
            OTA Server Commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAServerCommands.ImageNotify">
            <summary>ImageNotify</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAServerCommands.QueryNextImageResponse">
            <summary>QueryNextImageResponse</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAServerCommands.ImageBlockResponse">
            <summary>ImageBlockResponse</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAServerCommands.UpgradeEndResponse">
            <summary>UpgradeEndResponse</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAServerCommands.QueryDeviceSpecificFileResponse">
            <summary>QueryDeviceSpecificFileResponse</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ImageUpgradeStatus">
            <summary>
            Image Upgrade Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Normal">
            <summary>Nothing yet began</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Download_in_progress">
            <summary>Download_in_progress</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Download_complete">
            <summary>Download_complete</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Waiting_to_upgrade">
            <summary>Waiting_to_upgrade</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Count_down">
            <summary>Count_down</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Wait_for_more">
            <summary>Wait_for_more</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ImageUpgradeStatus.Waiting_to_Upgrade_via_External_Event">
            <summary>Waiting to Upgrade via External Event</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAClientAttributes">
            <summary>
            The Client side OTA Attributes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.UpgradeServerId">
            <summary>Upgrade Server Id</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.FileOffset">
            <summary>File Offset</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.CurrentFileVersion">
            <summary>Current File Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.CurrentZigBeeStackVersion">
            <summary>Current ZigBee Stack Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.DownloadedFileVersion">
            <summary>Download File Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.DownloadedZigBeeStackVersion">
            <summary>Download ZigBee Stack Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.ImageUpgradeStatus">
            <summary>Image Upgrade Status</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.ManufacturerId">
            <summary>Manufacturer Id</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.OTAClientAttributes.ImageTypeId">
            <summary>Image Type Id</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DRLCClientAttributes">
            <summary>
            The Client side DRLC attributes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientAttributes.UtilityEnrollmentGroup">
            <summary>The Utility Enrollment group that defines which group of DRLC devices it belongs to (0x00 means all groups)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientAttributes.StartRandomizeMinutes">
            <summary>The maximum number of minutes to be used when randomizing the start of an event</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientAttributes.StopRandomizeMinutes">
            <summary>The maximum number of minutes to be used when randomizing the end of an event</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.DRLCClientAttributes.DeviceClassValue">
            <summary>The bitfield describing which device classes will be handled</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.IdentifyClusterCommands">
            <summary>
            Identify cluster specific commands enum
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.IdentifyClusterCommands.Identify">
            <summary>
            identify command (client to server)
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.IdentifyClusterCommands.IdentifyQuery">
            <summary>
            identify query command (client to server)
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SimpleMeteringAttributes">
            <summary>
            The attributes available for the Simple Metering Cluster
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDelivered">
            <summary>The current energy summation delivered value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceived">
            <summary>The current energy summation received value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMaxDemandDelivered">
            <summary>The maximum demand delivered value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMaxDemandReceived">
            <summary>The maximum demand received value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DailyFreezeTimeSummation">
            <summary>The summation delivered value at the daily freeze time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DailyFreezeTime">
            <summary>The daily freeze time of day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PowerFactor">
            <summary>The current power factor</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.ReadingSnapShotTime">
            <summary>The last time all of the current values were updated.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMaxDemandDeliveredTime">
            <summary>The time of occurrence for the max demand delivered value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMaxDemandReceivedTime">
            <summary>The time of occurrence for the max demand received value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DefaultUpdatePeriod">
            <summary>The interval at which the instantaneous demand attribute is updated when not in fast poll mode</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.FastPollUpdatePeriod">
            <summary>The interval at which the instantaneous demand attribute is updated when in fast poll mode</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentBlockPeriodConsumptionDelivered">
            <summary>The most recent summation delivered value for the Block Tariff Period</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DailyConsumptionTarget">
            <summary>The daily target consumption value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentBlock">
            <summary>The currently active block</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.ProfileIntervalPeriod">
            <summary>The duration of a single profile interval</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.IntervalReadReportingPeriod">
            <summary>How often the device is woken up to provide interval data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PresetReadingTime">
            <summary>A specific time of day when the device is woken up to report register readings</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.VolumePerReport">
            <summary>The volume per report increment from water or gas meters</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.FlowRestriction">
            <summary>The volume per minute limit in a flow restrictor.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.SupplyStatus">
            <summary>The state of the supply at the customer's premise</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentInletEnergyCarrierSummation">
            <summary>Current volume on the inlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentOutletEnergyCarrierSummation">
            <summary>Current volume on the outlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.InletTemperature">
            <summary>The temperature at the inlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.OutletTemperature">
            <summary>The temperature at the outlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.ControlTemperature">
            <summary>Reference temperature used to validate the inlet and outlet temperatures</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentInletEnergyCarrierDemand">
            <summary>Current absolute demand on the energy carrier inlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentOutletEnergyCarrierDemand">
            <summary>Current absolute demand on the energy carrier outlet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousBlockPeriodConsumptionDelivered">
            <summary>The summation delivered value for the previous Block Tariff Period</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier1">
            <summary>Current Summation Delivered for Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier1">
            <summary>Current Summation Received for Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier2">
            <summary>Current Summation Delivered for Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier2">
            <summary>Current Summation Received for Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier3">
            <summary>Current Summation Delivered for Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier3">
            <summary>Current Summation Received for Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier4">
            <summary>Current Summation Delivered for Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier4">
            <summary>Current Summation Received for Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier5">
            <summary>Current Summation Delivered for Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier5">
            <summary>Current Summation Received for Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier6">
            <summary>Current Summation Delivered for Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier6">
            <summary>Current Summation Received for Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier7">
            <summary>Current Summation Delivered for Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier7">
            <summary>Current Summation Received for Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier8">
            <summary>Current Summation Delivered for Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier8">
            <summary>Current Summation Received for Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier9">
            <summary>Current Summation Delivered for Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier9">
            <summary>Current Summation Received for Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier10">
            <summary>Current Summation Delivered for Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier10">
            <summary>Current Summation Received for Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier11">
            <summary>Current Summation Delivered for Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier11">
            <summary>Current Summation Received for Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier12">
            <summary>Current Summation Delivered for Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier12">
            <summary>Current Summation Received for Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier13">
            <summary>Current Summation Delivered for Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier13">
            <summary>Current Summation Received for Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier14">
            <summary>Current Summation Delivered for Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier14">
            <summary>Current Summation Received for Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredTier15">
            <summary>Current Summation Delivered for Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationReceivedTier15">
            <summary>Current Summation Received for Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.Status">
            <summary>The current status of the metering device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.RemainingBatteryLife">
            <summary>Estimated battery percent remaining</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.HoursInOperation">
            <summary>The total number of hours the meter has been in operation</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.HoursInFault">
            <summary>The total number of hours the device has been in a faulted state</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.UnitOfMeasure">
            <summary>The Unit of measure applied to summation, consumptions, profile interval and demand</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.Multiplier">
            <summary>The value to multiply against the raw value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.Divisor">
            <summary>The divisor used to divide a raw value.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.SummationFormatting">
            <summary>Formatting used for Summation, TOU, and Block attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DemandFormatting">
            <summary>Formatting used for Max and Instantaneous Demand attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.HistoricalConsumptionFormatting">
            <summary>Formatting used for historical consumption attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.MeteringDeviceType">
            <summary>Identifies the type of metering device.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.SiteID">
            <summary>Text string  used to identify the location of the meter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.MeterSerialNumber">
            <summary>The Serial Number of the meter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.EnergyCarrierUnitOfMeasure">
            <summary>Unit of measure for energy carrier summation attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.EnergyCarrierSummationFormatting">
            <summary>Formatting used for energy carrier summation attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.EnergyCarrierDemandFormatting">
            <summary>Formatting used for energy carrier demand attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.TemperatureUnitOfMeasure">
            <summary>The Unit of measure for temperature based attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.TemperatureFormatting">
            <summary>The formatting for temperature base attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.InstantaneousDemand">
            <summary>The instantaneous demand value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayConsumptionDelivered">
            <summary>The total consumption delivered for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayConsumptionReceived">
            <summary>The total consumption received for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayConsumptionDelivered">
            <summary>The total consumption delivered for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayConsumptionReceived">
            <summary>The total consumption received for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentPartialProfileIntervalStartTimeDelivered">
            <summary>The start time of the current load profile interval for consumption delivered</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentPartialProfileIntervalStartTimeReceived">
            <summary>The start time of the current load profile interval for consumption received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentPartialProfileIntervalValueDelivered">
            <summary>The current value of the consumption delivered load profile interval being accumulated</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentPartialProfileIntervalValueReceived">
            <summary>The current value of the consumption received load profile interval being accumulated</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayMaxPressure">
            <summary>The maximum pressure reported for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayMinPressure">
            <summary>The minimum pressure reported for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayMaxPressure">
            <summary>The maximum pressure reported for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayMinPressure">
            <summary>The minimum pressure reported for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayMaxDemand">
            <summary>The maximum demand for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayMaxDemand">
            <summary>The maximum demand for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMonthMaxDemand">
            <summary>The maximum demand for the current month</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentYearMaxDemand">
            <summary>The maximum demand for the current year</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentDayMaxEnergyCarrierDemand">
            <summary>The maximum energy carrier demand for the current day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.PreviousDayMaxEnergyCarrierDemand">
            <summary>The maximum energy carrier demand for the previous day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMonthMaxEnergyCarrierDemand">
            <summary>The maximum energy carrier demand for the current month</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentMonthMinEnergyCarrierDemand">
            <summary>The minimum energy carrier demand for the current month</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentYearMaxEnergyCarrierDemand">
            <summary>The maximum energy carrier demand for the current year</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentYearMinEnergyCarrierDemand">
            <summary>The minimum energy carrier demand for the current year</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.MaxNumberOfPeriodsDelivered">
            <summary>The maximum number of intervals the device is capable of returning</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.SupplyLimitCurrentDemandDelivered">
            <summary>The current demand delivered</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DemandLimit">
            <summary>The current supply demand limit set in the meter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.DemandIntegrationPeriod">
            <summary>The number of minutes over which the demand is calculated</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.NumberOfDemandSubintervals">
            <summary>The number of subintervals used within the integration period</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1">
            <summary>Current Summation Delivered for Block 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2">
            <summary>Current Summation Delivered for Block 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3">
            <summary>Current Summation Delivered for Block 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4">
            <summary>Current Summation Delivered for Block 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5">
            <summary>Current Summation Delivered for Block 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6">
            <summary>Current Summation Delivered for Block 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7">
            <summary>Current Summation Delivered for Block 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8">
            <summary>Current Summation Delivered for Block 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9r">
            <summary>Current Summation Delivered for Block 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10">
            <summary>Current Summation Delivered for Block 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11">
            <summary>Current Summation Delivered for Block 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12">
            <summary>Current Summation Delivered for Block 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13">
            <summary>Current Summation Delivered for Block 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14">
            <summary>Current Summation Delivered for Block 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15">
            <summary>Current Summation Delivered for Block 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16">
            <summary>Current Summation Delivered for Block 16</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier1">
            <summary>Current Summation Delivered for Block 1 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier1">
            <summary>Current Summation Delivered for Block 2 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier1">
            <summary>Current Summation Delivered for Block 3 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier1">
            <summary>Current Summation Delivered for Block 4 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier1">
            <summary>Current Summation Delivered for Block 5 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier1">
            <summary>Current Summation Delivered for Block 6 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier1">
            <summary>Current Summation Delivered for Block 7 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier1">
            <summary>Current Summation Delivered for Block 8 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier1">
            <summary>Current Summation Delivered for Block 9 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier1">
            <summary>Current Summation Delivered for Block 10 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier1">
            <summary>Current Summation Delivered for Block 11 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier1">
            <summary>Current Summation Delivered for Block 12 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier1">
            <summary>Current Summation Delivered for Block 13 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier1">
            <summary>Current Summation Delivered for Block 14 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier1">
            <summary>Current Summation Delivered for Block 15 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier1">
            <summary>Current Summation Delivered for Block 16 Tier 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier2">
            <summary>Current Summation Delivered for Block 1 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier2">
            <summary>Current Summation Delivered for Block 2 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier2">
            <summary>Current Summation Delivered for Block 3 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier2">
            <summary>Current Summation Delivered for Block 4 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier2">
            <summary>Current Summation Delivered for Block 5 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier2">
            <summary>Current Summation Delivered for Block 6 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier2">
            <summary>Current Summation Delivered for Block 7 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier2">
            <summary>Current Summation Delivered for Block 8 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier2">
            <summary>Current Summation Delivered for Block 9 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier2">
            <summary>Current Summation Delivered for Block 10 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier2">
            <summary>Current Summation Delivered for Block 11 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier2">
            <summary>Current Summation Delivered for Block 12 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier2">
            <summary>Current Summation Delivered for Block 13 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier2">
            <summary>Current Summation Delivered for Block 14 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier2">
            <summary>Current Summation Delivered for Block 15 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier2">
            <summary>Current Summation Delivered for Block 16 Tier 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier3">
            <summary>Current Summation Delivered for Block 1 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier3">
            <summary>Current Summation Delivered for Block 2 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier3">
            <summary>Current Summation Delivered for Block 3 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier3">
            <summary>Current Summation Delivered for Block 4 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier3">
            <summary>Current Summation Delivered for Block 5 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier3">
            <summary>Current Summation Delivered for Block 6 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier3">
            <summary>Current Summation Delivered for Block 7 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier3">
            <summary>Current Summation Delivered for Block 8 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier3">
            <summary>Current Summation Delivered for Block 9 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier3">
            <summary>Current Summation Delivered for Block 10 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier3">
            <summary>Current Summation Delivered for Block 11 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier3">
            <summary>Current Summation Delivered for Block 12 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier3">
            <summary>Current Summation Delivered for Block 13 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier3">
            <summary>Current Summation Delivered for Block 14 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier3">
            <summary>Current Summation Delivered for Block 15 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier3">
            <summary>Current Summation Delivered for Block 16 Tier 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier4">
            <summary>Current Summation Delivered for Block 1 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier4">
            <summary>Current Summation Delivered for Block 2 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier4">
            <summary>Current Summation Delivered for Block 3 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier4">
            <summary>Current Summation Delivered for Block 4 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier4">
            <summary>Current Summation Delivered for Block 5 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier4">
            <summary>Current Summation Delivered for Block 6 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier4">
            <summary>Current Summation Delivered for Block 7 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier4">
            <summary>Current Summation Delivered for Block 8 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier4">
            <summary>Current Summation Delivered for Block 9 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier4">
            <summary>Current Summation Delivered for Block 10 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier4">
            <summary>Current Summation Delivered for Block 11 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier4">
            <summary>Current Summation Delivered for Block 12 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier4">
            <summary>Current Summation Delivered for Block 13 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier4">
            <summary>Current Summation Delivered for Block 14 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier4">
            <summary>Current Summation Delivered for Block 15 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier4">
            <summary>Current Summation Delivered for Block 16 Tier 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier5">
            <summary>Current Summation Delivered for Block 1 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier5">
            <summary>Current Summation Delivered for Block 2 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier5">
            <summary>Current Summation Delivered for Block 3 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier5">
            <summary>Current Summation Delivered for Block 4 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier5">
            <summary>Current Summation Delivered for Block 5 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier5">
            <summary>Current Summation Delivered for Block 6 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier5">
            <summary>Current Summation Delivered for Block 7 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier5">
            <summary>Current Summation Delivered for Block 8 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier5">
            <summary>Current Summation Delivered for Block 9 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier5">
            <summary>Current Summation Delivered for Block 10 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier5">
            <summary>Current Summation Delivered for Block 11 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier5">
            <summary>Current Summation Delivered for Block 12 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier5">
            <summary>Current Summation Delivered for Block 13 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier5">
            <summary>Current Summation Delivered for Block 14 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier5">
            <summary>Current Summation Delivered for Block 15 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier5">
            <summary>Current Summation Delivered for Block 16 Tier 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier6">
            <summary>Current Summation Delivered for Block 1 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier6">
            <summary>Current Summation Delivered for Block 2 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier6">
            <summary>Current Summation Delivered for Block 3 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier6">
            <summary>Current Summation Delivered for Block 4 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier6">
            <summary>Current Summation Delivered for Block 5 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier6">
            <summary>Current Summation Delivered for Block 6 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier6">
            <summary>Current Summation Delivered for Block 7 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier6">
            <summary>Current Summation Delivered for Block 8 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier6">
            <summary>Current Summation Delivered for Block 9 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier6">
            <summary>Current Summation Delivered for Block 10 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier6">
            <summary>Current Summation Delivered for Block 11 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier6">
            <summary>Current Summation Delivered for Block 12 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier6">
            <summary>Current Summation Delivered for Block 13 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier6">
            <summary>Current Summation Delivered for Block 14 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier6">
            <summary>Current Summation Delivered for Block 15 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier6">
            <summary>Current Summation Delivered for Block 16 Tier 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier7">
            <summary>Current Summation Delivered for Block 1 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier7">
            <summary>Current Summation Delivered for Block 2 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier7">
            <summary>Current Summation Delivered for Block 3 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier7">
            <summary>Current Summation Delivered for Block 4 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier7">
            <summary>Current Summation Delivered for Block 5 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier7">
            <summary>Current Summation Delivered for Block 6 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier7">
            <summary>Current Summation Delivered for Block 7 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier7">
            <summary>Current Summation Delivered for Block 8 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier7">
            <summary>Current Summation Delivered for Block 9 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier7">
            <summary>Current Summation Delivered for Block 10 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier7">
            <summary>Current Summation Delivered for Block 11 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier7">
            <summary>Current Summation Delivered for Block 12 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier7">
            <summary>Current Summation Delivered for Block 13 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier7">
            <summary>Current Summation Delivered for Block 14 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier7">
            <summary>Current Summation Delivered for Block 15 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier7">
            <summary>Current Summation Delivered for Block 16 Tier 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier8">
            <summary>Current Summation Delivered for Block 1 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier8">
            <summary>Current Summation Delivered for Block 2 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier8">
            <summary>Current Summation Delivered for Block 3 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier8">
            <summary>Current Summation Delivered for Block 4 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier8">
            <summary>Current Summation Delivered for Block 5 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier8">
            <summary>Current Summation Delivered for Block 6 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier8">
            <summary>Current Summation Delivered for Block 7 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier8">
            <summary>Current Summation Delivered for Block 8 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier8">
            <summary>Current Summation Delivered for Block 9 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier8">
            <summary>Current Summation Delivered for Block 10 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier8">
            <summary>Current Summation Delivered for Block 11 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier8">
            <summary>Current Summation Delivered for Block 12 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier8">
            <summary>Current Summation Delivered for Block 13 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier8">
            <summary>Current Summation Delivered for Block 14 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier8">
            <summary>Current Summation Delivered for Block 15 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier8">
            <summary>Current Summation Delivered for Block 16 Tier 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier9">
            <summary>Current Summation Delivered for Block 1 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier9">
            <summary>Current Summation Delivered for Block 2 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier9">
            <summary>Current Summation Delivered for Block 3 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier9">
            <summary>Current Summation Delivered for Block 4 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier9">
            <summary>Current Summation Delivered for Block 5 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier9">
            <summary>Current Summation Delivered for Block 6 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier9">
            <summary>Current Summation Delivered for Block 7 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier9">
            <summary>Current Summation Delivered for Block 8 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier9">
            <summary>Current Summation Delivered for Block 9 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier9">
            <summary>Current Summation Delivered for Block 10 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier9">
            <summary>Current Summation Delivered for Block 11 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier9">
            <summary>Current Summation Delivered for Block 12 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier9">
            <summary>Current Summation Delivered for Block 13 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier9">
            <summary>Current Summation Delivered for Block 14 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier9">
            <summary>Current Summation Delivered for Block 15 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier9">
            <summary>Current Summation Delivered for Block 16 Tier 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier10">
            <summary>Current Summation Delivered for Block 1 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier10">
            <summary>Current Summation Delivered for Block 2 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier10">
            <summary>Current Summation Delivered for Block 3 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier10">
            <summary>Current Summation Delivered for Block 4 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier10">
            <summary>Current Summation Delivered for Block 5 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier10">
            <summary>Current Summation Delivered for Block 6 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier10">
            <summary>Current Summation Delivered for Block 7 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier10">
            <summary>Current Summation Delivered for Block 8 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier10">
            <summary>Current Summation Delivered for Block 9 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier10">
            <summary>Current Summation Delivered for Block 10 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier10">
            <summary>Current Summation Delivered for Block 11 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier10">
            <summary>Current Summation Delivered for Block 12 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier10">
            <summary>Current Summation Delivered for Block 13 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier10">
            <summary>Current Summation Delivered for Block 14 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier10">
            <summary>Current Summation Delivered for Block 15 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier10">
            <summary>Current Summation Delivered for Block 16 Tier 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier11">
            <summary>Current Summation Delivered for Block 1 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier11">
            <summary>Current Summation Delivered for Block 2 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier11">
            <summary>Current Summation Delivered for Block 3 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier11">
            <summary>Current Summation Delivered for Block 4 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier11">
            <summary>Current Summation Delivered for Block 5 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier11">
            <summary>Current Summation Delivered for Block 6 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier11">
            <summary>Current Summation Delivered for Block 7 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier11">
            <summary>Current Summation Delivered for Block 8 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier11">
            <summary>Current Summation Delivered for Block 9 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier11">
            <summary>Current Summation Delivered for Block 10 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier11">
            <summary>Current Summation Delivered for Block 11 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier11">
            <summary>Current Summation Delivered for Block 12 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier11">
            <summary>Current Summation Delivered for Block 13 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier11">
            <summary>Current Summation Delivered for Block 14 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier11">
            <summary>Current Summation Delivered for Block 15 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier11">
            <summary>Current Summation Delivered for Block 16 Tier 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier12">
            <summary>Current Summation Delivered for Block 1 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier12">
            <summary>Current Summation Delivered for Block 2 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier12">
            <summary>Current Summation Delivered for Block 3 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier12">
            <summary>Current Summation Delivered for Block 4 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier12">
            <summary>Current Summation Delivered for Block 5 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier12">
            <summary>Current Summation Delivered for Block 6 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier12">
            <summary>Current Summation Delivered for Block 7 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier12">
            <summary>Current Summation Delivered for Block 8 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier12">
            <summary>Current Summation Delivered for Block 9 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier12">
            <summary>Current Summation Delivered for Block 10 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier12">
            <summary>Current Summation Delivered for Block 11 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier12">
            <summary>Current Summation Delivered for Block 12 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier12">
            <summary>Current Summation Delivered for Block 13 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier12">
            <summary>Current Summation Delivered for Block 14 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier12">
            <summary>Current Summation Delivered for Block 15 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier12">
            <summary>Current Summation Delivered for Block 16 Tier 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier13">
            <summary>Current Summation Delivered for Block 1 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier13">
            <summary>Current Summation Delivered for Block 2 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier13">
            <summary>Current Summation Delivered for Block 3 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier13">
            <summary>Current Summation Delivered for Block 4 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier13">
            <summary>Current Summation Delivered for Block 5 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier13">
            <summary>Current Summation Delivered for Block 6 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier13">
            <summary>Current Summation Delivered for Block 7 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier13">
            <summary>Current Summation Delivered for Block 8 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier13">
            <summary>Current Summation Delivered for Block 9 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier13">
            <summary>Current Summation Delivered for Block 10 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier13">
            <summary>Current Summation Delivered for Block 11 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier13">
            <summary>Current Summation Delivered for Block 12 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier13">
            <summary>Current Summation Delivered for Block 13 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier13">
            <summary>Current Summation Delivered for Block 14 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier13">
            <summary>Current Summation Delivered for Block 15 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier13">
            <summary>Current Summation Delivered for Block 16 Tier 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier14">
            <summary>Current Summation Delivered for Block 1 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier14">
            <summary>Current Summation Delivered for Block 2 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier14">
            <summary>Current Summation Delivered for Block 3 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier14">
            <summary>Current Summation Delivered for Block 4 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier14">
            <summary>Current Summation Delivered for Block 5 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier14">
            <summary>Current Summation Delivered for Block 6 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier14">
            <summary>Current Summation Delivered for Block 7 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier14">
            <summary>Current Summation Delivered for Block 8 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier14">
            <summary>Current Summation Delivered for Block 9 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier14">
            <summary>Current Summation Delivered for Block 10 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier14">
            <summary>Current Summation Delivered for Block 11 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier14">
            <summary>Current Summation Delivered for Block 12 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier14">
            <summary>Current Summation Delivered for Block 13 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier14">
            <summary>Current Summation Delivered for Block 14 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier14">
            <summary>Current Summation Delivered for Block 15 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier14">
            <summary>Current Summation Delivered for Block 16 Tier 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock1Tier15">
            <summary>Current Summation Delivered for Block 1 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock2Tier15">
            <summary>Current Summation Delivered for Block 2 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock3Tier15">
            <summary>Current Summation Delivered for Block 3 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock4Tier15">
            <summary>Current Summation Delivered for Block 4 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock5Tier15">
            <summary>Current Summation Delivered for Block 5 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock6Tier15">
            <summary>Current Summation Delivered for Block 6 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock7Tier15">
            <summary>Current Summation Delivered for Block 7 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock8Tier15">
            <summary>Current Summation Delivered for Block 8 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock9Tier15">
            <summary>Current Summation Delivered for Block 9 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock10Tier15">
            <summary>Current Summation Delivered for Block 10 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock11Tier15">
            <summary>Current Summation Delivered for Block 11 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock12Tier15">
            <summary>Current Summation Delivered for Block 12 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock13Tier15">
            <summary>Current Summation Delivered for Block 13 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock14Tier15">
            <summary>Current Summation Delivered for Block 14 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock15Tier15">
            <summary>Current Summation Delivered for Block 15 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.CurrentSummationDeliveredBlock16Tier15">
            <summary>Current Summation Delivered for Block 16 Tier 15</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.GenericAlarmMask">
            <summary>Generic Alarm Mask</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.ElectricityAlarmMask">
            <summary>Electricity Alarm Mask</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.GenericFlowAndPressureAlarmMask">
            <summary>Generic Flow/Pressure Alarm Mask</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.WaterSpecificAlarmMask">
            <summary>Water Alarm Mask</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.HeatAndCoolingSpecificAlarmMask">
            <summary>Heating and Cooling Specific Alarm Mask</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringAttributes.GasSpecificAlarmMask">
            <summary>Gas Specific Alarm Mask</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SimpleMeteringServerCommands">
            <summary>
            Simple Metering commands available to the server
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringServerCommands.GetProfileResponse">
            <summary>Response command for a get load profile request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringServerCommands.RequestMirror">
            <summary>Request to mirror the metering device data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringServerCommands.RemoveMirror">
            <summary>Request to remove the mirror of the metering device data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringServerCommands.RequestFastPollModeResponse">
            <summary>Response to the fast poll mode request</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SimpleMeteringClientCommands">
            <summary>
            Simple Metering commands available to the client
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringClientCommands.GetProfile">
            <summary>Request load profile data from the meter</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringClientCommands.RequestMirrorResponse">
            <summary>Response to the Request Mirror command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringClientCommands.MirrorRemoved">
            <summary>Command to inform that the device has stopped mirroring metering data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringClientCommands.RequestFastPollMode">
            <summary>Request fast poll mode</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SimpleMeteringProfileChannel">
            <summary>
            The Load Profile Channels which can be retrieved using the Simple Metering Commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringProfileChannel.ConsumptionDelivered">
            <summary>Consumption Delivered</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.SimpleMeteringProfileChannel.ConsumptionReceived">
            <summary>Consumption Received</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessagingServerCommands">
            <summary>
            Server side Messaging Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.MessagingServerCommands.DisplayMessage">
            <summary>Display Message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.MessagingServerCommands.CancelMessage">
            <summary>Cancel Message</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessagingClientCommands">
            <summary>
            Client side Messaging Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.MessagingClientCommands.GetLastMessage">
            <summary>Get Last Message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.MessagingClientCommands.MessageConfirmation">
            <summary>Message Confirmation</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.PriceServerCommands">
            <summary>
            Server side Price Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceServerCommands.PublishPrice">
            <summary>Publish Price</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceServerCommands.PublishBlockPeriod">
            <summary>Publish Block Period</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.PriceClientCommands">
            <summary>
            Client side Price Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceClientCommands.GetCurrentPrice">
            <summary>Get Current Price</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceClientCommands.GetScheduledPrices">
            <summary>Get Scheduled Prices</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceClientCommands.PriceAcknowledgement">
            <summary>Price Acknowlegement</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.PriceClientCommands.GetBlockPeriods">
            <summary>Get Block Period(s)</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAAttributeRequestEventHandler">
            <summary>
            Delegate for the OTA Cluster Attribute Request Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.DisplayMessageEventHandler">
            <summary>
            Delegate for the Messaging Cluster Display Message Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTARespEventHandler">
            <summary>
            Delegate for the OTA Cluster Message Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTANotificationImageEventHandler">
            <summary>
            Delegate for the OTA Cluster Notification Image Message Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAUpgradeEndResponseEventHandler">
            <summary>
            Delegate for the OTA Cluster Notification Upgrade end response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAQueryNextImageRespEventHandler">
            <summary>
            Delegate for the OTA Cluster Next Image Message received Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTAQueryNextBlockRespEventHandler">
            <summary>
            Delegate for the OTA Cluster Next Block Message recived Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.CancelMessageEventHandler">
            <summary>
            Delegate for the Messaging Cluster Cancel Message Event Handler
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.PublishPriceEventHandler">
            <summary>
            Delegate for the Price Cluster Publish Price Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.PublishBlockPeriodEventHandler">
            <summary>
            Delegate for the Price Cluster Publish Block Period Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.MirrorResponseEventHandler">
            <summary>
            Delegate for the Mirror Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.MirrorRemovedResponseEventHandler">
            <summary>
            Delegate for the Mirror Removed Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.FastPollingRequestResponseEventHandler">
            <summary>
            Delegate for the Fast Polling request Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.DRLCResponseEventHandler">
            <summary>
            Delegate for the DRLCResponse Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.SE11ZigBeeApplication">
            <summary>
            Smart Energy 1.1 ZigBee Application Layer
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAAttributeRequest">
            <summary>
            Event to fire when an OTA Attribute Request message command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.DisplayMessageReceived">
            <summary>
            Event to fire when a Messaging Cluster Display message command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.CancelMessageReceived">
            <summary>
            Event to fire when a Messaging Cluster Cancel message command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTARespReceived">
            <summary>
            Event to fire when a Messaging Cluster Cancel message command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTANotificationImageReceived">
            <summary>
            Event to fire when a Messaging Cluster OTA with ImageNotify command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAUpgradeEndResponseReceived">
            <summary>
            Event to fire when a Messaging Cluster OTA with Upgrade End response command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAQueryNextImageRespReceived">
            <summary>
            Event to fire when a Messaging Cluster OTA with ImageNotify command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAQueryNextBlockRespReceived">
            <summary>
            Event to fire when a Messaging Cluster OTA with ImageNotify command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.PublishPriceReceived">
            <summary>
            Event to fire when a Price Cluster Publish Price command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.PublishBlockPeriodReceived">
            <summary>
            Event to fire when a Price Cluster Publish Block Period command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.MirrorResponseReceived">
            <summary>
            Event to fire when a Mirror Response command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.MirrorRemovedResponseReceived">
            <summary>
            Event to fire when a Mirror Response command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.FastPollingRequestResponseReceived">
            <summary>
            Event to fire when a Fast Polling command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.SE11ZigBeeApplication.DRLCResponseReceived">
            <summary>
            Event to fire when a DRLC command is received.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.Connect(System.String)">
            <summary>
            
            Connects to the radio through the specified COM port
            </summary>
            <param name="portName">The name of the COM port the radio is on</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.Join(Itron.Metering.Zigbee.EmberNodeType,System.UInt64,System.Byte)">
            <summary>
            Joins the meter
            </summary>
            <param name="nodeType">The type of device to join as.</param>
            <param name="extendedPanID">The extended PAN ID of the network to join</param>
            <param name="channel">The channel that the network is on</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.JoinWithCBKEError(Itron.Metering.Zigbee.EmberNodeType,System.UInt64,System.Byte,Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState)">
            <summary>
            Joins the meter but causes an error to occur during CBKE for testing purposes
            </summary>
            <param name="nodeType">The type of device to join as.</param>
            <param name="extendedPanID">The extended PAN ID of the network to join</param>
            <param name="channel">The channel that the network is on</param>
            <param name="errorState">The state in which the error should occur</param>
            <returns>True if the radio joined the meter to cause a CBKE failure. False if the radio failed to join the meter.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.BindToClusters(Itron.Metering.Zigbee.SmartEnergyBindingClusters)">
            <summary>
            Binds the radio to the specified clusters
            </summary>
            <param name="clusters">The clusters to bind to</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.DRLCEventOptOut(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Opts out of the specified DRLC Event
            </summary>
            <param name="optOutEvent">The DRLC Event to opt out of</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.DRLCEventOptIn(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Opts in to the specified DRLC Event
            </summary>
            <param name="optInEvent">The DRLC event to opt in to</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.Download_Auto(System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.Int32,System.String,System.String)">
            <summary>
            This code is not ready yet, it was supposed to do download automation on the dll level but know is handled from main (exe) level
            </summary>
            <param name="FieldControl">Bool for FieldControl where 1 means HW version will be provided</param>
            <param name="Manfacture">String of hex value of Manfacture example 1234 represents 0x1234</param>
            <param name="ImageType">String of hex value of Image Type example 1234 represents 0x1234</param>
            <param name="CurrFW">String of hex value of Currnt FW example 1234 represents 0x1234</param>
            <param name="Hw">String of hex value of Hardware example 1234 represents 0x1234</param>
            <param name="IEEE">Bool for security</param>
            <param name="RouteEnab">Route Enable through other devices </param>
            <param name="useSecurity">Bool for security</param>
            <param name="MaxData">String of hex value representing a byte example 12 represents 0x12</param>
            <param name="DelayNumOfBytes">int of value 0 or 2 representing if we have Block Request Delay where 2 means we have them</param>
            <param name="IEEEV">Value of IEEE Addr Hex</param>
            <param name="Delay">Value of Delay Hex</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetNextImage(System.Boolean,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Makes a request to the meter Request for next image. Option Manfacture code, SW version, use security included
            </summary>
            <param name="FieldControl">Bool for FieldControl where 1 means HW version will be provided</param>
            <param name="Manfacture">String of hex value of Manfacture example 1234 represents 0x1234</param>
            <param name="ImageType">String of hex value of Image Type example 1234 represents 0x1234</param>
            <param name="CurrFW">String of hex value of Currnt FW example 1234 represents 0x1234</param>
            <param name="Hw">String of hex value of Hardware example 1234 represents 0x1234</param>
            <param name="useSecurity">Bool for security</param>
            <param name="RouteEnab">Route Enable through other devices </param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.ImageBlockRequest(System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Makes a request to the meter for Block Request. Option Manfacture code, SW version, use security included
            </summary>
            <param name="IEEE">Bool for FieldControl where True means IEEE node will be will be provided</param>
            <param name="Manfacture">String of hex value of Manfacture example 1234 represents 0x1234</param>
            <param name="ImageType">String of hex value of Image Type example 1234 represents 0x1234</param>
            <param name="CurrFW">String of hex value of Currnt FW example 1234 represents 0x1234</param>
            <param name="Offset">String of hex value of Offset example 1234 represents 0x1234</param>
            <param name="MaxData">String of hex value representing a byte example 12 represents 0x12</param>
            <param name="DelayNumOfBytes">int of value 0 or 2 representing if we have Block Request Delay where 2 means we have them</param>
            <param name="IEEEV">Value of IEEE Addr Hex</param>
            <param name="Delay">Value of Delay Hex</param>
            <param name="useSecurity">Bool for security</param>
            <param name="RouteEnab">Route Enable through other devices </param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.EndUpgradeRequest(System.Byte,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            EndUpgrade makes a request to End upgrade. This is intiated after all blocks were received right
            </summary>
            <param name="status">Byte for status of upgrade</param>
            <param name="Manfacture">String of hex value of Manfacture example 1234 represents 0x1234</param>
            <param name="ImageType">String of hex value of Image Type example 1234 represents 0x1234</param>
            <param name="CurrFW">String of hex value of Currnt FW example 1234 represents 0x1234</param>
            <param name="useSecurity">Bool for security</param>
            <param name="RouteEnab">Route Enable through other devices </param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetScheduledDRLCEvents(System.DateTime,System.Byte,System.Boolean)">
            <summary>
            Get Scheduled DRLC Event
            </summary>
            <param name="startTime">The UTC time indicating the earliest events that should be sent. A date of 1/1/2000 00:00:00 UTC indicates now.</param>
            <param name="numberOfEvents">The maximum number of events to send. A zero value means send all events.</param>
            <param name="useSecurity">Option to use APS encryption or not.</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetScheduledDRLCEvents(System.Byte)">
            <summary>
            Makes a request to the meter to send any DRLC events any DRLC events starting from the current time
            </summary>
            <param name="numberOfEvents">The number of events to send. 0 indicates all events</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetCurrentEnergyAndDemand">
            <summary>
            Gets the Current Energy and Demand Values from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringGeneralAttributes(Itron.Metering.Zigbee.SimpleMeteringAttributes)">
            <summary>
            Gets all simple metering attributes from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringGeneralAttributes(System.Boolean)">
            <summary>
            Gets all simple metering attributes from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringTOUInfoAttributes(Itron.Metering.Zigbee.SimpleMeteringAttributes)">
            <summary>
            Gets all simple metering attributes from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringHistoricalAttributes(Itron.Metering.Zigbee.SimpleMeteringAttributes)">
            <summary>
            Gets all simple metering attributes from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetMaxNumberOfPeriodsDelivered">
            <summary>
            Gets the Maximum Number of Periods Delivered from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetTierPriceLabels">
            <summary>
            Gets Tier Price Labels from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetBlockPeriodAttributes">
            <summary>
            Get Block Period attributes from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetBlockThresholds">
            <summary>
            Get Block Thresholds from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetBillingInformation">
            <summary>
            Get Billing Information from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetNoTierBlockPrices">
            <summary>
            Get NoTier Block Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetTier1BlockPrices">
            <summary>
            Get Tier1 Block Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetTier2BlockPrices">
            <summary>
            Get Tier2 Block Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetTier3BlockPrices">
            <summary>
            Get Tier3 Block Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetTier4BlockPrices">
            <summary>
            Get Tier4 Block Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetLoadProfileData(Itron.Metering.Zigbee.SimpleMeteringProfileChannel,System.DateTime,System.Byte)">
            <summary>
            Gets the load profile data from the meter
            </summary>
            <param name="channel">The load profile channel to get</param>
            <param name="endTime">The end time of the data to get</param>
            <param name="periods">The number of periods to get</param>
            <returns>The requested Load Profile data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetLoadProfileConsumption(Itron.Metering.Zigbee.SimpleMeteringProfileChannel,System.DateTime,System.Byte)">
            <summary>
            Gets the load profile consumption from the meter
            </summary>
            <param name="channel">The load profile channel to get</param>
            <param name="endTime">The end time of the data to get</param>
            <param name="periods">The number of periods to get</param>
            <returns>The requested Load Profile data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendMirrorRequest">
            <summary>
            send mirror request
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendRemoveMirrorRequest">
            <summary>
            send mirror remove request
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendFastPollRequest(System.Byte,System.Int32)">
            <summary>
            send fast polling request
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendWriteAttributeCommand(Itron.Metering.Zigbee.GeneralClusters,System.UInt16,Itron.Metering.Zigbee.ZCLDataType,System.Byte)">
            <summary>
            sends write attribute command
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetLastMessage">
            <summary>
            Get Last Message from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetLastMessage(System.Boolean)">
            <summary>
            Get Last Message from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendMessageConfirmation(System.String)">
            <summary>
            Send Message Confirmation
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetCurrentPrice">
            <summary>
            Get Current Price from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetCurrentPrice(System.Boolean)">
            <summary>
            Get Current Price from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetBlockPeriods">
            <summary>
            Get Block Periods from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetScheduledPrices">
            <summary>
            Get Scheduled Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetScheduledPricesUsingZeroStartTime">
            <summary>
            Get Scheduled Prices from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendPriceAcknowledgement(System.UInt32,System.UInt32)">
            <summary>
            Send Price Acknowledgement
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendSimulatedDRLCEventStatusUpdate(Itron.Metering.DeviceDataTypes.DRLCEvent,System.Byte)">
            <summary>
            Send simulated DRLC event status update to meter. This method is to be used for testing only.
            </summary>
            <param name="drlcEvent">The event to update</param>
            <param name="Status">The status we want to send</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DRLCDeviceClass">
            <summary>
            Gets or sets the Device Classes that will be accepted for DRLC events
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DRLCEnrollmentGroup">
            <summary>
            Gets or sets the Enrollment Group that will be used to accept DRLC events
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.ScheduledDRLCEvents">
            <summary>
            Gets the List of Scheduled DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CompletedDRLCEvents">
            <summary>
            Gets the list of Completed DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.RunningDRLCEvents">
            <summary>
            Gets the list of currently running DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.UnitOfMeasure">
            <summary>
            Gets unit of measure
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Multiplier">
            <summary>
            Gets multiplier
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Divisor">
            <summary>
            Gets divisor
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.SummationFormatting">
            <summary>
            Gets Summation format
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DemandFormatting">
            <summary>
            Gets Demand Formatting
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.HistoricalConsumptionFormatting">
            <summary>
            Gets historical consumption formatting
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.MeteringDeviceType">
            <summary>
            Gets Metering device type
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier1SummationDelivered">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier1SummationReceived">
            <summary>
            GetsCurrent Tier Summation Received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier2SummationDelivered">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier2SummationReceived">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier3SummationDelivered">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier3SummationReceived">
            <summary>
            GetsCurrent Tier Summation Received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier4SummationDelivered">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier4SummationReceived">
            <summary>
            GetsCurrent Tier Summation Received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier5SummationDelivered">
            <summary>
            GetsCurrent Tier Summation Delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentTier5SummationReceived">
            <summary>
            GetsCurrent Tier Summation Received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.MeterStatus">
            <summary>
            Gets status
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAFlowStatusVar">
            <summary>
            Gets/Set OTAFlowStatusVar
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.OTAImageUpgradeStatus">
            <summary>
            Get OTA Image Upgrade Status
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.InstantaneousDemand">
            <summary>
            Gets instantaneous demand
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentDayConsumptionDelivered">
            <summary>
            Gets current day consumption delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentDayConsumptionReceived">
            <summary>
            Gets current day consumption received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.PreviousDayConsumptionDelivered">
            <summary>
            Gets Previous day consumption delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.PreviousDayConsumptionReceived">
            <summary>
            Gets Previous day consumption received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentPartialProfileIntervalStartTimeDelivered">
            <summary>
            Gets Current partial profile interval start time delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentPartialProfileIntervalStartTimeReceived">
            <summary>
            Gets Current partial profile interval start time received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentPartialProfileIntervalValueDelivered">
            <summary>
            Gets Current partial profile interval value delivered
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentPartialProfileIntervalValueReceived">
            <summary>
            Gets Current partial profile interval value received
            </summary>
            Revision History	
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentSummationDelivered">
            <summary>
            Gets the last retrieved Current Summation delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentSummationReceived">
            <summary>
            Gets the last retrieved Current Summation received value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentMaxDemandDelivered">
            <summary>
            Gets the last retrieved Current Max Demand delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentMaxDemandReceived">
            <summary>
            Gets the last retrieved Current Max Demand received value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentBlockPeriodConsumptionDelivered">
            <summary>
            Gets the last retrieved Current Block Period Consumption Delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.PreviousBlockPeriodConsumptionDelivered">
            <summary>
            Gets the last retrieved Previous Block Period Consumption Delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DFTSummation">
            <summary>
            Gets the last DFT summation
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DailyFreezeTime">
            <summary>
            Gets the last DFT
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.PowerFactor">
            <summary>
            Gets the last Power Factor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.ReadingSnapShotTime">
            <summary>
            Gets the last Reading Snap Shot Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.DefaultUpdatePeriod">
            <summary>
            Gets the last Default Update Period
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.FastPollUpdatePeriod">
            <summary>
            Gets the last Fast Poll Update Period
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.MaxNumberOfPeriodsDelivered">
            <summary>
            Gets the Maximum Number of Periods Delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentMaxDemandDeliveredTime">
            <summary>
            Gets the time of occurrence for the Current Max Demand Delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentMaxDemandReceivedTime">
            <summary>
            Gets the time of occurrence for the Current Max Demand Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1PriceLabel">
            <summary>
            Gets the Tier1PriceLabel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2PriceLabel">
            <summary>
            Gets the Tier2PriceLabel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3PriceLabel">
            <summary>
            Gets the Tier3PriceLabel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4PriceLabel">
            <summary>
            Gets the Tier4PriceLabel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier5PriceLabel">
            <summary>
            Gets the Tier5PriceLabel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentBillingPeriodStart">
            <summary>
            Gets the Current Billing Period Start
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentBillingPeriodDuration">
            <summary>
            Gets the Current Billing Period Duration
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentBlockPeriodStart">
            <summary>
            Gets the time of occurrence for the Start of Block Period
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.CurrentBlockPeriodDuration">
            <summary>
            Gets Block Period Duration
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.ThresholdMultiplier">
            <summary>
            Gets the Threshold Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.ThresholdDivisor">
            <summary>
            Gets the Threshold Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block1Threshold">
            <summary>
            Gets the last retrieved Block1Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block2Threshold">
            <summary>
            Gets the last retrieved Block2Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block3Threshold">
            <summary>
            Gets the last retrieved Block3Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block4Threshold">
            <summary>
            Gets the last retrieved Block4Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block5Threshold">
            <summary>
            Gets the last retrieved Block5Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block6Threshold">
            <summary>
            Gets the last retrieved Block6Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block7Threshold">
            <summary>
            Gets the last retrieved Block7Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block8Threshold">
            <summary>
            Gets the last retrieved Block8Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block9Threshold">
            <summary>
            Gets the last retrieved Block9Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block10Threshold">
            <summary>
            Gets the last retrieved Block10Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block11Threshold">
            <summary>
            Gets the last retrieved Block11Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block12Threshold">
            <summary>
            Gets the last retrieved Block12Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block13Threshold">
            <summary>
            Gets the last retrieved Block13Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block14Threshold">
            <summary>
            Gets the last retrieved Block14Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Block15Threshold">
            <summary>
            Gets the last retrieved Block15Threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock1Price">
            <summary>
            Gets the NoTierBlock1Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock2Price">
            <summary>
            Gets the NoTierBlock2Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock3Price">
            <summary>
            Gets the NoTierBlock3Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock4Price">
            <summary>
            Gets the NoTierBlock4Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock5Price">
            <summary>
            Gets the NoTierBlock5Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock6Price">
            <summary>
            Gets the NoTierBlock6Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock7Price">
            <summary>
            Gets the NoTierBlock7Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock8Price">
            <summary>
            Gets the NoTierBlock8Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock9Price">
            <summary>
            Gets the NoTierBlock9Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock10Price">
            <summary>
            Gets the NoTierBlock10Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock11Price">
            <summary>
            Gets the NoTierBlock11Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock12Price">
            <summary>
            Gets the NoTierBlock12Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock13Price">
            <summary>
            Gets the NoTierBlock13Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock14Price">
            <summary>
            Gets the NoTierBlock14Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock15Price">
            <summary>
            Gets the NoTierBlock15Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.NoTierBlock16Price">
            <summary>
            Gets the NoTierBlock16Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block1Price">
            <summary>
            Gets the Tier1Block1Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block2Price">
            <summary>
            Gets the Tier1Block2Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block3Price">
            <summary>
            Gets the Tier1Block3Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block4Price">
            <summary>
            Gets the Tier1Block4Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block5Price">
            <summary>
            Gets the Tier1Block5Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block6Price">
            <summary>
            Gets the Tier1Block6Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block7Price">
            <summary>
            Gets the Tier1Block7Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block8Price">
            <summary>
            Gets the Tier1Block8Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block9Price">
            <summary>
            Gets the Tier1Block9Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block10Price">
            <summary>
            Gets the Tier1Block10Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block11Price">
            <summary>
            Gets the Tier1Block11Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block12Price">
            <summary>
            Gets the Tier1Block12Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block13Price">
            <summary>
            Gets the Tier1Block13Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block14Price">
            <summary>
            Gets the Tier1Block14Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block15Price">
            <summary>
            Gets the Tier1Block15Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier1Block16Price">
            <summary>
            Gets the Tier1Block16Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block1Price">
            <summary>
            Gets the Tier2Block1Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block2Price">
            <summary>
            Gets the Tier2Block2Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block3Price">
            <summary>
            Gets the Tier2Block3Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block4Price">
            <summary>
            Gets the Tier2Block4Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block5Price">
            <summary>
            Gets the Tier2Block5Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block6Price">
            <summary>
            Gets the Tier2Block6Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block7Price">
            <summary>
            Gets the Tier2Block7Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block8Price">
            <summary>
            Gets the Tier2Block8Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block9Price">
            <summary>
            Gets the Tier2Block9Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block10Price">
            <summary>
            Gets the Tier2Block10Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block11Price">
            <summary>
            Gets the Tier2Block11Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block12Price">
            <summary>
            Gets the Tier2Block12Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block13Price">
            <summary>
            Gets the Tier2Block13Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block14Price">
            <summary>
            Gets the Tier2Block14Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block15Price">
            <summary>
            Gets the Tier2Block15Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier2Block16Price">
            <summary>
            Gets the Tier2Block16Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block1Price">
            <summary>
            Gets the Tier3Block1Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block2Price">
            <summary>
            Gets the Tier3Block2Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block3Price">
            <summary>
            Gets the Tier3Block3Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block4Price">
            <summary>
            Gets the Tier3Block4Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block5Price">
            <summary>
            Gets the Tier3Block5Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block6Price">
            <summary>
            Gets the Tier3Block6Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block7Price">
            <summary>
            Gets the Tier3Block7Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block8Price">
            <summary>
            Gets the Tier3Block8Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block9Price">
            <summary>
            Gets the Tier3Block9Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block10Price">
            <summary>
            Gets the Tier3Block10Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block11Price">
            <summary>
            Gets the Tier3Block11Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block12Price">
            <summary>
            Gets the Tier3Block12Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block13Price">
            <summary>
            Gets the Tier3Block13Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block14Price">
            <summary>
            Gets the Tier3Block14Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block15Price">
            <summary>
            Gets the Tier3Block15Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier3Block16Price">
            <summary>
            Gets the Tier3Block16Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block1Price">
            <summary>
            Gets the Tier4Block1Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block2Price">
            <summary>
            Gets the Tier4Block2Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block3Price">
            <summary>
            Gets the Tier4Block3Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block4Price">
            <summary>
            Gets the Tier4Block4Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block5Price">
            <summary>
            Gets the Tier4Block5Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block6Price">
            <summary>
            Gets the Tier4Block6Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block7Price">
            <summary>
            Gets the Tier4Block7Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block8Price">
            <summary>
            Gets the Tier4Block8Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block9Price">
            <summary>
            Gets the Tier4Block9Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block10Price">
            <summary>
            Gets the Tier4Block10Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block11Price">
            <summary>
            Gets the Tier4Block11Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block12Price">
            <summary>
            Gets the Tier4Block12Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block13Price">
            <summary>
            Gets the Tier4Block13Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block14Price">
            <summary>
            Gets the Tier4Block14Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block15Price">
            <summary>
            Gets the Tier4Block15Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.Tier4Block16Price">
            <summary>
            Gets the Tier4Block16Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.LastMessage">
            <summary>
            Gets/Sets the last message received from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SE11ZigBeeApplication.LastPriceReceived">
            <summary>
            Gets/Sets the Last Price Received
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetAttributeResponse(System.UInt16,System.UInt16)">
            <summary>
            Gets the response value for the specified attribute
            </summary>
            <param name="clusterID">The cluster ID of the attributes to get</param>
            <param name="attribute">The attribute ID</param>
            <returns>The byte array containing the data to include in the response for the specified attribute</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleZCLMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles the Received Messages
            </summary>
            <param name="receivedMessage">The message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SetUpClusterLists">
            <summary>
            Sets up any clusters that the device is hosting
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleSmartEnergyMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles incoming Smart Energy Messages
            </summary>
            <param name="receivedMessage">The incoming message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleDRLCMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles incoming DRLC Messages
            </summary>
            <param name="receivedMessage">The DRLC message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetDRLCAttributeResponse(System.UInt16)">
            <summary>
            Gets the response value for the DRLC Client Side Attributes
            </summary>
            <param name="attribute">The attribute to get</param>
            <returns>The response for the attribute read</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetOTAAttributeResponse(System.UInt16)">
            <summary>
            Gets the response value for the OTA Upgrade Cluster Client Side Attributes
            </summary>
            <param name="attribute">The attribute to get</param>
            <returns>The response for the attribute read</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendDRLCEventStatusUpdate(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Send the message to update the DRLC server with the current status of an event
            </summary>
            <param name="drlcEvent">The event to update</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.ShouldDeviceHandleDRLCEvent(System.Byte,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses)">
            <summary>
            Determines whether or not this device 
            </summary>
            <param name="enrollmentGroup">The enrollment group for the DRLC event</param>
            <param name="deviceClass">The device classes for the DRLC event</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleDRLCScheduledEvent(System.Object,System.EventArgs)">
            <summary>
            Handles scheduled event changes for DRLC events
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.RemoveRunningDRLCEvent(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Removes the specified event from the list of running events
            </summary>
            <param name="eventToRemove">The event to remove</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.StartDRLCEvent(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Starts the specified DRLC Event
            </summary>
            <param name="eventToStart">The event to start</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnDRLCEventReceived(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            Raises the ZigBee DRLC Event Received event
            </summary>
            <param name="incomingEvent">the event that set off the event</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleSimpleMeteringMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Simple Metering Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringFormattingAttributes(Itron.Metering.Zigbee.SimpleMeteringAttributes)">
            <summary>
            Gets the Multiplier and Divisor used to calculate values for Simple Metering values
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetSimpleMeteringMultiplierAndDivisor">
            <summary>
            Gets the Multiplier and Divisor used to calculate values for Simple Metering values
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetProfileRequest(System.UInt16,Itron.Metering.Zigbee.SimpleMeteringProfileChannel,System.DateTime,System.Byte)">
            <summary>
            Requests the load profile data from the specified device
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <param name="channel">The Load Profile channel to request</param>
            <param name="endTime">The end time to request load profile data from</param>
            <param name="periods">The number of periods to request</param>
            <returns>The requested Load Profile data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetProfileConsumptionRequest(System.UInt16,Itron.Metering.Zigbee.SimpleMeteringProfileChannel,System.DateTime,System.Byte,Itron.Metering.DeviceDataTypes.SmartEnergyLoadProfile@,System.Byte@,System.TimeSpan@)">
            <summary>
            Requests the load profile consumption data from the specified device
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <param name="channel">The Load Profile channel to request</param>
            <param name="endTime">The end time to request load profile data from</param>
            <param name="periods">The number of periods to request</param>
            <param name="ProfileData">Load Profile Consumption Data</param>
            <param name="periodsOfPreviousBlock">Number of periods of previous block</param>
            <param name="profileIntervalPeriod">Profile Interval Period</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendMirrorRequest(System.UInt16)">
            <summary>
            Requests Mirror 
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <returns>The requested Mirror Response</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendRemoveMirrorRequest(System.UInt16)">
            <summary>
            Requests Mirror Removal 
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <returns>The requested Mirror Response</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendFastPollRequest(System.UInt16,System.Byte,System.Int32)">
            <summary>
            Requests Fast Poll Response 
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <param name="Duration">length of time client polls at fast poll rate</param>
            <param name="pollRate">rate at which the client polls during fast poll rate</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendWriteAttributeCommand(System.UInt16,Itron.Metering.Zigbee.GeneralClusters,System.UInt16,Itron.Metering.Zigbee.ZCLDataType,System.Byte)">
            <summary>
            Writes attribute 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnMirrorResponseReceived(System.UInt16)">
            <summary>
            Raises the ZigBee Mirror Response Received event
            </summary>
            <param name="EndPointID">The Endpoint Id received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnMirrorRemovedResponseReceived(System.UInt16)">
            <summary>
            Raises the ZigBee Mirror Removed Response Received event
            </summary>
            <param name="RemovedEndPointID">The Removed Endpoint Id received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnFastPollRequestResponseReceived(System.Byte,System.DateTime)">
            <summary>
            Raises the ZigBee Fast Polling Request Response Received event
            </summary>
            <param name="pollEndTime">The received Poll end time</param>
            <param name="pollRate"> The received poll Rate</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetLastMessageRequest(System.UInt16,System.Boolean)">
            <summary>
            Requests the last message from the specified device
            </summary>
            <param name="destination">The destination node ID to request from</param>
            <param name="useSecurity">Boolean used to determine whether APS encryption is set or not</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendMessageConfirmationRequest(System.UInt16,System.UInt32,System.UInt32)">
            <summary>
            Send display message confirmation to the specified device
            </summary>
            <param name="destination">The destination node ID</param>
            <param name="MessageID">Message ID</param>
            <param name="ConfirmationTime">Confirmation Time</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleMessagingMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Messaging Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleMessagingCancelMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Messaging Cancel Message
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleMessagingDisplayMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Messaging Display Message
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnCancelMessageReceived(Itron.Metering.DeviceDataTypes.AMIHANMsgRcd)">
            <summary>
            Raises the ZigBee Message Cluster Cancel Message event
            </summary>
            <param name="MessageRcd">The message to cancel</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnDisplayMessageReceived(Itron.Metering.DeviceDataTypes.AMIHANMsgRcd)">
            <summary>
            Raises the ZigBee Message Cluster Display Message Received event
            </summary>
            <param name="MessageRcd">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnOTARespReceived(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Raises the ZigBee OTA Cluster Resp Received events
            </summary>
            <param name="MessageRcd">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetCurrentPriceRequest(System.UInt16,System.Boolean)">
            <summary>
            Requests the current price from the meter using different kinds of security. For testing only
            </summary>
            <param name="destination">The destination node ID of the meter</param>
            <param name="useSecurity">boolean representing the use of APS security encryption, or not</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetBlockPeriodsRequest(System.UInt16,System.UInt32,System.Byte)">
            <summary>
            Requests the block periods from the meter
            </summary>
            <param name="destination">The destination node ID of the meter</param>
            <param name="UTCStartTimeInSeconds">UTC Start Time in seconds</param>
            <param name="numEvents">Number of Block Period commands to be sent</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.GetScheduledPricesRequest(System.UInt16,System.UInt32,System.Byte)">
            <summary>
            Requests the the scheduled prices from the meter
            </summary>
            <param name="destination">The destination node ID of the meter</param>
            <param name="UTCStartTimeInSeconds">UTC Start Time in seconds</param>
            <param name="numEvents">The maximum number of events to be sent</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.SendPriceAcknowledgementRequest(System.UInt16,System.UInt32,System.UInt32,System.UInt32,System.Byte)">
            <summary>
            Send Price Acknowledgement request to the meter
            </summary>
            <param name="destination">The destination node ID of the meter</param>
            <param name="ProviderId">Provider ID</param>
            <param name="IssuerEventId">Issuer Event ID</param>
            <param name="UTCPriceAckTimeInSeconds">UTC Price Ack Time in seconds</param>
            <param name="controlField">Control Field</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandlePriceMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Price Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleOTAMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles OTA Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandlePublishPriceMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Publish Price Message
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandlePublishBlockPeriodMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Publish Block Period Message
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnPublishPriceReceived(Itron.Metering.DeviceDataTypes.PublishPriceRcd)">
            <summary>
            Raises the ZigBee Price Cluster Publish Price Received event
            </summary>
            <param name="PriceRcd">The publish price received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.OnPublishBlockPeriodReceived(Itron.Metering.DeviceDataTypes.PublishBlockPeriodRcd)">
            <summary>
            Raises the ZigBee Price Cluster Publish BLock Period Received event
            </summary>
            <param name="BlockPeriodRcd">The publish block period received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.SE11ZigBeeApplication.HandleIdentifyMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Simple Metering Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.DisplayMessageEventArgs">
            <summary>
            DisplayMessageEventArgs class for use with Display Message event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.DisplayMessageEventArgs.#ctor(Itron.Metering.DeviceDataTypes.AMIHANMsgRcd)">
            <summary>
            DisplayMessageEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.DisplayMessageEventArgs.Message">
            <summary>
            DisplayMessageEventArgs Message property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.OTARespEventArgs">
            <summary>
            OTARespEventArgs class for use with OTA response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.OTARespEventArgs.#ctor(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            DisplayMessageEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.OTARespEventArgs.Message">
            <summary>
            DisplayMessageEventArgs Message property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.AttributeResponsePayload">
            <summary>
            AttributeResponsePayload class to decode Attribute Response
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.AttributeResponsePayload.AttributeType">
            <summary>
            AttributeType
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.AttributeResponsePayload.Attribute">
            <summary>
            Attribute
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.AttributeResponsePayload.#ctor(System.UInt16,System.Object)">
            <summary>
            AttributeResponsePayload Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ImageNotifyPayload">
            <summary>
            ImageNotifyPayload class to decode Notification message of New Image availble
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ImageNotifyPayload.PayloadType">
            <summary>
            PayloadType
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ImageNotifyPayload.QueryJitter">
            <summary>
            QueryJitter
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ImageNotifyPayload.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ImageNotifyPayload.Image_type">
            <summary>
            Image_type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ImageNotifyPayload.File_version">
            <summary>
            File_version
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ImageNotifyPayload.#ctor(System.Byte[])">
            <summary>
            ImageNotifyPayload Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.UpgradeEndResponsePayload">
            <summary>
            End Upgrade Payload class to decode response message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.UpgradeEndResponsePayload.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.UpgradeEndResponsePayload.Image_type">
            <summary>
            Image_type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.UpgradeEndResponsePayload.File_version">
            <summary>
            File_version
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.UpgradeEndResponsePayload.Current_time">
            <summary>
            Current_time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.UpgradeEndResponsePayload.Upgrade_time">
            <summary>
            Upgrade_time
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.UpgradeEndResponsePayload.#ctor(System.Byte[])">
            <summary>
            UpgradeEndResponsePayload Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.QueryNextImageRespPayload">
            <summary>
            QueryNextImageRespPayload class to decode Next Image message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextImageRespPayload.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextImageRespPayload.Image_size">
            <summary>
            Image_size
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextImageRespPayload.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextImageRespPayload.Image_type">
            <summary>
            Image_type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextImageRespPayload.File_version">
            <summary>
            File_version
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.QueryNextImageRespPayload.#ctor(System.Byte[])">
            <summary>
            QueryNextImageRespPayload Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.QueryNextBlockRespPayload">
            <summary>
            QueryNextBlockRespPayload class to decode Next Block message and the block sent is part of it
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.Image_type">
            <summary>
            Image_type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.File_version">
            <summary>
            File_version
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.File_Offset">
            <summary>
            File_Offset
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.Data_Size">
            <summary>
            Data_Size
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.DataArr">
            <summary>
            DataArr contains the data sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.CurrentTime">
            <summary>
            CurrentTime
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.RequestTime">
            <summary>
            RequestTime
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.QueryNextBlockRespPayload.BlockRequestDelay">
            <summary>
            BlockRequestDelay
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.QueryNextBlockRespPayload.#ctor(System.Byte[])">
            <summary>
            QueryNextBlockRespPayload Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.CancelMessageEventArgs">
            <summary>
            CancelMessageEventArgs class for use with Cancel Message event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.CancelMessageEventArgs.#ctor(Itron.Metering.DeviceDataTypes.AMIHANMsgRcd)">
            <summary>
            CancelMessageEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.CancelMessageEventArgs.Message">
            <summary>
            CancelMessageEventArgs Message property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.PublishPriceEventArgs">
            <summary>
            PublishPriceEventArgs class for use with Publish Price event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.PublishPriceEventArgs.#ctor(Itron.Metering.DeviceDataTypes.PublishPriceRcd)">
            <summary>
            PublishPriceEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.PublishPriceEventArgs.PriceRcd">
            <summary>
            PublishPriceEventArgs Price Record property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.PublishBlockPeriodEventArgs">
            <summary>
            PublishBlockPeriodEventArgs class for use with Publish Block Period event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.PublishBlockPeriodEventArgs.#ctor(Itron.Metering.DeviceDataTypes.PublishBlockPeriodRcd)">
            <summary>
            PublishBlockPeriodEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.PublishBlockPeriodEventArgs.BlockPeriodRcd">
            <summary>
            PublishBlockPeriodEventArgs Block Period Record property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MirrorResponseEventArgs">
            <summary>
            MirrorResponseEventArgs class for use with Mirror Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MirrorResponseEventArgs.#ctor(System.UInt16)">
            <summary>
            MirrorResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MirrorResponseEventArgs.EndpointID">
            <summary>
            MirrorResponsedEventArgs Endpoint ID property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MirrorRemovedResponseEventArgs">
            <summary>
            MirrorRemovedResponseEventArgs class for use with Mirror Removed Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MirrorRemovedResponseEventArgs.#ctor(System.UInt16)">
            <summary>
            MirrorRemovedResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MirrorRemovedResponseEventArgs.RemovedEndpointID">
            <summary>
            MirrorRemovedResponsedEventArgs Endpoint ID property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.FastPollingRequestResponseEventArgs">
            <summary>
            FastPollingRequestResponseEventArgs class for use with Fast Polling Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.FastPollingRequestResponseEventArgs.#ctor(System.Byte,System.DateTime)">
            <summary>
            FastPollingRequestResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.FastPollingRequestResponseEventArgs.PollRate">
            <summary>
            poll Rate property
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.FastPollingRequestResponseEventArgs.EndTime">
            <summary>
            EndTime property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DRLCResponseEventArgs">
            <summary>
            DRLCResponseEventArgs class for use with DRLC Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.DRLCResponseEventArgs.#ctor(Itron.Metering.DeviceDataTypes.DRLCEvent)">
            <summary>
            FastPollingRequestResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.DRLCResponseEventArgs.EventInfo">
            <summary>
            Drlc event property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLFrameType">
            <summary>
            ZCL Frame Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLFrameType.EntireProfile">
            <summary>Command acts across the entire profile</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLFrameType.ClusterSpecific">
            <summary>Command is specific to a cluster</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLDirection">
            <summary>
            Direction of the ZCL Frame
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDirection.SentFromClient">
            <summary>The message was sent from the client</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDirection.SentFromServer">
            <summary>The message was sent from the server</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLFrame">
            <summary>
            ZigBee Cluster Library Frame
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZCLFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.FrameType">
            <summary>
            Gets or sets the Frame Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.ManufacturerSpecific">
            <summary>
            Gets or sets the Manufacturer Specific bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.Direction">
            <summary>
            The direction of the frame
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.DisableDefaultResponse">
            <summary>
            Gets or sets whether or not the default response should be disabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.ManufacturerCode">
            <summary>
            Gets or sets the Manufacturer Code. This value is only used for Manufacturer Specific frames
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.SequenceNumber">
            <summary>
            Gets or sets the Sequence Number of the transaction
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.CommandID">
            <summary>
            Gets or sets the Command Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.Data">
            <summary>
            Gets or sets the payload data for the ZCL frame
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZCLFrame.FrameData">
            <summary>
            Gets or sets the full frame data that includes the entire message to be sent
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeAttributeResponse">
            <summary>
            Class used to store the the response to an individual attribute
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeAttributeResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeAttributeResponse.AttributeID">
            <summary>
            Gets the ID of the attribute that was read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeAttributeResponse.Status">
            <summary>
            Gets the status of the attribute read
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeAttributeResponse.DataType">
            <summary>
            Gets the data type of the attribute
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeAttributeResponse.Value">
            <summary>
            Gets the value of the attribute
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeEndpointInfo">
            <summary>
            Endpoint Information for use with an EZSP based ZigBee Application
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeEndpointInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeEndpointInfo.FindMatchingServerEndpoint(System.UInt16,System.UInt16)">
            <summary>
            Finds the endpoint on the specified device where the specified cluster is located
            </summary>
            <param name="destination">The device to get the endpoint on</param>
            <param name="clusterID">The cluster ID to get the endpoint for</param>
            <returns>0 if the endpoint does not exist or the endpoint of the cluster</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeEndpointInfo.FindMatchingClientEndpoint(System.UInt16,System.UInt16)">
            <summary>
            Finds the endpoint on the specified device where the specified cluster is located
            </summary>
            <param name="destination">The device to get the endpoint on</param>
            <param name="clusterID">The cluster ID to get the endpoint for</param>
            <returns>0 if the endpoint does not exist or the endpoint of the cluster</returns>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.Endpoint">
            <summary>
            Gets the Endpoint number that hosts these clusters
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.ProfileID">
            <summary>
            Gets the ZigBee Profile that defines the clusters
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.DeviceID">
            <summary>
            Gets the ID of the hosted device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.AppFlags">
            <summary>
            Gets the Application Flags
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.ServerClusterList">
            <summary>
            Gets the list of server side Clusters
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.ClientClusterList">
            <summary>
            Gets the list of client side clusters
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.ServerEndpointMapping">
            <summary>
            Gets or sets the list of Matched Endpoints for each Client Cluster supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEndpointInfo.ClientEndpointMapping">
            <summary>
            Gets or sets the list of Matched Endpoints for each Client Cluster supported
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ASHProtocol">
            <summary>
            This class represents the low level protocol for EZSP.
            </summary>
            <remarks>ASH Protocol documentation can be found here: http://www.ember.com/pdf/120-3010-000_UARTGatewayProtocolReference.pdf </remarks>
        </member>
        <member name="T:Itron.Metering.Zigbee.ASHProtocol.ASHError">
            <summary>
            Error codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.UnknownReset">
            <summary>
            Reset: Unknown
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.ExternalReset">
            <summary>
            Reset: External
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.PowerOnReset">
            <summary>
            Reset: Power-on
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.WatchdogReset">
            <summary>
            Reset: Watchdog
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.AssertReset">
            <summary>
            Reset: Assert
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.BootLoaderReset">
            <summary>
            Reset: Bootloader
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.SoftwareReset">
            <summary>
            Reset: Software
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHProtocol.ASHError.AckTimeout">
            <summary>
            Exceeded maximum ack timeout count
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ASHProtocol.FrameReceived">
            <summary>
            Event that occurs whenever a new frame has been received
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.#ctor(Itron.Metering.Zigbee.EZSPSerialCommunications,Itron.Metering.Zigbee.EZSPLogger)">
            <summary>
            Constructor
            </summary>
            <param name="comm">The serial port communications object to be used.</param>
            <param name="logger">The EZSP logger</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.Connect">
            <summary>
            Starts the ASH protocol
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.Disconnect">
            <summary>
            Stops the ASH protocol
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.SendData(System.Byte[])">
            <summary>
            Sends the specified data
            </summary>
            <param name="data">The data to send</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHProtocol.Connected">
            <summary>
            Gets whether or not ASH is currently connected
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHProtocol.ReceivedFrames">
            <summary>
            Gets the list of received frames
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHProtocol.LastErrorCode">
            <summary>
            Gets the last error code received
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.CheckForUnacknowledgedFrame(System.Object)">
            <summary>
            Checks for any unacknowledged frames
            </summary>
            <param name="state">Timer state</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.OnFrameReceived">
            <summary>
            Raises the Frame Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.SendCancel">
            <summary>
            Sends the Cancel Message
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.DisableSlip">
            <summary>
            Sends the Disable Slip command
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.Reset">
            <summary>
            Resets the NCP.
            </summary>
            <returns>True if the reset was successful. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.SendFrame(Itron.Metering.Zigbee.ASHFrame)">
            <summary>
            Sends the specified frame
            </summary>
            <param name="frame">The frame to send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.m_SerialComm_DataReceived(System.Object,System.EventArgs)">
            <summary>
            Handles the Data Received event
            </summary>
            <param name="sender">The object that sent the event.</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.RemoveAcknowledgedFrames(System.Byte)">
            <summary>
            Removes and acknowledged frames from the list
            </summary>
            <param name="ackNumber">The frame number of the highest frame to remove</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHProtocol.RetransmitFrame(Itron.Metering.Zigbee.ASHFrame)">
            <summary>
            Retransmits the specified frame
            </summary>
            <param name="frame">The frame to retransmit</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.ASHFrame">
            <summary>
            Represents a UART frame
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ASHFrame.FrameType">
            <summary>
            The frame types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.Data">
            <summary>
            The frame contains data
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.Ack">
            <summary>
            The frame is an Ack
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.Nak">
            <summary>
            The frame is a Nak
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.Reset">
            <summary>
            The frame is a reset command
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.ResetAck">
            <summary>
            The frame is a reset ack
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ASHFrame.FrameType.Error">
            <summary>
            The frame is an error
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.#ctor(System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="rawFrame">The raw data that contains the entire frame</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.StuffFrame(System.Byte[])">
            <summary>
            Stuffs the frame with bytes if any of the reserved bytes are found in the frame
            </summary>
            <param name="unstuffedFrame">The frame to stuff</param>
            <returns>The stuffed frame.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.UnstuffFrame(System.Byte[])">
            <summary>
            Unstuffs the raw frame that has been read from the device.
            </summary>
            <param name="stuffedFrame">The raw frame in stuffed format</param>
            <returns>The unstuffed frame</returns>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.RetransmitCount">
            <summary>
            Gets or sets the number of times the frame has been retransmitted
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.TimeStamp">
            <summary>
            Gets or sets the time that the frame was sent or received
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.ASHFrameType">
            <summary>
            Gets or sets the frame type. Setting this will clear the frame number
            </summary>
            <exception cref="T:System.FormatException">Thrown during a get if the Control Byte is not valid.</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.FrameNumber">
            <summary>
            Gets the frame number. This value is only valid for Data frames
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the current frame type is not a Data Frame</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is out of range. Valid range: 0-7</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.AckNumber">
            <summary>
            Gets or sets the Ack Number. This value is only valid for Data, Ack, and Nak frames
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the current frame type is not a Data, Ack, or Nak Frame</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown if the value is out of range. Valid range: 0-7</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.IsRetransmitted">
            <summary>
            Gets or sets whether or not the frame is retransmitted
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the current frame type is not a Data Frame</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.NotReady">
            <summary>
            Gets or sets whether or not the host is inhibiting callbacks. This item is only valid for Ack and Nak frames
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the current frame type is not an Ack, or Nak Frame</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.Data">
            <summary>
            Gets the data contained in the frame
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the current frame type is not a Data or Error Frame</exception>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.RawFrame">
            <summary>
            Gets the frame as raw bytes
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ASHFrame.IsCRCValid">
            <summary>
            Gets whether or not the CRC is valid
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.CalculateCurrentCRC">
            <summary>
            Calculates the current CRC for the data
            </summary>
            <returns>The current CRC</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.RandomizeData(System.Byte[])">
            <summary>
            Randomizes the data to avoid cases that would cause large amounts of byte stuffing.
            If randomized data is run through this method it will be restored to it's original form.
            </summary>
            <param name="data">The data to randomize</param>
            <returns>The randomized data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ASHFrame.GetRandomSequence(System.Int32)">
            <summary>
            Gets a byte array with the pseudo random sequence
            </summary>
            <param name="length">The length of the sequence</param>
            <returns>The pseudo random sequence</returns>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberApsOptions">
            <summary>
            APS Frame options
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.None">
            <summary>No options selected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.DSASign">
            <summary>Signs the message using DSA</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.Encryption">
            <summary>Send the message using APS encryption</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.Retry">
            <summary>Resend the message using the APS retry</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.EnableRouteDiscovery">
            <summary>Cause a route discovery to be initiated if no route to the destination is known</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.ForceRouteDiscovery">
            <summary>Cause a route discovery to be initiated even if one is known</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.SourceEUI">
            <summary>Include the source EUI in the Network Frame</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.DestinationEUI">
            <summary>Include the destination EUI in the Network Frame</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.EnableAddressDiscovery">
            <summary>Send a ZDO request to discover the node ID of the destination if its not known</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.PollResponse">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.ZdoResponseRequired">
            <summary>The incoming message is a ZDO request and the application is responsible for sending the ZDO response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberApsOptions.Fragment">
            <summary>This message is part of a fragmented message</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberApsFrame">
            <summary>
            Ember Aps frame object
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberApsFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberApsFrame.GetFragmentNumberFromGroupID(System.UInt16)">
            <summary>
            Gets the Current Fragment number from the group ID of a fragmented message.
            </summary>
            <param name="groupID">The group ID of the fragmented message</param>
            <returns>The current fragment number</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberApsFrame.GetNumberOfFragmentsFromGroupID(System.UInt16)">
            <summary>
            Gets the total number of fragments in a fragmented message.
            </summary>
            <param name="groupID">The group ID of the fragmented message</param>
            <returns>The current fragment number</returns>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.ProfileID">
            <summary>
            Gets or sets the application profile ID that describes the format of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.ClusterID">
            <summary>
            Gets or sets the Cluster ID for the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.SourceEndpoint">
            <summary>
            Gets or sets the source endpoint number
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.DestinationEndpoint">
            <summary>
            Gets or sets the destination endpoint number
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.Options">
            <summary>
            Gets or sets the APS frame options
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.GroupID">
            <summary>
            Gets or sets the group ID (multicast message)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.Sequence">
            <summary>
            Gets or set the sequence number
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberApsFrame.RawData">
            <summary>
            Gets or sets the raw data for the APS frame
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberBindingTableEntry">
            <summary>
            Binding Table Entry
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberBindingTableEntry.EmberBindingType">
            <summary>
            Binding Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberBindingTableEntry.EmberBindingType.UnusedBinding">
            <summary>The binding is not used</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberBindingTableEntry.EmberBindingType.UnicastBinding">
            <summary>Unicast binding</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberBindingTableEntry.EmberBindingType.ManyToOneBinding">
            <summary>Many to One binding</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberBindingTableEntry.EmberBindingType.MultiCastBinding">
            <summary>Multicast binding</summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberBindingTableEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.BindingType">
            <summary>
            Gets or sets the binding type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.LocalEndpoint">
            <summary>
            Gets or sets the endpoint on the local node
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.ClusterID">
            <summary>
            Gets or sets the cluster ID 
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.RemoteEndpoint">
            <summary>
            Gets or sets the remote endpoint
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.EUI">
            <summary>
            Gets or sets the EUI identifier. For Unicast binding this is the destination EUI.
            For Many To One it is the aggregator EUI and for Multicast it is the group address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberBindingTableEntry.RawData">
            <summary>
            Gets or sets the object as the raw data.
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberCurrentSecurityState">
            <summary>
            Ember Current Security State
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask">
            <summary>
            Bitmask for the Current Security
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.StandardSecurityMode">
            <summary>The device is running in a network with ZigBee Standard Security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.HighSecurityMode">
            <summary>The device is running in a network with ZigBee High Security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.DistributedTrustCenterMode">
            <summary>The device is running in a network without a centralized Trust Center</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.GlobalLinkKey">
            <summary>The device has a global link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.HaveTrustCenterLinkKey">
            <summary>The node had a trust center link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberCurrentSecurityState.EmberCurrentSecurityBitmask.TrustCenterUsesHashedLinkKey">
            <summary>The trust center is using a hashed link key</summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberCurrentSecurityState.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberCurrentSecurityState.CurrentSecurityBitmask">
            <summary>
            Gets or sets the Current Security Bitmask
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberCurrentSecurityState.TrustCenterEUI">
            <summary>
            Gets or sets the Trust Center EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberCurrentSecurityState.RawData">
            <summary>
            Gets or sets the raw byte data of the object
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberInitialSecurityBitmask">
            <summary>
            Bit masks for the initial security field
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.StandardSecurityMode">
            <summary>Running a network with standard security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.HighSecurityMode">
            <summary>Enables high security mode</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.DistributedTrustCenterMode">
            <summary>Enables distributed trust center mode</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.GlobalLinkKey">
            <summary>Enables a global link key for the trust center</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.PreconfiguredNetworkKeyMode">
            <summary>Allows devices that perform MAC association with a preconfigured key to join the network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.TrustCenterUsesHashedLinkKey">
            <summary>Denotes the preconfigured key is not the Link Key but a secret key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.HavePreconfiguredKey">
            <summary>Denotes that the preconfigured key element has valid data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.HaveNetworkKey">
            <summary>Denotes that the network key element has valid data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.GetLinkKeyWhenJoining">
            <summary>Denotes that a joining device should attempt to acquire a Trust Center link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.RequireEncryptedKey">
            <summary>Denotes that a joining device should only accept an encrypted network key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.NoFrameCounterReset">
            <summary>Denotes whether the device should not reset its outgoing frame counters</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.GetPreconfiguredKeyFromInstallCode">
            <summary>Denotes the device should obtain its preconfigured key from an installation code stored in the manufacturer token</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberInitialSecurityBitmask.HaveTrustCenterEUI">
            <summary>Denotes that the trust center EUI is preconfigured</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberInitialSecurityState">
            <summary>
            Initial Security State
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberInitialSecurityState.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.InitialSecurityBitmask">
            <summary>
            Gets or sets the Initial Security Bitmask
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.PreconfiguredKey">
            <summary>
            Gets or sets the preconfigured key
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.NetworkKey">
            <summary>
            Gets or sets the network key
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.NetworkKeySequenceNumber">
            <summary>
            Gets or sets the Network Key Sequence Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.PreconfiguredTrustCenterEUI">
            <summary>
            Gets or sets the Preconfigured Trust Center EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberInitialSecurityState.RawData">
            <summary>
            Gets or sets the raw data for this object
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberKeyStruct">
            <summary>
            Key Struct class for EZSP
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask">
            <summary>
            The Bitmask for the Key struct indicating what items are valid
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask.None">
            <summary>None</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask.KeyHasSequenceNumber">
            <summary>The Sequence Number is valid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask.KeyHasOutgoingFrameCounter">
            <summary>The Outgoing Frame Counter is valid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask.KeyHasIncomingFrameCounter">
            <summary>The incoming Frame Counter is valid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStruct.EmberKeyStructBitmask.KeyHasPartnerEUI">
            <summary>The Partner EUI is valid</summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberKeyStruct.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.KeyStructBitmask">
            <summary>
            Gets or sets the Key struct bitmask used to determine which values are valid
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.KeyType">
            <summary>
            Gets or sets the key type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.Key">
            <summary>
            Gets or sets the key
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.OutgoingFrameCounter">
            <summary>
            Gets or sets the outgoing frame counter associated with the key
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.IncomingFrameCounter">
            <summary>
            Gets or sets the frame counter of the partner device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.SequenceNumber">
            <summary>
            Gets or sets the sequence number associated with the key
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.PartnerEUI">
            <summary>
            Gets or sets the Partner's EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberKeyStruct.RawData">
            <summary>
            Gets or sets the raw data for the object
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberMulticastTableEntry">
            <summary>
            Multicast Table Entry object
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberMulticastTableEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberMulticastTableEntry.MulticastID">
            <summary>
            Gets or sets the Multicast ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberMulticastTableEntry.Endpoint">
            <summary>
            Gets or sets the endpoint. If this value is 0 this indicates the entry is not used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberMulticastTableEntry.RawData">
            <summary>
            Gets or sets the raw byte data for the object
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberNeighborTableEntry">
            <summary>
            Neighbor Table Entry class for EZSP
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberNeighborTableEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.ShortID">
            <summary>
            Gets or sets the Short ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.AverageLQI">
            <summary>
            Gets or sets the Average LQI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.IncomingCost">
            <summary>
            Gets or sets the Incoming Cost of the neighbor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.OutgoingCost">
            <summary>
            Gets or sets the outgoing cost of the neighbor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.Age">
            <summary>
            Gets or sets the age of the neighbor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.EUI">
            <summary>
            Gets or sets the neighbor EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNeighborTableEntry.RawData">
            <summary>
            Gets or sets the raw binary data
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberJoinMethod">
            <summary>
            Method to use for Network Joining
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinMethod.MACAssociation">
            <summary>Use MAC Association</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinMethod.NetworkRejoin">
            <summary>Use Network Rejoin</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinMethod.NetworkRejoinHaveNetworkKey">
            <summary>Use Network Rejoin with the Network Key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinMethod.NetworkCommissioning">
            <summary>Use Network Commissioning</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberNodeType">
            <summary>
            The Node Types for ZigBee devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.UnknownDevice">
            <summary>Unknown - Typically this means the device is not joined</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.Coordinator">
            <summary>Coordinator</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.Router">
            <summary>Router</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.EndDevice">
            <summary>End Device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.SleepyEndDevice">
            <summary>Sleepy End Device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNodeType.MobileEndDevice">
            <summary>Mobile End Device</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberNetworkParameters">
            <summary>
            Network Parameters
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberNetworkParameters.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.ExtendedPANID">
            <summary>
            Gets or sets the Extended PAN ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.PANID">
            <summary>
            Gets or sets the PAN ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.RadioTransmitPower">
            <summary>
            Gets or sets the radio transmit power
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.RadioChannel">
            <summary>
            Gets or sets radio channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.JoinMethod">
            <summary>
            Gets or sets method used to join the network
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.NetworkManagerID">
            <summary>
            Gets or sets the ID of the Network Manager
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.NetworkUpdateID">
            <summary>
            Gets or sets the Network Update ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.Channels">
            <summary>
            Gets or sets the preferred channel mask
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberNetworkParameters.RawData">
            <summary>
            Gets the Network Parameters as a byte[] to use when sending to the radio.
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberRouteTableEntry">
            <summary>
            Route Table Entry class for EZSP
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberRouteTableEntry.EntryStatus">
            <summary>
            The route table entry status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.EntryStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.EntryStatus.BeingDiscovered">
            <summary>
            Currently being discovered
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.EntryStatus.Unused">
            <summary>
            Entry unused
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.EntryStatus.Validating">
            <summary>
            The route is validating
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberRouteTableEntry.ConcentratorTypes">
            <summary>
            Concentrator Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.ConcentratorTypes.NotAConcentrator">
            <summary>
            Node is not a concentrator
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.ConcentratorTypes.LowRAMConcentrator">
            <summary>
            Node is a low RAM concentrator
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.ConcentratorTypes.HighRAMConcentrator">
            <summary>
            Node is a High RAM concentrator
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberRouteTableEntry.RouteRecordStates">
            <summary>
            The Route Record state
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.RouteRecordStates.NotNeeded">
            <summary>
            No longer needed
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.RouteRecordStates.Sent">
            <summary>
            Has been sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberRouteTableEntry.RouteRecordStates.Needed">
            <summary>
            Route Record is needed
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberRouteTableEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.Destination">
            <summary>
            Gets or sets the Destination
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.NextHop">
            <summary>
            Gets or sets the next hop
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.Status">
            <summary>
            Gets or sets the status of the entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.Age">
            <summary>
            Gets or sets the age of the entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.ConcentratorType">
            <summary>
            Gets or sets the concentrator type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.RouteRecordState">
            <summary>
            Gets or sets the Route Record State
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberRouteTableEntry.RawData">
            <summary>
            Gets or sets the raw data for the Route Table entry
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.TimerEventHandler">
            <summary>
            Delegate for the EZSP Timer Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.StackStatusUpdatedHandler">
            <summary>
            Delegate for the Stack Status Updated Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.ChildJoinedHandler">
            <summary>
            Delegate for the Child Joined Event Handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Itron.Metering.Zigbee.BindingSetRemotelyHandler">
            <summary>
            Delegate for the Binding Set Remotely Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.BindingDeletedRemotelyHandler">
            <summary>
            Delegate for the Binding Deleted Remotely Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessageSentHandler">
            <summary>
            Delegate for the Message Sent Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.PollCompleteHandler">
            <summary>
            Delegate for a Poll Complete event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.PollReceivedHandler">
            <summary>
            Delegate for a Poll Received event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.SenderEUIReceivedHandler">
            <summary>
            Delegate for a SenderEUIReceived event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessageReceivedHandler">
            <summary>
            Delegate for a Message Received event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.RouteRecordReceivedHandler">
            <summary>
            Delegate for a Route Record Received event
            </summary>
            <param name="sender">The object that send the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.ManyToOneRouteAvailableHandler">
            <summary>
            Delegate for a Many To One Route Available event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.RouteErrorOccurredHandler">
            <summary>
            Delegate for a Route Error event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.IDConflictDetectedHandler">
            <summary>
            Delegate for an ID Conlfict Detected event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.MacPassthroughMessageReceivedHandler">
            <summary>
            Delegate for a MAC passthrough message received event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.MacFilterMatchMessageReceivedHandler">
            <summary>
            Delegate for Mac Filter Match passthrough message received events
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.RawMessageSentHandler">
            <summary>
            Delegate for the Raw Message Sent event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.NetworkKeySwitchedHandler">
            <summary>
            Delegate for the Network Key Switched event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeKeyEstablisedHandler">
            <summary>
            Delegate for the ZigBee Key Established event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.TrustCenterJoinedHandler">
            <summary>
            Delegate for the Trust Center Joined event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.CBKEKeyGeneratedHandler">
            <summary>
            Delegate for the CBKE Key Generated event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.SmacsCalculatedHandler">
            <summary>
            Delegate for the SMACS Calculated event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.DsaSignedHandler">
            <summary>
            Delegate for the DSA Signed event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.DsaVerifiedHandler">
            <summary>
            Delegate for the DSA verified event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Zigbee.TimerEventArgs">
            <summary>
            Event arguments for the EZSP timer event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.TimerEventArgs.#ctor(System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="timerID">The ID of the timer that caused the event</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.TimerEventArgs.TimerID">
            <summary>
            Gets the ID of the timer that caused the event
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.StackStatusUpdatedEventArgs">
            <summary>
            Event arguments for the Stack Status Updated event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.StackStatusUpdatedEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Constructor
            </summary>
            <param name="status">The new status</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.StackStatusUpdatedEventArgs.Status">
            <summary>
            Gets the updated status of the stack
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ChildJoinedEventArgs">
            <summary>
            Event arguments for the Child Joined event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ChildJoinedEventArgs.#ctor(System.Byte,System.Boolean,System.UInt16,System.UInt64,Itron.Metering.Zigbee.EmberNodeType)">
            <summary>
            Constructor
            </summary>
            <param name="index">The index of the child</param>
            <param name="joining">Whether the child is joining or leaving</param>
            <param name="childNodeID">The Node ID of the child</param>
            <param name="childEUI">The EUI of the child</param>
            <param name="childType">The Node type of the child</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.ChildJoinedEventArgs.Index">
            <summary>
            Gets the index of the child
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ChildJoinedEventArgs.IsJoining">
            <summary>
            Gets whether the child is joining or leaving
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ChildJoinedEventArgs.ChildNodeID">
            <summary>
            Gets the Node ID of the child
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ChildJoinedEventArgs.ChildEUI">
            <summary>
            Gets the EUI of the child
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ChildJoinedEventArgs.ChildType">
            <summary>
            Gets the type of the child
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.BindingSetRemotelyEventArgs">
            <summary>
            Event arguments for the Binding Set Remotely event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.BindingSetRemotelyEventArgs.#ctor(Itron.Metering.Zigbee.EmberBindingTableEntry,System.Byte,Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Constructor
            </summary>
            <param name="bindingTableEntry">The new binding table entry</param>
            <param name="index">The index of the new entry</param>
            <param name="status">The status of the set</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.BindingSetRemotelyEventArgs.BindingTableEntry">
            <summary>
            Gets the binding table entry that was set
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BindingSetRemotelyEventArgs.Index">
            <summary>
            Gets the index of the table entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BindingSetRemotelyEventArgs.Status">
            <summary>
            Gets the Status of the Binding table set
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.BindingDeletedRemotelyEventArgs">
            <summary>
            Event arguments for the Binding Deleted Remotely event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.BindingDeletedRemotelyEventArgs.#ctor(System.Byte,Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Constructor
            </summary>
            <param name="index">The index of the </param>
            <param name="status">The status of the deletion</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.BindingDeletedRemotelyEventArgs.Index">
            <summary>
            Gets the index of the binding entry deleted
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BindingDeletedRemotelyEventArgs.Status">
            <summary>
            Gets the status of the deletion
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessageSentEventArgs">
            <summary>
            Event arguments for the Message Sent event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MessageSentEventArgs.#ctor(Itron.Metering.Zigbee.EmberOutgoingMessageType,System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,Itron.Metering.Zigbee.EmberStatus,System.Byte,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="messageType">The type of message sent</param>
            <param name="indexOrDestination">The table index or Node ID for the destination</param>
            <param name="apsFrame">The APS frame for the message</param>
            <param name="messageTag">The message tag</param>
            <param name="status">The ack status of the message</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.MessageType">
            <summary>
            Gets the message type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.IndexOrDestination">
            <summary>
            Gets the index of the table or the node ID of the destination
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.APSFrame">
            <summary>
            Gets the APS frame for the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.MessageTag">
            <summary>
            Gets the message tag
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.Status">
            <summary>
            Gets the destination ack status of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.MessageLength">
            <summary>
            Gets the length of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageSentEventArgs.MessageContents">
            <summary>
            Gets the contents of the message
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberStatusEventArgs">
            <summary>
            Event arguments for events that only return an EmberStatus value
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EmberStatusEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Constructor
            </summary>
            <param name="status">The status of the call back</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.EmberStatusEventArgs.Status">
            <summary>
            Gets the status of the callback
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.NodeIDEventArgs">
            <summary>
            Event arguments for callbacks that only return the Node ID
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.NodeIDEventArgs.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="nodeID">The node ID</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.NodeIDEventArgs.NodeID">
            <summary>
            Gets the node ID
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EUIEventArgs">
            <summary>
            Event arguments for callbacks that include the EUI
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EUIEventArgs.#ctor(System.UInt64)">
            <summary>
            Constructor
            </summary>
            <param name="eui">The EUI</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.EUIEventArgs.EUI">
            <summary>
            Gets the EUI
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MessageReceivedEventArgs">
            <summary>
            Event arguments for the Message Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MessageReceivedEventArgs.#ctor(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Constructor
            </summary>
            <param name="message">The incoming message</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.MessageReceivedEventArgs.Message">
            <summary>
            Gets the incoming Message
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs">
            <summary>
            Event arguments for the Route Record Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.#ctor(System.UInt16,System.UInt64,System.Byte,System.Byte,System.Byte,System.UInt16[])">
            <summary>
            Constructor
            </summary>
            <param name="sourceNodeID">The Node ID of the source of the route record</param>
            <param name="sourceEUI">The EUI of the source of the route record</param>
            <param name="lastHopLqi">The last hop LQI of the message</param>
            <param name="lastHopRssi">The last hop RSSI of the message</param>
            <param name="relayCount">The number of relay</param>
            <param name="relayList">The list of Node IDs for the route</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.SourceNodeID">
            <summary>
            Gets the Node ID of the source
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.SourceEUI">
            <summary>
            Gets the EUI of the source
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.LastHopLqi">
            <summary>
            Gets the Last Hop LQI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.LastHopRssi">
            <summary>
            Gets the Last Hop RSSI
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.RelayCount">
            <summary>
            Gets the number of Relays in the Relay List
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteRecordReceivedEventArgs.RelayList">
            <summary>
            Gets the list of Node IDs that make up the route
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ManyToOneRouteAvailableEventArgs">
            <summary>
            Many To One Route Available event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ManyToOneRouteAvailableEventArgs.#ctor(System.UInt16,System.UInt64,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="sourceNodeID">The node ID of the concentrator</param>
            <param name="sourceEUI">The EUI of the concentrator</param>
            <param name="cost">The path cost to the concentrator</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.ManyToOneRouteAvailableEventArgs.SourceNodeID">
            <summary>
            Gets the Node ID of the concentrator
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ManyToOneRouteAvailableEventArgs.SourceEUI">
            <summary>
            Gets the EUI of the concentrator
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ManyToOneRouteAvailableEventArgs.Cost">
            <summary>
            Gets the cost of the path
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.RouteErrorOccurredEventArgs">
            <summary>
            Route Error event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.RouteErrorOccurredEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="status">The error status</param>
            <param name="targetNodeID">The Node ID of the target</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteErrorOccurredEventArgs.Status">
            <summary>
            Gets the error status
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.RouteErrorOccurredEventArgs.TargetNodeID">
            <summary>
            Gets the Node ID of the target
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs">
            <summary>
            Event arguments for the Message Received event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.#ctor(Itron.Metering.Zigbee.EmberMacPassthroughType,System.Byte,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="messageType">The message type</param>
            <param name="lastHopLqi">The last hop LQI</param>
            <param name="lastHopRssi">The last hop RSSI</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.MessageType">
            <summary>
            Gets the message type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.LastHopLqi">
            <summary>
            Gets the Last Hop LQI of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.LastHopRssi">
            <summary>
            Gets the last hop RSSI of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.MessageLength">
            <summary>
            Gets the length of the message in bytes
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacPassthroughMessageReceivedEventArgs.MessageContents">
            <summary>
            Gets the contents of the message
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.MacFilterMatchMessageReceivedEventArgs">
            <summary>
            MAC Passthrough Filtered Message Received event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.MacFilterMatchMessageReceivedEventArgs.#ctor(System.Byte,Itron.Metering.Zigbee.EmberMacPassthroughType,System.Byte,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="filterIndexMatch">The index of the matched filter</param>
            <param name="messageType">The message type</param>
            <param name="lastHopLqi">The last hop LQI</param>
            <param name="lastHopRssi">The last hop RSSI</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.MacFilterMatchMessageReceivedEventArgs.FilterIndexMatch">
            <summary>
            Gets the index of the matched filter
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.NetworkKeySwitchedEventArgs">
            <summary>
            Network key switched event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.NetworkKeySwitchedEventArgs.#ctor(System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="sequenceNumber">The new network key's sequence number</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.NetworkKeySwitchedEventArgs.SequenceNumber">
            <summary>
            Gets the Network Key sequence number
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeKeyEstablishedEventArgs">
            <summary>
            ZigBee Key Established Event Arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeKeyEstablishedEventArgs.#ctor(System.UInt64,Itron.Metering.Zigbee.EmberKeyStatus)">
            <summary>
            Constructor
            </summary>
            <param name="eui">The EUI of the partner the key is established with</param>
            <param name="status">The status of the establishment</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeKeyEstablishedEventArgs.Status">
            <summary>
            Gets the status of the establishment
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs">
            <summary>
            Event arguments for a Trust Center Join
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.#ctor(System.UInt16,System.UInt64,Itron.Metering.Zigbee.EmberDeviceUpdate,Itron.Metering.Zigbee.EmberJoinDecision,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="newNodeID">The Node ID of the new device</param>
            <param name="newEUI">The EUI of the new device</param>
            <param name="status">The device status</param>
            <param name="policyDecision">The policy decision for the device join</param>
            <param name="parentNodeID">The Parent Node ID for the device</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.NewNodeID">
            <summary>
            Gets the Node ID of the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.NewEUI">
            <summary>
            Gets the EUI of the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.Status">
            <summary>
            Gets the device status
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.PolicyDecision">
            <summary>
            Gets the policy decision of the join
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.TrustCenterJoinedEventArgs.ParentNodeID">
            <summary>
            Gets the Node ID of the device's parent
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.CBKEKeyGeneratedEventArgs">
            <summary>
            CBKE Key generated event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.CBKEKeyGeneratedEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="status">The result of the CBKE operation</param>
            <param name="publicKey">The generated public key</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.CBKEKeyGeneratedEventArgs.PublicKey">
            <summary>
            Gets the Public Key
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.SmacsCalculatedEventArgs">
            <summary>
            SMAC Calculated event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.SmacsCalculatedEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus,System.Byte[],System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="status">The status of the SMAC calculation</param>
            <param name="initiatorSmac">The initiator SMAC</param>
            <param name="responderSmac">The responder SMAC</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.SmacsCalculatedEventArgs.InitiatorSmac">
            <summary>
            Gets the initiator's SMAC
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.SmacsCalculatedEventArgs.ResponderSmac">
            <summary>
            Gets the responder's SMAC
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DsaSignedEventArgs">
            <summary>
            DSA signed event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.DsaSignedEventArgs.#ctor(Itron.Metering.Zigbee.EmberStatus,System.Byte,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="status">The status of the DSA sign</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The message contents</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.DsaSignedEventArgs.MessageLength">
            <summary>
            Gets the length of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.DsaSignedEventArgs.MessageContents">
            <summary>
            Gets the message contents
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPLogLevels">
            <summary>
            The logging layers
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.None">
            <summary>
            Nothing will be logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.SerialPort">
            <summary>
            The raw serial data will be logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.ASHProtocol">
            <summary>
            The ASH Protocol details will be logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.EZSPProtocol">
            <summary>
            The EZSP Protocol details will be logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.ApplicationLayer">
            <summary>
            The Application Layer details will be logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogLevels.All">
            <summary>
            Logs all layers of detail
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPLogDirection">
            <summary>
            The data direction
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogDirection.Send">
            <summary>
            Data was sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPLogDirection.Receive">
            <summary>
            Data was received
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPLogger">
            <summary>
            Communications logger for the EZSP protocol
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.Finalize">
            <summary>
            Deconstructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.ConvertDataToString(System.Byte[])">
            <summary>
            Converts a byte array into a readable string
            </summary>
            <param name="data">The data to convert</param>
            <returns>The data as a string</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.StartLogging(System.String,Itron.Metering.Zigbee.EZSPLogLevels)">
            <summary>
            Starts logging to the specified file
            </summary>
            <param name="logFileName">The path to the log file</param>
            <param name="loggedLevels">The levels that will be logged in the file</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.StopLogging">
            <summary>
            Stops all logging
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.WriteLine(Itron.Metering.Zigbee.EZSPLogLevels,System.String)">
            <summary>
            Writes the specified line to the log
            </summary>
            <param name="logLevel">The log level of the line to write</param>
            <param name="logText">The text to write to the log</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.WriteSerialData(Itron.Metering.Zigbee.EZSPLogDirection,System.Byte[])">
            <summary>
            Writes the Serial Port Data to the log
            </summary>
            <param name="direction">The direction of the data</param>
            <param name="data">The data to write</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.WriteASHFrameInfo(Itron.Metering.Zigbee.EZSPLogDirection,Itron.Metering.Zigbee.ASHFrame)">
            <summary>
            Writes basic information for the ASH Layer of the protocol
            </summary>
            <param name="direction">The direction of the frame</param>
            <param name="frame">The frame to write</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.WriteEZSPFrame(Itron.Metering.Zigbee.EZSPCommandFrame)">
            <summary>
            Writes the EZSP Frame details
            </summary>
            <param name="commandFrame">The command frame to write</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.WriteEZSPFrame(Itron.Metering.Zigbee.EZSPResponseFrame)">
            <summary>
            Writes the EZSP Frame details
            </summary>
            <param name="responseFrame">The response frame to write</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPLogger.ShouldLog(Itron.Metering.Zigbee.EZSPLogLevels)">
            <summary>
            Determines whether or not the item should be logged
            </summary>
            <param name="logLevel">The level to check</param>
            <returns>True if the level is being logged. False otherwise</returns>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPFrameIDs">
            <summary>
            EZSP Frame ID's
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPScanType">
            <summary>
            Network Scan types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanType.EnergyScan">
            <summary>
            Scan for RSSI values
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanType.ActiveScan">
            <summary>
            Scan for available devices
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPSleepMode">
            <summary>
            The Sleep Modes used for Command Frames
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPSleepMode.Idle">
            <summary>
            The device is idle
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPSleepMode.DeepSleep">
            <summary>
            The device is in deep sleep mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPSleepMode.PowerDown">
            <summary>
            The device is powered down
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPCallbackType">
            <summary>
            The callback type for an EZSP response frame
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPCallbackType.NotACallback">
            <summary>
            Response is not a Callback
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPCallbackType.SynchronousCallback">
            <summary>
            Response is a synchronous callback
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPCallbackType.AsynchronousCallback">
            <summary>
            Response is an asynchronous callback
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberStatus">
            <summary>
            Status return value for Ember commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.Success">
            <summary>Success</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.FatalError">
            <summary>Fatal Error</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.BadArgument">
            <summary>Bad Argument</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.EepromMFGStackVersionMismatch">
            <summary>Manufacturing and Stack Token format is different than the stack expect</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.IncompatibleStaticMemoryDefinition">
            <summary>The static memory definitions are incompatible with the stack</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.EepromMFGVersionMismatch">
            <summary>Manufacturing token format different than what the stack expects</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.EepromStackVersionMismatch">
            <summary>Stack toekn format different than what the stack expects</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NoBuffers">
            <summary>No buffers available</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidSerialBaudRate">
            <summary>The serial baud rate is invalid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidSerialPort">
            <summary> An Invalid Port was specified</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialTxOverflow">
            <summary>Transmit buffer overflow</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialRxOverflow">
            <summary>Receive buffer overflow</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialRxFrameError">
            <summary>UART framing error detected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialRxParityError">
            <summary>UART parity error detected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialRxEmpty">
            <summary>No data was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SerialRxOverrunError">
            <summary>The receive interrupt was not handled in time and characters were dropped</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACNoData">
            <summary>No pending data exists</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACJoinedNetwork">
            <summary>Attempted to scan when already joined to a network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACBadScanDuration">
            <summary>Scan duration is bad. Must be between 0 and 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACIncorrectScanType">
            <summary>Incorrect scan type supplied</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACInvalidChannelMask">
            <summary>Channel mask is invalid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACCommandTransmitFailure">
            <summary>Failed to scan current channel because we were unable to transmit the MAC command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACTransmitQueueFull">
            <summary>The MAC transmit queue is full</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACUnknownHeaderType">
            <summary>MAC Header error received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACScanning">
            <summary>Can't complete task because scanning is in progress</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACNoAckReceived">
            <summary>No MAC level Ack was received.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MACIndirectTimeout">
            <summary>Indirect data message timed out</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromErasePageGreen">
            <summary>At least one simulated flash page can be erased. (Current page below erase critical threshold)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromErasePageRed">
            <summary> At least one simulated flash page can be erased. (Current page above erase critical threshold)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromFull">
            <summary>The simulated EEPROM is out of space</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorFlashWriteInhibited">
            <summary>Target memory is already programmed.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorFlashVerifyFailed">
            <summary>Write verification has failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromInit1Failed">
            <summary>Attempt 1 to initialize has failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromInit2Failed">
            <summary>Attempt 2 to initialize has failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SimEepromInit3Failed">
            <summary>Attempt 3 to initialize has failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorFlashProgramFail">
            <summary>Error occurred trying to write data to the flash</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorFlashEraseFail">
            <summary>Error occurred trying to erase flash</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorTokenInvalidSize">
            <summary>An incorrect size was specified when retrieving token data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorTokenReadOnly">
            <summary>Couldn't write token because it is marked read only</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorBootloaderTrapTableBad">
            <summary>Bootloader received an invalid message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorBootloaderTrapUnknown">
            <summary>Bootloader received an invalid message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ErrorBootloaderNoImage">
            <summary>Bootloader could not complete because the image was not found</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.DeliveryFailed">
            <summary>APS Layer message delivery failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.BindingImageOutOfRange">
            <summary>Binding index out of range for the current binding table</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.AddressTableIndexOutOfRange">
            <summary>Adress table index out of range for the current address table</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidBindingIndex">
            <summary>Invalid binding index given to a function</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidCall">
            <summary>The API call is not allowed for the current state of the stack</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.CostNotKnown">
            <summary>The link cost to a node is not known</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MaxMessageLimitReached">
            <summary>The maximum number of in flight messages has been reached</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MessageTooLong">
            <summary>The message being transmitted is too big for a single packet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.BindingIsActive">
            <summary>The application is trying to delete a binding that is in use</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.AddressTableEntryIsActive">
            <summary>The application is trying to overwrite an address table entry that is in use</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ADCConversionDone">
            <summary>Conversion is complete</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ADCConversionBusy">
            <summary>Conversion can't be done because a request is being processed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ADCConversionDeferred">
            <summary>Conversion is deferred until the current request is complete</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ADCNoConversionPending">
            <summary>No results are pending</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SleepInterrupted">
            <summary>Sleeping has been interrupted prematurely</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyTxUnderflow">
            <summary>Transmit buffer underflowed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyTxIncomplete">
            <summary>Transmit buffer did not finish transmitting the packet</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyInvalidChannel">
            <summary>An unsupported channel was specified</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyInvalidPower">
            <summary>Unsupported power setting was specified</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyTxBusy">
            <summary>Cannot transmit because the physical layer is already transmitting</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyTxCCAFail">
            <summary>Transmit failed because all CCA attempts indicated the channel was busy</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyOscillatorCheckFailed">
            <summary>The software installed on the hardware does not recognize the hardware radio type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PhyAckReceived">
            <summary>The expected ack was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NetworkUp">
            <summary>The network is up.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NetworkDown">
            <summary>The network is down.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NotJoined">
            <summary>The node has not joined a network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidSecurityLevel">
            <summary>The chosen security level is not supported</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.JoinFailed">
            <summary>The attempt to join the network failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.MoveFailed">
            <summary>After moving the node could  not establish contact with the network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.CannotJoinAsRouter">
            <summary>Could not join as a router</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NodeIDChanged">
            <summary>the local node ID has changed.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PanIDChanged">
            <summary>The local PAN ID has changed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NetworkBusy">
            <summary>Message cannot be sent because the network is currently overloaded</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InvalidEndpoint">
            <summary>The application tried to send a message using an endpoint that is not defined</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.BindingHasChanged">
            <summary>Application tried to use a binding that ha been remotely modified</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.InsufficientRandomData">
            <summary>Attempt to generate random bytes failed because of insufficient random data from the radio</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.APSEncryptionError">
            <summary>Error trying to encrypt at the APS layer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.TrustCenterMasterKeyNotSet">
            <summary>There was an attempt to form a network using the commercial security without setting the Trust Center master key first</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SecurityStateNotSet">
            <summary>There was an attempt to firm or join a network using Standard or Commercial security without call emberSetSecurity first</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SourceRouteFailure">
            <summary>A ZigBee route error command frame was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ManyToOneRouteFailure">
            <summary>A ZigBee route error command frame was received indicating a many to one route failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NoBeacons">
            <summary>An attempt to join or rejoin failed because no router beacons could be heard</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ReceivedKeyInTheClear">
            <summary>Attempt made to join secure network but received a network key in the clear</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NoNetworkKeyReceived">
            <summary>No Network Key was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.NoLinkKeyReceived">
            <summary>No Link Key was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.PreconfiguredKeyRequired">
            <summary>Attempt made to join a secure network without a preconfigured key but encrypted data was received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.StackAndHardwareMismatch">
            <summary>The version of the stack trying to run does not match with the chip it is running on</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.IndexOutOfRange">
            <summary>Index out of range</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.TableFull">
            <summary>There are no empty entries left in the table</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.LibraryNotPresent">
            <summary>The requested function cannot be executed because the library that contains the functionality is not present.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.TableEntryErased">
            <summary>The requested entry has been erased.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.KeyTableInvalidAddress">
            <summary>There was an attempt to set an entry in the key table using an invalid long address</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SecurityConfigurationInvalid">
            <summary>Attempt to set a security configuration that is not valid given the other security settings</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.TooSoonForSwitchKey">
            <summary>There was an attempt to broadcast a key switch too quickly after broadcasting the next network key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.OperationInProgress">
            <summary>Operation in progress</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.KeyNotAuthorized">
            <summary>The message could not be sent because the link key is not authorized</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.SecurityDataInvalid">
            <summary>The security data provided was not valid</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ASHDisconnected">
            <summary>Application Error 0 - ASH Currently disconnected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError1">
            <summary>Application Error 1</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError2">
            <summary>Application Error 2</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError3">
            <summary>Application Error 3</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError4">
            <summary>Application Error 4</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError5">
            <summary>Application Error 5</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError6">
            <summary>Application Error 6</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError7">
            <summary>Application Error 7</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError8">
            <summary>Application Error 8</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError9">
            <summary>Application Error 9</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError10">
            <summary>Application Error 10</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError11">
            <summary>Application Error 11</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError12">
            <summary>Application Error 12</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError13">
            <summary>Application Error 13</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ApplicationError14">
            <summary>Application Error 14</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberStatus.ResponseTimeout">
            <summary>Application Error 15 - Response Timeout</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberKeyType">
            <summary>
            Security Key types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.TrustCenterLinkKey">
            <summary>Shared key between the Trust Center and a device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.TrustCenterMasterKey">
            <summary>Shared secret used for deriving keys between the Trust Center and a device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.CurrentNetworkKey">
            <summary>The current active Network Key used by all devices on the network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.NextNetworkKey">
            <summary>The alternate Network Key that was previously in use or the newer key that will be switched to</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.ApplicationLinkKey">
            <summary>An Application Link Key shared with another device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyType.ApplicationMasterKey">
            <summary>An Application Master key shared secret used to derive and Application Link Key</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeChannels">
            <summary>
            Channels used by the HAN
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.None">
            <summary>
            None selected
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel17">
            <summary>
            Channel 17
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel18">
            <summary>
            Channel 18
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel19">
            <summary>
            Channel 19
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel20">
            <summary>
            Channel 20
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel21">
            <summary>
            Channel 21
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel22">
            <summary>
            Channel 22
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel23">
            <summary>
            Channel 23
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel24">
            <summary>
            Channel 24
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel25">
            <summary>
            Channel 25
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.Channel26">
            <summary>
            Channel 26
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeChannels.ItronDefault">
            <summary>
            The default Itron Channels
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPScanDuration">
            <summary>
            Scan durations for EZSP scanning
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX2">
            <summary>2 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX3">
            <summary>3 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX5">
            <summary>5 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX9">
            <summary>9 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX17">
            <summary>17 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX33">
            <summary>33 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX65">
            <summary>65 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX129">
            <summary>129 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX257">
            <summary>257 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX513">
            <summary>513 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX1025">
            <summary>1025 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX2049">
            <summary>2049 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX4097">
            <summary>4097 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX8193">
            <summary>8193 Scan Periods</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EZSPScanDuration.ScanPeriodX16385">
            <summary>16385 Scan Periods</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberNetworkStatus">
            <summary>
            Network Status enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNetworkStatus.NoNetwork">
            <summary>No network is associated to the node</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNetworkStatus.JoiningNetwork">
            <summary>The node is currently attempting to join a network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNetworkStatus.JoinedNetwork">
            <summary>The node is currently joined to a network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNetworkStatus.JoinedNetworkNoParent">
            <summary>The node is joined to a network but the parent is not responding</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberNetworkStatus.LeavingNetwork">
            <summary>The node is leaving a network.</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberOutgoingMessageType">
            <summary>
            Outgoing message type
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberOutgoingMessageType.Direct">
            <summary>Message sent directly to a node ID</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberOutgoingMessageType.ViaAddressTable">
            <summary>Message sent using an Address Table entry</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberOutgoingMessageType.ViaBinding">
            <summary>Message sent using a Binding Table entry</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberOutgoingMessageType.Multicast">
            <summary>Message sent as a multicast message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberOutgoingMessageType.Broadcast">
            <summary>Message sent as a broadcast message</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberConcentratorType">
            <summary>
            Concentrator types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberConcentratorType.LowRAMConcentrator">
            <summary>A concentrator with insufficient memory to store source routes for the entire network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberConcentratorType.HighRAMConcentrator">
            <summary>A concentrator with sufficient memory to store source routes for the entire network</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberEventUnits">
            <summary>
            Event units
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberEventUnits.Inactive">
            <summary>The event is not scheduled to run</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberEventUnits.MillisecondTime">
            <summary>The event time is in milliseconds</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberEventUnits.QuarterSecondTime">
            <summary>The event time is in "binary" quarter seconds (approx 256 milliseconds)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberEventUnits.MinuteTime">
            <summary>The event time is in "binary" minutes (approx 65536 milliseconds)</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspConfigID">
            <summary>
            Configuration value ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.PacketBufferCount">
            <summary>The number of packet buffers available to the stack</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.NeighborTableSize">
            <summary>The maximum number of router neighbors the stack can keep track of</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.APSUnicastMessageCount">
            <summary>Maximum number of APS retried messages the stack can be transmitting at one time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.BindingTableSize">
            <summary>Maximum number of non volatile bindings supported</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.AddressTableSize">
            <summary>Maximum number of EUI to network address associations that can be maintained</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.MulticastTableSize">
            <summary>Maximum number of multicast groups that the device may be a member of</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.RouteTableSize">
            <summary>Maximum number of destinations to which a node may route messages</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.DiscoveryTableSize">
            <summary>Number of simultaneous route discoveries</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.BroadcastAlarmDataSize">
            <summary>The size of the alarm broadcast buffer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.UnicastAlarmDataSize">
            <summary>The size of the unicast alarm broadcast byffer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.StackProfile">
            <summary>The stack profile in use</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.SecurityLevel">
            <summary>The security level used at the MAC and network layers</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.MaxHops">
            <summary>Maximum number of hops for a message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.MaxEndDeviceChildren">
            <summary>Maximum number of end device children a router supports</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.IndirectTransmissionTimeout">
            <summary>Maximum amount of time that the MAC will hold a message for indirect transmission to a child</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.EndDevicePollTimeout">
            <summary>Maximum amount of time that an end device child can wait between polls.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.MobileNodePollTimeout">
            <summary>Maximum amount of time that a mobile node can wait between polls</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.ReservedMobileChildEntries">
            <summary>The number of child table entries reserved for mobile nodes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.TxPowerMode">
            <summary>Enables boost power mode on the radio</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.DisableRelay">
            <summary>Disables the node from relaying messages</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.TrustCenterAddressCacheSize">
            <summary>Maximum number of EUI to network address associations the Trust Center can maintain</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.SourceRouteTableSize">
            <summary>Size of the source route table</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.EndDevicePollTimeoutShift">
            <summary>Units used for timing out end devices</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.FragmentWindowSize">
            <summary>Number of blocks of fragmented data that can be sent in a single window</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.FragmentDelayMs">
            <summary>The time the stack will wait between sending blocks of a fragmented message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.KeyTableSize">
            <summary>The size of the key table used to store link keys</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.APSAckTimeout">
            <summary>The APS Ack timeout</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.ActiveScanDuration">
            <summary>The duration of an active scan</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.EndDeviceBindTimeout">
            <summary>The time the coordinator will wait for a second end device bind request to arrive</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.PANIDConflictReportThreshold">
            <summary>The number of PAN ID conflict reports that must be received by the network manager in 1 minute to trigger a PAN ID change</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.RequestKeyTimeout">
            <summary>The timeout value (minutes) for how long the Trust Center or normal node waits for the ZigBee Request Key to complete</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.CertificateTableSize">
            <summary>The size of the certificate table</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.ApplicationZDOFlags">
            <summary>A bitmask that controls which incoming ZDO request messages are passed to the application.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.BroadcastTableSize">
            <summary>Maximum number of broadcasts during a single broadcast timeout period</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspConfigID.MACFilterTableSize">
            <summary>The size of the MAC filter list table</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspStatus">
            <summary>
            EZSP status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.Success">
            <summary>Success</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorFatal">
            <summary>Fatal Error</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorNCPReset">
            <summary>NCP has Reset</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorOversizedEZSPFrame">
            <summary>The command frame is too large</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorAbortedTransaction">
            <summary>The previous transaction was aborted</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorMissingFrameTerminator">
            <summary>The frame terminator is missing</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorWaitSectionTimeout">
            <summary>NCP had not provided a response within the time limit</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorNoFrameTerminator">
            <summary>The NCP response is missing the frame terminator</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorEZSPCommandOversized">
            <summary>The NCP attempted to send an oversized command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorEZSPResponseOversized">
            <summary>The host attempted to send an oversized response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIWaitingForResponse">
            <summary>The host is still waiting for the NCP to send a response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorHandshakeTimeout">
            <summary>The NCP has not performed a handshake within the allowed time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorStartupTimeout">
            <summary>The NCP has not performed a handshake after a reset</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorStartupFail">
            <summary>The host could not verify the SPI activity and version number</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.SPIErrorUnsupportedSPICommand">
            <summary>The host sent a command that is not supported</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHInProgress">
            <summary>Operation is not yet complete</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHHostFatalError">
            <summary>Fatal error detected by host</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNCPFatalError">
            <summary>Fatal error detected by the NCP</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHDataFrameTooLong">
            <summary>Tried to send a data frame that is too long</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHDataFrameTooShort">
            <summary>Tried to send a data frame that is too short</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNoTxSpace">
            <summary>No space for a transmitted data frame</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNoRxSpace">
            <summary>No space for a received data frame</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNoRxData">
            <summary>No received data available</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNotConnected">
            <summary>Not in the connected state</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorVersionNotSet">
            <summary>The NCP received a command before the EZSP version has been set</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorInvalidFrameID">
            <summary>The NCP received a command containing an unsupported frame</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorWrongDirection">
            <summary>The direction flag in the frame control field is incorrect</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorTruncated">
            <summary>The truncated flag in the frame control field was incorrect</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorOverflow">
            <summary>The overflow flag in the frame control field was set</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorOutOfMemory">
            <summary>Insufficient memory</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorInvalidValue">
            <summary>The value was out of bounds</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorInvalidID">
            <summary>The configuration id was not recognized</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorInvalidCall">
            <summary>Configuration values can no longer be modified</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorNoResponse">
            <summary>The NCP failed to respond to the command</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorCommandTooLong">
            <summary>The length of the command exceeded the maximum EZSP frame length</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ErrorQueueFull">
            <summary>The UART receive queue is full causing a callback to be dropped</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorVersion">
            <summary>Incompatible ASH version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorTimeouts">
            <summary>Exceeded max Ack Timeouts</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorResetFail">
            <summary>Timeout out waiting for the Reset Ack</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorNCPReset">
            <summary>Unexpected NCP reset</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorSerialInit">
            <summary>Serial Port initialization failed</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorNCPType">
            <summary>Invalid NCP processor type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorResetMethod">
            <summary>Invalid NCP reset method</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHErrorXonXoff">
            <summary>XON/XOFF not supported by host driver</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHStarted">
            <summary>ASH protocol started</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHConnected">
            <summary>ASH protocol connected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHDisconnected">
            <summary>ASH protocol disconnected</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHAckTimeout">
            <summary>Timer expired waiting for ack</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHCancelled">
            <summary>Frame in progress cancelled</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHOutOfSequence">
            <summary>Received a frame out of sequence</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHBadCRC">
            <summary>Frame CRC is bad</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHCommError">
            <summary>Received the frame with comm error</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHBadAckNum">
            <summary>Received a frame with a bad ack number</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHTooShort">
            <summary>Received a frame shorter than minimum</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHTooLong">
            <summary>Received a frame longer than maximum</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHBadControl">
            <summary>Received a frame with an illegal control byte</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHBasLength">
            <summary>Received a frame with an illegal length for its type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspStatus.ASHNoError">
            <summary>No reset or error</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspPolicyID">
            <summary>
            Policy ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.TrustCenterPolicy">
            <summary>Controls trust center behavior</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.BindingModificationPolicy">
            <summary>Controls how external binding modification requests are handled</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.UnicastRepliesPolicy">
            <summary>Controls whether the host supplies unicast replies</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.PollHandlerPolicy">
            <summary>Controls whether pollHandler callbacks are generated</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.MessageContentsInCallbackPolicy">
            <summary>Controls whether the message contents are included in the messageSentHandler</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.TrustCenterKeyRequestPolicy">
            <summary>Controls whether the Trust Center will respond to Trust Center link key requests</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspPolicyID.ApplicationKeyRequestPolicy">
            <summary>Controls whether the Trust Center will respond to application link key requests</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspDecisionID">
            <summary>
            Decision ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowJoins">
            <summary>Allow joins and rejoins and send the network key in the clear</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowPreconfiguredKeyJoins">
            <summary>Send the network key encrypted with the joining or rejoining and rejoining device's trust center link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowRejoinsOnly">
            <summary>Send the network key encrypted with the rejoining device's link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.DisallowAllJoinsAndRejoins">
            <summary>Disallow all unsecured join and rejoin attempts</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowJoinsRejoinsHaveLinkKey">
            <summary>Send the network key in the clear to joining devices and rejoining devices are sent encrypted with the link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.DisallowBindingModification">
            <summary>Do not allow the Binding table to be modified by remote nodes (Default)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowBindingModification">
            <summary>Allow remote nodes to change the binding table.</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.HostWillNotSupplyReply">
            <summary>NCP automatically sends an empty reply for every unicast received (Default)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.HostWillSupplyReply">
            <summary>The NCP will only send a reply if it receives a sendReply command from the host</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.PollHandlerIgnore">
            <summary>Do not inform the host when a child polls (Default)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.PollHandlerCallback">
            <summary>Generate a callback when a child polls</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.MessageTagOnlyInCallback">
            <summary>Include only the message tag in the message sent callback (Default)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.MessageTageAndContentsInCallback">
            <summary>Include both the message tag and the message contents in the message sent callback</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.DenyTrustCenterRequests">
            <summary>Ignore requests for the link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowTrustCenterRequests">
            <summary>Allow requests for the link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.DenyAppKeyRequests">
            <summary>Ignore requests for an application link key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspDecisionID.AllowAppKeyRequests">
            <summary>Allow requests for an application link key</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspValueID">
            <summary>
            Value ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.TokenStackNodeData">
            <summary>The contents of the node data stack token</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.MACPassthroughFlags">
            <summary>The types of MAC passthrough messages that the host wishes to receive</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.EmberNetPassthroughSourceAddress">
            <summary>The source address used to filter legacy EmberNet messages</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.FreeBuffers">
            <summary>The number of available message buffers</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.UARTSynchCallbacks">
            <summary>Selects sending synchronous callbacks in ezsp-uart</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.MaximumIncomingTransferSize">
            <summary>The maximum incoming transfer size for the local node</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.MaximumOutgoingTransferSize">
            <summary>The maximum outgoing transfer size for the local node</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.StackTokenWriting">
            <summary>A boolean indicating whether stack token are written to persistent storage</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.StackIsPerformingRejoin">
            <summary>A read only value indicating whether the stack is currently performing a rejoin</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspValueID.MACFilterList">
            <summary>A list of EmberMacFilterMatchData values</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EzspMfgTokenID">
            <summary>
            Manufacturer Token ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.CustomVersion">
            <summary>Custom Version (2 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.MfgString">
            <summary>Manufacturing string (16 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.BoardName">
            <summary>Board Name (16 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.MfgID">
            <summary>Manufacturing ID (2 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.PhyConfiguration">
            <summary>Radio Configuration (2 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.BootloadAESKey">
            <summary>Bootload AES key (16 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.ASHConfiguration">
            <summary>ASH configuration (40 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.EzspStorage">
            <summary>EZSP storage (8 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.StackCalibrationData">
            <summary>Radio Calibration data (64 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.CBKEData">
            <summary>CBKE data (92 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.InstallationCode">
            <summary>Installation code (20 bytes)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EzspMfgTokenID.StackCalibrationFilter">
            <summary>Radio channel filter calibration data (1 byte)</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberIncomingMessageType">
            <summary>
            Incoming message types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.Unicast">
            <summary>Unicast message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.UnicastReply">
            <summary>Unicast reply</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.Multicast">
            <summary>Multicast message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.MulticastLoopback">
            <summary>Multicast message sent by the local device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.Broadcast">
            <summary>Broadcast message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.BroadcastLoopback">
            <summary>Broadcast message sent by the local device</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberIncomingMessageType.ManyToOneRouteRequest">
            <summary>Many to One Route Request message</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberMacPassthroughType">
            <summary>
            MAC pass through message type
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberMacPassthroughType.None">
            <summary>No MAC pass through messages</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberMacPassthroughType.SEInterPAN">
            <summary>SE InterPAN message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberMacPassthroughType.EmberNet">
            <summary>Legacy EmberNet message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberMacPassthroughType.EmberNetSource">
            <summary>Legacy EmberNet message filtered by source address</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberKeyStatus">
            <summary>
            Key Establishment status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.LinkKeyEstablished">
            <summary>Link Key Established</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.MasterKeyEstablished">
            <summary>Master Key Established</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterLinkKeyEstablished">
            <summary>Trust Center Link Key Established</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.KeyEstablishmentTimeout">
            <summary>Key Establishment Timed Out</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.KeyTableFull">
            <summary>The Key table is full</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterRespondedToKeyRequest">
            <summary>The Trust Center reponded to the key request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterApplicationKeySentToRequester">
            <summary>The trust center sent the application key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterResponseToKeyRequestFailed">
            <summary>The Trust Center failed to respond to the key request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterRequestKeyTypeNotSupported">
            <summary>The requested key type is not supported</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterNoLinkKeyForRequester">
            <summary>The Trust Center does not have a link key for the requester</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterRequesterEUIUnknown">
            <summary>The EUI of the requester is not known</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterReceivedFirstApplicationKeyRequest">
            <summary>The Trust Center received the first application key request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterTimeoutWaitingForSecondApplicationKeyRequest">
            <summary>The Trust Center timed out while waiting for the second request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterNonMatchingApplicationKeyRequestReceived">
            <summary>The Trust Center Received a non match application key request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterFailedToSendApplicationKeys">
            <summary>The Trust Center failed to send the application key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterFailedToStoreApplicationKeyRequest">
            <summary>The Trust Center failed to store the application key request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberKeyStatus.TrustCenterRejectedApplicationKeyRequest">
            <summary>The Trust Center rejected the key request</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberDeviceUpdate">
            <summary>
            Join Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.StandardSecuritySecuredRejoin">
            <summary>Secure Rejoin using standard security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.StandardSecurityUnsecuredJoin">
            <summary>Unsecure join using standard security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.DeviceLeft">
            <summary>The device left the network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.StandardSecurityUnsecuredRejoin">
            <summary>Unsecure rejoin using standard security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.HighSecuritySecuredRejoin">
            <summary>Secure rejoin using high security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.HighSecurityUnsecuredJoin">
            <summary>Unsecured join using high security</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberDeviceUpdate.HighSecurityUnsecuredRejoin">
            <summary>Unsecured rejoin using high security</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EmberJoinDecision">
            <summary>
            Join Policy Decision
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinDecision.UsePreconfiguredKey">
            <summary>Allow the node to join but it should have a preconfigured key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinDecision.SendKeyInTheClear">
            <summary>Allow the node to join and send the network key in the clear</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinDecision.DenyJoin">
            <summary>Deny Join</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.EmberJoinDecision.NoAction">
            <summary>Take no action</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPProtocol">
            <summary>
            EZSP Protocol class for interacting with the Telegesis dongle
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.ScanCompleted">
            <summary>
            Event that occurs when a Network or Energy scan has completed.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.TimerOccurred">
            <summary>
            Event that occurs when a timer occurs
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.StackStatusUpdated">
            <summary>
            Event that occurs when the stack status is updated
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.ChildJoined">
            <summary>
            Event that occurs when a child is joining or leaving the node
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.BindingSetRemotely">
            <summary>
            Event that occurs when a binding is set from a remote node
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.BindingDeletedRemotely">
            <summary>
            Event that occurs when a binding is deleted from a remote node
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.MessageSent">
            <summary>
            Event that occurs when a message has been sent
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.PollComplete">
            <summary>
            Event that occurs when a poll has completed;
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.PollReceived">
            <summary>
            Event that occurs when a poll is received from a child
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.SenderEUIReceived">
            <summary>
            Event that occurs when a message has been received containing the EUI of the sender
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.MessageReceived">
            <summary>
            Event that occurs when a message has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.RouteRecordReceived">
            <summary>
            Event that occurs when a route record has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.ManyToOneRouteAvailable">
            <summary>
            Event that occurs when a many to one route is available for use
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.RouteErrorOccurred">
            <summary>
            Event that occurs when a route error has occurred
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.IDConflictDetected">
            <summary>
            Event that occurs when two nodes on the network are using the same node ID
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.MacPassthroughMessageReceived">
            <summary>
            Event that occurs when a MAC passthrough message has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.MacFilterMatchMessageReceived">
            <summary>
            Event that occurs when a MAC passthrough message that matches an application filter has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.RawMessageSent">
            <summary>
            Event that occurs when a Raw Message has been sent
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.NetworkKeySwitched">
            <summary>
            Event that occurs when the Network Key has been switched
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.ZigBeeKeyEstablished">
            <summary>
            Event that occurs when a ZigBee Key has been established
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.TrustCenterJoined">
            <summary>
            Event that occurs when the Trust Center has handled a join request
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.CBKEKeyGenerated">
            <summary>
            Event that occurs when a CBKE key has been generated
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.SmacsCalculated">
            <summary>
            Event that occurs when the SMAC values have been calculated
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.DsaSigned">
            <summary>
            Event that occurs when the DSA Sign has completed
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPProtocol.DsaVerified">
            <summary>
            Event that occurs when the DSA Verify has completed
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.#ctor(Itron.Metering.Zigbee.ASHProtocol,Itron.Metering.Zigbee.EZSPLogger)">
            <summary>
            Constructor
            </summary>
            <param name="ash">ASH Protocol layer to use</param>
            <param name="logger">The EZSP communication logger</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Connect">
            <summary>
            Connects the EZSP protocol layer
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Disconnect">
            <summary>
            Disconnects the EZSP protocol layer
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetFragmentationConfiguration">
            <summary>
            Gets the fragmentation configuration data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Version(System.Byte,System.Byte@,System.Byte@,System.UInt16@)">
            <summary>
            Checks the EZSP protocol version
            </summary>
            <param name="desiredVersion">The version that is desired</param>
            <param name="protocolVersion">The protocol version</param>
            <param name="stackType">The stack type</param>
            <param name="stackVersion">The stack version</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetConfigurationValue(Itron.Metering.Zigbee.EzspConfigID,Itron.Metering.Zigbee.EzspStatus@,System.UInt16@)">
            <summary>
            Gets the specified configuration value
            </summary>
            <param name="configID">The configuration value to get</param>
            <param name="status">The status of the command</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetConfigurationValue(Itron.Metering.Zigbee.EzspConfigID,System.UInt16,Itron.Metering.Zigbee.EzspStatus@)">
            <summary>
            Sets the specified configuration value.
            </summary>
            <param name="configID">The ID of the configuration value</param>
            <param name="value">The new value</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.AddEndpoint(System.Byte,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.UInt16[],System.UInt16[],Itron.Metering.Zigbee.EzspStatus@)">
            <summary>
            Configures endpoint information on the NCP
            </summary>
            <param name="endpoint">The application endpoint to be added</param>
            <param name="profileID">The application profile ID</param>
            <param name="deviceID">The device ID within the application profile</param>
            <param name="appFlags">The device version and flags indicating description availability</param>
            <param name="inputClusterCount">The number of cluster IDs in the input cluster list</param>
            <param name="outputClusterCount">The number of cluster IDs in the output cluster list</param>
            <param name="inputClusterList">Input cluster IDs the endpoint will accept</param>
            <param name="outputClusterList">Output cluster IDs the endpoint will accept</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetPolicy(Itron.Metering.Zigbee.EzspPolicyID,Itron.Metering.Zigbee.EzspDecisionID,Itron.Metering.Zigbee.EzspStatus@)">
            <summary>
            Change the policies used by the NCP to make fast decisions
            </summary>
            <param name="policyID">The policy to modify</param>
            <param name="decisionID">The new decision for the specified policy</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetPolicy(Itron.Metering.Zigbee.EzspPolicyID,Itron.Metering.Zigbee.EzspStatus@,Itron.Metering.Zigbee.EzspDecisionID@)">
            <summary>
            Gets the policy decisions
            </summary>
            <param name="policyID">The policy to get</param>
            <param name="status">The status of the command</param>
            <param name="decisionID">The policy decision</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetValue(Itron.Metering.Zigbee.EzspValueID,Itron.Metering.Zigbee.EzspStatus@,System.Byte@,System.Byte[]@)">
            <summary>
            Gets a value from the NCP
            </summary>
            <param name="valueID">The value to get</param>
            <param name="status">The status of the command</param>
            <param name="valueLength">The length of the value</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetValue(Itron.Metering.Zigbee.EzspValueID,System.Byte,System.Byte[],Itron.Metering.Zigbee.EzspStatus@)">
            <summary>
            Sets the NCP value
            </summary>
            <param name="valueID">The ID of the value to set</param>
            <param name="valueLength">The length of the value data</param>
            <param name="value">The value</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Nop">
            <summary>
            Sends a command that does nothing
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Echo(System.Byte,System.Byte[],System.Byte@,System.Byte[]@)">
            <summary>
            Echo's the sent data back to the host
            </summary>
            <param name="dataLength">The length of the data sent</param>
            <param name="data">The data sent</param>
            <param name="echoLength">The length of the data echoed</param>
            <param name="echo">The echoed data</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.Callback">
            <summary>
            Allows the NCP to respond with a callback
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetToken(System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the specified token data
            </summary>
            <param name="tokenID">The ID of the token to set</param>
            <param name="tokenData">The token data (8 bytes)</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetToken(System.Byte,Itron.Metering.Zigbee.EmberStatus@,System.Byte[]@)">
            <summary>
            Gets the specified token data
            </summary>
            <param name="tokenID">The ID of the token to get</param>
            <param name="status">The status of the command</param>
            <param name="tokenData">The token data</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetMfgToken(Itron.Metering.Zigbee.EzspMfgTokenID,System.Byte@,System.Byte[]@)">
            <summary>
            Gets the specified Manufacturer Token
            </summary>
            <param name="tokenID">The token to get</param>
            <param name="tokenDataLength">The length of the data</param>
            <param name="tokenData">The token data</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetRandomNumber(Itron.Metering.Zigbee.EmberStatus@,System.UInt16@)">
            <summary>
            Gets a random number from the NCP
            </summary>
            <param name="status">The status of the command</param>
            <param name="value">The random number</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetTimer(System.Byte,System.UInt16,Itron.Metering.Zigbee.EmberEventUnits,System.Boolean,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets a timer on the NCP
            </summary>
            <param name="timerID">The ID of the timer to set</param>
            <param name="time">The delay before the call back will be generated</param>
            <param name="units">The units for time</param>
            <param name="repeat">Whether or not the timer will repeat</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetTimer(System.Byte,System.UInt16@,Itron.Metering.Zigbee.EmberEventUnits@,System.Boolean)">
            <summary>
            Gets the specified timer
            </summary>
            <param name="timerID">The ID of the timer to get</param>
            <param name="time">The amount of time between callbacks</param>
            <param name="units">The units for time</param>
            <param name="repeat">Whether or not this timer repeats</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.DebugWrite(System.Boolean,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Writes a debug message
            </summary>
            <param name="binaryMessage">Whether or not the message should be interpreted as binary data</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The message</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.ReadAndClearCounters(System.UInt16[]@)">
            <summary>
            Retrieves and clears the Ember Counters
            </summary>
            <param name="values">The counter values prior to being reset</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.DelayTest(System.UInt16)">
            <summary>
            Tests that the UART flow control is working correctly
            </summary>
            <param name="delay">Amount of time that data will not be read from the host</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetLibraryStatus(System.Byte,System.Byte@)">
            <summary>
            Retrieves the status of the passed library ID to determine if it is compiled into the stack
            </summary>
            <param name="libraryID">The ID of the library to check</param>
            <param name="status">The status of the library</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetManufacturerCode(System.UInt16)">
            <summary>
            Sets the Manufacturer Code of the node
            </summary>
            <param name="code">The code to set</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetPowerDescriptor(System.UInt16)">
            <summary>
            Sets the power descriptor
            </summary>
            <param name="descriptor">The power descriptor to set</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.StartScan(Itron.Metering.Zigbee.EZSPScanType,Itron.Metering.Zigbee.ZigBeeChannels,Itron.Metering.Zigbee.EZSPScanDuration,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Scans for ZigBee Networks
            </summary>
            <param name="scanType">The type of network scan to perform</param>
            <param name="channels">The channels to scan</param>
            <param name="duration">The duration of the scan</param>
            <param name="status">The result of the start scan command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.StopScan(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Stops the device from scanning
            </summary>
            <returns>The result of the command</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.NetworkInit(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Resumes network operation after a reboot and maintains it's original type
            </summary>
            <returns>The result of Network Init. NotJoined if the node is not part of a network</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.NetworkState(Itron.Metering.Zigbee.EmberNetworkStatus@)">
            <summary>
            Gets the Current Network State from the device
            </summary>
            <returns>The network state.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.FormNetwork(Itron.Metering.Zigbee.EmberNetworkParameters,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Forms a network by becoming the coordinator
            </summary>
            <param name="parameters">The specification for the new network</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.JoinNetwork(Itron.Metering.Zigbee.EmberNodeType,Itron.Metering.Zigbee.EmberNetworkParameters,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Joins the specified network
            </summary>
            <param name="nodeType">The node type</param>
            <param name="parameters">The specification for the new network</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.LeaveNetwork(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Leaves the current network
            </summary>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.FindAndRejoinNetwork(System.Boolean,Itron.Metering.Zigbee.ZigBeeChannels,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Scans for and rejoins the network
            </summary>
            <param name="haveCurrentNetworkKey">Whether or not we already have the current Network Key</param>
            <param name="channels">The channel mask to use when scanning for networks</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.PermitJoining(System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Allows other nodes to join the network for a period of time
            </summary>
            <param name="duration">The number of seconds to allow joining. 0xFF permanently enables joining</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetEUI64(System.UInt64@)">
            <summary>
            Gets the EUI64 ID of the local node
            </summary>
            <returns>The EUI64</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetNodeID(System.UInt16@)">
            <summary>
            Gets the Node ID of the local node
            </summary>
            <returns>The EUI64</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetNetworkParameters(Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberNodeType@,Itron.Metering.Zigbee.EmberNetworkParameters@)">
            <summary>
            Gets the current network parameters
            </summary>
            <param name="status">The status of the network</param>
            <param name="nodeType">The node type</param>
            <param name="networkParameters">The network parameters</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetParentChildParameters(System.Byte@,System.UInt64@,System.UInt16@)">
            <summary>
            Gets the parent child parameters
            </summary>
            <param name="childCount">The number of children the current node has</param>
            <param name="parentEUI">The EUI of the parent</param>
            <param name="parentNodeID">The parent's Node ID</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetChildData(System.Byte,Itron.Metering.Zigbee.EmberStatus@,System.UInt16@,System.UInt64@,Itron.Metering.Zigbee.EmberNodeType@)">
            <summary>
            Gets the information about a child node
            </summary>
            <param name="index">The index of the child to get</param>
            <param name="status">The status of the child</param>
            <param name="childNodeID">The Node ID of the child</param>
            <param name="childEUI">The EUI of the child</param>
            <param name="childNodeType">The child's node type</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetNeighbor(System.Byte,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberNeighborTableEntry@)">
            <summary>
            Gets the specified neighbor
            </summary>
            <param name="index">The index of the neighbor to get</param>
            <param name="status">The status of the request</param>
            <param name="neighborTableEntry">The Neighbor Table entry for the specified neighbor</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.NeighborCount(System.Byte@)">
            <summary>
            Gets the number of neighbors for the current node
            </summary>
            <param name="count">The number of neighbors</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetRouteTableEntry(System.Byte,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberRouteTableEntry@)">
            <summary>
            Gets the requested route table entry
            </summary>
            <param name="index">The index of the route table entry</param>
            <param name="status">The status of the request</param>
            <param name="routeTableEntry">The route table entry</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetRadioPower(System.SByte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the radio power to the specified value
            </summary>
            <param name="power">The desired power</param>
            <param name="status">The result of the request</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetRadioChannel(System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the channel of the radio
            </summary>
            <param name="channel">The channel that the radio is operating on</param>
            <param name="status">The result of the request</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.ClearBindingTable(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Clears the binding table of all entries
            </summary>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetBinding(System.Byte,Itron.Metering.Zigbee.EmberBindingTableEntry,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the binding at the specified index.
            </summary>
            <param name="index">The index of the binding to set</param>
            <param name="entry">The binding entry</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetBinding(System.Byte,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberBindingTableEntry@)">
            <summary>
            Gets the specified binding table entry
            </summary>
            <param name="index">The index of the binding to get</param>
            <param name="status">The status of the command</param>
            <param name="entry">The binding entry requested</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.DeleteBinding(System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Deletes the binding at the specified index.
            </summary>
            <param name="index">The index of the binding to delete</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.BindingIsActive(System.Byte,System.Boolean@)">
            <summary>
            Gets whether or not the binding at the specified index is currently active
            </summary>
            <param name="index">The index of the binding to check</param>
            <param name="isActive">Whether or not the binding is active</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetBindingRemoteNodeID(System.Byte,System.UInt16)">
            <summary>
            Gets the Node ID for the remote device associated with the specified binding
            </summary>
            <param name="index">The index of the binding</param>
            <param name="nodeID">The remote Node ID</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetBindingRemoteID(System.Byte,System.UInt16)">
            <summary>
            Sets the Node ID for the specified binding
            </summary>
            <param name="index">The index of the binding to set</param>
            <param name="nodeID">The Node ID of the remote device</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.MaximumPayloadLength(System.Byte@)">
            <summary>
            Returns the maximum size of the payload
            </summary>
            <param name="length">The maximum APS payload length</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendUnicast(Itron.Metering.Zigbee.EmberOutgoingMessageType,System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@,System.Byte@)">
            <summary>
            Sends a unicast message 
            </summary>
            <param name="type">The outgoing message type. Must be Direct, via Address Table, or via Binding</param>
            <param name="indexOrDestination">Depending on the type this is the Node ID of the destination or the index into the Address/Binding table</param>
            <param name="apsFrame">The APS frame to be added to the message</param>
            <param name="messageTag">A host chosen value used to keep track of the message</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message</param>
            <param name="status">The status of the command</param>
            <param name="sequence">The sequence number that will be used to transmit the message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendBroadcast(System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,System.Byte,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@,System.Byte@)">
            <summary>
            Send a broadcast message
            </summary>
            <param name="destination">The destination where the broadcast should be sent</param>
            <param name="apsFrame">The APS frame for the message</param>
            <param name="radius">The number of hops from the sender the message should be sent</param>
            <param name="messageTag">A host chosen value used to keep track of the message</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message</param>
            <param name="status">The status of the command</param>
            <param name="sequence">The sequence number that will be used to transmit the message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendMulticast(Itron.Metering.Zigbee.EmberApsFrame,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@,System.Byte@)">
            <summary>
            Send a multicast message
            </summary>
            <param name="apsFrame">The APS frame for the message</param>
            <param name="hops">The number of hops from the sender the message should be sent</param>
            <param name="nonMemberRadius">The number of hops the message will be forwarded for devices that are not a member of the group</param>
            <param name="messageTag">A host chosen value used to keep track of the message</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message.</param>
            <param name="status">The status of the command</param>
            <param name="sequence">The sequence number used to transmit the messsage.</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendReply(System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Send a reply message to the specified node
            </summary>
            <param name="senderNodeID">The Node ID of the device to reply to</param>
            <param name="apsFrame">The APS frame for the reply</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendManyToOneRouteRequest(Itron.Metering.Zigbee.EmberConcentratorType,System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sends a Many to One Route Request
            </summary>
            <param name="concentratorType">The type of concentrator</param>
            <param name="radius">The number of hops the route request will be relayed</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.PollForData(System.UInt16,Itron.Metering.Zigbee.EmberEventUnits,System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Polls for data on the specified interval
            </summary>
            <param name="interval">The amount of time between polls.</param>
            <param name="units">The unit type of interval</param>
            <param name="failureLimit">The number of poll failures tolerated before the a pollCompleteHandler callback is generated</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetSourceRoute(System.UInt16,System.Byte,System.UInt16[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets a source route for the next outgoing message
            </summary>
            <param name="destination">The destination of the source route</param>
            <param name="relayCount">The number of relays in the list</param>
            <param name="relayList">The source route</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.AddressTableEntryIsActive(System.Byte,System.Boolean@)">
            <summary>
            Indicates whether any messages are currently being sent using an address table entry
            </summary>
            <param name="index">The index of the address table entry</param>
            <param name="isActive">Whether or not the address entry is in use</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetAddressTableRemoteEUI(System.Byte,System.UInt64,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the EUI of an address table entry and update the Node ID if it is known.
            </summary>
            <param name="index">The index of the address table to set</param>
            <param name="eui">The EUI to set</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetAddressTableRemoteNodeID(System.Byte,System.UInt16)">
            <summary>
            Sets the Node ID of an address table entry
            </summary>
            <param name="index">The index of the address table entry to set</param>
            <param name="nodeID">The Node ID to set</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetAddressTableRemoteEUI(System.Byte,System.UInt64@)">
            <summary>
            Gets the EUI of an address table entry
            </summary>
            <param name="index">The index of the address table entry</param>
            <param name="eui">The EUI associated with this entry</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetAddressTableRemoteNodeID(System.Byte,System.UInt16@)">
            <summary>
            Gets the Node ID of an Address Table Entry
            </summary>
            <param name="index">The index of the address table entry</param>
            <param name="nodeID">The Node ID of the entry</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetExtendedTimeout(System.UInt64,System.Boolean)">
            <summary>
            Tells the stack whether or not to increase the interval between retransmission of a retried unicast message
            </summary>
            <param name="remoteEUI">The EUI of the node to set</param>
            <param name="extendedTimeout">Whether or not to extend the timeout</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetExtendedTimeout(System.UInt64,System.Boolean@)">
            <summary>
            Gets whether or not the device is set to use extended timeouts
            </summary>
            <param name="remoteEUI">The EUI of the device to check</param>
            <param name="extendedTimeout">Whether or not the device is using extended timeouts</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.ReplaceAddressTableEntry(System.Byte,System.UInt64,System.UInt16,System.Boolean,Itron.Metering.Zigbee.EmberStatus@,System.UInt64@,System.UInt16@,System.Boolean@)">
            <summary>
            Replaces and address table entry
            </summary>
            <param name="index">The index of the entry to replace</param>
            <param name="newEUI">The EUI of the new entry</param>
            <param name="newNodeID">The node ID of the new entry</param>
            <param name="newExtendedTimeout">Whether or not the device should use an extended timeout</param>
            <param name="status">The status of the command</param>
            <param name="oldEUI">The previous entry EUI</param>
            <param name="oldNodeID">The previous entry Node ID</param>
            <param name="oldExtendedTimeout">Whether or not the previous entry was using extended timeouts</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.LookupNodeIDByEUI(System.UInt64,System.UInt16@)">
            <summary>
            Looks up the Node ID for the specified EUI
            </summary>
            <param name="eui">The EUI to look up</param>
            <param name="nodeID">The Node ID of the device</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.LookupEUIByNodeID(System.UInt16,Itron.Metering.Zigbee.EmberStatus@,System.UInt64@)">
            <summary>
            Looks up the EUI for the specified Node ID
            </summary>
            <param name="nodeID">The Node ID of the device to lookup</param>
            <param name="status">The status of the command</param>
            <param name="eui">The EUI of the device</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetMulticastTableEntry(System.Byte,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberMulticastTableEntry@)">
            <summary>
            Gets an entry from the Multicast Table
            </summary>
            <param name="index">The index of the entry to get</param>
            <param name="status">The status of the command</param>
            <param name="entry">The multicast table entry</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetMulticastTableEntry(System.Byte,Itron.Metering.Zigbee.EmberMulticastTableEntry,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the multicast table entry
            </summary>
            <param name="index">The index of the multicast table to set</param>
            <param name="entry">The Multicast Table entry</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendRawMessage(System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Transmits the given message without any modification
            </summary>
            <param name="messageLength">The length of the message to send</param>
            <param name="messageContents">The contents of the message</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetInitialSecurityState(Itron.Metering.Zigbee.EmberInitialSecurityState,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the security state that will be used by the device when it forms or joins a network
            </summary>
            <param name="state">The initial security state</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetCurrentSecurityState(Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberCurrentSecurityState@)">
            <summary>
            Gets the current security state of the device
            </summary>
            <param name="status">The status of the command</param>
            <param name="state">The current security state</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetKey(Itron.Metering.Zigbee.EmberKeyType,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberKeyStruct@)">
            <summary>
            Gets a security key of the specified type 
            </summary>
            <param name="keyType">The type of the key to get.</param>
            <param name="status">The status of the command</param>
            <param name="key">The structure containing the key</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetKeyTableEntry(System.Byte,Itron.Metering.Zigbee.EmberStatus@,Itron.Metering.Zigbee.EmberKeyStruct@)">
            <summary>
            Gets the key table entry at the specified index.
            </summary>
            <param name="index">The index of the key to get</param>
            <param name="status">The status of the command</param>
            <param name="key">The key that was requested</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetKeyTableEntry(System.Byte,System.UInt64,System.Boolean,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the specified key value
            </summary>
            <param name="index">The index of the key to set</param>
            <param name="eui">The EUI of the partner device</param>
            <param name="isLinkKey">Whether or not the specified key is a link key</param>
            <param name="key">The key</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.FindKeyTableEntry(System.UInt64,System.Boolean,System.Byte@)">
            <summary>
            Finds the Key Table index for the entry that matches the search criteria
            </summary>
            <param name="eui">The EUI of the device to search for</param>
            <param name="findLinkKey">Whether to search for a link key entry or master key</param>
            <param name="index">The index that contains the key</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.AddOrUpdateKeyTableEntry(System.UInt64,System.Boolean,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Adds a new key entry or updates an existing key entry
            </summary>
            <param name="eui">The EUI of partner device to add/replace</param>
            <param name="isLinkKey">Whether or not the key is a link key or a master key</param>
            <param name="key">The new key</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.EraseKeyTableEntry(System.Byte,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Erases the Key Table entry at the specified location
            </summary>
            <param name="index">The index of the key table entry to erase</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.RequestLinkKey(System.UInt64,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Requests a link key from the Trust Center with another device on the network
            </summary>
            <param name="eui">The EUI of the partner device</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.BroadcastNextNetworkKey(System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Broadcasts a new encryption key but does not tell the nodes in the network to start using it.
            </summary>
            <param name="key">The new network key to use. If the key is set to all zeros then a new key will be randomly generated</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.BroadcastNetworkKeySwitch(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Broadcasts a switch key message to tell all nodes to change to the previously sent network key
            </summary>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.BecomeTrustCenter(System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Causes a coordinator to become the Trust Center when operating on a network that is not using one and sends out an
            updated network key to all devices to indicate a transition of the network to use a Trust Center
            </summary>
            <param name="newNetworkKey">The new network key to use</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.AesMmoHash(System.Byte[],System.Boolean,System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@,System.Byte[]@)">
            <summary>
            Processes the data and updates the hash context based on it.
            </summary>
            <param name="context">The hash context to update</param>
            <param name="finalize">Whether or not the final hash value should be calculated</param>
            <param name="length">The length of the data to hash</param>
            <param name="data">The data to hash</param>
            <param name="status">The result of the operation</param>
            <param name="returnContext">The updated hash context</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.RemoveDevice(System.UInt16,System.UInt64,System.UInt64,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sends an APS remove device to tell a device to remove itself from the network
            </summary>
            <param name="destinationShortAddress">The node ID of the device that will receive the message</param>
            <param name="destinationLongAddress">The long address of the device that will received the message</param>
            <param name="targetLongAddress">The long address of the device to be removed</param>
            <param name="status">The status of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GenerateCBKEKeys(Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Generates the ECC Key Pair and stores the private key when complete
            </summary>
            <param name="status">The status of the operation</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.CalculateSmacs(System.Boolean,System.Byte[],System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Calculates the SMAC verification keys for the initiator and responder roles of CBKE
            </summary>
            <param name="isInitiator">The role of this device in the key establishment process</param>
            <param name="partnerCertificate">48  byte certificate</param>
            <param name="partnerPublicKey">22 byte public key</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.ClearTemporaryDataMaybeStoreLinkKey(System.Boolean,Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Clears the temporary data used for CBKE and key establishment and possibly stores the link key
            </summary>
            <param name="storeLinkKey">Whether or not to store the link key</param>
            <param name="status">The result of the operation</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetCertificate(Itron.Metering.Zigbee.EmberStatus@,System.Byte[]@)">
            <summary>
            Retrieves the installed certificate
            </summary>
            <param name="status">The status of the command</param>
            <param name="localCert">48 byte certificate</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.DsaSign(System.Byte,System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            DSA signs a message
            </summary>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The message contents</param>
            <param name="status">The result of the operation</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.DsaVerify(System.Byte[],System.Byte[],System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Verify the signature of the associated message digest was signed by the private key of the certificate
            </summary>
            <param name="digest">16 byte digest of a message</param>
            <param name="signerCertificate">48 byte certificate of the signer</param>
            <param name="receivedSignature">42 byte signature of the signed data</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SetPreinstalledCBKEData(System.Byte[],System.Byte[],System.Byte[],Itron.Metering.Zigbee.EmberStatus@)">
            <summary>
            Sets the device's CA public key, local certificate and static private key
            </summary>
            <param name="certificateAuthorityPublicKey">22 byte public key for the Certificate Authority</param>
            <param name="certificate">48 byte certificate</param>
            <param name="privateKey">21 byte Private key for the node</param>
            <param name="status">The result of the command</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPProtocol.IsConnected">
            <summary>
            Gets whether or not the radio is currently connected
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPProtocol.ActiveScanResults">
            <summary>
            Gets the results for the active scan
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPProtocol.EnergyScanResults">
            <summary>
            Gets the results for the energy scan
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendCommand(Itron.Metering.Zigbee.EZSPFrameIDs,System.Byte[],System.Byte[]@)">
            <summary>
            Sends the specified command and waits for the response
            </summary>
            <param name="frameID">The Frame ID of the command to send</param>
            <param name="parameterData">The parameter data for the command</param>
            <param name="responseData">The response received by the command</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.WaitForResponse(Itron.Metering.Zigbee.EZSPFrameIDs,System.UInt32)">
            <summary>
            Waits for a response for the specified frame
            </summary>
            <param name="frameID">The frame ID for the response to look for</param>
            <param name="timeout">The number of milliseconds to wait before timing out</param>
            <returns>Null if no response was received or the response frame</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.m_ASH_FrameReceived(System.Object,System.EventArgs)">
            <summary>
            Handles the frame received event from the ASH Layer
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendFrame(Itron.Metering.Zigbee.EZSPCommandFrame)">
            <summary>
            Sends the specified frame
            </summary>
            <param name="frame">The frame to send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.HandleCallbacks">
            <summary>
            Handles any asynchronous callbacks that have been received
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.HandleIncomingMessageFragment(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles an incoming message fragment
            </summary>
            <param name="newMessage">The message fragment</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.FragmentWindowTimerCallback(System.Object)">
            <summary>
            Time Callback for the Fragment timeout
            </summary>
            <param name="state">The state of the timer</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.ClearFragmentInformation">
            <summary>
            Clears any remaining fragmentation information
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.SendFragmentReply">
            <summary>
            Send the fragment reply
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.GetCurrentWindowBitfield">
            <summary>
            Gets the bitfield for the current Window Fragment
            </summary>
            <returns>The Window Bitfield</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnDsaVerified(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the DSA Verified event
            </summary>
            <param name="status">The status of the DSA Verify</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnDsaSigned(Itron.Metering.Zigbee.EmberStatus,System.Byte,System.Byte[])">
            <summary>
            Raises the DSA Signed event
            </summary>
            <param name="status">The status of the DSA Sign</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The message contents</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnSmacsCalculated(Itron.Metering.Zigbee.EmberStatus,System.Byte[],System.Byte[])">
            <summary>
            Raises the SmacsCalculated event
            </summary>
            <param name="status">The status of the key generation</param>
            <param name="initiatorSmac">The initiator's SMAC</param>
            <param name="responderSmac">The responder's SMAC</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnCBKEKeyGenerated(Itron.Metering.Zigbee.EmberStatus,System.Byte[])">
            <summary>
            Raises the CBKE key generated event
            </summary>
            <param name="status">The status of the key generation</param>
            <param name="publicKey">The generate public key</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnTrustCenterJoined(System.UInt16,System.UInt64,Itron.Metering.Zigbee.EmberDeviceUpdate,Itron.Metering.Zigbee.EmberJoinDecision,System.UInt16)">
            <summary>
            Raises the Trust Center Joined event
            </summary>
            <param name="newNodeID">The Node ID of the new device</param>
            <param name="newEUI">The EUI of the new device</param>
            <param name="status">The device status</param>
            <param name="policyDecision">The policy decision for the device join</param>
            <param name="parentNodeID">The Parent Node ID for the device</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnZigBeeKeyEstablished(System.UInt64,Itron.Metering.Zigbee.EmberKeyStatus)">
            <summary>
            Raises the ZigBee Key Established event
            </summary>
            <param name="eui">The partner EUI</param>
            <param name="status">The status of the key establishment</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnNetworkKeySwitched(System.Byte)">
            <summary>
            Raises the network key switched event
            </summary>
            <param name="sequenceNumber">The sequence number of the new network key</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnRawMessageSent(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the Raw Message Sent event
            </summary>
            <param name="emberStatus">The status of the send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnMacFilterMatchMessageReceived(System.Byte,Itron.Metering.Zigbee.EmberMacPassthroughType,System.Byte,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Raises the MAC Passthrough Filter Match message received
            </summary>
            <param name="filterIndexMatch">The index of the matched filter</param>
            <param name="messageType">The message type</param>
            <param name="lastHopLqi">The last hop LQI</param>
            <param name="lastHopRssi">The last hop RSSI</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnMacPassthroughMessageReceived(Itron.Metering.Zigbee.EmberMacPassthroughType,System.Byte,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Raises the MAC passthrough message received event
            </summary>
            <param name="messageType">The message type</param>
            <param name="lastHopLqi">The LQI of the last hop</param>
            <param name="lastHopRssi">The RSSI of the last hop</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnIDConflictDetected(System.UInt16)">
            <summary>
            Raises the ID Conflict Detected event
            </summary>
            <param name="nodeID">The node ID that is conflicting.</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnRoutErrorOccurred(Itron.Metering.Zigbee.EmberStatus,System.UInt16)">
            <summary>
            Raises the Route Error Occurred event
            </summary>
            <param name="status">The error status</param>
            <param name="target">The target node ID</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnManyToOneRouteAvailable(System.UInt16,System.UInt64,System.Byte)">
            <summary>
            Raises the Many To One Route Available event
            </summary>
            <param name="sourceNodeID">The node ID of the concentrator</param>
            <param name="sourceEUI">The EUI of the concentrator</param>
            <param name="cost">The path cost to the concentrator</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnRouteRecordReceived(System.UInt16,System.UInt64,System.Byte,System.Byte,System.Byte,System.UInt16[])">
            <summary>
            Raises the Route Record Received event
            </summary>
            <param name="sourceNodeID">The Node ID of the source of the route record</param>
            <param name="sourceEUI">The EUI of the source of the route record</param>
            <param name="lastHopLqi">The last hop LQI of the message</param>
            <param name="lastHopRssi">The last hop RSSI of the message</param>
            <param name="relayCount">The number of relay</param>
            <param name="relayList">The list of Node IDs for the route</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnMessageReceived(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Raises the Message Received event
            </summary>
            <param name="newMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnSenderEUIReceived(System.UInt64)">
            <summary>
            Raises the SenderEUIReceived event
            </summary>
            <param name="eui">The EUI received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnPollReceived(System.UInt16)">
            <summary>
            Raises the PollReceived event
            </summary>
            <param name="nodeID">The node ID of the child requesting data</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnPollComplete(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the Poll Received event
            </summary>
            <param name="emberStatus">The status of the poll</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnMessageSent(Itron.Metering.Zigbee.EmberOutgoingMessageType,System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,Itron.Metering.Zigbee.EmberStatus,System.Byte,System.Byte[])">
            <summary>
            Raises the message sent event
            </summary>
            <param name="messageType">The message type</param>
            <param name="indexOrDestination">The index or destination node ID of the message</param>
            <param name="apsFrame">The APS frame for the message</param>
            <param name="messageTag">The message tag</param>
            <param name="status">Whether or not an ack has been received from the destination</param>
            <param name="messageLength">The length of the message contents</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnBindingSetRemotely(Itron.Metering.Zigbee.EmberBindingTableEntry,System.Byte,Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the Binding Set Remotely event
            </summary>
            <param name="newEntry">The new binding table entry</param>
            <param name="index">The index of the new binding</param>
            <param name="status">The status of the binding</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnBindingDeletedRemotely(System.Byte,Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the Binding Deleted Remotely event
            </summary>
            <param name="index">The index of the binding deleted</param>
            <param name="status">The status of the deletion</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnChildJoined(System.Byte,System.Boolean,System.UInt16,System.UInt64,Itron.Metering.Zigbee.EmberNodeType)">
            <summary>
            Raises the Child Joined event
            </summary>
            <param name="index">The index of the child</param>
            <param name="joining">Whether the child is joining or leaving</param>
            <param name="childID">The Node ID of the child</param>
            <param name="childEUI">The EUI of the child</param>
            <param name="childType">The device type of the child</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnStackStatusUpdated(Itron.Metering.Zigbee.EmberStatus)">
            <summary>
            Raises the Stack Status Updated Event
            </summary>
            <param name="stackStatus">The new stack status</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnTimerOccurred(System.Byte)">
            <summary>
            Raises the Timer Occurred event
            </summary>
            <param name="timerID">The timer ID that occurred</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPProtocol.OnScanCompleted">
            <summary>
            Raises the Scan Completed event
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPCommandFrame">
            <summary>
            EZSP Frame for commands issues to the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPCommandFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPCommandFrame.SequenceNumber">
            <summary>
            Gets or sets the Sequence Number of the frame
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPCommandFrame.FrameID">
            <summary>
            Gets or sets the frame ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPCommandFrame.ParameterData">
            <summary>
            Gets or sets the parameter data
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPCommandFrame.SleepMode">
            <summary>
            Gets or sets the sleep mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPCommandFrame.RawFrame">
            <summary>
            Gets or sets the raw frame data
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPResponseFrame">
            <summary>
            EZSP Frame for responses from the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPResponseFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.SequenceNumber">
            <summary>
            Gets or sets the Sequence Number of the frame
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.FrameID">
            <summary>
            Gets or sets the frame ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.ParameterData">
            <summary>
            Gets or sets the parameter data
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.HasOverflown">
            <summary>
            Gets or sets whether or not the NCP has run out of memory
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.ResponseTruncated">
            <summary>
            Gets or sets whether or not the response was truncated
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.CallbackPending">
            <summary>
            Gets or sets whether or not a callback is still pending
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.CallbackType">
            <summary>
            Gets or sets the callback type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPResponseFrame.RawFrame">
            <summary>
            Gets or sets the raw frame data
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.EZSPSerialCommunications">
            <summary>
            Serial Communications object for use with EZSP ZigBee dongles
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPSerialCommunications.DataReceived">
            <summary>
            Event raised when data has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.EZSPSerialCommunications.CancelFlagReceived">
            <summary>
            Event raised when a Cancel Flag is received
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.#ctor(Itron.Metering.Zigbee.EZSPLogger)">
            <summary>
            Constructor
            </summary>
            <param name="logger">The EZSP logger</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.Finalize">
            <summary>
            Deconstructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.Dispose">
            <summary>
            Disposes the object
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.OpenPort(System.String)">
            <summary>
            Opens the specified port
            </summary>
            <param name="portName">The name of the port to open</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.ClosePort">
            <summary>
            Closes the port.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.SendData(System.Byte[])">
            <summary>
            Writes the data to the port
            </summary>
            <param name="data">The data that should be written</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.ReadNextFrame">
            <summary>
            Reads the next frame from the data buffer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.ClearBuffer">
            <summary>
            Resets the Read Buffer
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.EZSPSerialCommunications.IsOpen">
            <summary>
            Gets whether or not the Port is currently open.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.OnDataReceived">
            <summary>
            Raises the Data Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.OnCancelFlagReceived">
            <summary>
            Raises the Cancel Flag Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.SetupSerialPort">
            <summary>
            Sets up the parameters for the Serial Port
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.DataReceivedEventHandler(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
            <summary>
            Handles the Data Received Event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.EZSPSerialCommunications.FindFlagByte">
            <summary>
            Finds the location of the Flag Byte in the Valid data
            </summary>
            <returns>-1 if the Flag Byte was not found. The index of the flag byte otherwise.</returns>
        </member>
        <member name="T:Itron.Metering.Zigbee.IncomingMessage">
            <summary>
            Incoming Message object
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.IncomingMessage.#ctor(Itron.Metering.Zigbee.EmberIncomingMessageType,Itron.Metering.Zigbee.EmberApsFrame,System.Byte,System.Byte,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Constructor
            </summary>
            <param name="messageType">The message type</param>
            <param name="apsFrame">The APS frame for the message</param>
            <param name="lastHopLqi">The last hop LQI</param>
            <param name="lastHopRssi">The last hop RSSI</param>
            <param name="senderNodeID">The node ID of the sender</param>
            <param name="bindingIndex">The index of the sender in the binding table</param>
            <param name="addressIndex">The index of the sender in the address table</param>
            <param name="messageLength">The length of the message</param>
            <param name="messageContents">The contents of the message</param>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.MessageType">
            <summary>
            Gets the message type
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.APSFrame">
            <summary>
            Gets the APS frame for the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.LastHopLqi">
            <summary>
            Gets the Last Hop LQI of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.LastHopRssi">
            <summary>
            Gets the last hop RSSI of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.SenderNodeID">
            <summary>
            Gets the Node ID of the sender
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.BindingIndex">
            <summary>
            Gets the index in the binding table of the sender
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.AddressIndex">
            <summary>
            Gets the index in the address table of the sender
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.MessageLength">
            <summary>
            Gets the length of the message in bytes
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IncomingMessage.MessageContents">
            <summary>
            Gets the contents of the message
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeProfileIDs">
            <summary>
            Profile IDs used by ZigBee
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeProfileIDs.ZigBeeDeviceObject">
            <summary>ZigBee Device Object (ZDO)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeProfileIDs.SmartEnergy">
            <summary>Smart Energy Profile</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeProfileIDs.ItronPrivateProfile">
            <summary>Itron Private Profile</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZDOClusters">
            <summary>
            The Clusters available to the ZDO Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NetworkAddressRequest">
            <summary>Network Address Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NetworkAddressResponse">
            <summary>Network Address Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.IEEEAddressRequest">
            <summary>IEEE Address Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.IEEEAddressResponse">
            <summary>IEEE Address Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NodeDescriptorRequest">
            <summary>Node Descriptor Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NodeDescriptorResponse">
            <summary>Node Descriptor Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.PowerDescriptorRequest">
            <summary>Power Descriptor Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.PowerDescriptorResponse">
            <summary>Power Descriptor Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.SimpleDescriptorRequest">
            <summary>Simple Descriptor Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.SimpleDescriptorResponse">
            <summary>Simple Descriptor Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.ActiveEndpointsRequest">
            <summary>Active EndpointsRequest</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.ActiveEndpointsResponse">
            <summary>Active Endpoints Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.MatchDescriptorsRequest">
            <summary>Match Descriptors Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.MatchDescriptorsResponse">
            <summary>Match Descriptors Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.DiscoveryCacheRequest">
            <summary>Discovery Cache Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.DiscoveryCacheResponse">
            <summary>Discovery Cache Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.EndDeviceAnnounce">
            <summary>End Device Announce</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.EndDeviceAnnounceResponse">
            <summary>End Device Announce Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.SystemServerDiscoveryRequest">
            <summary>System Server Discovery Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.SystemServerDiscoveryResponse">
            <summary>System Server Discover Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.FindNodeCacheRequest">
            <summary>Find Node Cache Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.FindNodeCacheResponse">
            <summary>Find Node Cache Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.EndDeviceBindRequest">
            <summary>End Device Bind Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.EndDeviceBindResponse">
            <summary>End Device Bind Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.BindRequest">
            <summary>Bind Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.BindResponse">
            <summary>Bind Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.UnbindRequest">
            <summary>Unbind Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.UnbindResponse">
            <summary>Unbind Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.LqiTableRequest">
            <summary>LQI Table Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.LqiTableResponse">
            <summary>LQI Table Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.RoutingTableRequest">
            <summary>Routing Table Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.RoutingTableResponse">
            <summary>Routing Table Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.BindingTableRequest">
            <summary>Binding Table Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.BindingTableResponse">
            <summary>Binding Table Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.LeaveRequest">
            <summary>Leave Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.LeaveResponse">
            <summary>Leave Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.PermitJoiningRequest">
            <summary>Permit Joining Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.PermitJoiningResponse">
            <summary>Permit Joining Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NetworkUpdateRequest">
            <summary>Network Update Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOClusters.NetworkUpdateResponse">
            <summary>Network Update Response</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZDOStatus">
            <summary>
            ZDO Statuses
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.Success">
            <summary>Success</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.InvalidRequestType">
            <summary>Invalid Request Type</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.DeviceNotFound">
            <summary>Device Not Found</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.InvalidEndpoint">
            <summary>Invalid Endpoint</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NotActive">
            <summary>Not Active</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NotSupported">
            <summary>Not Supported</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.Timeout">
            <summary>Timeout</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NoMatch">
            <summary>No Match</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NoEntry">
            <summary>No Entry</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NoDescriptor">
            <summary>No Descriptor</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.InsufficientSpace">
            <summary>Insufficient Space</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NotPermitted">
            <summary>Not Permitted</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.TableFull">
            <summary>Table Full</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZDOStatus.NotAuthorized">
            <summary>Not Authorized</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLIdentifyAttribute">
            <summary>
            Enum of attribute from Identify cluster
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLIdentifyAttribute.IdentifyTime">
            <summary>
            The identify time from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLAttributes">
            <summary>
            The list of ZCL Attributes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.ZCLVersion">
            <summary>The ZCL Version used</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.ApplicationVersion">
            <summary>The Application Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.StackVersion">
            <summary>The Stack Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.HWVersion">
            <summary>The HW Version</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.ManufacturerName">
            <summary>The Manufacturer Name</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.ModelIdentifier">
            <summary>The Model Identifier</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.DateCode">
            <summary>The Date Code</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.PowerSource">
            <summary>The Power Source used</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.LocationDescription">
            <summary>The location description</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.PhysicalEnvironment">
            <summary>The Physical Environment description</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.DeviceEnabled">
            <summary>Whether or not the device is enabled</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLAttributes.AlarmMask">
            <summary>The Alarm Mask</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLOTAAttributes">
            <summary>
            The list of ZCL OTA Attributes
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLOTAAttributes.ImageUpgradeStatus">
            <summary>The status upgrade</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLTimeAttributes">
            <summary>
            Attribute ID's used for retrieving the time values
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.Time">
            <summary>Retrieve the current time in UTC</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.TimeStatus">
            <summary>Gets status information about the time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.TimeZone">
            <summary>Gets the Time Zone offset</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.DstStart">
            <summary>Gets the start time of DST</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.DstEnd">
            <summary>Gets the end time of DST</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.DstShift">
            <summary>Gets the length of the adjustment for DST</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.StandardTime">
            <summary>Gets the local standard time (not adjusted for DST)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeAttributes.LocalTime">
            <summary>Gets the local time</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLTimeStatus">
            <summary>
            Time Status bitfield
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeStatus.None">
            <summary>No Flags are set</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeStatus.MasterClock">
            <summary>Whether or not the clock corresponds to the time standard</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeStatus.Synchronized">
            <summary>Whether or not the time is synchronized to the network</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLTimeStatus.MasterZoneDST">
            <summary>Whether or not the Time Zone and DST fields are set</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLPowerSource">
            <summary>
            The Power Source Attribute values
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.SinglePhase">
            <summary>Mains (Single Phase)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.PolyPhase">
            <summary>Mains (3 Phase)</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.Battery">
            <summary>Battery</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.DCSource">
            <summary>DC Source</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.EmergencyMainsWithConstantPower">
            <summary>Emergency Mains constantly powered</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLPowerSource.EmergencyMainsWithTransferSwitch">
            <summary>Emergency mains and transfer switch</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZCLDataType">
            <summary>
            ZCL Data Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Null">
            <summary>No Value</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data8">
            <summary>8-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data16">
            <summary>16-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data24">
            <summary>24-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data32">
            <summary>32-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data40">
            <summary>40-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data48">
            <summary>48-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data56">
            <summary>56-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Data64">
            <summary>64-bit Generic Data</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Boolean">
            <summary>Boolean</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap8">
            <summary>8-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap16">
            <summary>16-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap24">
            <summary>24-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap32">
            <summary>32-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap40">
            <summary>40-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap48">
            <summary>48-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap56">
            <summary>56-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bitmap64">
            <summary>64-bit Bitmap</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint8">
            <summary>8-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint16">
            <summary>16-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint24">
            <summary>24-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint32">
            <summary>31-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint40">
            <summary>40-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint48">
            <summary>48-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint56">
            <summary>56-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Uint64">
            <summary>64-bit Unsigned Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int8">
            <summary>8-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int16">
            <summary>16-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int24">
            <summary>24-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int32">
            <summary>32-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int40">
            <summary>40-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int48">
            <summary>48-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int56">
            <summary>56-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Int64">
            <summary>64-bit Signed Integer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Enum8">
            <summary>8-bit Enum</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Enum16">
            <summary>16-bit Enum</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Float16">
            <summary>16-bit Float</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Float32">
            <summary>32-bit Float</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Float64">
            <summary>64-bit Float</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.OctetString">
            <summary>Octet String</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.CharacterString">
            <summary>Character String</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.LongOctetString">
            <summary>2-byte octet string</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.LongCharacterString">
            <summary>2-byte character string</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Array">
            <summary>Array</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Structure">
            <summary>Structure</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Set">
            <summary>Set</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Bag">
            <summary>Bag</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.TimeOfDay">
            <summary>Time of day</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Date">
            <summary>Date</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.UTCTime">
            <summary>UTC Time</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.ClusterID">
            <summary>Cluster ID</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.AttributeID">
            <summary>Attribute ID</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.BACnetOID">
            <summary>BAC Net OID</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.IEEEAddress">
            <summary>IEEE Address</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.SecurityKey">
            <summary>Security Key</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZCLDataType.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.GeneralZCLCommandIDs">
            <summary>
            General ZCL Command ID's
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReadAttributes">
            <summary>Read Attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReadAttributesResponse">
            <summary>Read Attributes Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributes">
            <summary>Write Attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributesUndivided">
            <summary>Write Attributes Undivided</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributesResponse">
            <summary>Write Attributes Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributesNoResponse">
            <summary>Write Attributes No Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ConfigureReporting">
            <summary>Configure Reporting</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ConfigureReportingResponse">
            <summary>Configure Reporting Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReadReportingConfiguration">
            <summary>Read Reporting Configuration</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReadReportingConfigurationResponse">
            <summary>Read Reporting Configuration Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReportAttributes">
            <summary>Report Attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.DefaultResponse">
            <summary>Default Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.DiscoverAttributes">
            <summary>Discover Attributes</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.DiscoverAttributesResponse">
            <summary>Discover Attributes Response</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.ReadAttributesStructured">
            <summary>Read Attributes Structured</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributesStructured">
            <summary>Write Attributes Structured</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.GeneralZCLCommandIDs.WriteAttributesStructuredResponse">
            <summary>Write Attributes Structured Response</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ReportingDirection">
            <summary>
            The direction the data will be sent when using Attribute Reporting
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ReportingDirection.Send">
            <summary>The data will be sent</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ReportingDirection.Receive">
            <summary>The data will be received</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DefaultResponseEventHandler">
            <summary>
            Delegate for the Default Response Event Handler
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.IPPDataResponseEventHandler">
            <summary>
            Delegate for the IPP Data Response Event Handler
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ReadResponseEventHandler">
            <summary>
            Delegate for the Read Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.WriteResponseEventHandler">
            <summary>
            Delegate for the Write Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.IdentifyQueryResponseEventHandler">
            <summary>
            Delegate for the Write Response Event Handler
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
            
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeApplication">
            <summary>
            Base class for the ZigBee Application Layer
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ZigBeeApplication.DefaultResponseReceived">
            <summary>
            Event to fire when a Default Response is returned from a General ZCL Command.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ZigBeeApplication.IPPDataResponseReceived">
            <summary>
            Event to fire when a IPP Data Response is received as an incoming message.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ZigBeeApplication.ReadResponseReceived">
            <summary>
            Event to fire when a Read Response command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ZigBeeApplication.WriteResponseReceived">
            <summary>
            Event to fire when a Write Response command is received.
            </summary>
        </member>
        <member name="E:Itron.Metering.Zigbee.ZigBeeApplication.IdentifyQueryResponseReceived">
            <summary>
            Event to fire when a identify query Response command is received.
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.EZSP_PROTOCOL_VERSION">
            <summary>
            EZSP Protocol version expected
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.TRUST_CENTER_NODE_ID">
            <summary>
            The node ID used by the trust center (usually the meter)
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.UTC_REFERENCE_TIME">
            <summary>
            Reference time used for reading UTC Time objects
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.LOCAL_REFERENCE_TIME">
            <summary>
            Reference time used for reading Local Time objects
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.PRE_CONFIGURED_KEY">
            <summary>
            The pre-configured key data that should be used when rejoining the network
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentCommands">
            <summary>
            Key Establishment Commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentCommands.InitiateKeyEstablishment">
            <summary>Initiate Key Establishment</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentCommands.EphemeralDataRequest">
            <summary>Ephemeral data Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentCommands.ConfirmKeyDataRequest">
            <summary>Confirm Key Data Request</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentCommands.TerminateKeyEstablishment">
            <summary>Terminate Key Establishment</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState">
            <summary>
            The various states within the key establishment process
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.NotEstablished">
            <summary>Not Established</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.SentInitiateKeyEstablishment">
            <summary>Initiate Key Establishment message sent</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.ReceivedInitiateKeyEstablishment">
            <summary>Initiate Key Establishment message received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.SentEphemeralKey">
            <summary>Ephemeral Key sent</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.ReceivedEphemeralKey">
            <summary>Ephemeral Key received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.SentKeyConfirmation">
            <summary>Key Confirmation sent</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.ReceivedKeyConfirmation">
            <summary>Key Confirmation received</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState.Established">
            <summary>The Key has been established</summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors">
            <summary>
            Key Establishment Errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors.UnknownIssuer">
            <summary>Unknown Issuer</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors.BadKeyConfirm">
            <summary>Bad Key Confirmation</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors.BadMessage">
            <summary>Bad Message</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors.NoResources">
            <summary>No Resources</summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors.UnsupportedSuite">
            <summary>Unsupported Suite</summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.StartLogging(System.String,Itron.Metering.Zigbee.EZSPLogLevels)">
            <summary>
            Starts logging the EZSP communications
            </summary>
            <param name="logFileName">The path of the log file</param>
            <param name="loggedLevels">The levels to log</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.StopLogging">
            <summary>
            Stops logging the EZSP communications
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.RemoveDevice(System.UInt16,System.UInt64,System.UInt64)">
            <summary>
            Send a APS_CMD_REMOVE_DEVICE to specified router device. 
            </summary>
            <param name="destinationShortAddress"></param>
            <param name="destinationLongAddress"></param>
            <param name="childLongAddress"></param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SetPowerDescriptor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Set the ZigBee Node Power Descriptor for this device. 
            </summary>
            <param name="availablePowerSources"></param>
            <param name="currentPowerMode"></param>
            <param name="currentPowerSource"></param>
            <param name="currentPowerSourceLevel"></param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.Connect(System.String)">
            <summary>
            Connects to the radio through the specified COM port
            </summary>
            <param name="portName">The name of the COM port the radio is on</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.Disconnect">
            <summary>
            Disconnects from the radio
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ScanForDevices(Itron.Metering.Zigbee.ZigBeeChannels,Itron.Metering.Zigbee.EZSPScanDuration)">
            <summary>
            Scans the network for available devices
            </summary>
            <param name="channels">The channels to scan</param>
            <param name="duration">The duration of the scan</param>
            <returns>The list of devices found</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.Join(Itron.Metering.Zigbee.EmberNodeType,System.UInt64,System.Byte)">
            <summary>
            Joins the specified network
            </summary>
            <param name="nodeType">The type of device to join as</param>
            <param name="extendedPanID">The extended PAN ID of the network</param>
            <param name="channel">The channel the network is on</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.Rejoin(Itron.Metering.Zigbee.EmberNodeType,System.UInt64,System.Byte,System.Byte[])">
            <summary>
            Rejoins the specified network
            </summary>
            <param name="nodeType">The type of device to join as</param>
            <param name="extendedPanID">The extended PAN ID of the network</param>
            <param name="channel">The channel the network is on</param>
            <param name="networkKey">network key</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.LeaveNetwork">
            <summary>
            Leaves the currently joined network
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ReadAttributes(System.Boolean,System.UInt16,System.UInt16,System.Collections.Generic.List{System.UInt16})">
            <summary>
            Reads the specified attributes from the meter
            </summary>
            <param name="useSecurity">Whether or not the request should be made using link key security</param>
            <param name="profileID">The Profile ID of the attributes to read</param>
            <param name="clusterID">The Cluster ID of the attributes to read</param>
            <param name="attributes">The list of attributes to read</param>
            <returns>The responses for each attribute that was read.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetBasicClusterAttributesFromMeter(System.Boolean)">
            <summary>
            Gets the Basic Cluster Attributes, from the Trust Center -- meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetBasicClusterAttributesFromMeter(System.Boolean,Itron.Metering.Zigbee.ZCLAttributes)">
            <summary>
            Gets the Basic Cluster Attributes, from the Trust Center -- meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetIdentifyClusterAttributesFromMeter(System.Boolean)">
            <summary>
            Gets the Identify Cluster Attributes, from the Trust Center -- meter. Testing only.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetTime">
            <summary>
            Gets the Trust Center's device time
            </summary>
            <returns>The Trust Center's current device time</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetTime(System.Boolean,Itron.Metering.Zigbee.ZCLTimeAttributes)">
            <summary>
            Gets the Trust Center's device time with security option
            </summary>
            <returns>The Trust Center's current device time</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendLeaveRequest(System.Boolean,System.UInt16,System.UInt64)">
            <summary>
            Send a ZDO Leave Request to specified device
            </summary>
            <param name="useEncryption">Optionally Enable encryption for this command</param>
            <param name="remoteEUI">EUI64 of Device</param>
            <param name="destinationNodeID">Short address of destination</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.PrintKeyTable">
            <summary>
            Print the Link Key Table data
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.PrintAddressTable">
            <summary>
            Print the Address Table data
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.IsConnected">
            <summary>
            Gets whether or not the ZigBee Application is currently connected to the ZigBee Radio
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.IsJoined">
            <summary>
            Gets whether or not the ZigBee Application is currently joined to a ZigBee Network
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.InstallationCode">
            <summary>
            Gets the Installation Code that will be used to join the network
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.InstallationCodeString">
            <summary>
            Gets the Installation Code as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MACAddress">
            <summary>
            Gets the MAC Address for the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.NodeID">
            <summary>
            Gets the Node ID for the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.LastRetrievedUTCTime">
            <summary>
            Gets the last retrieved UTC Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.CurrentUTCTime">
            <summary>
            Gets the estimated current device UTC time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.LastRetrievedStandardTime">
            <summary>
            Gets the last retrieved Standard Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.CurrentStandardTime">
            <summary>
            Gets the estimated current device Standard time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.LastRetrievedLocalTime">
            <summary>
            Gets the last retrieved Local Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.CurrentLocalTime">
            <summary>
            Gets the estimated current device Local time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.DSTStart">
            <summary>
            Gets the DST start date and time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.DSTEnd">
            <summary>
            Gets the DST end  date and time
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.DSTShift">
            <summary>
            Gets the DST Shift in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.TimeZone">
            <summary>
            Gets the time zone offset in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.TimeStatus">
            <summary>
            Gets the Time Status information
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.TransmitPower">
            <summary>
            Gets or set the Transmit Power that will be used when Joining and Rejoining the device. The value is in dBm.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.ZCLManufacturerName">
            <summary>
            String representing ZCL Basic Cluster Attribute
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.ZCLModelIdentifier">
            <summary>
            String representing ZCL Basic Cluster Attribute
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.ZCLDateCode">
            <summary>
            String representing ZCL Basic Cluster Attribute
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterZCLVersion">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterApplicationVersion">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterStackVersion">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterHWVersion">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterManufacturerName">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterModelIdentifier">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterDateCode">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterPowerSource">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterLocationDescription">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterPhysicalEnvironment">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterDeviceEnabled">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.MeterAlarmMask">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.IdentifyTime">
            <summary>
            ZCL Basic Cluster Attribute (read from Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeApplication.OTADownLoadStatus">
            <summary>
            Gets/Sets the OTA Download status
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SetUpClusterLists">
            <summary>
            Sets up the list of Clusters that will be supported by this device
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ParseDataType(System.IO.BinaryReader,Itron.Metering.Zigbee.ZCLDataType)">
            <summary>
            Parses the specified data type from the Binary Reader
            </summary>
            <param name="dataReader">The Binary Reader containing the data to read</param>
            <param name="dataType">The data type to read</param>
            <returns>The parsed data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendUnicastMessage(System.UInt16,Itron.Metering.Zigbee.EmberApsFrame,System.Byte[])">
            <summary>
            Sends a Unicast Message to the specified Node
            </summary>
            <param name="destinationNodeID">The destination Node ID</param>
            <param name="apsFrame">The APS Frame that describes the message</param>
            <param name="message">The message contents</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleZDOMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles incoming ZDO message
            </summary>
            <param name="ReceivedMessage">The incoming message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleReceivedMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles the Received Messages
            </summary>
            <param name="receivedMessage">The message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleZCLMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles ZigBee Cluster Library Messages
            </summary>
            <param name="receivedMessage">The message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleGeneralZCLMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles general ZCL Command messages
            </summary>
            <param name="receivedMessage">The message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleItronPrivateProfileMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles incoming ZigBee C177 (IPP) Profile Messages
            </summary>
            <param name="receivedMessage">The incoming message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleReportedAttributes(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Report Attributes messages
            </summary>
            <param name="receivedMessage">The Report Attributes message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.RespondToReadAttributeRequest(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Responds to a Read Attribute Request
            </summary>
            <param name="receivedMessage">The Read Attribute Request</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GetAttributeResponse(System.UInt16,System.UInt16)">
            <summary>
            Gets the response value for the specified attribute
            </summary>
            <param name="clusterID">The cluster ID of the attributes to get</param>
            <param name="attribute">The attribute ID</param>
            <returns>The byte array containing the data to include in the response for the specified attribute</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendReadAttributeResponse(System.UInt16,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte[])">
            <summary>
            Sends the Read Attribute Response
            </summary>
            <param name="profileID">The Profile ID that the message is sent from</param>
            <param name="clusterID">The Cluster ID that the message is sent from</param>
            <param name="destination">The destination Node ID</param>
            <param name="endpoint">The destination endpoint</param>
            <param name="sequenceNumber">The sequence number used for the response</param>
            <param name="responseData">The response data for the Read Attribute</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendDefaultResponse(System.UInt16,System.UInt16,System.UInt16,System.Byte,Itron.Metering.Zigbee.ZCLStatus)">
            <summary>
            Sends the default response message with the specified status
            </summary>
            <param name="profileID">The Profile ID that the message is sent from</param>
            <param name="clusterID">The Cluster ID that the message is sent from</param>
            <param name="destination">The destination Node ID</param>
            <param name="endpoint">The destination endpoint</param>
            <param name="status">The status to send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.RequestBind(System.Byte,System.UInt16,System.UInt16,System.UInt64,System.Byte)">
            <summary>
            Sends the request to the specified Node to bind to a cluster
            </summary>
            <param name="localEndpoint">The local endpoint requesting the bind</param>
            <param name="clusterID">The Cluster ID to bind to</param>
            <param name="destinationNodeID">The Node ID of the destination used to send the message</param>
            <param name="remoteEUI">The EUI of the destination</param>
            <param name="remoteEndpoint">The endpoint to bind to on the destination</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.Bind(System.UInt16,System.UInt16)">
            <summary>
            Binds to the specified cluster on the specified device
            </summary>
            <param name="destination">The Node ID of the device to bind to</param>
            <param name="clusterID">The cluster ID to bind to</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.WaitForZDOMessage(System.Byte)">
            <summary>
            Waits for the ZDO Message with the specified sequence number
            </summary>
            <param name="zdoSequence">The ZDO sequence number to receive</param>
            <returns>The ZDO Message</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ReadAttributesRequest(System.Boolean,System.UInt16,System.UInt16,System.UInt16,System.Byte,System.Collections.Generic.List{System.UInt16})">
            <summary>
            Reads the specified attributes
            </summary>
            <param name="useSecurity">Whether or not to use security to send the message</param>
            <param name="profileID">The profile ID to use in the request</param>
            <param name="clusterID">The cluster ID of the attributes to read</param>
            <param name="destination">The Node ID of the destination</param>
            <param name="endpoint">The destination's endpoint</param>
            <param name="attributes">The list of attributes to read.</param>
            <returns>The raw attribute response data from the destination</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ConfigureAttributeReporting(System.UInt16,System.UInt16,System.UInt16,System.Collections.Generic.List{System.UInt16},System.UInt16)">
            <summary>
            Configures attribute reporting
            </summary>
            <param name="profileID">The profile ID of the attributes to configure</param>
            <param name="clusterID">The cluster ID of the attributes to configure</param>
            <param name="destination">The Node ID of the destination device</param>
            <param name="attributes">The list of attributes to configure</param>
            <param name="timeout">The timeout to use</param>
            <returns>The response data</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.WaitForZCLResponse(System.Byte)">
            <summary>
            Waits for the response to the ZCL command with the specified sequence number
            </summary>
            <param name="sequenceNumber">The sequence number </param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.AddOrUpdateKeyTableEntry(System.UInt64,System.Boolean,System.Byte[])">
            <summary>
            Add or update key table entry
            </summary>
            <param name="eui">eui</param>
            <param name="isLinkKey">isLinkKey</param>
            <param name="key">key</param>
            <returns>status of the command</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.PerformKeyEstablishment(System.UInt16,System.Boolean,Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentState)">
            <summary>
            Perform the Key Establishment Process
            </summary>
            <param name="destination">The destination node ID</param>
            <param name="causeError">Whether or not an error should be caused during CBKE</param>
            <param name="errorState">The point in the key establishment process the error should occur.</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.CheckKeyTableAvailability(System.UInt64)">
            <summary>
            Checks to see if there is an available Key Table Entry for a new link key for the specified partner
            </summary>
            <param name="partnerEUI">The EUI of the partner to check</param>
            <returns>True if there is an available key table entry. False otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.InitiateKeyEstablishment(System.UInt16,System.Byte)">
            <summary>
            Initiates the Key Establishment Process.
            </summary>
            <param name="destination">The destination</param>
            <param name="endpoint">The destination endpoint</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendEphemeralKey(System.UInt16,System.Byte)">
            <summary>
            Sends the calculated ephemeral key to the specified device
            </summary>
            <param name="destination">The destination Node ID</param>
            <param name="endpoint">The destination endpoint</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleKeyEstablishmentMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles incoming Key Establishment messages
            </summary>
            <param name="receivedMessage">The message that was received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.GenerateCBKEKeys">
            <summary>
            Generates the CBKE Keys
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.CalculateSMACS">
            <summary>
            Calculates the SMACS key
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.VerifySmacs(System.Byte[],System.Byte[])">
            <summary>
            Verifies that the SMAC keys match
            </summary>
            <param name="firstSMAC">The first SMAC to validate</param>
            <param name="secondSMAC">The second SMAC to validate</param>
            <returns>True of the SMAC keys are valid. False otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ConfirmKey(System.UInt16,System.Byte,System.Byte[])">
            <summary>
            Confirms the key establishment key
            </summary>
            <param name="destination">The destination Node ID</param>
            <param name="endpoint">The destination endpoint</param>
            <param name="smac">The SMAC to send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_SmacsCalculated(System.Object,Itron.Metering.Zigbee.SmacsCalculatedEventArgs)">
            <summary>
            Handles the SMACS Calculated event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.TerminateKeyEstablishment(System.UInt16,System.Byte,Itron.Metering.Zigbee.ZigBeeApplication.KeyEstablishmentErrors)">
            <summary>
            Sends the terminate key establishment command
            </summary>
            <param name="destination">The destination to send the message to</param>
            <param name="endpoint">The destination endpoint</param>
            <param name="error">The error to send</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_CBKEKeyGenerated(System.Object,Itron.Metering.Zigbee.CBKEKeyGeneratedEventArgs)">
            <summary>
            Handles the CBKE Key Generated Message
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleBasicClusterMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles basic cluster Messages
            </summary>
            <param name="receivedMessage">The message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleReadResponseMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Read Attributes response
            </summary>
            <param name="receivedMessage">the incoming message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.OnReadResponseReceived(Itron.Metering.Zigbee.BasicAttributesReceived)">
            <summary>
            Raises the ZigBee Read Response Received event
            </summary>
            <param name="AllAttributes">array of attributes received from message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.HandleWriteResponseMessage(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles Write Attributes response
            </summary>
            <param name="receivedMessage"> the incoming message received</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.OnWriteResponseReceived(Itron.Metering.Zigbee.ZCLStatus)">
            <summary>
            Raises the ZigBee Read Response Received event
            </summary>
            <param name="Status">The status rceived</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendIdentifyCommand(System.UInt16,Itron.Metering.Zigbee.IdentifyClusterCommands,System.UInt16)">
            <summary>
            Send Identify command (specific to the identify cluster) 
            </summary>
            <param name="Command"> The identify command we want to send</param>
            <param name="data">The data that will be sent out as the payload, don't worry about it
            if sending identifyquery command. Just put 0x0000 or something.</param>
            <param name="destination">usually the meter</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SendIdentifyCommand(Itron.Metering.Zigbee.IdentifyClusterCommands,System.UInt16)">
            <summary>
            sends identify command (specific to identify cluster). This probably won't be used very often.
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.OnIdentifyQueryResponseReceived(System.UInt16)">
            <summary>
            Raises the ZigBee Fast Polling Request Response Received event
            </summary>
            <param name="Timeout">The current value of IdentifyTime attribute</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ParseMatchDescriptorResponse(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Handles the match descriptor response
            </summary>
            <param name="receivedMessage">The received message</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ParseBindResponse(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Parses the Bind Request Response Message
            </summary>
            <param name="receivedMessage">The Response Message</param>
            <returns>True if the bind was successful. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ParseLeaveRequestResponse(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Parse Reponse to Leave Request Message.
            </summary>
            <param name="receivedMessage"></param>
            <returns>ZDOStatus</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.FragmentMessage(System.Byte[])">
            <summary>
            Fragments a message so that it will fit within a send message
            </summary>
            <param name="message">The message to fragment</param>
            <returns>The message fragments</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.DiscoverEndpoints(System.UInt16)">
            <summary>
            Discovers the matching endpoint information of the specified device
            </summary>
            <param name="destination">The Node ID of the device to discover</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.RequestMatchDescriptor(System.UInt16,System.UInt16,System.UInt16[],System.UInt16[])">
            <summary>
            Requests 
            </summary>
            <param name="destination">The destination Node ID</param>
            <param name="profileID">The profile ID to match</param>
            <param name="serverClusters">The list of server clusters to match</param>
            <param name="clientClusters">The list of client clusters to match</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_MessageSent(System.Object,Itron.Metering.Zigbee.MessageSentEventArgs)">
            <summary>
            Handles the message sent event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_MessageReceived(System.Object,Itron.Metering.Zigbee.MessageReceivedEventArgs)">
            <summary>
            Handles the Message Received event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.IsClusterSupported(System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Determines whether or not the cluster is supported by the device
            </summary>
            <param name="profileID">The profile ID of the cluster</param>
            <param name="clusterID">The cluster ID</param>
            <param name="endpoint">The endpoint</param>
            <returns>The endpoint to check</returns>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.SetEzspConfigurationValues">
            <summary>
            Sets up all of the EZSP Configuration Values
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.ClearKeyTables">
            <summary>
            Clears all of the Key Table data
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.AddEndpoints">
            <summary>
            Adds the Endpoint for the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_ScanCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the scan complete event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP_StackStatusUpdated(System.Object,Itron.Metering.Zigbee.StackStatusUpdatedEventArgs)">
            <summary>
            Handles the Stack Status Updated Event
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.OnDefaultResponseReceived(Itron.Metering.Zigbee.ZCLStatus)">
            <summary>
            Raises Default Response Received Event
            </summary>
            <param name="status">ZCLStatus of the Response</param>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeApplication.OnIPPDataResponseReceived(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Raises IPP Data Response Received Event
            </summary>
            <param name="message">The incoming message</param>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_Comm">
            <summary>
            Serial Communications object
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_ASH">
            <summary>
            ASH Protocol Layer
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_EZSP">
            <summary>
            EZSP Protocol Layer
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_Logger">
            <summary>
            Communications logger
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_DeviceTypeID">
            <summary>
            The Device ID that should be used when creating the endpoints
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_Endpoints">
            <summary>
            Gets the list of hosted endpoints
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_UnhandledMessages">
            <summary>
            The list of messages that have been received
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_ZCLSequenceNumber">
            <summary>
            Sequence number used for sending ZCL messages
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_Certificate">
            <summary>
            The device certificate
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_TrustCenterEUI">
            <summary>
            The Trust Center's EUI
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_LocalEUI">
            <summary>
            The local EUI
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_ZCLResponseMessages">
            <summary>
            ZCL Response Messages
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_KeyEstablishmentState">
            <summary>
            Key Establishment State
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_PartnerCertificate">
            <summary>
            Partner Certificate
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_LocalEphemeralKey">
            <summary>
            Local Ephemeral Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Zigbee.ZigBeeApplication.m_PartnerEphermeralKey">
            <summary>
            Partner Ephemeral Key
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.DefaultResponseEventArgs">
            <summary>
            DefaultResponseEventArgs class for use with DefaultResponseEventHandler
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.DefaultResponseEventArgs.#ctor(Itron.Metering.Zigbee.ZCLStatus)">
            <summary>
            DefaultResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.DefaultResponseEventArgs.Status">
            <summary>
            DefaultResponseEventArgs Status property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.IPPDataResponseEventArgs">
            <summary>
            IPPDataResponseEventArgs class for use with Itron Private Profile (IPP) Data Response Cluster event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.IPPDataResponseEventArgs.#ctor(Itron.Metering.Zigbee.IncomingMessage)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IPPDataResponseEventArgs.Message">
            <summary>
            IPPDataResponseEventArgs Message property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ReadResponseEventArgs">
            <summary>
            ReadResponseEventArgs class for use with Read Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ReadResponseEventArgs.#ctor(Itron.Metering.Zigbee.BasicAttributesReceived)">
            <summary>
            ReadResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ReadResponseEventArgs.AttributesReceived">
            <summary>
            ReadResponsedEventArgs Attributes property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.WriteResponseEventArgs">
            <summary>
            WriteResponseEventArgs class for use with Write Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.WriteResponseEventArgs.#ctor(Itron.Metering.Zigbee.ZCLStatus)">
            <summary>
            WriteResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.WriteResponseEventArgs.Status">
            <summary>
            WriteResponsedEventArgs status property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.IdentifyQueryResponseEventArgs">
            <summary>
            IdentifyQueryResponseEventArgs class for use with IdentifyQuery command Response event
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.IdentifyQueryResponseEventArgs.#ctor(System.UInt16)">
            <summary>
            IdentifyQueryResponseEventArgs Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.IdentifyQueryResponseEventArgs.Timeout">
            <summary>
            IdentifyQueryResponsedEventArgs status property
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.BasicAttributesReceived">
            <summary>
            Class for individual attributes fields
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Zigbee.BasicAttributesReceived.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BasicAttributesReceived.Identifier">
            <summary>
            Property for the identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BasicAttributesReceived.Status">
            <summary>
             Property for the status
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BasicAttributesReceived.DataType">
            <summary>
            Property for the DataType
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.BasicAttributesReceived.Value">
            <summary>
            Property for the value
            </summary>
        </member>
        <member name="T:Itron.Metering.Zigbee.ZigBeeEnergyScanResult">
            <summary>
            Class used to store the Energy Scan Results
            </summary>
        </member>
        <member name="M:Itron.Metering.Zigbee.ZigBeeEnergyScanResult.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEnergyScanResult.Channel">
            <summary>
            Gets the Channel the results are for.
            </summary>
        </member>
        <member name="P:Itron.Metering.Zigbee.ZigBeeEnergyScanResult.MaxRSSI">
            <summary>
            Gets the Max RSSI
            </summary>
        </member>
    </members>
</doc>
