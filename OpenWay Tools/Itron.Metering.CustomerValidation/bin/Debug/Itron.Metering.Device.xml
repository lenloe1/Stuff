<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Itron.Metering.Device</name>
    </assembly>
    <members>
        <member name="T:Itron.Metering.Device.ANSIMeter">
            <summary>
            Class to handle the metering properties and methods common to all supported devices
            </summary>
            <summary>
            CANSIDevice class - This is the "device server" for the ANSI device.
            (IConfiguration implementation)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIMeter.SECONDS_PER_HOUR">
            <summary>The number of seconds in an hour</summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            The ANSIMeter constructor
            </summary>
            <param name="ceComm">Communications object to use</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CANSIDevice ANSIDevice = new CANSIDevice(comm);
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            The ANSIMeter constructor
            </summary>
            <param name="PSEM">Protocol instance to use</param>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            PSEM psem( comm )
            CANSIDevice ANSIDevice = new CANSIDevice(psem);
            </code></example>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.BornAgain">
            <summary>
            Performs a Born Again on the meter. You must be logged
            in as a level 5 user in order to perform this operation.
            </summary>
            <returns>A PSEM Response for the write to Table 07</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ColdStart">
            <summary>
            Performs a Cold Start (aka three button reset) on the meter. You must be logged
            in as a level 5 user in order to perform this operation. This function does not
            have a return value as the meter will not be reset after calling this procedure.
            </summary>
            <returns>A PSEM Response for the write to Table 07</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ClearBaseData">
            <summary>
            Performs a clear Base procedure
            </summary>
            <returns>A PSEM Response for the write to Table 07</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SealCanadian">
            <summary>
            Calls the Seal Canadian procedure
            </summary>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.UnsealCanadian">
            <summary>
            Calls the Seal Canadian procedure
            </summary>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ClearBillingData">
             <summary>
             This method clears the billing data on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/22/06 mcm 7.35.00  N/A    Created
             11/13/13 AF  3.50.03        Class re-architecture - promoted from CENTRON_AMI
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ClearBillingDataAndWaitForResult">
             <summary>
             This method clears the billing data on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/22/06 mcm 7.35.00  N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ResetDemand">
             <summary>
             This method resets the demand registers on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/22/06 mcm 7.35.00  N/A    Created
             11/13/13 AF  3.50.03        Class re-architecture - promoted from CENTRON_AMI
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ResetDemand(System.Byte[]@)">
             <summary>
             This method resets the demand registers on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/19/13 GK 2.80.21  N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ReadTOUSchedule(Itron.Metering.Device.TOUConfig,Itron.Metering.Device.CalendarConfig)">
            <summary>
            Reads the TOU Schedule from the meter into a TOUSchedule object
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.IsRateChangeEvent(System.UInt16)">
            <summary>
            Determines whether or not the TOU Event is a rate change event
            </summary>
            <param name="usEvent">The event type to check</param>
            <returns>True if the TOU event is a rate change event, false otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.IsOutputOnEvent(System.UInt16)">
            <summary>
            Determine whether or not the TOU event is an Output on event.
            </summary>
            <param name="usEvent">The event type to check</param>
            <returns>True if the event is an Ouput on event, false otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.IsOutputOffEvent(System.UInt16)">
            <summary>
            Determine whether or not the TOU event is an Output off event.
            </summary>
            <param name="usEvent">The event type to check</param>
            <returns>True if the event is an Ouput off event, false otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetRateIndex(System.UInt16)">
            <summary>
            Determintes the Rate Index given the Event
            </summary>
            <param name="usEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetOutputIndex(System.UInt16)">
            <summary>
            Gets the Ouput index for the specified event
            </summary>
            <param name="usEvent">The event to check.</param>
            <returns>The index of the event.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ChangeDisplayMode(Itron.Metering.Device.CANSIDevice.DisplayMode)">
            <summary>
            Change the Display Mode
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ClearSelfReads">
            <summary>
            Clears the Self Reads stored in the meter
            </summary>
            <returns>The Result of the clear</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.UpdateDST(System.String)">
            <summary>
            Updates DST in the connected meter. This method does not reconfigure
            DST. Only future dates in 2007 and beyond are updated.
            </summary>
            <param name="FileName">The filename including path for the DST file</param>
            <returns>A DSTUpdateResult</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ResetNumberDemandResets">
            <summary>
            Resets the count of demand resets
            </summary>
            <returns>ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ResetNumberPowerOutages">
            <summary>
            Resets the Number of Power Outages
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ResetNumberTimesProgrammed">
            <summary>
            Resets the Number of Times Programmed
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.Table74Events">
            <summary>
            FOR TESTING ONLY! Gets the list of Events from Table 74. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.CurrentRegisters">
            <summary>
            Proves access to a list of Energy Quantities
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AmpsPhaseA">
            <summary>
            Provides access to the Amps Phase A Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AmpsPhaseB">
            <summary>
            Provides access to the Amps Phase B Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AmpsPhaseC">
            <summary>
            Provides access to the Amps Phase C Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AmpsNeutral">
            <summary>
            Provides access to the Neutral Amps Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AmpsSquared">
            <summary>
            Provides access to the Amps Squared Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VoltsPhaseA">
            <summary>
            Provides access to the Volts Phase A Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VoltsPhaseB">
            <summary>
            Provides access to the Volts Phase B Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VoltsPhaseC">
            <summary>
            Provides access to the Volts Phase C Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VoltsAverage">
            <summary>
            Provides access to the Volts Average Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VoltsSquared">
            <summary>
            Provides access to the Volts Squared Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.WattsDelivered">
            <summary>
            Provides access to the Watts Delivered Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.WattsReceived">
            <summary>
            Provides access to the Watts Received Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.WattsNet">
            <summary>
            Provides access to the Watts Net Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.WattsUni">
            <summary>
            Provides access to the Watts Uni Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VADelivered">
            <summary>
            Provides access to the VA Delivered Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VAReceived">
            <summary>
            Provides access to the VA Received Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VALagging">
            <summary>
            Provides access to the VA Lagging
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarDelivered">
            <summary>
            Provides access to the Var Delivered Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarReceived">
            <summary>
            Provides access to the Var Received Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarNet">
            <summary>
            Provides access to the Var Net Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarNetDelivered">
            <summary>
            Provides access to the Var Net Delivered Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarNetReceived">
            <summary>
            Provides access to the Var Net Received Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarQuadrant1">
            <summary>
            Provides access to the Var Quadrant 1 Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarQuadrant2">
            <summary>
            Provides access to the Var Quadrant 2 Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarQuadrant3">
            <summary>
            Provides access to the Var Quadrant 3 Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VarQuadrant4">
            <summary>
            Provides access to the Var Quadrant 4 Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.PowerFactor">
            <summary>
            Provides access to the Power Factor Quantity
            </summary>
            <remarks>This quantity is demand only</remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.QDelivered">
            <summary>
            Provides access to the Q Delivered Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.QReceived">
            <summary>
            Provides access to the Q Received Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_WhRecSupported">
            <summary>
            Returns whether or not the Wh rec quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhQ1Supported">
            <summary>
            Returns whether or not the Varh Q1 quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhQ2Supported">
            <summary>
            Returns whether or not the Varh Q2 quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhQ3Supported">
            <summary>
            Returns whether or not the Varh Q3 quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhQ4Supported">
            <summary>
            Returns whether or not the Varh Q4 quantity quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhNetDelSupported">
            <summary>
            Returns whether or not the Varh net del quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhNetRecSupported">
            <summary>
            Returns whether or not the Varh net rec quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VAhDelArithSupported">
            <summary>
            Returns whether or not the VAh del arithmetic quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VAhRecArithSupported">
            <summary>
            Returns whether or not the VAh rec arithmetic quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VAhDelVecSupported">
            <summary>
            Returns whether or not the VAh del vectorial quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VAhRecVecSupported">
            <summary>
            Returns whether or not the VAh rec vectorial quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VAhLagSupported">
            <summary>
            Returns whether or not the VAh lag quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_QhDelSupported">
            <summary>
            Returns whether or not the Qh del quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VhASupported">
            <summary>
            Returns whether or not the Vh Phase A quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VhBSupported">
            <summary>
            Returns whether or not the Vh Phase B quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VhCSupported">
            <summary>
            Returns whether or not the Vh Phase C quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VhPhaseAverageSupported">
            <summary>
            Returns whether or not the Vh Phase Average quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_AhPhaseASupported">
            <summary>
            Returns whether or not the Ah Phase A quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_AhPhaseBSupported">
            <summary>
            Returns whether or not the Ah Phase B quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_AhPhaseCSupported">
            <summary>
            Returns whether or not the Ah Phase C quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_AhNeutralSupported">
            <summary>
            Returns whether or not the Ah Neutral quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_V2hAggregateSupported">
            <summary>
            Returns whether or not the V Squared h Aggregate quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_I2hAggregateSupported">
            <summary>
            Returns whether or not the I Squared h Aggregate quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhDelSupported">
            <summary>
            Returns whether or not the Varh del quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhRecSupported">
            <summary>
            Returns whether or not the Varh rec quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_WhNetSupported">
            <summary>
            Returns whether or not the Wh net quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_VarhNetSupported">
            <summary>
            Returns whether or not the Varh net quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_QhRecSupported">
            <summary>
            Returns whether or not the Qh rec quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_WhUnidirectionalSupported">
            <summary>
            Returns whether or not the Wh unidirectional quantity is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_MaxPeaks">
            <summary>
            Returns the maximum number of peaks allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_CoincidentDemandSupported">
            <summary>
            Returns whether or not coincident demand is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_ThermalDemandSupported">
            <summary>
            Returns whether or not thermal demand is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_DemandThresholdsAllowed">
            <summary>
            Returns whether or not demand thresholds are allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_MaxDemandResets">
            <summary>
            Returns the maximum number of scheduled demand resets.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_ScheduledResetsAllowed">
            <summary>
            Returns whether or not Scheduled Demand Resets are Allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_MaximumLPMemorySize">
            <summary>
            Returns what the maximum load profile memory size supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_PQSupported">
            <summary>
            Returns whether or not power quality is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_Enable9SIn6SServiceSupported">
            <summary>
            Returns whether or not the meter will Enable 9S in 6S Service.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_OptionBoardConfigSupported">
            <summary>
            Returns whether or not Option Board Configuration is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_ModemAllowed">
            <summary>
            Returns whether or not the ANSI C12.21 Modem is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_CPCVarsSupported">
            <summary>
            Returns whether or not the CPC Instantaneous Vars are supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_CPCVASupported">
            <summary>
            Returns whether or not the CPC Instantaneous VA is supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_SRConfigSupported">
            <summary>
            Returns whether or not Self Read Configuration is Allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_NumberAdditionalSRs">
            <summary>
            Returns the number of additional self read buffers that are allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_CalendarConfigSupported">
            <summary>
            Returns whether or not the Calendar Configuration is Allowed.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.CoincidentValues">
            <summary>
            Gets the list of Coincident Values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.SelfReadRegisters">
            <summary>
            Proves access to a list of Self Read Collections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LastDemandResetRegisters">
            <summary>
            Proves access to a list of Last Demand Reset Register Collections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NormalDisplayList">
            <summary>
            Provides access to Normal Display List
            </summary>
            <returns>
            List of DisplayItems.  (Null if list does not exist
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.AlternateDisplayList">
            <summary>
            Provides access to the Alt Display
            </summary>
            <returns>
            List of DisplayItems.  (Null if list does not exist
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TestDisplayList">
            <summary>
            Provides access to the Test Display.
            </summary>
            <returns>
            List of DisplayItems.  (Null if list does not exist
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TimeOfUseSchedule">
            <summary>
            Provides access to the TOU Schedule in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TOUConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.CalendarConfiguration">
            <summary>
            Gets the current Calendar configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TOUEnabled">
            <summary>
            TOU is considered enabled if the clock is running and the meter
            is configured to follow a TOU schedule.  TOU does not have to be
            running for this property to return true.  For example an expired
            TOU schedule is enabled but not running.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberEnergies">
            <summary>
            Provides access to the number Of Energies
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberDemands">
            <summary>
            Provides access to the number Of Demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberTOURates">
            <summary>
            Provides access to the number Of TOU Rates
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKey_RatesSupported">
            <summary>
            Gets the Number of TOU Rates supported by this meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterKeyTable">
            <summary>
            This property returns the meterkeytable. (Creates it if needed)
            </summary>
            <remarks>
            This method must be overriden by the device classes.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DateTimeOfSelfRead(System.UInt32)">
            <summary>
            Returns the Date and Time of the the Self Read at the given index.
            </summary>
            <param name="uiIndex">Index of the Self Read (Between 0 and 3)</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DateTimeOfDemandReset(System.UInt32)">
            <summary>
            Returns the Date and Time of the the Demand Reset at the given index.
            </summary>
            <param name="uiIndex">Index of the Demand Reset (Between 0 and 1)</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SelfReadHasValidData(System.UInt32)">
            <summary>
            Returns status of indicated Self Read.
            </summary>
            <param name="uiIndex">Index of the Self Read (Between 0 and 3)</param>
            <returns>bool - True = Has valid Data; False = No valid Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DemandResetHasValidData(System.UInt32)">
            <summary>
            Returns the Date and Time of the the Demand Reset at the given index.
            </summary>
            <param name="uiIndex">Index of the Demand Reset (Between 0 and 1)</param>
            <returns>bool - True = Has valid Data; False = No valid Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRWattsDelivered(System.UInt32)">
            <summary>
            Provides access to the SR Watts Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRWattsDelivered(System.UInt32)">
            <summary>
            Provides access to the DR Watts Delivered Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRWattsReceived(System.UInt32)">
            <summary>
            Provides access to the SR Watts Received Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRWattsReceived(System.UInt32)">
            <summary>
            Provides access to the DR Watts Received Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRWattsNet(System.UInt32)">
            <summary>
            Provides access to the SR Watts Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRWattsNet(System.UInt32)">
            <summary>
            Provides access to the DR Watts Delivered Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRWattsUni(System.UInt32)">
            <summary>
            Provides access to the SR Watts Uni Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRCoincidentValues(System.UInt32)">
            <summary>
            Gets the list of Coincident Values for the specified Self Read
            </summary>
            <param name="uiIndex">The index of the Self Read to get.</param>
            <returns>The list of Coincidents</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRCoincidentValues(System.UInt32)">
            <summary>
            Gets the list of Coincident Values for the specified Demand Resets
            </summary>
            <param name="uiIndex">The index of the Demand Reset to get.</param>
            <returns>The list of Coincidents</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRWattsUni(System.UInt32)">
            <summary>
            Provides access to the DR Watts Uni Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVADelivered(System.UInt32)">
            <summary>
            Provides access to the SR VA Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVADelivered(System.UInt32)">
            <summary>
            Provides access to the DR VA Del Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVAReceived(System.UInt32)">
            <summary>
            Provides access to the SR VA Received Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVAReceived(System.UInt32)">
            <summary>
            Provides access to the DR VA Rec Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVALagging(System.UInt32)">
            <summary>
            Provides access to the SR VA Lagging Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarDelivered(System.UInt32)">
            <summary>
            Provides access to the SR Var Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarDelivered(System.UInt32)">
            <summary>
            Provides access to the DR Var Delivered Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarReceived(System.UInt32)">
            <summary>
            Provides access to the SR Var Received Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarReceived(System.UInt32)">
            <summary>
            Provides access to the DR Var Received Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarNet(System.UInt32)">
            <summary>
            Provides access to the SR Var Net Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarNet(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarNetDelivered(System.UInt32)">
            <summary>
            Provides access to the SR Var Net Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarNetDelivered(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Delivered Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarNetReceived(System.UInt32)">
            <summary>
            Provides access to the SR Var Net Received Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarNetReceived(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Received Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarQuadrant1(System.UInt32)">
            <summary>
            Provides access to the SR Var Quadrant 1 Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarQuadrant1(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 1 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarQuadrant2(System.UInt32)">
            <summary>
            Provides access to the SR Var Quadrant 2 Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarQuadrant2(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 2 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarQuadrant3(System.UInt32)">
            <summary>
            Provides access to the SR Var Quadrant 3 Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarQuadrant3(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 3 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVarQuadrant4(System.UInt32)">
            <summary>
            Provides access to the SR Var Quadrant 4 Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVarQuadrant4(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 4 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRAmpsPhaseA(System.UInt32)">
            <summary>
            Provides access to the SR Amps Phase A Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRAmpsPhaseB(System.UInt32)">
            <summary>
            Provides access to the SR Amps Phase B Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRAmpsPhaseC(System.UInt32)">
            <summary>
            Provides access to the SR Amps Phase C Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRAmpsNeutral(System.UInt32)">
            <summary>
            Provides access to the SR Neutral Amps Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRAmpsSquared(System.UInt32)">
            <summary>
            Provides access to the SR Amps Squared Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.DRVoltsPhaseA(System.UInt32)">
            <summary>
            Provides access to the DR Volts (a) Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVoltsPhaseA(System.UInt32)">
            <summary>
            Provides access to the SR Volts Phase A Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVoltsPhaseB(System.UInt32)">
            <summary>
            Provides access to the SR Volts Phase B Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVoltsPhaseC(System.UInt32)">
            <summary>
            Provides access to the SR Volts Phase C Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVoltsAverage(System.UInt32)">
            <summary>
            Provides access to the SR Volts Average Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRVoltsSquared(System.UInt32)">
            <summary>
            Provides access to the SR Volts Squared Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRPowerFactor(System.UInt32)">
            <summary>
            Provides access to the SR Power Factor Quantity
            </summary>
            <remarks>This quantity is demand only</remarks>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRQDelivered(System.UInt32)">
            <summary>
            Provides access to the SR Q Delivered Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.SRQReceived(System.UInt32)">
            <summary>
            Provides access to the SR Q Received Quantity
            </summary>
            <param name="uiIndex">Which Self Read to Retrieve</param>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DST">
            <summary>
            Provides access to the DST Dates in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DateProgrammed">
            <summary>
            Gets the Date Programmed out of the header of 2048
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumTimeProgrammed">
            <summary>
            Gets the Number of Times Programmed 
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DateLastDemandReset">
            <summary>
            Gets the Date of Last Demand reset
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DateLastOutage">
            <summary>
            Gets the Date of Last Outage
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumDemandResets">
            <summary>
            Gets the number of Demand resets
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumOutages">
            <summary>
            Gets the number of Outages
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberOfMinutesOnBattery">
            <summary>
            Property to retrieve the Number of Minutes on battery.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.ColdLoadPickupTime">
            <summary>
            Gets the Cold Load Pickup Time in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DemandResetLockoutTime">
            <summary>
             Gets the demand reset lockout time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberOfTestModeSubIntervals">
            <summary>
            Gets the Number of Test Mode Sub Intervals for Demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TestModeIntervalLength">
            <summary>
            Gets the Test Mode Interval Length for Demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.CTRatio">
            <summary>
            Gets the CT Ratio for the current device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.VTRatio">
            <summary>
            Gets the VT Ratio for the current device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.RegisterMultiplier">
            <summary>
            Gets the Register Multiplier for the current device
            </summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            10/04/06 RCG  7.40.00			Created 
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberOfSubIntervals">
            <summary>
            Gets the Number of Sub Intervals for Demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DemandIntervalLength">
            <summary>
            Gets the Interval Length for Demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.OutageLength">
            <summary>
            Gets the Outage Length before Cold Load Pickup in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DisplayModeTimeout">
            <summary>
            Gets the Display mode timeout in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TransformerRatio">
            <summary>
            Property to get the transformer ratio from the device.  This code actually
            returns the Meter Multiplier since the devices servers did the same.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LineFrequency">
            <summary>
            Property to get the line frequency from the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.MeterDisplayMode">
            <summary>
            Property to determine the Display Mode
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.IsInTestMode">
            <summary>
            Determines whether or not the meter is currently in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TOUExpirationDate">
            <summary>
            Gets the Date of the TOU Expiration
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.TOUScheduleID">
            <summary>
            Gets the TOU Schedule ID from the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LoadProfileSupported">
            <summary>
            Gets whether the meter supports load profile.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LoadProfileStatus">
            <summary>
            Gets the Load Profile Status object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LPRunning">
            <summary>
            Indicates whether or not the meter is currently recording
            load profile data
            </summary>
            <remarks>
             Revision History
             MM/DD/YY Who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             12/05/06 MAH 8.00.00
             11/13/13 AF  3.50.03        Class re-architecture - Moved definition from ItronDevice
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LPIntervalLength">
            <summary>
            Returns the number of minutes per load profile interval
            </summary>
            <remarks>
             Revision History
             MM/DD/YY Who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             12/05/06 MAH 8.00.00
             11/13/13 AF  3.50.03        Class re-architecture - Moved definition from ItronDevice
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberLPChannels">
            <summary>
            Returns the number of load profile channels the meter is 
            currently recording
            </summary>
            <remarks>
             Revision History
             MM/DD/YY Who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             12/05/06 MAH 8.00.00
             11/13/13 AF  3.50.03        Class re-architecture - Moved definition from ItronDevice
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.CustomScheduleName">
            <summary>
            Property to get the custom schedule name from the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DateLastCalibration">
            <summary>
            Gets the Date of the Last 
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DateLastTestMode">
            <summary>
            Gets the Date of the Last 
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DayOfTheWeek">
            <summary>
            Property to retrieve the Number of Minutes on battery.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.UserData">
            <summary>
            This property returns a list of user data strings.  If the meter has 3 user data fields
            then the list will contain 3 strings corresponding to each user data  field
            </summary>        
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DisplayVenderField1">
            <summary>
            Gets Vender Field 1 Display data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DisplayVenderField2">
            <summary>
            Gets Vender Field 2 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.DisplayVenderField3">
            <summary>
            Gets Vender Field 3 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberOfSelfReads">
            <summary>
            Returns the number of Self Reads in the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.NumberofLastDemandResets">
            <summary>
            Returns the number of Last Demand Resets in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.IsCanadian">
            <summary>
            Returns true if the meter is configured for Canada
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.IsSealedCanadian">
            <summary>
            Gets whether or not the meter is Sealed for Canada
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.IOSupported">
             <summary>
             Returns true if IO is supported, false if not.
             </summary>
             Revision History
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             04/22/09 jrf 2.20.02 N/A    Created
             04/19/10 AF  2.40.38        Made virtual so it can be overridden in M2 Gateway
            
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.SWRevision">
             <summary>
             Property used to get the software version from the meter
             </summary>
             <exception>
             Throws: TimeoutException for Timeouts
             		PSEMException for other communication errors.
             </exception>
             <remarks>
              Revision History	
              MM/DD/YY who Version Issue# Description
              -------- --- ------- ------ ---------------------------------------
              03/12/07 mcm 8.00.18 2514   SW Rev not supported for ANSI devices
              11/13/13 AF  3.50.03        Class re-architecture - Moved definition from ItronDevice
            
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.ProgramID">
            <summary>
            Get program ID from the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ValidateEnergy(Itron.Metering.Device.LID)">
            <summary>
            Validates that Energy LID is supported in meter
            </summary>
            <param name="EnergyLID">Energy LID to check for</param>
            <returns>bool - True: LID is supported; False: LID is not supported</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ValidateDemand(Itron.Metering.Device.LID)">
            <summary>
            Determine if provided LID is in meter
            </summary>
            <param name="DemandLID">Demand LID to check for</param>
            <returns>bool - True: LID is supported; False: LID is not supported</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.CreateDisplayItem(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Creates a new DisplayItem
            </summary>
            <returns>ANSIDisplayItem</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ReadDisplayData(System.Collections.Generic.List{Itron.Metering.Device.ANSIDisplayItem})">
            <summary>
            Reads up to 8 Display Items from the meter and updates the data
            </summary>
            <param name="ItemsToRead">The list of up to 8 Display Items to update</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.CreateLID(System.UInt32)">
            <summary>
            Creates a LID object from the given 32-bit number
            </summary>
            <param name="uiLIDNumber">The 32-bit number that represents the LID</param>
            <returns>The LID object for the specified LID</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetMagicKey">
            <summary>
            Gets the magic key from the meter.
            </summary>
            <returns>The magic key</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.InitializeData">
            <summary>
            Initialize all of our member variables for the Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetDSTResult(Itron.Metering.Communications.PSEM.PSEMResponse)">
            <summary>
            Translates a PSEMResponse into a DSTUpdateResult.
            </summary>
            <param name="PSEMCode">PSEM response to translate</param>
            <returns>DSTUpdateResult that corresponds to the PSEM response.
            SUCCESS, ERROR, and INSUFFICIENT_SECURITY_ERROR are the only
            translations.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetExtendedDeviceType">
            <summary>
            Checks to see if the meter's clock is running and if it is 
            configured for DST time adjustment and TOU rates.
            </summary>
            <returns>A device type string that can be used to check to see if
            this device is supported by a TOU schedule</returns>
            
        </member>
        <member name="P:Itron.Metering.Device.ANSIMeter.LPPulseWeightMultiplier">
            <summary>
            Gets the multiplier used to calculate the Load Profile Pulse Weight
            </summary>		
        </member>
        <member name="F:Itron.Metering.Device.ANSIMeter.m_LoadProfileStatus">
            <summary>
            Object for retrieving Load Profile status information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.CapabilitiesRead">
            <summary>
            Does read of Capability items
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ValidateMeterForDSTUpdate">
            <summary>
            Checks to see if the meter's clock is running and if it is 
            configured for DST time adjustment.
            </summary>
            <returns>SUCCESS, CLOCK_ERROR, SUCCESS_NOT_CONFIGURED_FOR_DST</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.UpdateDSTDates(System.String)">
            <summary>
            Updates DST dates in the Table 2048 Calendar Configuration area.
            Only future dates that are in or beyond 2007 and that differ from
            the corresponding date in the given DST file are changed.  This 
            method does not write the table to the meter.  It just updates the
            soft copy of the table.
            </summary>
            <param name="FileName">PC-PRO+ DST file to use for update</param>
            <returns>SUCCESS, SUCCESS_PREVIOUSLY_UPDATED, ERROR, 
            ERROR_DST_DATA_MISSING, ERROR_DST_DATES_EXPIRED</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ReadDSTDates">
            <summary>
            Reads the DST dates from the meter
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.ValidateForTOUReconfigure(System.String,System.String,Itron.Metering.TOU.CTOUSchedule@,Itron.Metering.DST.CDSTSchedule@)">
            <summary>
            Checks to see if the meter's clock is running and if it is 
            configured for DST time adjustment and TOU rates.
            </summary>
            <param name="TOUFileName">PC-PRO+ TOU schedule file name</param>
            <param name="DSTFileName">PC-PRO+ DST file name (DST.xml). Pass
            an empty string if the meter doesn't support DST.</param>
            <param name="TOUSchedule">Returns an instance of the TOU server
            with the TOUFileName file open if successful</param>
            <param name="DSTSchedule">Returns an instance of the DST server
            with the DSTFileName file open if successful. NOTE that it is valid
            to pass an empty DST file name for meters not configured with DST.
            In that case, the returned DSTSchedule will be null.</param>
            <returns>SUCCESS, SUCCESS_NOT_CONFIGURED_FOR_TOU, CLOCK_ERROR, 
            ERROR_DST_DATA_MISSING, ERROR_SCHED_NOT_SUPPORTED</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.OverwriteCalendarConfig(Itron.Metering.TOU.CTOUSchedule,Itron.Metering.DST.CDSTSchedule)">
            <summary>
            Clears Table2048.m_CalendarConfig and write the TOU and DST info
            to it to prepare it for writing to the meter.  The CalendarConfig
            contains season start dates, holdays, and DST dates.  The rest of 
            the TOU configuration is in the TOUConfig table.
            </summary>
            <remarks>This method ASSUMES the TOUSchedule and DSTSchedule 
            provided are valid for the meter. If the DSTSchedule object is be 
            null, the meter will not be configured with DST</remarks>
            <param name="TOUSchedule">TOU server with a valid TOU file open</param>
            <param name="DSTSchedule">DST server with a DST file open. Note 
            that this object can be null for meters that will not have DST</param>
            <returns>SUCCESS, ERROR_DST_DATA_MISSING</returns>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/26/06 mcm 7.30.00 N/A	Created
            10/13/06 mcm 7.35.04 55,64,67 - Insert season start date didn't work
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.OverwriteTOUConfig(Itron.Metering.TOU.CTOUSchedule)">
            <summary>
            Clears Table2048.m_TOUConfig and writes the TOU scheudule info
            into the table to prepare it for writing to the meter. The TOUConfig
            contains configuration data not related to a particular year. This
            table has the Typical Week and pattern definitions for all of the
            seasons. The per-year info (season start dates, holdays, and DST 
            dates) are in the CalendarConfig table.
            </summary>
            <remarks>ASSUMES the TOU schedule is valid for this meter</remarks>
            <param name="TOUSchedule">TOU server with a supported TOU file 
            open.</param>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/22/06 mcm 7.30.00 N/A	Created
            10/23/06 mcm 7.35.07 105    Need to add end output switchpoints
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetTypicalWeek(Itron.Metering.TOU.CTOUSchedule)">
            <summary>
            Returns the configuration value for the schedule's day to daytipe
            assignments.
            </summary>
            <param name="TOUSchedule">A TOU server instance with a TOU schedule
            open</param>
            <returns>A TOU server's typical week packed into a 2 byte value to
            be used in the Sentinel or Image configuration</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetDaytypeIndex(Itron.Metering.TOU.CTOUSchedule,Itron.Metering.TOU.eTypicalDay)">
            <summary>
            Returns the schedule's Daytype Type and index into a index (1..4).
            Normal Daytype 1 = 1, Normal Daytype 3 = 3, Holiday type 1 = 4.
            </summary>
            <param name="TOUSchedule">A TOU server instance with a TOU schedule
            open</param>
            <param name="Day">Day of the week to translate</param>
            <returns>Daytype index used by GetTypicalWeek</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetDayEvent(Itron.Metering.TOU.CSwitchPoint)">
            <summary>
            Builds a TOUConfig time of day event from a TOU schedule's 
            switchpoint.  See the TIME_MAN_DESIGN.doc, WindChill document
            #D0209255 for more info.
            </summary>
            <param name="SP">TOU server switchpoint to translate</param>
            <returns>Time of Day event</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetOutputOffEvent(Itron.Metering.TOU.CSwitchPoint)">
            <summary>
            Builds a TOUConfig time of day event from a TOU schedule's 
            OUTPUT switchpoint.  Calling this method with a rate switchpoint 
            will cause an exception to be thrown. 
            See the TIME_MAN_DESIGN.doc, WindChill document
            #D0209255 for more info.
            </summary>
            <param name="SP">TOU server output switchpoint to translate</param>
            <returns>Time of Day event</returns>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            10/23/06 mcm 7.35.07 105	Support for adding output off switchpoints
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.GetYearEvent(Itron.Metering.TOU.CEvent)">
            <summary>
            Builds a CaledarConfig Day Event from a TOU schedule's year event.
            </summary>
            <param name="TOUEvent">TOU server applied season start date or 
            applied holiday event</param>
            <returns>CalendarConfig CalendarEvent that represents the TOU
            event</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.FindStartSeason(Itron.Metering.TOU.CTOUSchedule,System.Int32)">
            <summary>
            Finds the index of the season that should be in effect at the start
            the new configuration. Customers usually have a Summer and Winter
            season. They expect Winter to be in	effect until Summer starts that
            first year, but it won't be unless we insert a start date.
            This method ASSUMES that every year has a season start date.
            </summary>
            <param name="TOUSchedule">TOU server with the schedule open</param>
            <param name="YearIndex">Index of the first year to configure</param>
            <returns>The season index that should be used on 1/1 of the 
            first year.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.Configure(System.String)">
            <summary>
            Implements the IConfiguration interface.  Initializes the meter
            based on the given program name.
            </summary>
            <param name="strProgramName">The name of the program to use to 
            initialize the meter</param>
            <returns>ConfigurationResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIMeter.Configure(System.String,Itron.Metering.DeviceDataTypes.PromptForData)">
            <summary>
            Configures a device with the specified program and Prompt for data.
            </summary>
            <param name="sProgramName">Name or path of the program.</param>
            <param name="PFData">The prompt for data for the program.</param>
            <returns>A ConfigurationError code.</returns>
        </member>
        <member name="T:Itron.Metering.Device.COpenWayAdvPolyITRFBridge">
            <summary>
            Device server class for the ITRF advanced poly meter
            </summary>
            <summary>
            The ITRF polyphase bridge meter device server class implementation of the IBridge interface.
            </summary>
            <summary>
            The ITRF polyphase bridge meter device server class implementation of the IPreviousSeason interface.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.IsBridgeMeter(Itron.Metering.Communications.PSEM.CPSEM,System.Boolean@)">
             <summary>
             Method to determine if device is a bridge meter. Used to determine whether or not to
             instantiate this class.
             </summary>
             <param name="PSEM">Protocol obj used to identify the meter</param>
            <param name="securityError">An indication of whether a security error occurred while 
             verifying a bridge meter.</param>
             <returns>Whether or not device is a bridge meter.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ReconfigureTOU(System.String,System.Int32)">
            <summary>
            Reconfigures TOU in the connected meter.
            </summary>
            <param name="TOUFileName">The filename including path for the 
            configuration containing the TOU schedule.</param>
            <param name="iSeasonIndex">The number of seasons from the current
            season to write.</param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.SelectFWTypeByte(System.Byte)">
            <summary>
            This method allows derived classes to overried the firmware Type byte that will be passed 
            to either the authenticate FWDL procedure or the initiate FWDL procedure.
            </summary>
            <param name="byCurrentFWType">The firmware image's type.</param>
            <returns>The firmware type to use to pass to the authenticate FWDL procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter when creating EDL file.
            </summary>
            <param name="IncludedSections">EDL Sections to include</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CommModuleVersion">
            <summary>
            Gets the Comm Module Version as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.TOUConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CalendarConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.OpenWayCommModuleRevision">
            <summary>
            Gets the OpenWayCommModuleRevision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.RMSBelowThresholdCount">
            <summary>
            Gets the number of RMS below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.RMSHighThresholdCount">
            <summary>
            Gets the number of RMS high threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.VhBelowThresholdCount">
            <summary>
            Gets the number of Vh below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.VhHighThresholdCount">
            <summary>
            Gets the number of Vh high threshold counts.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.SwitchCommOperationMode(Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode)">
            <summary>
            Switches the Comm Operational Mode in an Bridge capable meter.
            </summary>
            <param name="opMode">The Comm Operational Mode to which the meter should switch</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.RefreshChoiceConnectData">
            <summary>
            Method causes state and/or time sensitive ChoiceConnect table data to be refreshed
            when their data is next accessed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.IsBridgePhase1Meter">
            <summary>
            Gets whether the meter is a Bridge meter that was released 
            during the initial Bridge project (Phase 1).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectManufacturedMode">
            <summary>
            Gets the mode the Bridge meter was manufactured as.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.CurrentRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.RequestedRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectFWVerRev">
            <summary>
            Gets the ChoiceConnect MSM Firmware Version.Revision string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectFWBuild">
            <summary>
            Gets the ChoiceConnect MSM Firmware Build string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectERTID">
            <summary>
            Gets the ChoiceConnect MSM ERT ID as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectBubbleUpLIDDescription">
            <summary>
            Gets the ChoiceConnect MSM Bubble-up LID translated as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ChoiceConnectSecurityStateDescription">
            <summary>
            Gets the ChoiceConnect MSM Security State as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.Supports25YearTOUSchedule">
            <summary>
             Gets whether or not the 25 Year TOU schedule is supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.IsConfigChoiceConnectCompatible">
            <summary>
            Checks the meter's configuration to make sure that it is compatible with
            ChoiceConnect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.HasPreviousSeasonData">
            <summary>
            Gets whether the meter has any previous season data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonEndDate">
            <summary>
            Gets the end date of the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonRegisters">
            <summary>
            Proves access to a list of Energy Quantities from last season (Std table 24)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonAmpsNeutral">
            <summary>
            Gets the previous season Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonAmpsPhaseA">
            <summary>
            Gets the previous season Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonAmpsPhaseB">
            <summary>
            Gets the previous season Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonAmpsPhaseC">
            <summary>
            Gets the previous season Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonAmpsSquared">
            <summary>
            Gets the previous season Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonQDelivered">
            <summary>
            Gets the previous season Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonQReceived">
            <summary>
            Gets the previous season Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVALagging">
            <summary>
            Gets the previous season Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarDelivered">
            <summary>
            Gets the previous season Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVAReceived">
            <summary>
            Gets the previous season VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarNet">
            <summary>
            Gets the previous season Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarNetDelivered">
            <summary>
            Gets the previous season Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarNetReceived">
            <summary>
            Gets the previous season Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarQuadrant1">
            <summary>
            Gets the previous season Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarQuadrant2">
            <summary>
            Gets the previous season Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarQuadrant3">
            <summary>
            Gets the previous season Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarQuadrant4">
            <summary>
            Gets the previous season Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVarReceived">
            <summary>
            Gets the previous season Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVoltsAverage">
            <summary>
            Gets the previous season Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVoltsPhaseA">
            <summary>
            Gets the previous season Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVoltsPhaseB">
            <summary>
            Gets the previous season Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVoltsPhaseC">
            <summary>
            Gets the previous season Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonVoltsSquared">
            <summary>
            Gets the previous season Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonWattsDelivered">
            <summary>
            Gets the previous season Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonWattsReceived">
            <summary>
            Gets the previous season Watts Received quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonWattsNet">
            <summary>
            Gets the previous season Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonWattsUni">
            <summary>
            Gets the previous season Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.PreviousSeasonPowerFactor">
            <summary>
            Gets the previous season PowerFactor from the standard tables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.GetTOUTimeValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds TOU/Time validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter during program validation.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayAdvPolyITRFBridge.UpdateTOU(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Updates the TOU for the program file.
            </summary>
            <param name="ProgramTables">Program data.</param>
        </member>
        <member name="T:Itron.Metering.Device.BridgeDevice">
            <summary>
            Class to handle all functionality common to Bridge devices.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.VERSION_3_32_BRIDGE_PHASE_1">
            <summary>
            Constant describing the firmware version for Bridge Phase 1 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.MAX_CALENDAR_YEARS">
            <summary>
            The maximum number of years in the calendar configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.MAX_CALENDAR_EVENTS_PER_YEAR">
            <summary>
            The maximum number of events per year in the calendar configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.CALENDAR_YEAR_BASE">
            <summary>
            The base year to use for events in the calendar configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.MAX_SEASONS">
            <summary>
            The maximum number of seasons in the TOU configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.MAX_DAY_OF_EVENTS">
            <summary>
            The maximum number of patterns in the TOU configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.MAX_TIME_OF_DAY_EVENTS">
            <summary>
            The maximum nuber of switchpoints in the TOU configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.UNUSED_CALENDAR_EVENT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.UNUSED_SWITCHPOINT">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CENTRON_AMI)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to communicate with the meter</param>
            <param name="OpenWayDevice">CENTRON_AMI device object.</param>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.CreateBridgeDevice(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CENTRON_AMI)">
            <summary>
            Creates the bridge device if appropriate. 
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="OpenWayDevice">The Device Object for the current device</param>
            <returns>The Comm Module object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.IsBridgeMeter(Itron.Metering.Communications.PSEM.CPSEM,System.Boolean@)">
            <summary>
            Method to determine if device is a bridge meter. 
            </summary>
            <param name="psem">Protocol obj used to identify the meter</param>
            <param name="securityError">An indication of whether a security error occurred while 
            verifying a bridge meter.</param>
            <returns>Whether or not device is a bridge meter.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.CommOpModeSwitch(Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode)">
            <summary>
            Switches the Comm Operational Mode in an MSM capable meter.
            </summary>
            <param name="opMode">The Comm Operational Mode to which the meter should switch</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.RefreshChoiceConnectTableData">
            <summary>
            Method causes state and/or time sensitive ChoiceConnect table data to be refreshed
            when their data is next accessed.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.ReconfigureTOU(System.String,System.Int32)">
            <summary>
            Reconfigures TOU in the connected meter.
            </summary>
            <param name="TOUFileName">The filename including path for the 
            configuration containing the TOU schedule.</param>
            <param name="iSeasonIndex">The number of seasons from the current
            season to write.</param>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.GetTablesToRead">
            <summary>
            Creates a list of tables to read from the meter when creating EDL file.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.GetTablesToRemove">
            <summary>
            Creates a list of tables to read from the meter when creating EDL file.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.SelectFWTypeByte(System.Byte)">
            <summary>
            This method allows Bridge devices to modify the Bridge firmware type byte used in 
            to either the authenticate FWDL procedure or the initiate FWDL procedure.
            </summary>
            <param name="byCurrentFWType">The firmware image's type.</param>
            <returns>The firmware type to use to pass to the authenticate FWDL procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter during program validation.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.Get25YearTOUValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds 25 Year TOU validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Metering.DeviceDataTypes.ProgramValidationItem@)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <param name="InvalidItem">When mismatch is discovered then this will be the ProgramValidationItem for the Invalid value</param>
            <returns>Returns whether or not the item was found.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.UpdateTOU(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Updates the TOU for the program file.
            </summary>
            <param name="ProgramTables">Program data.</param>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.IsTOUEnabled(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Determines if the table data indicates that TOU is configured.
            </summary>
            <param name="tableData">C12.19 table data</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.GetTarrifID(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Retrieves the tarrif ID from the table data.
            </summary>
            <param name="tableData">C12.19 table data</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.GetCalendarID(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Retrieves the Calendar ID from the table data.
            </summary>
            <param name="tableData">C12.19 table data</param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.IsBridgePhase1Meter">
            <summary>
            Gets whether the meter is a Bridge meter that was released 
            during the initial Bridge project (Phase 1).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.CurrentRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.RequestedRegisterCommOpMode">
            <summary>
            Gets the register's requested communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectCommModuleManufacturedMode">
            <summary>
            Gets the Bridge meter's manufactured mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectFWVerRev">
            <summary>
            Gets the ChoiceConnect MSM Firmware Version.Revision string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectFWBuild">
            <summary>
            Gets the ChoiceConnect MSM Firmware build string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectERTID">
            <summary>
            Gets the ChoiceConnect MSM ERT ID as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectBubbleUpLIDDescription">
            <summary>
            Gets the ChoiceConnect MSM Bubble-up LID translated as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.ChoiceConnectSecurityStateDescription">
            <summary>
            Gets the ChoiceConnect MSM Security State as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.IsConfigChoiceConnectCompatible">
            <summary>
            Checks the meter's configuration to make sure that it is compatible with
            ChoiceConnect
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.OpenWayCommModVer">
            <summary>
            Gets the OpenWay Comm module version.revision from 
            the ChoiceConnect state table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.OpenWayCommModuleVersion">
            <summary>
            Gets the OpenWay Comm Module Version as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.OpenWayCommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.OpenWayCommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.OpenWayCommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.TOUConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.CalendarConfiguration">
            <summary>
            Gets the current Calendar configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.Supports25YearTOUSchedule">
            <summary>
            Gets whether or not the 25 Year TOU schedule is supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.RMSBelowThresholdCount">
            <summary>
            Gets the number of RMS below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.RMSHighThresholdCount">
            <summary>
            Gets the number of RMS high threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.VhBelowThresholdCount">
            <summary>
            Gets the number of Vh below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.VhHighThresholdCount">
            <summary>
            Gets the number of Vh high threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonRegisters">
            <summary>
            Proves access to a list of Energy Quantities from last season (Std table 24)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonAmpsNeutral">
            <summary>
            Gets the Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonAmpsPhaseA">
            <summary>
            Gets the Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonAmpsPhaseB">
            <summary>
            Gets the Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonAmpsPhaseC">
            <summary>
            Gets the Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonAmpsSquared">
            <summary>
            Gets the Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonQDelivered">
            <summary>
            Gets the Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonQReceived">
            <summary>
            Gets the Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVALagging">
            <summary>
            Gets the Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarDelivered">
            <summary>
            Gets the Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVAReceived">
            <summary>
            Gets the VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarNet">
            <summary>
            Gets the Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarNetDelivered">
            <summary>
            Gets the Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarNetReceived">
            <summary>
            Gets the Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarQuadrant1">
            <summary>
            Gets the Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarQuadrant2">
            <summary>
            Gets the Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarQuadrant3">
            <summary>
            Gets the Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarQuadrant4">
            <summary>
            Gets the Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVarReceived">
            <summary>
            Gets the Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVoltsAverage">
            <summary>
            Gets the Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVoltsPhaseA">
            <summary>
            Gets the Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVoltsPhaseB">
            <summary>
            Gets the Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVoltsPhaseC">
            <summary>
            Gets the Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonVoltsSquared">
            <summary>
            Gets the Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonWattsDelivered">
            <summary>
            Gets the Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonWattsReceived">
            <summary>
            Gets the Watts Received quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonWattsNet">
            <summary>
            Gets the Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonWattsUni">
            <summary>
            Gets the Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonPowerFactor">
            <summary>
            Gets the Power Factor from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.PreviousSeasonEndDate">
            <summary>
            Gets the end date of the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.Table24">
            <summary>
            Gets the Table 24 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.Table2428">
            <summary>
            Gets the ChoiceConnect State table and creates it if needed.
            If the meter does not support this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.Table2429">
            <summary>
            Gets the ChoiceConnect Configuration table and creates it if needed. 
            If the meter does not support this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BridgeDevice.Table2437">
            <summary>
            Gets the 25 Year TOU Schedule table and creates it if needed. 
            If the meter does not support this table null will be returned.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.Write25YearTOU(System.String)">
            <summary>
            Reconfigures 25 Year TOU schedule using the specified EDL file
            </summary>
            <param name="strFileName">The EDL file that contains the TOU data.</param>
            <returns>TOUReconfigResult code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.DecodeSeasonChangeOptions(System.Byte)">
            <summary>
            This method decodes the given byte value for the season change option
            to a string.
            </summary>
            <param name="byOption">Season change option</param>
            <returns>Decoded value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.DecodeCalendarEvent(System.Byte)">
            <summary>
            This method decodes the given value for the calendar event
            into a string.
            </summary>
            <param name="byEvent">Calendar event.</param>
            <returns>Decoded value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.DecodeEvent(System.Byte)">
            <summary>
            This method decodes the given value for the Time Of Day event
            into a string.
            </summary>
            <param name="byEvent">Time of Day event, i.e new rate to use.</param>
            <returns>Decoded value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BridgeDevice.CheckForUnusedItem(System.String,System.String@)">
            <summary>
            This method checks for unused items.
            </summary>
            <param name="strUnusedValue">The value an unused item will have.</param>
            <param name="strItemToCheck">The item to check if unused.</param>
            <returns>Returns boolean indicating whether or not item is unused.</returns>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.m_RMSBelowThreshold">
            <summary>
            Counter for the Number of RMS Below Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.m_RMSHighThreshold">
            <summary>
            Counter for the Number of RMS High Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.m_VhBelowThreshold">
            <summary>
            Counter for the Number of Vh Below Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BridgeDevice.m_VhHighThreshold">
            <summary>
            Counter for the Number of Vh High Threshold
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.COpenWayITRDBridge">
            <summary>
            Device server class for the ITRD single phase meter
            </summary>
            <summary>
            The ITRD single phase bridge meter device server class implementation of the IBridge interface.
            </summary>
            <summary>
            The ITRD single phase bridge meter device server class implementation of the IPreviousSeason interface.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.GetTOUTimeValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds TOU/Time validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter during program validation.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.UpdateTOU(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Updates the TOU for the program file.
            </summary>
            <param name="ProgramTables">Program data.</param>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.OpenWayCommModuleRevision">
            <summary>
            Gets the OpenWayCommModuleRevision
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.IsBridgeMeter(Itron.Metering.Communications.PSEM.CPSEM,System.Boolean@)">
             <summary>
             Method to determine if device is a bridge meter. Used to determine whether or not to
             instantiate this class.
             </summary>
             <param name="PSEM">Protocol obj used to identify the meter</param>
            <param name="securityError">An indication of whether a security error occurred while 
             verifying a bridge meter.</param>
             <returns>Whether or not device is a bridge meter.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.ReconfigureTOU(System.String,System.Int32)">
            <summary>
            Reconfigures TOU in the connected meter.
            </summary>
            <param name="TOUFileName">The filename including path for the 
            configuration containing the TOU schedule.</param>
            <param name="iSeasonIndex">The number of seasons from the current
            season to write.</param>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CommModuleVersion">
            <summary>
            Gets the Comm Module Version as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.TOUConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CalendarConfiguration">
            <summary>
            Gets the current TOU configuration.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter when creating EDL file.
            </summary>
            <param name="IncludedSections">EDL Sections to include</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.SelectFWTypeByte(System.Byte)">
            <summary>
            This method allows derived classes to overried the firmware Type byte that will be passed 
            to either the authenticate FWDL procedure or the initiate FWDL procedure.
            </summary>
            <param name="byCurrentFWType">The firmware image's type.</param>
            <returns>The firmware type to use to pass to the authenticate FWDL procedure.</returns>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.RMSBelowThresholdCount">
            <summary>
            Gets the number of RMS below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.RMSHighThresholdCount">
            <summary>
            Gets the number of RMS high threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.VhBelowThresholdCount">
            <summary>
            Gets the number of Vh below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.VhHighThresholdCount">
            <summary>
            Gets the number of Vh high threshold counts.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.SwitchCommOperationMode(Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode)">
            <summary>
            Switches the Comm Operational Mode in an Bridge capable meter.
            </summary>
            <param name="opMode">The Comm Operational Mode to which the meter should switch</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.COpenWayITRDBridge.RefreshChoiceConnectData">
            <summary>
            Method causes state and/or time sensitive ChoiceConnect table data to be refreshed
            when their data is next accessed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.IsBridgePhase1Meter">
            <summary>
            Gets whether the meter is a Bridge meter that was released 
            during the initial Bridge project (Phase 1).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectManufacturedMode">
            <summary>
            Gets the mode the Bridge meter was manufactured as.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.CurrentRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.RequestedRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectFWVerRev">
            <summary>
            Gets the ChoiceConnect MSM Firmware Version.Revision string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectFWBuild">
            <summary>
            Gets the ChoiceConnect MSM Firmware Build string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectERTID">
            <summary>
            Gets the ChoiceConnect MSM ERT ID as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectBubbleUpLIDDescription">
            <summary>
            Gets the ChoiceConnect MSM Bubble-up LID translated as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.ChoiceConnectSecurityStateDescription">
            <summary>
            Gets the ChoiceConnect MSM Security State as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.Supports25YearTOUSchedule">
            <summary>
             Gets whether or not the 25 Year TOU schedule is supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.IsConfigChoiceConnectCompatible">
            <summary>
            Checks the meter's configuration to make sure that it is compatible with
            ChoiceConnect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.HasPreviousSeasonData">
            <summary>
            Gets whether the meter has any previous season data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonEndDate">
            <summary>
            Gets the end date of the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonRegisters">
            <summary>
            Proves access to a list of Energy Quantities from last season (Std table 24)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonAmpsNeutral">
            <summary>
            Gets the previous season Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonAmpsPhaseA">
            <summary>
            Gets the previous season Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonAmpsPhaseB">
            <summary>
            Gets the previous season Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonAmpsPhaseC">
            <summary>
            Gets the previous season Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonAmpsSquared">
            <summary>
            Gets the previous season Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonQDelivered">
            <summary>
            Gets the previous season Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonQReceived">
            <summary>
            Gets the previous season Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVALagging">
            <summary>
            Gets the previous season Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarDelivered">
            <summary>
            Gets the previous season Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVAReceived">
            <summary>
            Gets the previous season VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarNet">
            <summary>
            Gets the previous season Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarNetDelivered">
            <summary>
            Gets the previous season Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarNetReceived">
            <summary>
            Gets the previous season Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarQuadrant1">
            <summary>
            Gets the previous season Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarQuadrant2">
            <summary>
            Gets the previous season Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarQuadrant3">
            <summary>
            Gets the previous season Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarQuadrant4">
            <summary>
            Gets the previous season Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVarReceived">
            <summary>
            Gets the previous season Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVoltsAverage">
            <summary>
            Gets the previous season Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVoltsPhaseA">
            <summary>
            Gets the previous season Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVoltsPhaseB">
            <summary>
            Gets the previous season Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVoltsPhaseC">
            <summary>
            Gets the previous season Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonVoltsSquared">
            <summary>
            Gets the previous season Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonWattsDelivered">
            <summary>
            Gets the previous season Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonWattsReceived">
            <summary>
            Gets the previous season Watts Received quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonWattsNet">
            <summary>
            Gets the previous season Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonWattsUni">
            <summary>
            Gets the previous season Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.COpenWayITRDBridge.PreviousSeasonPowerFactor">
            <summary>
            Gets the previous season PowerFactor from the standard tables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI">
            <summary>
            The CENTRON_AMI class implementation of the ICommModVersions interface.
            </summary>
            <summary>
            The CENTRON_AMI class implementation of the IHANInformation interface.
            </summary>
            <summary>
            Class representing the CENTRON AMI.
            </summary>
            <summary>
            Class representing the CENTRON_AMI, IClientMetering interface
            </summary>
            <summary>
            Class representing the CENTRON AMI. (IFirmwareDownload implementation)
            </summary>
            <summary>
            Class representing the CENTRON_AMI, IPending interface
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModType">
            <summary>
            Gets the Comm module type (IP or RFLAN)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleVersion">
            <summary>
            Gets the Comm Module Version as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AddHANDevice(System.UInt64,System.Byte[],System.Int32@)">
            <summary>
             Add a HAN Device to the meter and return the Procedure Result with an out offset parameter
            </summary>
            <param name="deviceEUI">Device EUI</param>
            <param name="linkKey">linkKey derived from installation code</param>
            <param name="offset">offset received once the procedure is executed successfully, used in order to get the offset</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishFullHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Writes all of the prices and tiers at one time
            </summary>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigCppWithHANPricing(System.UInt32,System.Byte,System.String,System.UInt32,System.Byte,System.Int16,System.Byte,System.DateTime,System.UInt16,System.UInt32)">
            <summary>
            Configure CPP with HAN Pricing Data
            </summary>
            <param name="uiProviderID">The ID of the provider</param>
            <param name="byRateLabelLength">The length of the rate label + 1</param>
            <param name="strRateLabel">The label for the rate</param>
            <param name="uiIssuerEventID">The issuer event ID</param>
            <param name="byUnitOfMeasure">The unit of measure of the rate</param>
            <param name="uiCurrency">The currency for the rate</param>
            <param name="byPriceTrailingDigit">The trailing digit for the price</param>
            <param name="startTime">Start Time</param>
            <param name="duration">Duration in minute.  The length must be at least a demand sub-interval length.</param>
            <param name="uiPrice">The price being charged</param>
            <returns>The CPP configuration result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ScheduleHANDRLCEvent(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Schedules the DR/LC event at the specified time and duration
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="startTime">The time the event should start</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANCancelDRLCEvent(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="EffectiveTime">The time the event should start</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANCancelAllDRLCEvent(System.UInt64,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureHANChannels(Itron.Metering.Device.HANChannels)">
            <summary>
            Reconfigures the meter to use the specified HAN channels
            </summary>
            <param name="channels">The channels that should be used by the meter.</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishHANMessage(System.UInt32,System.DateTime,System.UInt16,System.Byte,Itron.Metering.DeviceDataTypes.AMIHANMsgRcd.MessagePriority,System.Boolean,System.String)">
            <summary>
            Publishes a HAN message to any devices bound to the Messaging cluster
            </summary>
            <param name="MessageID">Number to identify the message (duplicate Message IDs may be ignored by the end devices)</param>
            <param name="StartTime">When the message will become active</param>
            <param name="DurationInMinutes">How long from the start time the message will be able to be retrieved by an end device</param>
            <param name="Destination">Message Transmission values as defined in the ZigBee Smart Energy 
            profile spec. Bits 0 and 1 of MSG_CTRL</param>
            <param name="Priority"> Message Priority values as defined in the ZigBee Smart Energy 
            profile spec. Bits 2 and 3 of MSG_CTRL</param>
            <param name="ConfirmationRequired">Whether confirmation is required from end devices upon receipt of this message</param>
            <param name="MessageText">The actual text to send to the end device</param>
            <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishSingleHANPrice(Itron.Metering.Device.AMIHANPriceEntryRcd,System.Int32)">
             <summary>
             Publishes a HAN pricing table to any devices bound to the Pricing cluster by doing a full write
             to the Pricing table after a full read and overwriting the price at index - PriceIndex
             </summary>
            <param name="PriceInfo">An instance of an AMIHANPriceEntryRcd which contains the pricing data to send</param>
            <param name="PriceIndex">Index of which price to write over in the HAN pricing table</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CancelHANMessage(System.UInt32)">
            <summary>
            Cancels the message with the specified message ID
            </summary>
            <param name="messageID">The ID of the message to cancel</param>
            <returns>The response from the cancel message</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetHANSecurityMode(System.Byte)">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="securityMode">The Security Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetHanDeviceAuthMode(System.Byte)">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetHanCbkeMode(System.Byte)">
            <summary>
            Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetUtilityEnrollmentGroup(System.UInt64,System.Byte)">
            <summary>
            Sets the Utility Enrollment Group for a HAN device registered to the meter.
            </summary>
            <param name="clientAddress">The address of the client the message is intended for</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group for the device</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EnabledDownstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EnabledUpstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UpstreamHANLogEvents">
            <summary>
            Gets the list of Upstream HAN events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SupportedUpstreamHANLogEvents">
            <summary>
            Gets the list of supported Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DownstreamHANLogEvents">
            <summary>
            Gets the list of Downstream HAN Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SupportedDownstreamHANLogEvents">
            <summary>
            Gets the list of supported Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UpstreamHANEventDataLength">
            <summary>
            Gets the length of HAN upstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DownstreamHANEventDataLength">
            <summary>
            Gets the length of HAN downstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxUpstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN upstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDownstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN downstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DownstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Downstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UpstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Upstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfSupportDRLCEvents">
            <summary>
            Gets the number of supported DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumOfValidEntries">
            <summary>
            Gets the Number of Valid DRLC Entries in the Meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANPrices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANTiers">
            <summary>
            The HAN tier records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AMIHANDevRecords">
            <summary>
            Gets all the AMI HAN Device Records from table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AMIHANRspLogRecords">
            <summary>
            Gets all the AMI HAN Response Log records from table 2131
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AMIHANMfgInfoRecords">
            <summary>
            Gets all the AMI HAN Manufacturer Info records from table 2137
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AMIHANDiagnosticReadRecord">
            <summary>
            Gets a dump of the entire Mfg Table 2244.  Table 2244 contains the HAN Diagnostic Status 
            Read Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActualNumberOfHANDevicesJoined">
            <summary>
            Retrieves the number of HAN devices that are currently joined to the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DRLCMessagesWithExpired">
            <summary>
            Gets the list of DRLC Messages in the meter includeing the expired ones.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANStartupOptions">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANChannelsUsed">
            <summary>
            Gets the HAN Channels used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SimpleMeteringMultiplier">
            <summary>
            Gets the Simple Metering Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SimpleMeteringDivisor">
            <summary>
            Gets the Simple Metering Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANConfigVersion">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANSecurityProfile">
            <summary>
            Reads the HANSecurityProfile out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANSecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANSecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanDeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanDeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanCbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanCbkeModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ZigBeePowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ZigBeeKeyPairs">
            <summary>
            Gets the ZigBee key pair. The value will be null if not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANServerMACAddr">
            <summary>
            String version of the MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANNetworkID">
            <summary>
            Personal area network identifier (in Hex) for the HAN (Zigbee) network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANPANID">
            <summary>
            PAN Id for the HAN network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANMACAddress">
            <summary>
            The MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANChannelNbr">
            <summary>
            The current HAN (Zigbee) channel number in text format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANChannel">
            <summary>
            The current HAN (Zigbee) channel number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BindingEntries">
            <summary>
            The current HAN (Zigbee) binding entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANDivisor">
            <summary>
            The HAN divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsZigBeeFirmwareCompatible">
            <summary>
            Gets whether or not the current ZigBee firmware is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MinZigBeeVersion">
            <summary>
            Gets the Minimum required ZigBee FW version for the current register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CurrentNetworkStatus">
            <summary>
            Gets the current network status: 0 => Network up; 1 => Network down; 2 => Network forming; 3 => invalid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANMultiplier">
            <summary>
            The HAN multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANSupported">
            <summary>
            Gets whether the meter supports HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANEventsSupported">
            <summary>
            Gets whether the meter supports HAN event logs.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANAppVersion">
            <summary>
            Gets the HAN App version from table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANAppRevision">
            <summary>
            Gets the HAN App revision from table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANAppBuild">
            <summary>
            Gets the HAN App build from table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANRadioOff">
            <summary>
             Gets whether or not HAN radio is off
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CENTRONAMI">
            <summary>
            Meter type identifier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CENTRONAMI_NAME">
            <summary>
            Human readable name of meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.ITRT_NAME">
            <summary>
            Human readable name for transparent devices.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.ITRL_NAME">
            <summary>
            Human readable name for host meter devices.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LOG_ITR1_NAME">
            <summary>
            Name used in the activity log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LOG_ITRT_NAME">
            <summary>
            Name used in the activity log for transparent devices.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.MANUFACTURER">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL_FUNC_CODE">
            <summary>
            Function code for the Cause Fatal error procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL_PARAM_1">
            <summary>
            Parameter 1 for the Cause Fatal error procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL_PARAM_2">
            <summary>
            Parameter 2 for the Cause Fatal error procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL2_PARAM_1">
            <summary>
            Parameter 1 for the Cause Fatal error 2 procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL2_PARAM_2">
            <summary>
            Parameter 2 for the Cause Fatal error 2 procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL6_PARAM_1">
            <summary>
            Parameter 1 for the Cause Fatal error 2 procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CAUSE_FATAL6_PARAM_2">
            <summary>
            Parameter 2 for the Cause Fatal error 2 procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SEC_ENERGY_LID_BASE">
            <summary>
            Secondary Energy Base LID value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FORMAT_FLASH_FUNC_CODE">
            <summary>
            Function code for the Format Flash procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FORMAT_FLASH_PARAM_1">
            <summary>
            Parameter 1 for the Format Flash procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FORMAT_FLASH_PARAM_2">
            <summary>
            Parameter 2 for the Format Flash procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RESET_RF_FUNC_CODE">
            <summary>
            Function code for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RESET_RF_PARAM_1">
            <summary>
            Parameter 1 for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RESET_RF_PARAM_2">
            <summary>
            Parameter 2 for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PRISM_LITE_HW_MASK">
            <summary>
            Mask for the PrismLite nibble of the hardware version.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FW_LOADER_ARM_OFFSET">
            <summary>
            Memory offset for the FW Loader version in an ARM based meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FW_LOADER_M16C_OFFSET">
            <summary>
            Memory offset for the FW Loader version in an M16C based meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.NUM_LAST_DEMAND_RESETS">
            <summary>
            Number of Last Demand Resets in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LOAD_CONTROL_RECONNECT">
            <summary>
             Load Control Reconnect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TOU_RATES">
            <summary>
            The list of the TOU Rate modifiers for LIDs
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.MFG_PROC_46_RESPONSE_LENGTH">
            <summary>
            Length of the response for MFG Procedure 46
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HW_VERSION_3_0">
            <summary>
            Constant Describing the Hardware Version for 3.0 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TIME_ON_BATT_FUNC_CODE">
            <summary>
            Function code for the set time on battery procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SOFT_EPF_PARAM_1">
            <summary>
            Parameter 1 for the Soft EPF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SOFT_EPF_PARAM_2">
            <summary>
            Parameter 2 for the Soft EPF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.ACTIVATION_TRIGGER_LEN">
            <summary>
            Length in bytes of the activation trigger for pending tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_SET_TIME_DATE_MASK">
            <summary>
            The Set Time Date Mask for setting the clock
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FW_LOADER_MAXIMA_OFFSET">
            <summary>
            Memory offset for the FW Loader version in MAXIMA meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CORE_DUMP_BLOCK_SIZE">
            <summary>
            The size of the block to read.dee
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.CORE_DUMP_HEADER_SIZE">
            <summary>
            The size of the Core Dump Header
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FULL_CORE_DUMP_OFFSET">
            <summary>
            The Offset in the Core Dump file to write the full core dump
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PRE_CORE_DUMP_DATAFLASH_PAGE">
            <summary>
            Dataflash page to find the pre-core dump data on HW 3.0 meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LITHIUM_ALT_PRE_CORE_DUMP_DATAFLASH_PAGE">
            <summary>
            Dataflash page to find the pre-core dump data on HW 3.0 meters with 
            Lithium firmware versions 3.12.5 - 3.12.26.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.DATAFLASH_PAGE_SIZE">
            <summary>
            The size of dataflash page in meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PRE_CORE_DUMP_SIZE">
            <summary>
            The size of the pre-core dump.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.OPTICAL_PASSWORD_LEN">
            <summary>
            Constant describing the length of the optical passwords
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_3_1">
            <summary>
            Constant describing the firmware version for SR 3.0 HW 3.0 release
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_HYDROGEN_3_6">
            <summary>
            Constant describing the firmware version for Hydrogen/Helium 3.006
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_HYDROGEN_3_7">
            <summary>
            Constant describing the firmware version for Hydrogen/Helium 3.007
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_HYDROGEN_3_8">
            <summary>
            Constant describing the firmware version for Hydrogen/Helium 3.008 (HW 3.X release)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_HYDROGEN_3_10">
            <summary>
            Constant describing the firmware version for Hydrogen C, 3.010
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_LITHIUM_3_11">
            <summary>
            Constant describing the firmware version for Lithium, 3.011
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_LITHIUM_PLUS_3_14">
            <summary>
            Constant describing the firmware version for Lithium+, 3.014
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_GREATER_THAN_BRIDGE_PHASE1_4_00">
            <summary>
            Constant describing firmware version that is next version greater than Bridge Phase 1 (3.32)
            There are no FW versions between 3.32 and 4.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_BORON_5_0">
            <summary>
            Constant describing the firmware version for Boron, 5.000
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_BORON_5_2">
            <summary>
            Constant describing the firmware version for Boron, 5.002
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_M2GTWY_1_0">
            <summary>
            Constant describing the firmware version for M2 Gateway, initial release, 1.000
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_M2GTWY_2_0">
            <summary>
            Constant describing the firmware version for M2 Gateway Lithium, 2.000
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_MICHIGAN">
            <summary>
            Constant describing the firmware version for Michigan
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_SR6_6_4GLTE">
            <summary>
            Constant describing the firmware version for SR 6.6
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_6_005_BERYLLIUM_HW_3_x">
            <summary>
            Constant describing the firmware version for Beryllium. 6.005 will only run on HW 3.0/3.1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_4_000_BERYLLIUM_HW_2_0">
            <summary>
            Constant describing the firmware version for Beryllium. 4.000 will only run on HW 2.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VERSION_BERYLLIUM">
            <summary>
             Constant describing the firmware version for Beryllium
             </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.METROLOGY_STATISTICS_TABLE">
            <summary>
            Constant for the metrology statistics table number.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.VARH_QUANTITY_NAME">
            <summary>
            Constant for the name of the varh quanity.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.LANEvents">
            <summary>
            Enumeration of LAN Communication Log Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.BEGIN_MFG_LAN_EVENTS">
            <summary>Mark the beginning of the MFG LAN Events</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_LINK_FAILURE">
            <summary>RFLAN went from synchronized to not synchronized</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_LINK_SWITCH">
            <summary>Same as COMEVENT_C1222_RFLAN_CELL_CHANGE</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_LINK_UP">
            <summary>RFLAN went from not Synchronized to Synchronized</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_LINK_METRIC">
            <summary>Link Metrics</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_PERIODIC_READ_FAILED">
            <summary>Send of Periodic Read Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_PERIODIC_READ_SUCCESS">
            <summary>Send of Periodic Read Succeeded</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_EXCEPTION_FAILED">
            <summary>Send of Exception Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_EXCEPTION_SUCCESS">
            <summary>Send of Exception Succeeded</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_RESPONSE_FAILED">
            <summary>Send of Response Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_RESPONSE_SUCCESS">
            <summary>Send of Response Succeeded</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_SENT_SEGMENT_BYTES">
            <summary>Sent Segment Bytes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_RECEIVED_SEGMENT_BYTES">
            <summary>Received Segment Bytes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_RECEIVED_REQUEST">
            <summary>Request Received</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SENT_RESPONSE">
            <summary>Response Sent</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_MESSAGE_SUCCEEDED">
            <summary>The messsage was sent successfully</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SENT_MESSAGE_FAILED">
            <summary>The message could not be sent to the comm module</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_CONFIGURED_SEND_FAILURE_LIMIT_EXCEEDED">
            <summary>Send Failure Limit Exceeded</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_REGISTRATION_RESULT">
            <summary>Result of the Registration</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_DEREGISTRATION_RESULT">
            <summary>Result of the Deregistration</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_COMM_MODULE_LINK_RESET">
            <summary>Comm Module Link Reset</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_COMM_MODULE_LINK_FAILED">
            <summary>Comm Module Link Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_COMM_MODULE_LINK_UP">
            <summary>Comm Module Link Up</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_LEVEL_CHANGE">
            <summary>Level Change</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_BEST_FATHER_CHANGE">
            <summary>Best Father Changed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SYNCH_FATHER_CHANGE">
            <summary>Synch Father Changed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_PROCESS_RCVD_MSG_TIMING">
            <summary>Process Received Message Timing</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_REGISTRATION_ATTEMPT">
            <summary>Registration Attempt</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_REGISTERED">
            <summary>Registered</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_DEREGISTRATION_ATTEMPT">
            <summary>Deregistration Attempt</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_DEREGISTERED">
            <summary>Deregistered</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_RFLAN_CELL_CHANGE">
            <summary>RFLAN Cell Changed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_RECEIVED_INVALID_MESSAGE">
            <summary>Received an Invalid Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_RECEIVED_MESSAGE_FROM">
            <summary>Received a Message from...</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_SENT_MESSAGE_TO">
            <summary>Sent a Message to...</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_PR_SEND_TABLE">
            <summary>Periodic Read Send Table</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_PR_SEND_TABLE_FAILED">
            <summary>Periodic Read Send Table Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_RESET">
            <summary>Reset</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SENT_SIMPLE_ERROR_RESPONSE">
            <summary>Simple Error Response Sent</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_RFLAN_COLD_START">
            <summary>RFLAN Cold Start Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_INCOMING_SEGMENT_DISCARDED_IN_KEEPALIVE">
            <summary>Incoming Segment Discarded in Keep Alive Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_COMM_LOG_TEST">
            <summary>Comm Log Test Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_COMM_LOG_ONE_HR_MAX">
            <summary>Comm Log One Hour Maximum Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_PERIODIC_READ_TIMING">
            <summary>Periodic Read Timing Info Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_FAILED_ADD_EXCEPTION_ID">
            <summary>Failed to Add Exception ID Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_FAILED_ADD_EXCEPTION_DETAIL">
            <summary>Failed to Add Exception Detail Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_ADDED_EXCEPTION_ID">
            <summary>Successfully Added Exception ID Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_EVENT_CACHE_OVERFLOWED">
            <summary>Event Cache Overflow Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_IDENT_REQUEST_FAILED">
            <summary>SMS Wakeup IDENT Request Failed Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_SEND_IDENT_REQUEST">
            <summary>SMS Wakeup IDENT Request Enqueued Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.COMEVENT_C1222_FIRMWARE_BLOCK_CRC_ERRORS">
            <summary>CRC Errors Were Seein in FW Blocks Recieved In Last Hour Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LANEvents.END_MFG_LAN_EVENTS">
            <summary>Mark the end of the MFG LAN Events</summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.HANEvents">
            <summary>
            Enumeration of HAN Communication Log Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.BEGIN_MFG_HAN_EVENTS">
            <summary>Mark the beginning of the MFG HAN Events</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_MSG">
            <summary>ZigBee Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_KEY_EST_MSG">
            <summary>ZigBee Key Established Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_PRICE_MSG">
            <summary>ZigBee Pricing Messsage</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_DRLC_MSG">
            <summary>ZigBee DRLS Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_SIMPLE_METERING_MSG">
            <summary>ZigBee Simple Metering Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_MESSAGING_MSG">
            <summary>ZigBee Messaging Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_SE_TUNNELING_MSG">
            <summary>ZigBee SE Tunneling Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.EVENT_ZIGBEE_PREPAY_MSG">
            <summary>ZigBee Pre-Pay Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANEvents.END_MFG_HAN_EVENTS">
            <summary>Mark the end of the MFG LAN Events</summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.EnterExitTestModeResult">
            <summary>
            Enumeration for the Enter/Exit Test mode Result Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnterExitTestModeResult.SUCCESS">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnterExitTestModeResult.FAILED">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnterExitTestModeResult.BUSY">
            <summary>
            Busy
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnterExitTestModeResult.INAPPROPRIATE">
            <summary>
            Inappropriate
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems">
            <summary>
            Enumeration for the optional items that can be removed from a periodic read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems.NONE">
            <summary>
            Remove none of the optional items from the periodic read.  
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems.PROGRAM_STATE">
            <summary>
            Remove the program state data from the periodic read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems.MCU_INFORMATION">
            <summary>
            Remove the MCU inforation from the periodic read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems.ALL">
            <summary>
            Remove all optional items from the periodic read.  All flags set.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS">
            <summary>
            Firmware download status and progress history
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.Unknown">
            <summary>
            Initial status of a device that never entered download mode.
            Not indicative of whether the device supports FW download or not.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.BadFileSize">
            <summary>
            File size was not correct.  Device will not support download of 
            this image
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.BadHWRevision">
            <summary>
            Hardware Revision was not correct.  Device will not support 
            download of this image
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.BadHWVersion">
            <summary>
            Hardware version was not correct.  Device will not support 
            download of this image
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.BadFWType">
            <summary>
            Firmware type was incorrect.  HAN device failed to activate the image.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.BadCRC">
            <summary>
            HAN device failed to activate the image due to a bad CRC32.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.RetryFailed">
            <summary>
            This status is set after receiving a device deemed to fail due
            to excessive image errors.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.InsufficientBlocks">
            <summary>
            HAN device has incomplete image.  Device failed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.DownloadInProgress">
            <summary>
            This status will be set by the electric meter to indicate that
            the device is the one actively downloading firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.InvalidFWType">
            <summary>
            Firmware type was invalild.  Device will not support download 
            of this image.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.InvalidDeviceClass">
            <summary>
            Device class was incorrect.  Device will not support download 
            of this image.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.InitiateFailure">
            <summary>
            After trying to initiate download twice with a device known to
            support FW download, if no response is heard, the device is moved
            to this status.  Device will not support download.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.VersionRunning">
            <summary>
            HAN device is operating with the firmware version that the electric
            meter is trying to download.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.VersionDownloaded">
            <summary>
            The next step would be to send time at the next communication with
            the device, and promote it to READY FOR ACTIVATION
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.VoltageOutOfRange">
            <summary>
            This is a fatal error that is reported to the head end.  The HAN
            module and electric meter shall abort download.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.FlashWriteFailure">
            <summary>
            This is a fatal error that is reported to the head end.  The HAN
            module and the electric meter shall abort download.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.DownloadSetup">
            <summary>
            This status is set starting/resuming a download
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.SuccessfulEndOfTransfer">
            <summary>
            This status is set when a HAN module responds to the last packet
            of the last page of the image with a Load Image Packet Response, 
            but before a Download Complete Response is received by the electric
            meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.ActivationSent">
            <summary>
            This status is set after sending Activate Download Command.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.Activating">
            <summary>
            The HAN device shuts radio off and does image CRC check.  Upon
            waking up, the HAN device will join the same electric meter
            hopefully and we will expect 'Version Running', 'Bad CRC', or 
            'Bad FW Type'.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.Paused">
            <summary>
            This status is set when a HAN module responds to a Pause command,
            or if the IDLE_WAKEUP_SENT timer expires while the HAN module is 
            in SYNC_PACKET_SENT status and no Load Image Packet Response is
            heard back.  This status is also set if a magnet swipe occurs at
            the gas module, or if the meter cannot download to the gas module
            because there is another ongoing download.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.ResyncNeeded">
            <summary>
            This status is set after failing to receive a Load Image Packet
            Response at the end of the page within an IDLE_PAGE_SEND_TIMER
            timer expires.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.SyncPacketSent">
            <summary>
            This status is set after sending a HAN module a wake up packet
            when the IDLE_PAGE_SEND_TIMER timer expires.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.ReadyForActivation">
            <summary>
            This status is set after sending a HAN module a Set Time command
            if it was in VERSION DOWNLOADED.  The HAN module must be in READY
            FOR ACTIVATION before an Activate Download Command can be sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS.HeadEndCancellation">
            <summary>
            This status is set when a HAN module is sent a Cancel by the Head
            End, and validated when it responds with a Stop Download Response.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.TestMode">
            <summary>
            Test Mode for Basic and Advanced Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TestMode.ENTER_TEST_MODE">
            <summary>
            Enter Test Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TestMode.EXIT_TEST_MODE">
            <summary>
            Exit test Mode
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.DESKeys">
            <summary>
            Identifier for the specific DES security key to be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.DESKeys.DESKey1">
            <summary>
            C1222 Key 1 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.DESKeys.DESKey2">
            <summary>
            C1222 Key 2 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.DESKeys.DESKey3">
            <summary>
            C1222 Key 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.DESKeys.DESKey4">
            <summary>
            C1222 Key 4
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.HANKeys">
            <summary>
            Identifier for the specific HAN security key to be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANKeys.NetworkKey">
            <summary>
            Network Key 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HANKeys.LinkKey">
            <summary>
            Link Key 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys">
            <summary>
            Identifier for the specific Enhanced security key to be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.CommandKey1">
            <summary>
            Command Key 1 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.CommandKey2">
            <summary>
            Command Key 2 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.CommandKey3">
            <summary>
            Command Key 3 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.CommandKey4">
            <summary>
            Command Key 4 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.RevocationKey1">
            <summary>
            Revocation Key 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.EnhancedKeys.RevocationKey2">
            <summary>
            Revocation Key 2
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.TaskName">
            <summary>
            Task Name for procedure 2270
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.IDLE_Task">
            <summary>
            Idle Task 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.EPF_Task">
            <summary>
            EPF task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.MODEMAN_Task">
            <summary>
            MODEMAN Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.EVENTMAN_Task">
            <summary>
            EVENTMAN Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.ANSI_1_Task">
            <summary>
            ANSI_1_Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.FW_DL_Task">
            <summary>
            FW_DL Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.PSEM_Task">
            <summary>
             PSEM Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.C1222_REG_Task">
            <summary>
            C1222_REG_Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.C1222_ANSI_or_EXT_FLASH_Task">
            <summary>
            C1222_ANSI_Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.ZIGBEE_Task">
            <summary>
            ZIGBEE_Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.ZIGBEE_STACK_Task">
            <summary>
            ZIGBEE_STACK_Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.SHIM_Task">
            <summary>
            Shim Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.IP_STACK_Task">
            <summary>
            IP Stack Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.IP_STACK_RESET_Task">
            <summary>
            Stack Reset Task
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.TaskName.C1222_STACK_RESET_Task">
            <summary>
            C1222 Stack Task
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.FWDLEventIDType">
            <summary>
            Identifier for Firwmare Download Event ID Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FWDLEventIDType.RegisterFirmwareActivated">
            <summary>
            Register Firmware Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FWDLEventIDType.RFLANFirmwareActivated">
            <summary>
            RFLAN Firmware Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FWDLEventIDType.ThirdPartyFirmwareActivated">
            <summary>
            Third Party Firmware Activated
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.FWDLEventSourceType">
            <summary>
            Identifier for Firwmare Download Event Source Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FWDLEventSourceType.OpticalSource">
            <summary>
            Optical Source
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FWDLEventSourceType.NetworkSource">
            <summary>
            Network Source
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.RIBUpdateMethod">
            <summary>
            The method used for updating the RIB accumulator value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RIBUpdateMethod.Replace">
            <summary>Replace the current value</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RIBUpdateMethod.Add">
            <summary>Add to the current value</summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode">
             <summary>
            Response Codes for Remote Connect/Disconnect enhancement
             </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.Success">
            <summary>
            Ok
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.SwitchClose">
            <summary>
            Switch is Already Close
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.SwitchOpen">
            <summary>
            Switch is Already Open
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.MeterKeyDisabled">
            <summary>
            Meter Key for Remote Connect/Disconnect disabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.InsufficientSecurity">
            <summary>
            Failed Due to Security
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.InvalidData">
            <summary>
            Invalid Data 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.NotPointtoPoint">
            <summary>
            Not Point-to-Point
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.MetrologyNotReady">
            <summary>
            Metrology Not Ready
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.ServiceLimitingOverriden">
            <summary>
            ServiceLimiting override
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.RCDCapNotCharged">
            <summary>
            RCD Cap not charged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.LoadSideBVoltageNotPresent">
            <summary>
            LoadSide Voltage Not Present
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.LoadSideBVoltagePresent">
            <summary>
            LoadSide Voltage  Present
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.SwitchNotPresent">
            <summary>
            Switch Not Present
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RemoteConnectDisconnectResponseCode.SuccessConnectUserIntevention">
            <summary>
            SUCCESS Connect User Intervention
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.SecurityType">
            <summary>
            Enumeration of the types of security keys that can be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityType.ENHANCED_SECURITY">
            <summary>
            Enhanced Security public keys
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityType.C1218_PASSWORDS">
            <summary>
            C1218 passwords
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityType.C1222_KEYS">
            <summary>
            C1222 DES/3DES keys
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityType.HAN_KEYS">
            <summary>
            ZigBee keys
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID">
            <summary>
            Identifier for the specific security key to be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID1">
            <summary>
            Command Key 1 / C1218 Primary PWD / C1222 Key 1 / HAN Network Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID2">
            <summary>
            Command Key 2 / C1218 Secondary PWD / C1222 Key 2 / HAN Global Link Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID3">
            <summary>
            Command Key 3 / C1218 Tertiary PWD / C1222 Key 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID4">
            <summary>
            Command Key 4 / C1218 Quaternary PWD / C1222 Key 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID5">
            <summary>
            Revocation Key 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.SecurityKeyID.KEYID6">
            <summary>
            Revocation Key 2
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.FatalRecoveryOption">
            <summary>
            The options for MFG Procedure 91 that are used for changing Fatal Error Recovery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FatalRecoveryOption.Disable">
            <summary>
            Disable Fatal Error Recovery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FatalRecoveryOption.Enable">
            <summary>
            Enable Fatal Error Recovery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FatalRecoveryOption.ClearRecoveryMode">
            <summary>
            Clear the Fatal Error Recovery Mode status bit in Table 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.FatalRecoveryOption.ClearCoreDump">
            <summary>
            Clear the Fatal Error Core Dump status bit in Table 3
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.OpticalPasswords">
            <summary>
            Identifier for the Optical level to be validated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.OpticalPasswords.Primary">
            <summary>
            C1218 Primary PWD 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.OpticalPasswords.Secondary">
            <summary>
            C1218 Secondary PWD 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.OpticalPasswords.Tertiary">
            <summary>
            C1218 Tertiary PWD 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.OpticalPasswords.Quaternary">
            <summary>
            C1218 Quaternary PWD 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types">
            <summary>
            The bits indicating which item to reset via MFG procedure 6
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_TIMES_PROGRAMMED">
            <summary>
            Reset # times programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_DEMAND_RESETS">
            <summary>
            Reset # demand resets
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_POWER_OUTAGES">
            <summary>
            Reset # power outages
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_INVERSION_TAMPERS">
            <summary>
            Reset Inversion tampers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_REMOVAL_TAMPERS">
            <summary>
            Reset Removal Tampers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_REVERSE_ROTATION_TAMPERS">
            <summary>
            Reset Reverse Rotation Tampers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_SITESCAN_DIAG">
            <summary>
            Reset SiteScan Diagnostics
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.AMI_Reset_Counter_Types.RESET_NUM_MAGNETIC_TAMPERS">
            <summary>
            Reset Magnetic TAmpers
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption">
            <summary>
            MFG procedure 60 options that are used for selecting which quantity to pulse on the LED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption.Wh">
            <summary>
            Wh
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption.VAh">
            <summary>
            VAh
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption.Varh">
            <summary>
            Varh
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.RegisterCalculationMethod">
            <summary>
            Used to identify quantity calculation methods
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RegisterCalculationMethod.BBV">
            <summary>Energy values are read directly from the base</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.RegisterCalculationMethod.Summation">
            <summary>Energy values are cal</summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureRadioComms(Itron.Metering.Device.Opt,System.Func{System.Boolean})">
            <summary>
            Method attempts to disable the RF and the HAN radios for a total opt out. Opting in will
            enabled the RF Radio and will modify the config tag so the CE will reenable HAN if it is
            configured as such.
            </summary>
            <param name="OptSetting">Determines whether the radios are to be disabled or not.</param>
            <param name="logoffAndLogon">Method to logoff and log back on to meter.</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.VerifyRFComms(Itron.Metering.Device.Opt)">
            <summary>
            Verifys that RF comm module is consistent with the opt setting.
            </summary>
            <param name="OptSetting">Determines whether the radios are to be disabled or not.</param>
            <returns>Whether or not comm module is consistent with opt setting.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureRFComms(Itron.Metering.Device.Opt)">
            <summary>
            RF Opt Out, configure RF comms
            Mfg procedure 119
            </summary>
            <param name="OptSetting">Determines whether the RF comms are to be disabled or not.</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TOUExpirationDate">
            <summary>
            Gets the Date of the TOU Expiration
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureRemoteDisconnectSwitch(Itron.Metering.Device.DisconnectSwitchSettings)">
            <summary>
            This method configures the remote disconnect switch to be enabled or disabled.
            </summary>
            <param name="SwitchSetting">Whether or not the switch is enabled</param>
            <returns>The result of the configuration.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureLEDQuantity(Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption)">
            <summary>
            Changes the LED to pulse the specified quantity.
            </summary>
            <param name="quantity">The Quantity to change to.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearTamperTapMaxStats">
            <summary>
            Clears the max readings from table 2263 (Mfg 215)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ServiceLimitingFailSafe(System.UInt16)">
            <summary>
            This method forces the meter enable or disable service limiting by 
            entering into the failsafe mode
            </summary>
            <param name="minsInFailSafe">The number of minutes the meter stays in the failsafe mode.</param>
            <returns>The result of the service limiting.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateSecurityKey(Itron.Metering.Device.CENTRON_AMI.SecurityType,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID,System.Byte[])">
             <summary>
             This method will validate any of the 4 types of security keys
             </summary>
             <param name="SecType">
             The type of key: Enhanced Security, C1218 Passwords, C1222 Keys, or HAN Keys
            </param>
             <param name="SecID">
             For the given key type, which key to validate:
             1 = "Command Key 1/C1218 Primary PWD/C1222 Key 1/HAN Network Key",
             2 = "Command Key 2/C1218 Secondary PWD/C1222 Key 2/HAN Global Link Key",
             3 = "Command Key 3/C1218 Tertiary PWD/C1222 Key 3",
             4 = "Command Key 4/C1218 Quaternary PWD/C1222 Key 4",
             5 = "Revocation Key 1",
             6 = "Revocation Key 2"
             </param>
             <param name="hashedKey">The hashed value of the key to validate</param>
             <returns>Results of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PerformSelfRead">
             <summary>
             This method causes a Self Read to occur on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             11/25/08 KRC 2.00.00  N/A    Created
             04/19/10 AF  2.40.39         Made virtual for M2 Gateway override
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateOpticalPasswords(System.String,System.Boolean)">
            <summary>
            Validates the Optical Passwords in the meter 
            </summary>
            <param name="ProgName">Program Name</param>
            <param name="Wait">Whether or not to send a wait to the device before calling 
            method to validate optical passwords.</param>
            <returns>list of bool items</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateOpticalPasswords(System.String,Itron.Metering.Device.CENTRON_AMI.OpticalPasswords)">
            <summary>
            Validates the optical passwords.
            </summary>
            <param name="ProgName">Name of the program</param>
            <param name="PasswordLevel">Level of Password ex: Primary, Secondary...</param>
            <returns>Procedure Result code</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetDiagnosticCounters">
            <summary>
            Resets the SiteScan Diagnostic Counters.
            </summary>
            <returns>The result of the reset.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetNumberInversionTampers">
            <summary>
            Resets the Number of Inversion tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetNumberRemovalTampers">
            <summary>
            Resets the Number of Removal tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetNumberMagneticTampers">
            <summary>
            Resets the Number of Removal tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AdjustClock(System.Int32)">
            <summary>
            Performs a clock adjust on the connected meter
            </summary>
            <param name="iOffset">The offset from meter time (seconds)</param>
            <returns>A ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.EncryptC1218Passwords">
            <summary>
            This method will encrypt the C12.18 passwords stored in the meter.
            </summary>
            <returns>Results of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetClock(System.DateTime,System.Boolean,System.Boolean)">
            <summary>
            Performs a Set Clock - ONLY USE FOR TESTS
            </summary>
            <param name="dtNewMeterTime">the time to adjust to</param>
            <param name="bCheckClockRunning">
            Whether or not we care if the clock is running.  Mostly we do care
            but we need to be able to set the clock after an extended outage when the meter becomes demand only
            </param>
            <param name="bCheckAdjustOverDST">
            Whether or not we want to check if the meter is in DST transition.
            </param>
            <returns>ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetClock(System.DateTime)">
            <summary>
            Performs a Set Clock - ONLY USE FOR TESTS
            </summary>
            <param name="dtNewMeterTime"></param>
            <returns>ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetClockAfterExtendedOutage(System.DateTime)">
            <summary>
            Performs a Set Clock - ONLY USE FOR TESTS
            This version does not check if the clock is running.  After an
            extended outage, the meter becomes a demand only meter until we set the clock
            </summary>
            <param name="dtNewMeterTime">the time the meter should have</param>
            <returns>ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetClockOverDST(System.DateTime)">
            <summary>
            Performs a Set Clock - ONLY USE FOR TESTS
            </summary>
            <param name="dtNewMeterTime"></param>
            <returns>ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SwitchRetryAutomatedTestProcedure(System.Boolean@)">
            <summary>
            This method will give the number of retries for a failed Switch Operation --- TEST PURPOSE
            </summary>
            <returns>An ProcedureResultCodes representing the result of the operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RemoteDisconnectWithInvalidData(Itron.Metering.Device.ConnectDisconnectResponse@,System.Byte[])">
            <summary>
            This method will execute the Disconnect with the Response Code. --- For TESTING ONLY
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RemoteDisconnect(Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Disconnect with the Response Code.
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RemoteConnect(Itron.Metering.Device.ConnectType,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Connect.
            </summary>
            <returns>An RemoteConnectResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RemoteConnect(Itron.Metering.Device.ConnectType,System.Boolean,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method executes the remote connect and returns Response Code
            </summary>
            <param name="connectType">The connection type.</param>
            <param name="ignoreLoadVoltage">Whether or not load voltage should be ignored.</param>
            <param name="ResponseCode">Response Code Returned</param>
            <returns>The result of the connect operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.LoadSideVoltageDetection">
            <summary>
            This method will execute the Load Voltage Detection.
            </summary>
            <returns>An ItronDeviceResult representing the result of the Load Voltage Detection
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureKh(System.Int32)">
            <summary>
            
            </summary>
            <param name="InputNormalKh"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SwitchActiveThreshold(System.Byte,System.TimeSpan)">
            <summary>
            Switches the currently active service limiting threshold
            </summary>
            <param name="threshold">The number of the thershold to switch to.</param>
            <param name="thresholdPeriod">The amount of time to stay in this thershold.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PerformPeriodicRead(System.DateTime,System.DateTime,System.DateTime,Itron.Metering.Device.PeriodicReadActions)">
            <summary>
            Perform a Periodic Read
             NOTE: At this time this procedure just causes the meter to do the action.  It does not
                    look at any of the return data.  If this functionality is needed it will need to be added.
            </summary>
            <param name="StartTime"></param>
            <param name="EndTime"></param>
            <param name="WindowEndTime"></param>
            <param name="Actions"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FormatFlash">
            <summary>
            Formats the flash.
            </summary>
            <returns>
            An ItronDeviceResult representing the result of the reset
            operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLocalDeviceTime(System.DateTime)">
            <summary>
            Convert a utc time from the meter to local time for the device
            </summary>
            <param name="utcTime">UDT time from the meter</param>
            <returns>Convertered Device Local Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateHANSecurityKeys(System.String,System.String)">
            <summary>
            Updates the Network Security Key and the Global Link Key based on the 
            encrypted values passed in.
            </summary>
            <param name="strEncryptedNetworkKey">
            The encrypted network security key
            </param>
            <param name="strEncryptedLinkKey">
            The encrypted global link key
            </param>
            <returns>A PSEM Response for the write to Table 2105</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateHANNetworkSecurityKey(System.String)">
            <summary>
            Updates the Network Security Key based on the encrypted values passed in.
            </summary>
            <param name="strEncryptedNetworkKey"></param>
            <returns>A PSEM Response for the write to Table 2105</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateHANSecurityKeys(System.Byte[],System.Byte[])">
            <summary>
            Updates the Network Security Key and the Global Link Key based on the 
            unencrypted values passed in.
            </summary>
            <param name="byaNetworkKey">network key</param>
            <param name="byaLinkKey">link key</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ForceTimeSync(System.UInt16)">
            <summary>
            This method forces the meter to synchronize its time with the RFLAN
            if the meter's time is out of sync by a value greater than hysteresis.
            </summary>
            <param name="usHysteresis">The number of seconds out of sync the meter must be 
            greater than for the time sync to be allowed.</param>
            <returns>The result of the forced time sync.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ForceTimeSyncAndWaitForResult(System.UInt16)">
            <summary>
            This method forces the meter to synchronize its time with the RFLAN
            if the meter's time is out of sync by a value greater than hysteresis.
            </summary>
            <param name="usHysteresis">The number of seconds out of sync the meter must be 
            greater than for the time sync to be allowed.</param>
            <returns>The result of the forced time sync.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.Authenticate(Itron.Metering.Device.SignedAuthorizationKey)">
            <summary>
            Issues security using the Signed Authorization key
            </summary>
            <param name="key">The key to use for authorization</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.Reauthenticate">
            <summary>
            Issues security using the last used Signed Authorization key
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DisableSignedAuthorization(System.UInt16)">
            <summary>
            Disables Signed Authorization for the specified number of minutes.
            </summary>
            <param name="usMinToDisable">The number of minutes to disable signed authorization for.</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateCoreDump(System.String)">
            <summary>
            Creates a core dump from the meter if present and saves it to the specified file.
            </summary>
            <param name="strFileName">The location to save the Core Dump.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureC1218OverZigBee(System.Boolean)">
            <summary>
            Reconfigures the C12.18 Over ZigBee Enabled bit
            </summary>
            <param name="bEnable">Whether to enable or disable C12.18 over ZigBee</param>
            <returns>The result of the reconfigure</returns>
            <remarks>
            NOTE!! This reconfigure will not take effect until after logging off of the meter
            as it does not use a procedure or call Open/Close config.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureZigBeeDisabled(System.Boolean)">
            <summary>
            Reconfigures the C12.18 Over ZigBee Enabled bit
            </summary>
            <param name="disabled">Whether to disable ZigBee.</param>
            <returns>The result of the reconfigure</returns>
            <remarks>
            NOTE!! This reconfigure will not take effect until after logging off of the meter
            as it does not use a procedure or call Open/Close config.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearPeriodicReadOptionalData(Itron.Metering.Device.CENTRON_AMI.PeriodicReadRemovableItems)">
            <summary>
            Clears the optional items that can removed from a periodic read.  
            Initially this is used for removing optional items included as 
            part of asset synchronization.
            </summary>
            <remarks>This procedure requires level 5 security, otherwise it will fail.</remarks>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.Reconfigure25YearDST(System.Byte,System.Byte,System.Byte,System.Collections.Generic.List{Itron.Metering.DST.CDSTDatePair})">
            <summary>
            Reconfigures the 25 Year DST Calendar.
            </summary>
            <param name="dstHour">The DST change hour</param>
            <param name="dstMinute">The DST change minute</param>
            <param name="dstOffset">The DST change offset</param>
            <param name="dstDates">The list of DST dates.</param>
            <returns>The result of the reconfigure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateHANECCCertificate(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Writes a new ECC certifiate and keys to dataflash.
            </summary>
            <param name="abytECCCertificate">The ECC certificate that is specific to the meter.</param>
            <param name="abytPublicKey">The ECC public key that is not meter specific.</param>
            <param name="abytPrivateKey">The ECC private key that is specific to the meter.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearFatalErrorRecoveryMode">
            <summary>
            Clears the Recoverable Fatal Error status bits in Std Table 3
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearCoreDumpStatus">
            <summary>
            Clears the Core Dump status bits in Std Table 3
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetLANHANCommLogs">
            <summary>
            Resets LAN and HAN event logs.
            </summary>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigCpp(System.DateTime,System.UInt16)">
            <summary>
            Configure CPP
            </summary>
            <param name="startTimeGmt">Start Time (GMT)</param>
            <param name="duration">Duration in minute</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateBaseEnergies(System.Boolean@,System.Collections.Generic.List{Itron.Metering.Device.BaseEnergies}@)">
            <summary>
            Validate the base energies.
            </summary>
            <param name="blnEnergyConfigSuppported">Whether or not the configured energies are supported by the base.</param>
            <param name="lstSuppliedEnergies">The energies supplied by the base.</param>
            <returns>The procedure result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHAN">
            <summary>
            Resets the HAN in HW 3.0 or later meters
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearResetLimitingHaltCondition">
            <summary>
            Clear Reset Limiting Induced Halt Condition in HAN
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishRecurringHANPricing(System.DateTime,System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Publishes a recurring price to the meter.
            </summary>
            <param name="expirationDate">The expiration date of the recurring price</param>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishPendingHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd},System.DateTime)">
            <summary>
            Writes a pricing schedule to a Pending Table
            </summary>
            <param name="prices">The list of prices to write.</param>
            <param name="tiers">The list of tiers to write</param>
            <param name="activationDate">The date and time the pending table should activate</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishAndCommitRIBSchedule(System.Boolean,System.String,Itron.Metering.Device.PublishPriceDataEntryRcd,Itron.Metering.Utilities.UInt24,Itron.Metering.Utilities.UInt24,System.Collections.Generic.List{Itron.Metering.Device.BillingPeriodRcd},System.Collections.Generic.List{Itron.Metering.Device.NextBlockPeriodRcd},System.Collections.Generic.List{Itron.Metering.Device.BlockPriceRcd})">
            <summary>
            Publishes the specified RIB schedule to the meter and commits it for activation.
            </summary>
            <returns>The result of the publish</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PublishRIBScheduleWithoutCommitting(System.Boolean,System.String,Itron.Metering.Device.PublishPriceDataEntryRcd,Itron.Metering.Utilities.UInt24,Itron.Metering.Utilities.UInt24,System.Collections.Generic.List{Itron.Metering.Device.BillingPeriodRcd},System.Collections.Generic.List{Itron.Metering.Device.NextBlockPeriodRcd},System.Collections.Generic.List{Itron.Metering.Device.BlockPriceRcd})">
            <summary>
            Publishes the specified RIB schedule to the meter without committing it for activation
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearFirmwareDownloadEventLog">
            <summary>
            Clears the firmware download event log in HW 3.0 Hydrogen C meters and above
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AuthenticateFWDL(System.UInt16,System.Byte,System.Byte[])">
            <summary>
            Authenticates the firmware download using the fw file hash code and 
            Mfg procedure 117
            </summary>
            <param name="TableID">the table id of the fwdl pending table</param>
            <param name="FWType">firmware type - register, RFLAN, etc</param>
            <param name="HashCode">the 32-byte hash code for the firmware file being used</param>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AutoDetectMonoPhases">
            <summary>
            This procedure causes the single phase meter to auto detect the phases it will monitor.
            </summary>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetVoltageMonitoringData">
            <summary>
            Creates a VMData object from the meter. At this time only enhanced voltage 
            monitoring data is retrieved.
            </summary>
            <returns>The VMData object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetExtendedLoadProfileData">
            <summary>
            Gets all of the Extended Load Profile data from the meter
            </summary>
            <returns>The Extended Load Profile data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetExtendedLoadProfileData(System.DateTime,System.DateTime)">
            <summary>
            Gets the Extended Load Profile data between the specified dates
            </summary>
            <param name="startDate">The start date of the Extended Load Profile Data</param>
            <param name="endDate">The end date of the Extended Load Profile Data</param>
            <returns>The Extended Load Profile Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetVoltageMonitoringData(System.DateTime,System.DateTime)">
            <summary>
            Gets the Voltage Monitoring data between the specified dates
            </summary>
            <param name="startDate">The start date of the Voltage Monitoring Data</param>
            <param name="endDate">The end date of the Voltage Monitoring Data</param>
            <returns>The Voltage Monitoring Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInstrumentationProfileData">
            <summary>
            Gets all of the Instrumentation Profile data from the meter
            </summary>
            <returns>The Instrumentation Profile data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInstrumentationProfileData(System.DateTime,System.DateTime)">
            <summary>
            Gets the Instrumentation Profile data between the specified dates
            </summary>
            <param name="startDate">The start date of the Instrumentation Profile Data</param>
            <param name="endDate">The end date of the Instrumentation Profile Data</param>
            <returns>The Instrumentation Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.EnableFullFatalErrorChecking(System.UInt32)">
            <summary>
            Enables Full Fatal Error Checking for the specified duration
            </summary>
            <param name="minutes">The number of minutes to enable Full Fatal Error Checking</param>
            <returns>The result of the Procedure Call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInstLIDValue(Itron.Metering.Device.LID)">
            <summary>
            Retrieves the LID value passed in. Assumes the value is a float (inst value)
            </summary>
            <param name="LID">Instantaneous LID to retrieve</param>
            <returns>Float</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RereadTable00">
            <summary>
            Causes a new read of standard table 00
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANDisablePricing">
            <summary>
            Method Disables HAN Price Mode.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANMoveOut">
            <summary>
            Method performs a HAN Move Out - clears HAN data at meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANCommitNextBlockPriceSchedule">
            <summary>
            Method sets SEALED bit in the NextBlockPriceScheduleTable.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HANUpdateRIBConsumption(Itron.Metering.Utilities.UInt48,Itron.Metering.Device.CENTRON_AMI.RIBUpdateMethod)">
            <summary>
            Method to update the CurrentBlockPeriodConsumptionDelivered Attribute.  
            The parameter can either be added to the current attribute value or it can replace it entirely.
            </summary>
            <param name="updateMethod">0 = replace, 1 = add to existing value</param>
            <param name="currentBlockPeriodConsumptionDelivered">Numeric value to set (or add) to ConsumptionDelivered.</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.IsTableWriteable(System.UInt16)">
            <summary>
            Checks standard table 00 to see if the specified table is supports write access
            </summary>
            <param name="usTableId">identifier of the table we want to know about</param>
            <returns>true if the table is listed in table 00; false, otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateHANSecurityKeys(System.String,Itron.Metering.Device.CENTRON_AMI.HANKeys,System.Boolean)">
            <summary>
            Validates the encrypted HAN security keys.
            </summary>
            <param name="Key">The encrypted Network Key</param>
            <param name="keyID">KeyID</param>
            <param name="blnKeyEncrypted">Whether or not the network key is encrypted.</param>
            <returns>result of the Procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateDESKeys(System.String,System.Boolean)">
            <summary>
            Validates the DES keys in the meter 
            </summary>
            <param name="ProgName">Program Name</param>
            <param name="Wait">Whether or not to send a wait to the device before calling 
            method to validate DES keys.</param>
            <returns>list of bool items</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateDESKeys(System.String,Itron.Metering.Device.CENTRON_AMI.DESKeys)">
            <summary>
            Validates the DES Keys.
            </summary>
            <param name="ProgName">Name of the program</param>
            <param name="KeyID">Key ID: Key1, Key2...</param>
            <returns>Procedure Result code</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateEnhancedSecurityKeys(System.String,System.Boolean)">
            <summary>
            Validates the Enhanced Security keys in the meter to those in the specified file.
            </summary>
            <param name="strEnhancedSecurityKeyFile">The file that contains the keys to validate against.</param>
            <param name="Wait">Whether or not to send a wait to the device before calling 
            method to validate enhanced security keys.</param>
            <returns>list of bool items</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateEnhancedSecurityKey(System.String,Itron.Metering.Device.CENTRON_AMI.EnhancedKeys)">
            <summary>
            Validates the Enhanced Security keys in the meter to those in the specified file.
            </summary>
            <param name="strEnhancedSecurityKeyFile">The file that contains the keys to validate against.</param>
            <param name="keyID">keyID</param>
            <returns>the result of the Validate Procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.EnableDisableOpticalPort(System.Boolean)">
            <summary>
            Disables or enables the optical port on the meter.
            </summary>
            <param name="disable">Whether the port should be disabled (true) or enabled (false)</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ExitFactoryTestMode">
            <summary>
            Causes the meter to exit factory test mode
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RefreshMetrologyStatistics">
            <summary>
            Refresh the metrology statistics data by causing a new read to occur
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadStackDepth(System.UInt16,System.UInt32@,System.UInt32@,System.String@)">
            <summary>
            Reads the stack depth using mfg procedire 170
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadMemory(System.UInt32,System.Byte[]@)">
            <summary>
            Reads 4 bytes of the meter's memory starting at the specified address.
            </summary>
            <param name="startAddress">The location in memory to start</param>
            <param name="data">The raw memory.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.OpenConfig">
            <summary>
            Calls the open config procedure
            </summary>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CloseConfig(Itron.Metering.Device.CANSIDevice.CloseConfigOptions,Itron.Metering.Device.CANSIDevice.CloseConfigErrors@)">
            <summary>
            Calls the close config procedure.
            </summary>
            <param name="options">The options flags to be used for calling close config</param>
            <param name="errors">The error parameter returned by the procedure.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateCanadianEventLog(System.UInt16)">
            <summary>
            This method updates the number of unread entries in the Canadian 
            Event Log.  This method does not clear the log, but events that
            are marked as having been read can be overwritten by the meter as 
            needed.  Use max value to update all entries.
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads the specified table from the meter.
            </summary>
            <param name="usTableID">The table ID for the table to read.</param>
            <param name="MeterTables">The tables object to read the table into.</param>
            <returns>PSEMResponse code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureTOU(System.String,System.Int32)">
            <summary>
            Reconfigures TOU in the connected meter.
            </summary>
            <param name="TOUFileName">The filename including path for the 
            configuration containing the TOU schedule.</param>
            <param name="iSeasonIndex">The number of seasons from the current
            season to write.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureHANEvents(System.Collections.Generic.List{Itron.Metering.Device.UpstreamHANLogEvent},System.Collections.Generic.List{Itron.Metering.Device.DownstreamHANLogEvent})">
            <summary>
            This method enables the HAN events passed in the configuration.  
            ****ONLY USED FOR TESTING****
            </summary>
            <param name="lstUpstreamEvents">The upstream events that should be configured</param>
            <param name="lstDownstreamEvents">The downstream events that should be configured
            </param>
            <returns>Whether or not the HAN events were successfully configured</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SoftEPF">
            <summary>
            Performs a soft EPF
            </summary>
            <returns>
            An ItronDeviceResult representing the result of the reset
            operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetRequiredEnergiesFromProgram(System.String)">
            <summary>
            Gets the list of Energies required by the program.
            </summary>
            <param name="programFile">The path to the program file</param>
            <returns>The list of required energies</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetSelectedSecondaryQuantityFromProgram(System.String)">
            <summary>
            Gets the selected secondary energy from the program.
            </summary>
            <param name="programFile">The path to the program file</param>
            <returns>The list of required energies</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLPMemorySizeFromProgram(System.String)">
            <summary>
            Reads the load profile memory size from a program
            </summary>
            <param name="programFile">the program to read</param>
            <returns>the size of the load profile memory</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetLoadProfile(System.Byte,System.UInt32)">
            <summary>
            Changes the Load Profile memory size to the parameter passed in. The CloseConfig()
            will then reset Load Profile.
            </summary>
            <param name="MemorySize">The memory size to change to</param>
            <param name="Offset">The offset into mfg table 2048 for the LP memory size field</param>
            <returns>The result of the open config and/or close config procedures</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateTemperatureOffset(System.Int16)">
            <summary>
            Updates the temperature offset in factory data without triggering a cold start
            </summary>
            <param name="newTemperatureOffset">the offset value to set</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetConfigVersion">
            <summary>
            Gets config version from Configuration Table
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetExtendedSelfReadConfiguration">
            <summary>
            Read Exteneded Self Read Configuration out of meter
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertUTCToLocalMeterTime(System.DateTime)">
            <summary>
            The method converts a UTC time to a local time based on the meter's specific DST and timezone settings.
            </summary>
            <param name="UTCTime">The time to convert in UTC.</param>
            <returns>The UTC time converted to meter local time.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_QuantityConfiguration">
            <summary>
            Returns an OpenWay device type string based on the meter key settings.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_DisconnectAvailable">
            <summary>
            Gets the Disconnect Status
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_EnhancedBlurtsSupported">
            <summary>
            Returns whether or not Enhanced Blurts are supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_AdvancedBlurtsSupported">
            <summary>
            Returns whether or not Advanced Blurts are supported.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_PoleTopCellRelaySupported">
            <summary>
            Gets the Pole Top Cell Relay meter key bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_UseSR1DeviceClass">
            <summary>
            Returns whether or not the meter uses the SR1.0 Device Class.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_ZigBeeDebug">
            <summary>
            Returns whether or not the meter enables ZigBee Debugging.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_TransparentDeviceSupported">
            <summary>
            Returns whether or not the meter is a transparent device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_DisableCoreDump">
            <summary>
            Returns whether or not the meter will Disable Core Dump.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_DisableCoreDumpOnTotalStackUseLimit">
            <summary>
            Returns whether or not the meter will Disable Core Dump on Total Stack Use Limit.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_AdvancedPolySupported">
            <summary>
            Returns whether or not the meter is an Advanced Poly.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterKey_MCPTypeUsed">
            <summary>
            Returns the external MCP type used in the meter.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarhQ2VarhQ3MeterKeyBitsEnabled">
            <summary>
            Property that determines if the Var Q2 and Var Q3 Energy 1 MeterKey bits are enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CurrentHANDeviceTime">
            <summary>
            The current HAN Time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsMeterInDST">
            <summary>
            Property to determine if the meter is in DST
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisplayTime">
            <summary>
            Gets the display module's time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LocalTimeNoSecurityNeeded">
            <summary>
            The local time from MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.GMTTimeNoSecurityNeeded">
            <summary>
            The GMT time from MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UseDSTModeNoSecurityNeeded">
            <summary>
            Whether the DST Mode is on or off using MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeZoneOffsetNoSecurityNeeded">
            <summary>
            The Time Zone Offset from MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DSTAdjustmentNoSecurityNeeded">
            <summary>
            The DST Adjustment from MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BadTimeNoSecurityNeeded">
            <summary>
            Whether the time is bad or not from MFG table 313 (2361).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AmpsNeutral">
            <summary>
            Gets the Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AmpsPhaseA">
            <summary>
            Gets the Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AmpsPhaseB">
            <summary>
            Gets the Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AmpsPhaseC">
            <summary>
            Gets the Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AmpsSquared">
            <summary>
            Gets the Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerFactor">
            <summary>
            Gets the Power Factor from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.QDelivered">
            <summary>
            Gets the Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.QReceived">
            <summary>
            Gets the Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VALagging">
            <summary>
            Gets the Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarDelivered">
            <summary>
            Gets the Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VAReceived">
            <summary>
            Gets the VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarNet">
            <summary>
            Gets the Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarNetDelivered">
            <summary>
            Gets the Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarNetReceived">
            <summary>
            Gets the Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarQuadrant1">
            <summary>
            Gets the Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarQuadrant2">
            <summary>
            Gets the Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarQuadrant3">
            <summary>
            Gets the Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarQuadrant4">
            <summary>
            Gets the Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VarReceived">
            <summary>
            Gets the Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltsAverage">
            <summary>
            Gets the Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltsPhaseA">
            <summary>
            Gets the Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltsPhaseB">
            <summary>
            Gets the Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltsPhaseC">
            <summary>
            Gets the Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltsSquared">
            <summary>
            Gets the Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WattsDelivered">
            <summary>
            Gets the Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WattsReceived">
            <summary>
            Gets the Watts Received quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WattsNet">
            <summary>
            Gets the Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WattsUni">
            <summary>
            Gets the Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ServiceVoltage">
            <summary>
            Retrieves the instantaneous secondary Volts RMS Phase A from the meter.
            The firmware folks say this should be considered to be the service voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsCurrentPhaseA">
            <summary>
            Gets the Instantaneous Current for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsCurrentPhaseB">
            <summary>
            Gets the Instantaneous Current for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsCurrentPhaseC">
            <summary>
            Gets the Instantaneous Current for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVoltagePhaseA">
            <summary>
            Gets the Instantaneous Voltage for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVoltagePhaseB">
            <summary>
            Gets the Instantaneous Voltage for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVoltagePhaseC">
            <summary>
            Gets the Instantaneous Voltage for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsW">
            <summary>
            Gets the Instantaneous Watts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVAArith">
            <summary>
            Gets the Instantaneous VA Arith
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVAVect">
            <summary>
            Gets the Instantaneous VA Vect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InsVar">
            <summary>
            Gets the Instantaneous Var
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DateLastDemandReset">
            <summary>
            Gets the last demand reset date.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberofLastDemandResets">
            <summary>
            Returns the number of Last Demand Resets in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SelfReadRegisters">
            <summary>
            Proves access to a list of Self Read Collections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DailySelfReadTime">
            <summary>
            Gets the configured daily self read time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EventDescriptions">
            <summary>
            Builds the list of Event descriptions and returns the dictionary 
            </summary>
            <returns>
            Dictionary of Event Descriptions
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfCurrentExceptions">
            <summary>
            Gets the number of exceptions waiting to be sent in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfRemovalTampers">
            <summary>
            Property to retrieve the Number of Removal tampers
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfInversionTampers">
            <summary>
            Property to retrieve the Number of Inversion tampers
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InversionThreshold">
            <summary>
            An event is triggered if the acceleration value along the X axis of the accelerometer
            is greater than or equal to this threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RemovalThreshold">
            <summary>
            An event is triggered if average acceleration value on X and Z axes of the accelerometer
            is above this threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TapThreshold">
            <summary>
            A tap is detected if average acceleration value on the Y axis of the accelerometer
            is above this threshold and falls below it within 400 milliseconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WakeupDuration">
            <summary>
             The number of seconds to pull data from the accelerometer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccelerometerConfigError">
            <summary>
            If true, there are errors in accelerometer configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WakeUpStatus">
            <summary>
             If false, tap and tamper detections are not running
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RemovalPDNCheck">
            <summary>
            If true, a removal tamper has been detected and the meter is checking 
            the power down for 10 seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TapDetected">
            <summary>
            Checks the tap check field of table 2262 to see if a tap has been detected
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsAccelerometerSupported">
            <summary>
            Whether or not the accelerometer is supported 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccReferenceAngleX">
            <summary>
            The reference angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccReferenceAngleY">
            <summary>
            The reference angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccReferenceAngleZ">
            <summary>
            The reference angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccCurrentAngleX">
            <summary>
            Current angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccCurrentAngleY">
            <summary>
            Current angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AccCurrentAngleZ">
            <summary>
            Current angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDeltaX">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along X axis since power up
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDeltaY">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Y axis since power up
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDeltaZ">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Z axis since power up
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxAvgDeltaTap">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxAvgDeltaTamper">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MagneticTampersSupported">
            <summary>
            Property to determine if Magnetic Tampers should be supported. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfMagneticTampersDetected">
            <summary>
            Property to retrieve the Number of detected Magnetic Tampers
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfMagneticTampersCleared">
            <summary>
            Property to retrieve the Number of cleared magnetic tampers.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsLEDPulsingVar">
            <summary>
            Gets whether or not the meter is currently pulsing Var
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsLEDPulsingVA">
            <summary>
            Gets whether or not the meter is currently pulsing VA
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NormalKh">
            <summary>
            Property to retrieve Normal Kh out of the Metrology Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AreC1218PasswordsHashed">
            <summary>
            Gets whether or not the C12.18 passwords are currently hashed in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsJTAGSecurityEnabled">
            <summary>
            Gets whether or not JTAG security has been enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EnhancedSecurityKeysInjected">
            <summary>
            Gets whether or not Enhanced Security Keys has been injected in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EnhancedSecurityKeyType">
            <summary>
            Gets whether or not Enhanced Security Keys has been injected in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsCanadian">
            <summary>
            Gets whether or not the meter is a Canadian meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsSealedCanadian">
            <summary>
            Gets whether or not the meter is Sealed for Canada
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsSealedCanadianUncached">
            <summary>
            Gets whether or not the meter is Sealed for Canada.  Uncached 
            version created for OpenWay QC Tool.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsAssetSyncEnabled">
            <summary>
            Gets whether or not Asset Sync is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CurrentSecurityLevel">
            <summary>
            Gets the current security level
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RFOptStatus">
            <summary>
            Gets opt out status in the meter by checking the state of the Opt out flag (Register) and utility ID (RFLAN) or interface settings TLV(RFMESH).
            Both the register and comm module settings have to match to give a definitive Opt Out/In status.
            </summary>/
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsC1222LinkBusy">
            <summary>
            Determines if the C1222 link is busy.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsRFLANEnabled">
            <summary>
            Gets whether or not the RFLAN is enabled in the meter by checking the state of the Opt out flag and utility ID.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsRFMeshEnabled">
            <summary>
            Gets whether or not the RFMesh is enabled in the meter by checking the state of the Opt out flag.
            Returns null if security level prevents reading mfg. table 13.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FactoryConfigOptOut">
            <summary>
            Gets whether or not the meter is opted out by checking the state of the Opt out flag
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsQuietModeActive">
            <summary>
            Gets whether or not the meter is in quiet mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBeryllium">
            <summary>
            Gets whether or not the firmware version is Beryllium
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBerylliumOrGreater">
            <summary>
            Gets whether or not the firmware version is Beryllium or greater
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Is4GLTEOrGreater">
            <summary>
            Gets whether or not the firmware version is 4GLTE or greater
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DateProgrammed">
            <summary>
            Gets the Date Programmed out of the header of 2048
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SerialNumber">
            <summary>
            Returns the Customer Serial Number from Table 6 rather than 2048.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RegModVer">
            <summary>
            Gets the register module version.revision from MFG Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RegModBuild">
            <summary>
            Gets the register module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisplayModVer">
            <summary>
            Gets the display version.revision from MFG Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisplayModBuild">
            <summary>
            Gets the display Build from MFG Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FirmwareLoaderVerRev">
            <summary>
            Property to retrieve the firmware version and revision from the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HWRevisionFiltered">
            <summary>
            Gets the HW Revision with the Prism Lite bit filtered out.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWLoaderVersion">
            <summary>
            Gets the Firmware Loader Version number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWLoaderRevision">
            <summary>
            Gets the Firmware Loader Revision number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWLoaderBuild">
            <summary>
            Gets the Firmware Loader Build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AtmelVerRev">
            <summary>
            Returns the version.revision of the ATMEGA module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExceptionSecurityModel">
            <summary>
            Gets the exception security model for the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsEnhancedSecurityRequired">
            <summary>
            Gets whether or not enhanced security is required.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerCalculationMethod">
            <summary>
            Gets the Power Calculation Method for Polyphase meters.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CustomScheduleName">
            <summary>
            Property to get the custom schedule name from the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterName">
            <summary>
            Property used to get the human readable meter name 
            (string).  Use this property when 
            displaying the name of the meter to the user.  
            This should not be confused with the MeterType 
            which is used for meter determination and comparison.
            </summary>
            <returns>A string representing the human readable name of the 
            meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterDisplayMode">
            <summary>
            Property to determine the Display Mode
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CppStartTimeGmt">
            <summary>
            Return the CPP start time (GMT)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ConfigurationCount">
            <summary>
            Gets the number sessions in which tables have been written as part 
            of asset synchronization. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CppStatus">
            <summary>
            Return the CPP status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CppDuration">
            <summary>
            Return the CPP duration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CppRate">
            <summary>
            Return the CPP rate
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsFullCoreDumpBlocked">
            <summary>
            Gets whether or not the meter currently has a Full Core Dump available
            and further core dumps are blocked by the Table 3 status bit.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsFullCoreDumpPresent">
            <summary>
            Gets whether or not a core dump is currently present in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsInFatalErrorRecoveryMode">
            <summary>
            Gets whether or not the meter is currently in Fatal Error Recovery Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsFatalErrorRecoveryEnabled">
            <summary>
            Gets whether or not Fatal Error Recovery is enabled in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastFatalErrorData">
            <summary>
            Gets the Fatal Recovery Data for the last fatal error.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastFatalError">
            <summary>
            Gets the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastFatalErrorDate">
            <summary>
            Gets the Date and Time that the last Fatal Error Occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastFatalErrorReason">
            <summary>
            Gets the reason for the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ZigBeeDisabledTimeRemaining">
            <summary>
            The amount of time remaining for ZigBee to be disabled. This value returns null
            unless the ZigBee State is set to disabled for a time period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ZigBeeState">
            <summary>
            Gets the current state of ZigBee in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANRecurringPriceExpirationDate">
            <summary>
            Gets the Expiration Date of the current Recurring Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderFileID">
            <summary>
            Gets the Current HAN OTA File ID from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderVersion">
            <summary>
            Gets the Formatted HAN OTA Header Version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderLength">
            <summary>
            Gets the HAN OTA Header Length from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderSecurityCredentialVersionPresent">
            <summary>
            Gets the HAN OTA Header Field Control Security Credential Version Present from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderDeviceSpecificFile">
            <summary>
            Gets the HAN OTA Header Field Control Device Specific File from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderHardwareVersionsPresent">
            <summary>
            Gets the HAN OTA Header Field Control Hardware Versions Present from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderManufacturerCode">
            <summary>
            Gets the HAN OTA manufacturer code from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderImageTypeName">
            <summary>
            Gets the HAN OTA image type name from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderApplicationReleaseVersion">
            <summary>
            Gets the HAN OTA application release version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderApplicationBuild">
            <summary>
            Gets the HAN OTA application build from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderStackReleaseVersion">
            <summary>
            Gets the HAN OTA stack release version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderStackBuild">
            <summary>
            Gets the HAN OTA stack build from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderZigBeeStackVersion">
            <summary>
            Gets the HAN OTA ZigBee Stack version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderString">
            <summary>
            Gets the HAN OTA Header String from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderTotalImageSize">
            <summary>
            Gets the HAN OTA Header Total Image Size from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderSecurityCredentialVersion">
            <summary>
            Gets the HAN OTA Security Credential version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderUpgradeFileDestination">
            <summary>
            Gets the HAN OTA Header Upgrade File Destination from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderMinHWVersion">
            <summary>
            Gets the HAN OTA minimum hardware version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAHeaderMaxHWVersion">
            <summary>
            Gets the HAN OTA maximum hardware version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAFirmwareVersion">
            <summary>
            Gets the HAN OTA Firmware Version from Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAQueryJitter">
            <summary>
            Gets the Query Jitter from Mfg table 2094
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTADataSize">
            <summary>
            Gets the Data Size from Mfg table 2094
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTACurrentTime">
            <summary>
            Gets the Current Time from Mfg table 2094
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAUpgradeTime">
            <summary>
            Gets the Upgrade Time from Mfg table 2094
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfPollMessages">
            <summary>
            Gets the number of active poll messages.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAPollMessages">
            <summary>
            Gets the HAN OTA poll messages
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfZigBeeEndDevicesWithFWDLInProgress">
            <summary>
            Gets the number of ZigBee end devices with FWDL in progress.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAFWDLDeviceStatuses">
            <summary>
            Gets the ZigBee end device statuses for HAN OTA FWDL.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAActivate">
            <summary>
            Gets wheter or not HAN OTA Activate flag is set.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAImageNotifyBitMask">
            <summary>
            Gets the image notify bit mask.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTAImageActivationBitMask">
            <summary>
            Gets the image activation bit mask.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfZigBeeEndDevicesWithDiagnostics">
            <summary>
            Gets the number of ZigBee end devices with diagnostics.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANOTADeviceDiagnostics">
            <summary>
            Gets the ZigBee end device diagnostics for HAN OTA FWDL.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANResetCount">
            <summary>
            Gets the total number of HAN Resets
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANCodeFatalErrorResetCount">
            <summary>
            Gets the number of HAN Resets due to Code detectable Fatal Errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANCoreFaultResetCount">
            <summary>
            Gets the number of HAN Resets due to Core Fault errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANFirstUseResetCount">
            <summary>
            Gets the number of HAN Resets due to First Use
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANStackLockupResetCount">
            <summary>
            Gets the number of HAN Resets due to Stack Lockup errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANWatchdogResetCount">
            <summary>
            Gets the number of HAN Resets due to Watchdog errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANLastResetTime">
            <summary>
            Gets the date and time of the last HAN Reset
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANResetLog">
            <summary>
            Gets the HAN Reset Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANHighWaterMark">
            <summary>
            Gets the Highest Mark
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANCurrentResetLimitPeriod">
            <summary>
            Gets the Current Reset Limit (Period)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANCurrentResetLimitCount">
            <summary>
            Gets the Current Reset Limit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANLockoutBit">
            <summary>
            Gets the Reset Lockout Bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANisHaltedDueToOverResetLimit">
            <summary>
            Gets the Reset Lockout Bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANResetLogString">
            <summary>
            Gets the contents of the HAN Reset Log as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedInstantaneousRegisters">
            <summary>
            Gets the Extended Energy Register values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedEnergyRegisters">
            <summary>
            Gets the Extended Energy Register values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLPRunning">
            <summary>
            Gets a boolean that represents whether or not Extended Load Profile is running.
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown when a communication error occurs.</exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtLoadProfileSupported">
            <summary>
            Gets whether the meter supports extended load profile.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLoadProfileCurrentNumberOfBlocks">
            <summary>
            The number of valid extended load profile blocks in mfg. LP set 1.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLoadProfileIntervalLength">
            <summary>
            Gets the interval length for Extended Load Profile
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLoadProfileNumberOfChannels">
            <summary>
            Gets the interval length for Extended Load Profile
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLoadProfileMaxNumberOfBlocks">
            <summary>
            Gets the maximum number of Extended Load Profile blocks that may be stored in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedLoadProfileIntervalsPerBlock">
            <summary>
            Gets the maximum number of intervals in a block of Extended Load Profile data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPRunning">
            <summary>
            Gets a boolean that represents whether or not Instrumentation Profile is running.
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown when a communication error occurs.</exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileSupported">
            <summary>
            Gets whether the meter supports instrumentation profile.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileCurrentNumberOfBlocks">
            <summary>
            The number of valid extended load profile blocks in mfg. LP set 2.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileCurrentNumberOfChannels">
            <summary>
            The number of valid extended load profile channels in mfg. LP set 2.
            This value is a more reliable indication of whether Inst. Profile is
            running.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileIntervalLength">
            <summary>
            Gets the interval length for Instrumentation Profile
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileMaxNumberOfBlocks">
            <summary>
            Gets the maximum number of Instrumentation Profile blocks that may be stored in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstrumentationProfileIntervalsPerBlock">
            <summary>
            Gets the maximum number of intervals in a block of Instrumentation Profile data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPChannels">
            <summary>
            Gets Which IP Channels are active (true = active)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPNumberOfChannels">
            <summary>
            Number of Channels being used in IP
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPPhaseMonitored">
            <summary>
            What Phase(s) are being monitored.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TwelveMaxDemandsSupported">
            <summary>
            Gets whether the meter supports storing 12 max W r demands.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDemands">
            <summary>
            Gets the array of max watts demand records from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsSwapOutTablePresent">
            <summary>
            Gets whether or not the SwapOut table is present in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SwapOutMeterSerialNumber">
            <summary>
            Gets the meter serial number for the swapped out meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SwapOutCustomerSerialNumber">
            <summary>
            Gets the customer serial number for the swapped out meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SwapOutWattHours">
            <summary>
            Gets the Watt hours energy for the swapped out meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SwapOutWattDemand">
            <summary>
            Gets the Watts demand for the swapped out meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SwapOutTime">
            <summary>
            Gets the time the meter was swapped out.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeRemainingInTestMode">
            <summary>
            Property to retrieve the Number of Minutes the meter is on test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.GetDefaultPulseWeightTest">
            <summary>
            Property to retrieve the configured/default pulse weight in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ItronCommModulePresent">
            <summary>
            Boolean that indicates if an Itron Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DualStackSupported">
            <summary>
            Gets whether or not the meter supports a dual stack.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CurrentStack">
            <summary>
            Gets the current stack running in the register
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastStackSwitchTime">
            <summary>
            Gets the time of the last stack switch
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.StackSwitchCount">
            <summary>
            Gets the number of stack switches that have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LANLogsSupported">
            <summary>
            Gets whether the meter supports LAN Log Data Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MinimumTimeAdjustmentSeconds">
            <summary>
            Gets the minimum number of seconds difference the comm module time and 
            register time can be different for an automatic network time adjustment
            to occur.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaximumTimeAdjustmentSeconds">
            <summary>
            Gets the maximum number of seconds difference the comm module time and 
            register time can be different for an automatic network time adjustment
            to occur.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleTimePollFailThresholdInHours">
            <summary>
             Gets/Sets whether or not the comm module time polling failure threshold value is 
            stored as hours (True) or minutes (False).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleTimePollingPeriod">
            <summary>
             Gets/Sets the frequency (in Minutes) the register will attempt to reread 
             the time from the comm module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CommModuleTimePollingFailureThreshold">
            <summary>
            Gets/Sets the amount of time after which a time adjustment failed event will be recorded
            if the comm module time cannot be successfully aquired. Stored as minutes or hours based
            on value of CommModuleTimePollFailThresholdInHours.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LoadLimitingConnectWithoutUserIntervetion">
            <summary>
            Determines if User Intervention is required after a load limiting disconnect
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LoadControlDisconnectThreshold">
            <summary>
            Determines if Load Control is enabled and what the Threshold is if it is enabled
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LoadVoltageDetectionDelay">
            <summary>
            Gets the load voltage detection delay
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BillingScheduleDates">
            <summary>
            Provides a list of DateTime objects representing the 
            billing schedule dates configured in the meter.  If no 
            dates are configured, the list will be empty.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANFWDLStatuses">
            <summary>
            Status of the firmware download to HAN devices via the CENTRON
            OpenWay meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HANFWDLPercentComplete">
            <summary>
            Gets the percentage completion of the active transfer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastPageSentActiveTransfer">
            <summary>
            Gets the Last page sent of the active transfer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TotalPagesActiveTransfer">
            <summary>
            Gets the total pages sent of the active transfer.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TransferableImageVersion">
            <summary>
            Gets the version and revision of the HAN device firmware file.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.C1222DebugFWDLBlockCount">
            <summary>
             Gets the number of firmware blocks currently downloaded from the C1222 debug table.
             </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TotalFWDLBlockCount">
            <summary>
            Gets the number total number of firmware blocks to download.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsActivateInProgress">
            <summary>
            Gets whether or not activation is occurring now.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsFWDLEnabled">
            <summary>
            Gets whether or not firmware download is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWStatusBlocksRecieved">
            <summary>
            Gets the firmware status table's number of blocks received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FormatofFirmwareStatus">
            <summary>
            Gets the firmware status table's format of its status.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FirmwareDownloadEvents">
            <summary>
            Gets the list of Firware Download Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWDLLogSupported">
            <summary>
            Gets whether the firmware download event log is supported in the meter
            by checking Table 00 to see if the tables are used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureLogSupported">
            <summary>
            Gets whether the temperature log is supported in the meter
            by checking Table 00 to see if the tables are used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWDLCRCSupported">
            <summary>
            Gets whether the FWDL CRCs are supported in the meter by checking
            Table 00 to see if the tables are used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWDLEvents">
            <summary>
            Gets the Firmware Download Events from the firmware download event log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SealUnsealEvents">
            <summary>
            Gets the Seal/Unseal Events from the firmware download event log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfFWDLEvents">
            <summary>
            Reads the number of firmware download events from the fixed fwdl event log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfSealUnsealEventsRemaining">
            <summary>
            Reads the number of seal/unseal event entries remaining from the fixed fwdl event log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FWDLEventLogSize">
            <summary>
            Reads the maximum number of firmware download events that he fixed FWDL event log will hold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RegisterApplicationCRC">
            <summary>
            Gets the register application's CRC
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RegisterBootloaderCRC">
            <summary>
            Gets the register bootloader's CRC
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CRCState">
            <summary>
            Gets the extended firmware download status table's current CRC state
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SuppliedCRCValue">
            <summary>
            Gets the extended firmware download status table's supplied CRC value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CalculatedCRCValue">
            <summary>
            Gets the extended firmware download status table's calculated CRC value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActivationState">
            <summary>
            Gets the extended firmware download status table's activation state
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActivationTime">
            <summary>
            Gets the extended firmware download status table's activation time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IOData">
            <summary>
            Gets the IO configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AMIHW3TaskExecution">
            <summary>
            Retrieves the Task Data from table 2270
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FreeRunningTime">
            <summary>
            Retrieves the Free Running time from Table 2270
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SignedAuthorizationState">
            <summary>
            Gets the current state of Signed Authorization in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SignedAuthorizationDisabledTimeRemaining">
            <summary>
            The amount of time remaining for Signed Authorization to be disabled. This value returns null
            unless the Signed Authorization State is set to disabled for a time period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DST">
            <summary>
            Gets the Configured DST dates
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DSTDates">
            <summary>
            Gets the Configured DST dates in a generic format.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Supports25YearDST">
            <summary>
            Gets whether or not the meter supports the 25 year DST Calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DSTEnabled">
            <summary>
            Gets the DST enabled flag
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AckReceived">
            <summary>
            Metrology Statistics - Raised by UART0 ISR when ACK received in IDLE state
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MsgReceived">
            <summary>
             Metrology statistics - Raised by UART0 ISR when 42 bytes received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WaitResponse">
            <summary>
            Metrology statistics - Wait for SAVE response BLURT
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WaitRetryTimeOut">
            <summary>
            Gets if the blurt message indicates if it is waiting for a retry timeout.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RetryTOFlag">
            <summary>
            Gets if the blurt message indicates if a retry timeout has occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SkipNextBlurt">
            <summary>
            Gets if the next blurt message should be skipped.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UsesBaseBackedValues">
            <summary>
            Gets whether or not the meter uses base backed values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ClearMetBusy">
            <summary>
            Gets if the blurt message indicates that clear met busy.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBlurtReady">
            <summary>
            Gets if the blurt message is ready.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBlurtIDCountReady">
            <summary>
            Gets if the blurt message's ID count is ready.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WDEPulseCnt">
            <summary>
            Gets if the blurt message contains a WDE pulse count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBlurtLastInInterval">
            <summary>
            Gets if the blurt message is the last in an interval
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsBlurtReceivingNextInterval">
            <summary>
            Gets whether or not the blurt message is receiving the next interval
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MetrologyMode">
            <summary>
            Gets the type of blurt packet coming from the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EnergyConfigurationSupported">
            <summary>
            Gets whether or not the meter's configured energies are supported by the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SuppliedEnergy1">
            <summary>
            Gets the 1st energy quantity supplied by the base.
            </summary>
            <remarks>Property currently only supports single phase meters.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SuppliedEnergy2">
            <summary>
            Gets the 2nd energy quantity supplied by the base.
            </summary>
            <remarks>Property currently only supports single phase meters.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SecondaryQuantity">
            <summary>
            Gets the secondary quantity supplied by the base.
            </summary>
            <remarks>Property currently only supports single phase meters.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SecondaryQuantityName">
            <summary>
            Gets the name of the secondary quantity supplied by the base.
            </summary>
            <remarks>Property currently only supports single phase meters.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsSinglePhaseMeter">
            <summary>
            Gets whether or not the device is a single phase metering device.
            </summary>
            <remarks>Property currently only supports single phase meters.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsPolyphaseMeter">
            <summary>
            Determines if the device is a polyphase meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.GoodBlurtMessageCount">
            <summary>
            Gets the blurt good message count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SaveAttempts">
            <summary>
            Gets the number of blurt save attempts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.AckReceivedCount">
            <summary>
            Gets the blurt ack received count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ResponseReceivedCount">
            <summary>
            Gets the blurt response received count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FailedSaves">
            <summary>
            Gets the number of failed saves coming from the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RetryCount">
            <summary>
            Gets the blurt retry count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NoTimeCount">
            <summary>
            Gets the blurt no time count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.KillRetries">
            <summary>
            Gets the blurt kill retries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MinimumTimeRemaining">
            <summary>
            Gets the blurt minimum time remaining
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FalseTemperatureCount">
            <summary>
            Gets the blurt false temperature count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FalseEnergyCount">
            <summary>
            Gets the blurt false energy count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ChecksumFailedCount">
            <summary>
            Gets the blurt checksum failed count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.HeaderFailedCount">
            <summary>
            Gets the blurt header fail count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ReceivedOverrunsCount">
            <summary>
            Gets the blurt received overruns count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsrRxMessagesReceived">
            <summary>
            Gets the UART ISR Rx Received count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsrRxErrorCount">
            <summary>
            Gets the UART ISR Rx error count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ISRTypeFErrors">
            <summary>
            Gets the number of ISR type F errors coming from the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ISRTypeOErrors">
            <summary>
            Gets the number of ISR type O errors coming from the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ParityErrors">
            <summary>
            Gets the number of parity errors coming from the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ABTErrorCount">
            <summary>
            Gets the UART ABT error count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeOfLastBlurtUpdate">
            <summary>
            Gets the time of last update
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MetrologyData">
            <summary>
            Gets the metrology data coming from the base
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ConfigureBaseEnergiesSupported">
            <summary>
            Gets whether or not the meter supports configuring the base energies
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PhasesMonitored">
            <summary>
            Gets the extended voltage monitoring phases monitored by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstantaneousWattsDelivered">
            <summary>
            Gets the Instantaneous Watts Delivered quantity from the power monitoring tables tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstantaneousWattsReceived">
            <summary>
            Gets the Instantaneous Watts Received quantity from the power monitoring tables tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerMonitoringEnabled">
            <summary>
            Gets whether power monitoring is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerMonitoringColdLoadTime">
            <summary>
            Gets number of seconds before power monitoring begins after power up.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Form">
            <summary>
            Gets the detected form of the meter from voltage monitoring data.  For poly meters, it is the actual meter form. 
            For mono meters, the value 12 is for a 12S and the value 255 is for a non-12S form (1S, 2S, 3S, 4S).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberPhaseChangeActionNeeded">
            <summary>
            Gets the number of phases change action needed flag. This field is valid for mono meters only. 
            It is always 0 for poly meters.  True indicates action is requested to change the number of 
            phases in the meter for extended voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltageMonitoringServiceType">
            <summary>
            Gets the service type of the meter from the voltage monitoring data.  Currently this only
            supports extended voltage monitoring!!!  If desired support could be added for 
            checking value in legacy voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NominalVoltage">
            <summary>
            Gets the meter's nominal voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LegacyVoltageMonitoringSupported">
            <summary>
            Gets whether the meter supports legacy voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtVoltageMonitoringSupported">
            <summary>
            Gets whether the meter supports extended voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VoltageMonitoringEnabled">
            <summary>
            Gets/sets whether voltage monitoring is enabled in the meter.  Currently this only
            supports extended voltage monitoring!!!  If desired support could be added for 
            checking value in legacy voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VMIntevalLength">
            <summary>
            Gets/sets the voltage monitoring interval length in minutes.  Currently this only
            supports extended voltage monitoring!!!  If desired support could be added for 
            checking value in legacy voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.VMNumberOfValidBlocks">
            <summary>
            Gets number of valid voltage monitoring blocks. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TLVIdRequested">
            <summary>
            Gets the TLV ID requested in the Mfg proc 150 request
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TLVIdRequestedData">
            <summary>
            Gets the data for the TLV ID requested with Mfg proc 150
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UDPDroppedPacketsCount">
            <summary>
            Reads the number of UDP dropped packets from Mfg table 563
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPDroppedPacketsCount">
            <summary>
            Reads the number of IP packets dropped from Mfg table 563
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UDPCheckErrorCount">
            <summary>
            Reads the number of UDP check errors from Mfg table 563
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IPv6DroppedPacketCount">
            <summary>
            Reads the number of IPv6 packets dropped from Mfg table 563
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtSelfReadSupported">
            <summary>
            Gets whether the meter supports extended voltage monitoring.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedSelfReadData">
            <summary>
            This property retrieves the extended self read data as a list of extended 
            self read records in descending date order from the most recent self read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.SupportsRIB">
            <summary>
            Device supports residential inclining block (RIB) pricing.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBPricingEnabled">
            <summary>
            Residential inclining block (RIB) pricing is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActiveRIBScheduleID">
            <summary>
            The schedule ID for the active RIB schedule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CurrentRIBBlockPeriodConsumptionDelivered">
            <summary>
            The most recent summed value of energy delivered and consumed in the premises during 
            the current block period.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PreviousRIBBlockPeriodConsumptionDelivered">
            <summary>
            The value of energy delivered and consumed in the premises during 
            the previous block period.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBBlockThresholdMultiplier">
            <summary>
            The value to be multiplied against the thresholds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBBlockThresholdDivisor">
            <summary>
            The value to be divided against the thresholds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBPublishedPriceData">
            <summary>
            The published price data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActiveRIBBillingPeriod">
            <summary>
            The billing period information currently being presented to the HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActiveRIBBlockPeriod">
            <summary>
            The block period information currently being presented to the HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBBillingPeriods">
            <summary>
            The billing periods in the current schedule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RIBBlockPeriods">
            <summary>
            The block periods in the current schedlule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NextBlockPriceScheduleStatusState">
            <summary>
            Gets the current state of the Next Block Price Schedule Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NextRIBScheduleID">
            <summary>
            The schedule ID for the next RIB schedule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NextRIBBillingPeriods">
            <summary>
            The billing periods in the next schedule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NextRIBBlockPeriods">
            <summary>
            The block periods in the next schedlule.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TOUScheduleID">
            <summary>
            Gets the TOU Schedule ID from the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ExtendedOutageDuration">
            <summary>
            Gets the extended outage duration configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InExtendedOutageRecovery">
            <summary>
            Determines whether or not the meter is in extended outage recovery mode.
            Note: The current code is not a definitive test.  If a meter is configured for 
            extended outage recovery and is not configured for load profile, this will return
            true even if there hasn't been an extended outage.  See CQ177029.  Gennady is
            investigating other ways of getting this information
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerUpThreshold">
            <summary>
            Gets the power up threshold value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PowerUpThresholdSupported">
            <summary>
            Determines whether or not the power up threshold item is supported.  First Table 2260
            must be supported and then the firmware must be Beryllium or greater.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsCTEEnabled">
            <summary>
            Gets the current per phase exceeded enabled field from Mfg table 217
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsCTEConfigured">
            <summary>
            Gets the current per phase exceeded enabled field from Mfg table 217
            and determines if CTE has been configured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CTEThreshold">
            <summary>
             Gets the current per phase exceeded threshold field from Mfg table 217
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CTEHysteresis">
            <summary>
             Gets the current per phase exceeded hysteresis field from Mfg table 217
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CTEDebounce">
            <summary>
             Gets the current per phase exceeded debounce field from Mfg table 217
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CTEMinActiveDuration">
            <summary>
             Gets the current per phase exceeded minimum active duration field from Mfg table 217
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.InstantaneousPhaseCurrent">
            <summary>
            Gets the Instantaneous Phase Current from MFG table 2377
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BellWeatherDataSetConfiguration">
            <summary>
            Gets the Bell Weather DataSet Configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BellWeatherConfigRcd">
            <summary>
            Gets the Bell Weather Configuration Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BellWeatherGroupDataStatusRcd">
            <summary>
            Gets the Bell Weather Group Data Status Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.BellWeatherEnableRcd">
            <summary>
            Gets the Bell Weather Enable Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureConfiguration">
            <summary>
            Gets the Temperature Configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureThreshold1">
            <summary>
            For automated fw testing.  Allows us to set the high temperature threshold 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureThreshold2">
            <summary>
            For automated fw testing.  Allows us to set the high temperature threshold 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureData">
            <summary>
            Gets the Temperature Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureLog">
            <summary>
            Gets the Temperature Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TemperatureLogUncached">
            <summary>
            Gets the Temperature Log - does a fresh read
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RFLANModule">
            <summary>
            DO NOT USE THIS PROPERTY!  Use the CommModule property instead.  That is unless, 
            you are writing an automated test and CommModule regularly fails to be created because 
            the device class can't be read from tbl. 2064.  In that case use this property to get 
            the RFLAN Comm Module object.  
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateSecurityValidationResult(Itron.Metering.Device.ProcedureResultCodes)">
            <summary>
            Translates the security validation result into a string
            </summary>
            <param name="result">procedure result code</param>
            <returns>the status translated into a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineDailySelfRead(System.Byte)">
            <summary>
            Method that takes the Daily Self Read Byte and returns a string
              containing the Daily Self Read time in human readable format.
            </summary>
            <param name="byDailySelfRead">The Byte from the Meter that has the values</param>
            <returns>string - Daily Self Read Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateLoadLimitingConnectWithoutUserIntervetion(System.Int32)">
            <summary>
            Translate the Load Limiting value to something that is human readable
            </summary>
            <param name="iDemandControl">Demand Control Value from device</param>
            <returns>string - human readable result</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateLoadControlDisconnectThreshold(System.Single)">
            <summary>
            Tranlate the Load Control Threshold to a human readable format
            </summary>
            <param name="fLoadControlThreshold">Load Control value</param>
            <returns>string - human readable</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateHANFwDlStatus(Itron.Metering.Device.CENTRON_AMI.HAN_FW_DL_STATUS)">
            <summary>
            Translates the numeric HAN firmware download status code into a string
            </summary>
            <param name="status">numerical status code</param>
            <returns>the status translated into a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReorderExtendedSelfReadData(Itron.Metering.Device.OpenWayMFGTable2419,Itron.Metering.Device.OpenWayMFGTable2421,Itron.Metering.Device.OpenWayMFGTable2423)">
            <summary>
            This method reorders the extended self read records so the records from the oldest extended self read come first
            followed by next oldest records and so on.
            </summary>
            <param name="Table2419">The actual mfg. extended self read table.</param>
            <param name="Table2421">The list of extended self read records.</param>
            <param name="Table2423"></param>
            <returns>The next extended self read starting index record.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetNextExtSRStartIndex(System.Int32,System.Collections.ObjectModel.ReadOnlyCollection{Itron.Metering.Device.ExtendedSelfReadRecord})">
            <summary>
            This method gets the starting index of the next oldest extended self read based on
            a given previous self read starting record index and a list of extended self read records.
            </summary>
            <param name="iPreviousSRRecordStart">The previous extended self read starting record index.</param>
            <param name="ExtSRRecords">The list of extended self read records.</param>
            <returns>The next extended self read starting index record.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateDisplayItem(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Creates a new DisplayItem
            </summary>
            <returns>ANSIDisplayItem</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HandleIrregularFormatting(Itron.Metering.Device.ANSIDisplayItem,System.Object)">
            <summary>
            Handle any irregular formatting for display items.
            </summary>
            <param name="Item">The display item to check</param>
            <param name="objData">The value of the data.</param>
            <returns>True if the item was handled. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetTimeOnBatteryAndRegistrationCount(System.UInt32,System.UInt32)">
            <summary>
            Sets the time on battery and the count of prior registrations.
            For use in automated testing.
            </summary>
            <param name="numberOfMinutes">The number of minutes that the meter will think it has been on battery</param>
            <param name="registrationCount">The number of registrations the meter will think it has had</param>
            <returns>The procedure result code</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetTaskExecutionTimes">
            <summary>
            Clears the maximum task execution times
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.InjectHANEvents(System.Byte,System.UInt32,System.UInt64,System.Byte[])">
            <summary>
            Injects a new HAN event into the HAN event logs.
            ****ONLY USED FOR TESTING****
            </summary>
            <param name="byEventNumber">The event's number.</param>
            <param name="uiEventID">The event's associated ID.</param>
            <param name="uiMACAddress">The MAC address of the device event is comming from.</param>
            <param name="abytArgumentData">Data associated with the event.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.InjectEvents(System.Byte,System.Byte,System.UInt16,System.Byte,System.Byte[])">
            <summary>
            Injects History and Event Logs using Procedure 106
            ****ONLY USED FOR TESTING****
            </summary>
            <param name="byLogSelect">Log Select</param>
            <param name="byEventID">The event's associated ID.</param>
            <param name="uiRepeatCount">Repeat Count</param>
            <param name="byArgumentFillByte"></param>
            <param name="abytArgumentData">Data associated with the event.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.InjectHANEventsWithProc106(System.Byte,System.Byte,System.UInt16,System.UInt32,System.UInt64,System.Byte[])">
            <summary>
            Injects HAN Events using Procedure 106
            ****ONLY USED FOR TESTING****
            </summary>
            <param name="byLogSelect">Log Select</param>
            <param name="byEventID">The event's associated ID.</param>
            <param name="uiRepeatCount">Repeat Count</param>
             <param name="uiHANEventID">The event's associated ID.</param>
            <param name="uiMACAddress">The MAC address of the device event is comming from.</param>
            <param name="abytArgumentData">Data associated with the event.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.InjectFWDownloadEvents(System.Byte,System.Byte,System.UInt32,System.Byte[],System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Injects FW Download Events into Log using Procedure 115
            ****ONLY USED FOR TESTING****
            </summary>
            <param name="byEventID">The event's associated ID.</param>
            <param name="bytEventSource">The event's Source.</param>
            <param name="uiImageCRC">Image CRC</param>
            <param name="abytImageHash">Image Hash</param>
            <param name="abytCurrentImageRevision">Current Image Revision</param>
            <param name="abytPreviousImageRevision">Previous Image Revision</param>
            <param name="abytArgumentData">Data associated with the event.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CauseFatalError">
            <summary>
            Causes Fatal Error 7 on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CauseFatalError2">
            <summary>
            Causes Fatal Error 2 on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CauseFatalError6">
            <summary>
            Causes Fatal Error 6 on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReconfigureSimpleMeteringMultiplierAndDivisor(System.UInt32,System.UInt32)">
            <summary>
            Reconfigures the Multiplier and Divisor used by Simple Metering
            </summary>
            <param name="multiplier">The multiplier to use</param>
            <param name="divisor">The divisor to use</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestJoinedDevice(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 1 - Joined Device
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestCodeDetectableReset(System.UInt32,System.UInt32)">
            <summary>
            Runs the HAN Reset Test 2 - Code Detectable Reset
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting</param>
            <param name="errorCode">The error code to test</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestZigBeeStackWatchdog(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 3 - ZigBee Stack Watchdog
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestZigBeeTaskWatchdog(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 4 - ZigBee Task Watchdog
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestProcessorFault(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 5 - Processor Fault
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANTestPeriodicReset(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 6 - Periodic Reset
            </summary>
            <param name="frequency">The number of seconds between resets. This should be set to 10s or more.</param>
            <returns>The result of the reset</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHANFirstUseReset(System.UInt32)">
            <summary>
            Runs the HAN Reset Test 7 - First Use Reset
            </summary>
            <param name="startDelay">The number of seconds to wait before the start of the test</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DisableResetHANTest(System.UInt32)">
            <summary>
            Disables any active HAN Reset Tests
            </summary>
            <param name="startDelay">The number of seconds to wait before resetting the meter</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearHANResetLogs">
            <summary>
            Clears the HAN Reset Log
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CancelScheduledFirmwareActivation(Itron.Metering.Device.ProcedureFirmwareType)">
            <summary>
            Cancels the scheduled firmware activation.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetQuantityFromStandardTables(Itron.Metering.Device.LID,Itron.Metering.Device.LID,System.String,Itron.Metering.Device.RegisterDataRecord)">
            <summary>
            Gets the quantity object described by the Energy and Demand LIDs.
            </summary>
            <param name="energyLID">The energy LID for the quantity.</param>
            <param name="demandLID">The demand LID for the quantity.</param>
            <param name="quantityDescription">The description of the quantity.</param>
            <param name="registers">The registers to create the quantity from.</param>
            <returns>The quantity if it is supported by the meter. Null if the quantity is not supported.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertWritePendingTOUResult(Itron.Metering.Device.WritePendingTOUResult)">
            <summary>
            Converts a WritePendingTOUResult to a TOUReconfigResult.
            </summary>
            <param name="Result">A WritePendingTOUResult</param>
            <returns>A TOUReconfigResult.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterReferenceTime">
            <summary>
            The Base Date for calculating dates in the AMI Device
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MeterConfigurationReferenceTime">
            <summary>
            The Base Date for calculating dates in the Configuration Portion (Table 2048) of AMI Device
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.UTCMeterReferenceTime">
            <summary>
            The Base Date for calculating dates in the AMI Device when the
            time comes back as UTC.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ScheduledEvents">
            <summary>
            Gets the list of Scheduled Events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateLID(System.UInt32)">
            <summary>
            Creates the LID object for specified LID number
            </summary>
            <param name="uiLIDNumber">The LID number to create</param>
            <returns>The object that represents the specified LID</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DateTimeOfDemandReset(System.UInt32)">
            <summary>
            Gets the Demand Reset date for the specified index.
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The date of the demand reset.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRAmpsNeutral(System.UInt32)">
            <summary>
            Gets the Self Read values for Neutral Amps
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRAmpsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (a)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRAmpsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (b)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRAmpsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (c)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRAmpsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps Squared
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRPowerFactor(System.UInt32)">
            <summary>
            Gets the Self Read values for Power Factor
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRQDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRQReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVADelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVALagging(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Lagging
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVAReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarNetDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarNetReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarQuadrant1(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q1.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarQuadrant2(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q2.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarQuadrant3(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q3.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarQuadrant4(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q4.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVarReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVoltsAverage(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Average.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (a).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVoltsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts(b).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVoltsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (c).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRVoltsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Squared.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRWattsDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Delivered.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRWattsNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRWattsReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SRWattsUni(System.UInt32)">
            <summary>
            Gets the Self Read values for Unidirectional Watts.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVADelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for VA d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVAReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for VA r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the demand reset value for Volts (a)
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRWattsDelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRWattsNet(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh Net
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRWattsReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRWattsUni(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarDelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for var d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for var r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarNet(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarNetDelivered(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Delivered Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarNetReceived(System.UInt32)">
            <summary>
            Provides access to the DR Var Net Received Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarQuadrant1(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 1 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarQuadrant2(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 2 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarQuadrant3(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 3 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DRVarQuadrant4(System.UInt32)">
            <summary>
            Provides access to the DR Var Quadrant 4 Quantity
            </summary>
            <param name="uiIndex">Which Demand Reset to Retrieve</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineFullCoreDumpLength">
            <summary>
            Determines the length of the Full Core Dump based on the Core Dump Map
            </summary>
            <returns>The length of the core dump in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureBaseEnergies(System.Collections.Generic.List{Itron.Metering.Device.BaseEnergies})">
            <summary>
            Configures the meter to use the specified base energies
            </summary>
            <param name="baseEnergies">The base energy values to use.</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureBase(System.String)">
            <summary>
            Configures the base to use the correct energies if the base supports Energy Configuration
            </summary>
            <param name="programFile">The program file to use to set the base energies</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CheckForValidEnergyConfig(System.Collections.Generic.List{Itron.Metering.Device.BaseEnergies},System.Collections.Generic.List{Itron.Metering.Device.BaseEnergies})">
            <summary>
            Checks to see if the current base configuration is valid for a specific register configuration
            </summary>
            <param name="BaseConfig">The current base configuration</param>
            <param name="RegisterConfig">The requested register configuration</param>
            <returns>True if the current base configuration is valid. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ResetHAN(Itron.Metering.Device.HANResetMethod,System.UInt32,System.UInt32)">
            <summary>
            Resets the HAN
            </summary>
            <param name="resetMethod">The method that should be used to reset</param>
            <param name="param2">Parameter 2 (varies based on method used)</param>
            <param name="param3">Parameter 3 (varies based on method used)</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetSecurityLevel(Itron.Metering.Device.SecurityLevel@)">
            <summary>
            Gets the current security level from the meter.
            </summary>
            <param name="level">The current security level</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PingHANDevice(System.UInt64)">
            <summary>
            Perform a Ping HAN Device
            </summary>
            <param name="eui64">Destination HAN device</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DateTimeOfSelfRead(System.UInt32)">
            <summary>
            Gets the Self Read date for the specified index.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The date of the Self Read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadFWLoaderVersion">
            <summary>
            Reads the Firmware Loader Version from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.WriteCoreDumpHeader(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the Header information to the Core Dump file
            </summary>
            <param name="writer">The Binary writer to the Core Dump file</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.WriteCoreDumpTables(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the tables portion of the Core Dump for all meter types.
            </summary>
            <param name="writer">The Binary Writer for the Core Dump file.</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <param name="IncludedSections">EDL Sections to include</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2412(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2412 from the meter.
            </summary>
            <param name="MeterTables">The table object for the meter.</param>
            <returns>The PSEM response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2413(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2413 from the meter.
            </summary>
            <param name="MeterTables">The table object for the meter.</param>
            <returns>The PSEM response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2152(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2152
            </summary>
            <param name="MeterTables">The tables for the meter.</param>
            <returns>The PSEM response for communications.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2157(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2157, extended voltage monitoring data table.
            </summary>
            <param name="MeterTables">The tables for the meter.</param>
            <returns>The PSEM response for communications.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2162(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2162
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadTable2164(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2164
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.StoreProcedureValidatedBaseEnergies">
            <summary>
            This method caches the values returned from the Valdate Base Energies procedure (mfg. proc 108).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateConfigError(Itron.Metering.AMIConfiguration.ConfigurationError)">
            <summary>
            Translate the response from Configure
            </summary>
            <param name="ConfigError">ConfigurationError - Result from AMIConfigureDevice.Configure</param>
            <returns>ConfigurationResult - Result expect from call to our method</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LPPulseWeightMultiplier">
            <summary>
            Gets the multiplier used to calculate the Load Profile Pulse Weight
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsTimeZoneApplied">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsGMT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberofBaseConfigurableEnergies">
            <summary>
            Gets the number of energies that can be configured to the base by this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfSupportedEnergies">
            <summary>
            Gets the number of energies supported by this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DefaultMeterType">
            <summary>
            Gets the meter type "CENTRONAMI"
            </summary>		
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ModifyLID(Itron.Metering.Device.ANSIDisplayItem)">
            <summary>
            Handle any special conversions before building the display Item.
            </summary>
            <param name="DispItem">The Display Item we may need to modify</param>
            <returns>The new Display item (Item passed in if not changes were made)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FindEnergySelectionIndex(Itron.Metering.Device.LID)">
            <summary>
            Finds the selection index of the specified energy.
            </summary>
            <param name="energyLID">The LID for the quantity to search for.</param>
            <returns>Null if the quantity is not supported or the selection index if supported.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FindEnergySourceIndex(Itron.Metering.Device.LID)">
            <summary>
            Finds the index of the source if supported by the meter.
            </summary>
            <param name="sourceLID">The quantity to search for.</param>
            <returns>Null if the quantity is not supported or the index into the source definition if supported.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FindDemandSourceIndex(Itron.Metering.Device.LID)">
            <summary>
            Finds the index of the source if supported by the meter.
            </summary>
            <param name="sourceLID">The quantity to search for.</param>
            <returns>Null if the quantity is not supported or the index into the source definition if supported.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HandleIrregularDescription(Itron.Metering.Device.ANSIDisplayItem)">
            <summary>
            Sets the Description of Display Items that are not set or need to be something 
            other than what is returned from the LID.
            </summary>
            <param name="Item">The item to handle</param>
            <returns>True if the item was handled, false otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetCumDemandLID(Itron.Metering.Device.LID)">
            <summary>
            Gets the Cumulative Demand LID for the specified base Demand.
            </summary>
            <param name="demandLID">The base demand LID.</param>
            <returns>The Cumulative demand LID.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetCCumDemandLID(Itron.Metering.Device.LID)">
            <summary>
            Gets the Continuously Cumulative Demand LID for the specified base Demand.
            </summary>
            <param name="demandLID">The base demand LID.</param>
            <returns>The Continuously Cumulative demand LID.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTOUEnergyLID(Itron.Metering.Device.LID,System.Int32)">
            <summary>
            Gets the TOU LID for the specified energy and rate.
            </summary>
            <param name="energyLID">The base energy LID for the quantity</param>
            <param name="rate">The TOU rate to get.</param>
            <returns>The LID for the energy.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTOUDemandLid(Itron.Metering.Device.LID,System.Int32)">
            <summary>
            Gets the TOU LID for the specified demand and rate.
            </summary>
            <param name="demandLID">The base demand LID for the quantity.</param>
            <param name="rate">The TOU rate to get.</param>
            <returns>The LID for the demand.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FindDemandSelectionIndex(Itron.Metering.Device.LID)">
            <summary>
            Finds the selection index of the specified demand.
            </summary>
            <param name="demandLID">The LID for the quantity to search for.</param>
            <returns>Null if the quantity is not supported or the selection index if supported.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateHash(System.String,System.Int32)">
            <summary>
            Computes the SHA256 hash of the key passed in
            </summary>
            <param name="strKey">the security key to hash</param>
            <param name="iKeyLength">
            The maximum length of the key.
            </param>
            <returns>The hashed key</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateHash(System.Byte[])">
            <summary>
            Computes the SHA256 hash of the key passed in
            </summary>
            <param name="Key">The key to hash</param>
            <returns>The hashed key</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetSecurityCode(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityType,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract optical and DES keys from it
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="SecType">
             Type of Security (i.e Optical Passwords or DES Keys
             </param>
             <param name="PasswordLevel">
             KeyID of Security
             </param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DecryptHANKey(System.String)">
            <summary>
            Takes an encrypted key in the form of a string as input
            and applies the DES encryption algorithm to produce an
            unencrypted byte array
            </summary>
            <param name="strEncryptedKey">Encrypted security key</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RequiresDESKeysValidation(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract Security Provider, Exception Security Model, DESKey Length in order to decide 
             whether to Validate DES keys or not
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="DESKeyID">
             DESKeyID
            </param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table04">
            <summary>
            Gets the Table 04 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table11">
            <summary>
            Gets the Table 11 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table14">
            <summary>
            Gets the Table 14 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table21">
            <summary>
            Gets the Table 21 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table22">
            <summary>
            Gets the Table 22 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table23">
            <summary>
            Gets the Table 23 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table24">
            <summary>
            Gets the Table 24 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table25">
            <summary>
            Gets the Table 25 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table26">
            <summary>
            Gets the Table 26 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table27">
            <summary>
            Gets the Table 27 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table28">
            <summary>
            Gets the Table 28 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table61">
            <summary>
            Gets the Table 61 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table62">
            <summary>
            Gets the Table 62 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table63">
            <summary>
            Gets the Table 63 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table64">
            <summary>
            Gets the Table 64 object and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2048">
            <summary>
            This property returns the correct version of the 2048 table for the
            Centron Mono meter (Creates it if necessary)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2053">
            <summary>
            Gets the object for MFG table 2053
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2061HANSecurityKeys">
            <summary>
            Gets the HAN Security Keys sub table object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2061RFLAN">
            <summary>
            Gets the RFLAN Opt Out sub table object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2061Energy1MeterKey">
            <summary>
            Gets the Energy 1 MeterKey sub table object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2079">
            <summary>
            Return the Table Object for Table 2079 (Mirror of Comm Module Table 0)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2098">
            <summary>
            Gets the Table CHANMfgTable2098 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2100">
            <summary>
            Gets the Table CHANMfgTable2100 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2101">
            <summary>
            Gets the Table CHANMfgTable2101 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2105">
            <summary>
            Gets the Table CHANMfgTable2105 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2108">
            <summary>
            Gets the Table OpenWayMfgTable2108 object - MCU Stats (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2093">
            <summary>
            Gets Mfg table 2093
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2094">
            <summary>
            Gets Mfg table 2094
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2095">
            <summary>
            Gets Mfg table 2095
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2096">
            <summary>
            Gets Mfg table 2096
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2097">
            <summary>
            Gets Mfg table 2097
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2112">
            <summary>
            Gets the Table OpenWayMFGTable2112MetrologyStatistics object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2114C1222DebugInfo">
            <summary>
            Gets the C1222 Debug Info Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2119">
            <summary>
            Gets the RFLAN Information II table 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2121">
            <summary>
            Gets the RFLAN Information II table 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2123">
            <summary>
            Gets the Table 2123 (Scheduled Events) object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2127EnhancedSecurityKeys">
            <summary>
            Gets the Enhanced Security Keys sub table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2135">
            <summary>
            Gets the Table CHANMfgTable2135 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2139">
            <summary>
            Gets the object for MFG table 2139
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2141">
            <summary>
            Gets the object for MFG table 2139
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2142">
            <summary>
            Gets the object for MFG table 2139
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2153">
            <summary>
            Gets the Enhanced Voltage Monitoring Actual Dimension Table and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2154">
            <summary>
            Gets the Enhanced Voltage Monitoring Control Table and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2155">
            <summary>
            Gets the Enhanced Voltage Monitoring Status Table and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2156">
            <summary>
            Gets the Enhanced Voltage Monitoring Extended Status Table and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2157">
            <summary>
            Gets the Enhanced Voltage Monitoring Data Set Table and creates it if needed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2168">
            <summary>
            Gets the Meter Swap Out table and creates it if needed. If the meter does not support
            this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2170">
            <summary>
            Gets the CPC Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2175">
            <summary>
            Gets the Max Demands table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2179">
            <summary>
            Gets the Actual Firmware Download Limiting Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2180">
            <summary>
            Gets the Firmware Status Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2182">
            <summary>
            Gets the Extended Firmware Status Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2191">
            <summary>
            Gets the C12.22 configuration table and creates it if needed. If the meter does not support
            this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2198">
            <summary>
            Gets the Table 2198 (LCD Diagnostics) table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2219">
            <summary>
            Gets the Status Information table and create it if needed. If the meter does not support
            this table this property will return null
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2220">
            <summary>
            Gets the Factory Data Information Table and creates it if needed. Returns null if this
            table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2221">
            <summary>
            Gets the Security Information Table and creates it if needed. Returns null if this
            table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2260HANEvents">
            <summary>
            Gets the SR3 HAN Events Config subtable and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2260DSTConfig">
             <summary>
            Gets the object for MFG table 2053
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2260SR30Config">
            <summary>
            Gets the SR3 Config table and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2260ExtendedConfig">
            <summary>
            Gets the Extended Outage Config subtable and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2261">
            <summary>
            Gets the Fatal Error Recovery Status table and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2262">
            <summary>
            Gets the Tamper Tap Status table and creates it if needed
            This will return null if the table is not supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2263">
            <summary>
            Gets the Tamper Tap Data table and creates it if needed
            This will return null if the table is not supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2264">
            <summary>
            Gets the Program State table and creates it if needed
            This will return null if the table is not supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2265CTEConfig">
            <summary>
            Gets the Mfg table 217 Current Threshold Exceeded Config subtable and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2270">
            <summary>
            Gets the Task Execution time Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2288">
            <summary>
            Gets the HAN Stats Two table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2290">
            <summary>
            Gets the HAN Reset Error Log table. Returns null if this table is not supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2297">
            <summary>
            Gets the Table 2297 object (Recurring Price Table)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2360">
            <summary>
            Gets the CPP table and creates it if needed
            This will return null if the table is not supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2361">
            <summary>
            Gets the Meter Time Table. This table can be ready without security.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2368">
            <summary>
            Gets the Power Monitoring Dimension Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2369">
            <summary>
            Gets the Power Monitoring Control Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2370">
            <summary>
            Gets the Power Monitoring Data Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2379">
            <summary>
            Gets the Actual Firmware Download Event Log table and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2382">
            <summary>
            Gets the Firmware Download Event Log Data table and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2383">
            <summary>
            Gets the Firmware Download CRC table and creates it if needed.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2389">
            <summary>
            Gets the Table 2389 object - MFG Data Sources Actual Limiting Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2392">
            <summary>
            Gets the Table 2392 object - MFG Data Control Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2409">
            <summary>
            Gets the Table 2409 object - MFG Load Profile Actual Limiting Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2410">
            <summary>
            Gets the Table 2410 object - MFG Load Profile Control Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2411">
            <summary>
            Gets the Table 2411 object - MFG Load Profile Status Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2412">
            <summary>
            Gets the Table 2412 object - MFG Load Profile Data Set 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2413">
            <summary>
            Gets the Table 2413 object - MFG Load Profile Data Set 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2414">
            <summary>
            Gets the Table 2414 object - MFG Load Profile Data Set 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2415">
            <summary>
            Gets the Table 2415 object - MFG Load Profile Data Set 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2417">
            <summary>
            Gets the Table 2417 object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2419">
            <summary>
            Gets the Table 2419 object - Actual Extended Self Read Limiting Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2421">
            <summary>
            Gets the Table 2421 object - MFG Extended Self Read Status Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2422">
            <summary>
            Gets the Table 2422 object - Extended Energy and Instantaneous Self Read Data Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2423">
            <summary>
            Gets the Table 2423 object - MFG Extended Self Read Data Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2439">
            <summary>
            Gets the Actual HAN RIB Limiting Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2440">
            <summary>
            Gets the Active Block Price Schedule Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2441">
            <summary>
            Gets the Next Block Price Schedule Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2612">
            <summary>
            Gets the table 2612 object - Boron TLV Last Read Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2611">
            <summary>
            Gets the UIP Stack Stats table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2640">
            <summary>
            Gets the table 2640 object - Dual Stack Switch Status table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table3043Header">
            <summary>
            Gets the sub table for the Core Dump Header and creates it if needed.
            This property returns null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table3043Map">
            <summary>
            Gets the sub table for the Core Dump Map and creates it if needed.
            This property returns null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table3043Info">
            <summary>
            Gets the sub table for the Core Dump Info and creates it if needed.
            This property returns null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2265DataSetConfig">
            <summary>
            Gets the DataSet Configuration from Mfg table 2265.
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2185">
            <summary>
            Gets Mfg table 2185 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2186">
            <summary>
            Gets Mfg table 2186 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2187">
            <summary>
            Gets Mfg table 2187 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2425">
            <summary>
            Gets Mfg table 2425 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2426">
            <summary>
            Gets Mfg table 2426 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2427">
            <summary>
            Gets Mfg table 2427 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2377">
            <summary>
            Gets Mfg table 2377 if it exists
            This will return null if the table is not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.Table2760">
            <summary>
            Gets Mfg table 2760 if it exists
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_fltFWLoaderVerRev">
            <summary>Firmware Loader Version and Revision</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_FWLoaderVersion">
            <summary>
            Firmware Loader Version
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_FWLoaderRevision">
            <summary>
            Firmware Loader Revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_FWLoaderBuild">
            <summary>
            Firmware Loader Build
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_DSTConfigured">
            <summary>Is DST Configured</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_HANInfo">
            <summary>
            The HANInformation object. Used to access common HAN information tables, properties, etc
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_BaseEnergyConfigurationSupported">
            <summary>
            Base Energy Configuration Supported
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_BaseSuppliedEnergy1">
            <summary>
            Supplied Base Energy 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_BaseSuppliedEnergy2">
            <summary>
            Supplied Base Energy 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_Table2108">
            <summary>
            The table 2108 object. The MCU stats table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_Table2135">
            <summary>
            The table 2135 object. The HAN Firmward Download Client table (read only)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_Table2260HANEvents">
            <summary>
            The table 2260 object. The SR3 Config table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.m_Table2297">
            <summary>
            The table 2297 object. The AMI HAN Recurring Price table (writable).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetClientMeterTime(System.UInt64)">
            <summary>
            Writes a GW_Set_Remote_Date_Time command to table 2100 for the 
            specified Zigbee client
            </summary>
            <param name="ulClientAddr">
            MAC address of the client to which to send the command
            </param>
            <returns>ClientMeterCmdResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetCollectionConfig(System.UInt64,System.Byte,System.Byte)">
            <summary>
            Configures how the Gas/Water meter is to collect its meter data
            </summary>
            <param name="ulClientAddr">
            MAC address of the client to which to send the command
            </param>
            <param name="byDFTHour">
            Daily Freeze Hour - the hour at which the daily consumption readings are read
            </param>
            <param name="byReadingType">
            0x00 => Current Consumption and DFT readings, 
            0x01 => Hourly interval data, 
            0x02 => Daily Interval data
            </param>
            <returns>ClientMeterCmdResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SetDataDeliveryConfig(System.UInt64,System.Byte,System.Byte)">
            <summary>
            This command configures the schedule by which the Gas/Water meter
            will wake up and send its meter data to the electric meter
            </summary>
            <param name="ulClientAddr">
            MAC address of the client to which to send the command
            </param>
            <param name="byWakeUpHour">
            Hour for wake up and data delivery: midnight is 0, 11 pm is 23
            </param>
            <param name="byFrequency">
            Whether the client should wake up once or twice a day. 1 => every 12 hours;
            0 => every 24 hours.
            </param>
            <returns>ClientMeterCmdResult</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ClientMeters">
            <summary>
            Client data retrieved from mfg table 2101
            </summary>
            <returns>
            list of readings along with tamper information and the customer id
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ClientConfigCommands">
            <summary>
            Essentially a dump of manufacturer's table 2100, this property will
            give users a way to view the queued up client meter commands.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertDataToByteArray(System.Collections.Generic.List{Itron.Metering.Device.ClientCfgRcd})">
            <summary>
            Takes the data from table 2100 in the form of a list of records and
            transforms it into a byte array
            object
            </summary>
            <param name="lstRcds">
            Contents of table 2100 in the form of a list of records
            </param>
            <returns>a byte array containing the contents of table 2100</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslatePSEMResponse(Itron.Metering.Communications.PSEM.PSEMResponse)">
            <summary>
            Translates a PSEMResponse to a ClientMeterCmdResult response
            </summary>
            <param name="PSEMResult">the PSEMResponse to be translated</param>
            <returns>a ClientMeterCmdResult response code</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConstructTable2100(System.UInt64,System.Byte[],Itron.Metering.Device.eZigbeeAppCmds,System.Collections.Generic.List{Itron.Metering.Device.ClientCfgRcd}@)">
            <summary>
            Takes the current table 2100 data as input and rewrites the portion
            that will hold the command to be sent to the client module
            </summary>
            <param name="ulClientAddr">
            MAC address of the client to which to send the command
            </param>
            <param name="abytCommandParams">
            byte array containing the command parameters for this command
            </param>
            <param name="eCmd">
            the command id of the command to send to the HAN (Zigbee) client
            </param>
            <param name="lstRcds">
            List containing the contents of table 2100.  Passed by ref so that it
            can be modified.
            </param>
            <returns>
            True if there is space in the table for the command.  False, otherwise.
            </returns>
        </member>
        <member name="E:Itron.Metering.Device.CENTRON_AMI.ShowProgressEvent">
            <summary>
            Event that shows the progress bar
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.CENTRON_AMI.HideProgressEvent">
            <summary>
            Event that hides the progress bar
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.CENTRON_AMI.StepProgressEvent">
            <summary>
            Event that causes the progress bar to perform a step
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.Configure(System.String)">
            <summary>
            Configures the meter with the specified program
            </summary>
            <param name="sProgramName">The path to the program file</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            08/29/06 RCG				Created
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.Configure(System.String,Itron.Metering.DeviceDataTypes.PromptForData)">
            <summary>
            Configures the meter with the specified program
            </summary>
            <param name="sProgramName">The path to the program file</param>
            <param name="PFData">Prompt For data Object</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            02/29/08 KRC				Created
            08/21/12 AF  2.70.06 202030 We can no longer count on using isBBV to determine
                                        if the meter supports configuring the base energies
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PartialConfiguration(System.String,Itron.Metering.Device.BlocksForPartialConfiguration)">
            <summary>
            Configures the meter instrumentation profile config block 
            with the specified program
            </summary>
            <param name="sProgramName">The path to the program file</param>
            <param name="configItems"></param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            03/06/12 JKW				Created - Lithium
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureInstrumentationProfile(Itron.Metering.AMIConfiguration.AMIConfigureDevice)">
            <summary>
            Configures the meter instrumentation profile config block 
            with the specified program
            </summary>
            <param name="ConfigureDevice">AMIConfigureDevice object with the correct table set already loaded</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            03/06/12 JKW				Created - Lithium
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureNonBillingEnergyandLoadProfile(Itron.Metering.AMIConfiguration.AMIConfigureDevice)">
            <summary>
            Configures the meter non-billing energy and non-billing LP config block 
            with the specified program
            </summary>
            <param name="ConfigureDevice">AMIConfigureDevice object with the correct table set already loaded</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            03/06/12 JKW				Created - Lithium
            03/22/13 jrf 2.80.10        Switched to use device class constants.
            07/20/15 AF  4.50.169 585299 Added ITRK to the acceptable devices.
            07/29/15 AF  4.50.178 585299 Corrected the logic for ITRK
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureVoltageMonitoring(Itron.Metering.AMIConfiguration.AMIConfigureDevice)">
            <summary>
            Configures the meter VM tables with the specified program. Reads
            table 0 to see which VM tables are supported 
            (101, 102, 105, 106 = Lithium, 101, 102 = pre-Lithium)
            </summary>
            <param name="ConfigureDevice">AMIConfigureDevice object with the correct table set already loaded</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            03/06/12 JKW				Created - Lithium
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConfigureExtendedSelfRead(Itron.Metering.AMIConfiguration.AMIConfigureDevice)">
            <summary>
            Configures the extended self read config block (self read two)
            with the specified program
            </summary>
            <param name="ConfigureDevice">AMIConfigureDevice object with the correct table set already loaded</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            03/06/12 JKW				Created - Lithium
            03/22/13 jrf 2.80.10        Adding ITRJ device class and also switched to use device class constants.
            07/20/15 AF  4.50.169 585299 Adding ITRK device class
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.OnShowProgress(Itron.Metering.Progressable.ShowProgressEventArgs)">
            <summary>
            Raises the event to show the progress bar.
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.OnStepProgress(Itron.Metering.Progressable.ProgressEventArgs)">
            <summary>
            Raises the event that causes the progress bar to perform a step
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.OnHideProgress(System.EventArgs)">
            <summary>
            Raises the event that hides or closes the progress bar
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.HWType">
            <summary>
            Enum for the target hardware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HW1_0">
            <summary>
            Hardware 1.0 type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HW1_5">
            <summary>
            Hardware 1.5 type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HW2_0">
            <summary>
            Hardware 2.0 type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HWPolyBasic">
            <summary>
            Hardware Polyphase Basic type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HWPolyAdvanced">
            <summary>
            Hardware Polyphase Advanced type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.HWType.HWHANDevice">
            <summary>
            Hardware HAN device type
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DownloadFW(System.String)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            On download failure, the pending table is cleared.  The activation
            will cause the meter to drop the psem task so meter log off must
            follow this function call
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DownloadFW(System.String,System.UInt16@,System.Boolean,System.Boolean)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so meter log off must
            follow this function call on success.  This method supports resuming
            a previous failed FWDL.
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <param name="usBlockIndex">Dual purpose parameter. The passed in value indicates 
            which block to begin downloading. The passed out parameter indicates which block to
            resume downloading in case there was a failure. This can then passed in again to 
            restart the download at the point where it left off.</param>
            <param name="blnRetry">Whether or not to leave the FWDL in a state
            to permit subsequent retries at point of faliure. If false the pending table 
            will be cleared on failure.</param>
            <param name="blnActivate">Whether or not to activate the firmware.</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ActivateFW(Itron.Metering.DeviceDataTypes.FirmwareType)">
            <summary>
            This method activates the firmware download's pending table.
            </summary>
            <param name="FWType">The type of firmware to activate.</param>
            <returns>The result of the activate pending table procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DownloadFWNoActivate(System.String)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DownloadFWNoActivate(System.String,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="eventCode">event code activation method</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DownloadFWBlocks(System.String,System.UInt16,System.UInt16)">
            <summary>
            This method just downloads the firmware file blocks to the device for a 
            given range of blocks.  Use 1-based indexing for blocks.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="usStartBlock">The first block to download.</param>
            <param name="usEndBlock">The last block to download.</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.SelectFWTypeByte(System.Byte)">
            <summary>
            This method allows derived classes to overried the firmware Type byte that will be passed 
            to either the authenticate FWDL procedure or the initiate FWDL procedure.
            </summary>
            <param name="byCurrentFWType">The firmware image's type.</param>
            <returns>The firmware type to use to pass to the authenticate FWDL procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.EnterFirmwareDownloadMode(System.String)">
            <summary>
            Performs a manufacturer procedure 37 to tell the meter to get ready for
            firmware download
            </summary>
            <param name="strFilePath">path to the f/w file to download</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateProtocolResult(Itron.Metering.Communications.PSEM.PSEMResponse)">
            <summary>
            Translates a PSEMResponse into a FWDownloadResult
            </summary>
            <param name="ProtocolResponse">PSEMResponse - enumerates all possible
            results or errors that could be returned from the PSEM layer</param>
            <returns>result codes specific to firmware download</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateProcedureResult(Itron.Metering.Device.ProcedureResultCodes)">
             <summary>
             Translates a ProcedureResultCodes into a FWDownloadResult
            </summary> 
             <param name="ProcResult">Table 08 results codes</param>
             <returns>FWDownloadResult</returns>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI.PendingTableIds">
            <summary>
            Enum of the table ids of the supported pending tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.TOUConfigTbl">
            <summary>
            Pending table id for TOU config table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.RegisterFWTbl">
            <summary>
            Pending table id for register firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.CommModuleFWTbl">
            <summary>
            Pending table id for RFLAN firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.HANModuleFWTbl">
            <summary>
            Pending table id for Zigbee firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.HANPricingTable">
            <summary>
            Pending table ID for HAN Pricing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI.PendingTableIds.HANDeviceFWTbl">
            <summary>
            Pending table id for HAN device firmware
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ActivatePendingTable(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Activates the pending table with the specified Event Record
            </summary>
            <param name="pendingEvent">The Event Record for the event to activate</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearPendingTable(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Clears the pending table with the specified Event Record
            </summary>
            <param name="pendingEvent">The Event Record for the event to clear</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearPendingTableByTableID(System.UInt16)">
            <summary>
            Clears a specific pending table by the table id
            </summary>
            <param name="TableID">the pending table to be cleared</param>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearAllPendingTables">
            <summary>
            Clears all pending tables from the meter.
            </summary>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ActivateAllPendingTables">
            <summary>
            Activates all pending tables in the meter.
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FWTableStillPendingExists">
            <summary>
            Determines whether or not a firmware download pending table awaiting
            activation exists
            </summary>
            <returns>True if there is a f/w pending table awaiting activation; 
            false, otherwise</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.FWPendingTableDownloadComplete">
            <summary>
            Determines whether or not there is an incomplete firmware pending 
            table
            </summary>
            <returns>
            true if all firmware pending tables are complete and false otherwise
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastActivationDate">
            <summary>
            Date of the last pending table activation
            </summary>
            <example>
            <code>
            DateTime dtLastDate = ((IPending)m_ItronDevice).LastActivationDate
            </code>
            </example>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.PendingTableData">
            <summary>
            Retrieves the pending table activation records and places them
            in a list.  The table id is a short but all the rest of
            the fields are strings.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.IsDownloadComplete(System.Byte[]@)">
            <summary>
            This method parses out the results from mfg procedure 46 
            (GetFirstTwentyMissingBlocks()).  If the number of blocks received is non-zero
            and the array of missing blocks are all zero, then the download is complete.
            </summary>
            <param name="ProcResponse">byte array representing the procedure response</param>
            <returns>true if download is complete; false, otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ActivatePendingTable(System.Boolean,System.Boolean,System.Byte,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Activates a specific pending table by calling standard procedure 13
            </summary>
            <param name="bSelfRead">Whether or not a self read should be performed 
            before activation</param>
            <param name="bDemandReset">Whether or not a demand reset should be 
            performed before activation</param>
            <param name="byMfgEventCode">Mfg assigned code identifying event for 
            activating pending table</param>
            <param name="eCode">Event code for status bitfield.  Use this field
            to identify the pending table</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ClearPendingTable(System.Boolean,System.Boolean,System.Byte,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Clears a specific pending table by calling standard procedure 15
            </summary>
            <param name="bSelfRead">Whether or not a self read should be performed 
            before activation</param>
            <param name="bDemandReset">Whether or not a demand reset should be 
            performed before activation</param>
            <param name="byMfgEventCode">Mfg assigned code identifying event for 
            activating pending table</param>
            <param name="eCode">Event code for status bitfield.  Use this field
            to identify the pending table</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetFirstTwentyMissingBlocks(Itron.Metering.DeviceDataTypes.FirmwareType,System.Byte[]@)">
            <summary>
            Queries the meter for the first 20 missing blocks for a firmware
            download pending table.
            </summary>
            <param name="eFWType">Firmware type (0 = Register, 1 = RFLAN, 
            2 = Zigbee)</param>
            <param name="ProcResponse">byte array containing the response from 
            the meter</param>
            <returns>Result code written to table 08 after the procedure is
            initiated</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetFirstTwentyMissingBlocks(Itron.Metering.DeviceDataTypes.FirmwareType,System.Int32@,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Queries the meter for the first 20 missing blocks for a firmware
            download pending table.
            </summary>
            <param name="eFWType">Firmware type (0 = Register, 1 = RFLAN, 
            2 = Zigbee)</param>
            <param name="iNumberOfBlocksReceived"></param>
            <param name="lstMissingBlocks"></param>
            <returns>Result code written to table 08 after the procedure is
            initiated</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.WritePendingTOU(System.String,System.Int32)">
            <summary>
            Reconfigures TOU using the specified EDL file
            </summary>
            <param name="strFileName">The EDL file that contains the TOU data.</param>
            <param name="iSeasonIndex">The number of seasons from the current season to write</param>
            <returns>TOUReconfigResult code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.WritePendingTOU(System.String,System.Int32,System.DateTime)">
            <summary>
            Reconfigures TOU using the specified EDL file - USED IN TEST APPLICATIONS ONLY!
            </summary>
            <param name="strFileName">The EDL file that contains the TOU data.</param>
            <param name="iSeasonIndex">The number of seasons from the current season to write</param>
            <param name="MeterTime">This it the Current Meter Time so we are sure to pick the correct season</param>
            <returns>TOUReconfigResult code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateProgram(System.String)">
            <summary>
            Returns a list of items that are not consistent between the configuration
            of the program and the device.
            </summary>
            <param name="strProgramName">The name of the program to validate against.</param>
            <returns>
            A list of items that failed the validation. Returns an empty list if
            all items match.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.RequiresSpecialHandling(System.Int64)">
            <summary>
            Determines whether or not an item requires special handling.
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item requires special handling. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HandleSpecialCases(System.Int64,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Handles and special cases.
            </summary>
            <param name="item">The item to handle</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of invalid items for the special case.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidationException(Itron.Metering.DeviceDataTypes.ProgramValidationItem)">
            <summary>
            This method determines if the Invalid Item is an Exceptional Item
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInvalidExtendedSelfReadItems(Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Gets a list of invalid Extended Self Read items.
            </summary>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of invalid items.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CheckExtendedSelfReadItemValidity(System.Collections.Generic.List{Itron.Metering.Device.ExtendedSelfReadConfigRecord},System.Collections.Generic.List{Itron.Metering.Device.ExtendedSelfReadConfigRecord},System.String,System.String)">
            <summary>
            Checks to see if the Extended Self Read Item is valid
            </summary>
            <param name="meterRecords">The Extended Self Read configuration items for the meter</param>
            <param name="programRecords">The Extended Self Read configuration items for the program</param>
            <param name="lidDescription">The LID description of the item to validate</param>
            <param name="itemDescription">The description of the item being validated</param>
            <returns>Null if the item is valid. The Validation Item if the item is invalid.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInvalidExceptionItems(Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Gets a list of invalid exception items.
            </summary>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of invalid items.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInvalidICMExceptionItems(Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Gets a list of invalid ICM exception items.
            </summary>
            <param name="meterTables">The table structure for the meter</param>
            <param name="programTables">The table structure for the program</param>
            <returns>The list of invalid items</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInvalidDisplayItems(Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Creates a list of invalid Display Items.
            </summary>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of items that are invalid.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.PerformDefaultValidation(System.Object,System.Object,System.String@,System.String@)">
            <summary>
            This method performs a default validation of the meter and program vales for the validation item.
            </summary>
            <param name="objMeterValue">The meter value of the validation item.</param>
            <param name="objProgramValue">The program value of the validation item.</param>
            <param name="strDisplayMeterValue">The string version of the meter value.</param>
            <param name="strDisplayProgramValue">The string version of the program value.</param>
            <returns>Whether the given program and meter values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DecodeCellularDataTimeoutUnits(System.Byte)">
            <summary>
            This method decodes the give byte value for the cellular data timeout unit
            to a string.
            </summary>
            <param name="byUnit">cellular data timeout unit</param>
            <returns>Decoded value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.IsConfigVersionEqualOrGreaterThan(System.Single,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            This method determines if the current configuration's CE version is equal to or greater than 
            a given target version.
            </summary>
            <param name="fltTargetCEVersion">The target CE version.</param>
            <param name="programTables">The program tables for the current configuration.</param>
            <returns>Whether the config's version is >= to the target.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertDisplayableErrors(System.Boolean,System.Boolean)">
            <summary>
            Converts the Lock and Scroll bitfield values into a string
            </summary>
            <param name="bLock">The Lock bitfield value.</param>
            <param name="bScroll">The Scroll bitfield value.</param>
            <returns>The string representation of the Displayable Error value</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.IsICSERTDataPopulated">
            <summary>
            This method determines if ICS ERT data is populated in the ICS comm module.
            </summary>
            <returns>True/False indicating whether ICS ERT data is populated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTOUTimeValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds TOU/Time validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetSecurityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds security validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetBaseQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds energy quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetEnergyQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds energy quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetDemandQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds demand quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetRegisterOperationValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds register operation validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetDeviceMultiplierValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds device multiplier validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLoadProfileValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds load profile validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetInstrumentaionProfileValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds instrumentation profile validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetVoltageMonitoringValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds voltage monitoring validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetEnhancedVoltageMonitoringValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds enhanced voltage monitoring validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetExtendedSelfReadValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds enhanced voltage monitoring validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetUserDataValidationList(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds user data validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetDisplayValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetAdditionalDisplayOptionsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display options validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetDisplayErrorsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display errors validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetEventValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds register event validation items to the validation list.
            </summary>
            <param name="ValidationList"></param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetEventExceptionValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds event/exception validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetServiceLimitingValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds service limiting validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetCommunicationsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds communications validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetPushSetValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds Push Set validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetPushGroupValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds Push Group validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTemperatureValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds Temperature validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.UpdateTOU(Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Updates the TOU for the program file.
            </summary>
            <param name="ProgramTables">Program data.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetTableValue(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.ANSIStandard.TableSet)">
            <summary>
            Retrieves the given validation item from the given table data.
            </summary>
            <param name="item">The validation item to retrieve.</param>
            <param name="Tables">The table data.</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLoadProfileData(System.DateTime,System.DateTime)">
            <summary>
            Gets the load profile data between the specified dates.
            </summary>
            <param name="startDate">The start date of the load profile data to get.</param>
            <param name="endDate">The end date of the load profile data to get.</param>
            <returns>The load profile data from the dates specified.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLoadProfileData">
            <summary>
            Gets the full load profile data object from the meter.
            </summary>
            <returns>The load profile data.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NumberOfValidLoadProfileBlocks">
            <summary>
            The number of valid load profile blocks in LP set 1.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaximumNumberOfLoadProfileBlocks">
            <summary>
            The maximum number of blocks that can be used in LP set 1.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.LastLoadProfileBlockIndex">
            <summary>
            The index of the last block in LP set 1.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FirstLoadProfileBlockIndex">
            <summary>
            The index of the first block in LP set 1.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetProfileData(Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62,Itron.Metering.Device.StdTable63,Itron.Metering.Device.StdTable64)">
            <summary>
            Get the all of the Profile Data from the specified set of tables
            </summary>
            <param name="actualLimitingTable">The actual limiting table for the data set</param>
            <param name="controlTable">The control table for the data set</param>
            <param name="statusTable">The status table for the data set</param>
            <param name="dataSetTable">The data set table for the data set</param>
            <returns>The profile data that has been read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetProfileData(System.DateTime,System.DateTime,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62,Itron.Metering.Device.StdTable63,Itron.Metering.Device.StdTable64)">
            <summary>
            Gets the load profile data between the specified dates.
            </summary>
            <param name="startDate">The start date of the load profile data to get.</param>
            <param name="endDate">The end date of the load profile data to get.</param>
            <param name="actualLimitingTable">The actual limiting table for the data set</param>
            <param name="controlTable">The control table for the data set</param>
            <param name="statusTable">The status table for the data set</param>
            <param name="dataSetTable">The data set table for the data set</param>
            <returns>The load profile data from the dates specified.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineStartBlockIndex(Itron.Metering.Device.LPSetActualLimits,Itron.Metering.Device.LPSetStatusRecord,Itron.Metering.Device.LPBlockDataRecord,System.DateTime)">
            <summary>
            Determines the relative index of the block that contains the start date specified.
            </summary>
            <param name="setLimits">The actual limits for the data set.</param>
            <param name="setStatus">The status of the data set when last block was read.</param>
            <param name="firstBlock">The last block in the data set.</param>
            <param name="startDate">The start date that is being searched for.</param>
            <returns>The relative index of the block that contains the start date.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineEndBlockIndex(Itron.Metering.Device.LPSetActualLimits,Itron.Metering.Device.LPSetStatusRecord,Itron.Metering.Device.LPBlockDataRecord,System.DateTime)">
            <summary>
            Determines the relative index of the block that contains the end date specified.
            </summary>
            <param name="setLimits">The actual limits for the data set.</param>
            <param name="setStatus">The status of the data set when last block was read.</param>
            <param name="lastBlock">The last block in the data set.</param>
            <param name="endDate">The end date that is being searched for.</param>
            <returns>The relative index of the block that contains the end time.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetFirstAndLastBlock(Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable63,Itron.Metering.Device.StdTable64,Itron.Metering.Device.LPBlockDataRecord@,Itron.Metering.Device.LPBlockDataRecord@,Itron.Metering.Device.LPSetStatusRecord@)">
            <summary>
            Gets the first and last blocks of the load profile data.
            </summary>
            <param name="actualLimitingTable">The limiting table for the data set</param>
            <param name="statusTable">The status table for the data set</param>
            <param name="dataSetTable">The set to get the blocks from.</param>
            <param name="firstBlock">The first block.</param>
            <param name="lastBlock">The last block.</param>
            <param name="setStatus">The set status of the load profile data at the time of read.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetLastBlock(Itron.Metering.Device.StdTable63,Itron.Metering.Device.StdTable64,Itron.Metering.Device.LPSetStatusRecord@)">
            <summary>
            Gets the last block of Load Profile data.
            </summary>
            <param name="statusTable">The status table for the data set</param>
            <param name="dataSetTable">The data set to get the last block of.</param>
            <param name="setStatus">The set status at the time of reading.</param>
            <returns>The last load profile block.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.GetFirstBlock(Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable63,Itron.Metering.Device.StdTable64,Itron.Metering.Device.LPSetStatusRecord@)">
            <summary>
            Gets the first block of the load profile data
            </summary>
            <param name="actualLimitingTable">The actual limiting table that applies to the data set</param>
            <param name="statusTable">The status table that applies to the data set</param>
            <param name="dataSetTable">The data set</param>
            <param name="setStatus">The status record for the data set at the time of the read</param>
            <returns>The first block of Load Profile Data</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HasNewIntervalOccured(Itron.Metering.Device.LPSetStatusRecord,Itron.Metering.Device.LPSetStatusRecord)">
            <summary>
            Determines if a new interval has occurred since the initial reading.
            </summary>
            <param name="initialSetStatus">The initial set status for the load profile data.</param>
            <param name="currentSetStatus">The current set status for the load profile data.</param>
            <returns>True if a new interval has occurred. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.HasLastBlockRolledOver(Itron.Metering.Device.LPSetStatusRecord,Itron.Metering.Device.LPSetStatusRecord)">
            <summary>
            Determines if the last block has rolled over in the data set.
            </summary>
            <param name="initialSetStatus">The initial set status for the data set.</param>
            <param name="currentSetStatus">The new set status for the data set.</param>
            <returns>True if the last block has rolled over since the initial status. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ReadLPBlock(Itron.Metering.Device.StdTable64,System.UInt16,System.UInt16)">
            <summary>
            Reads a block from the specified data set.
            </summary>
            <param name="dataSetTable">The data set to read from.</param>
            <param name="blockToRead">The block index for the block to read.</param>
            <param name="validIntervals">The number of valid intervals in the block</param>
            <returns>The block.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.CreateLoadProfileDataObject(Itron.Metering.Device.LPBlockDataRecord[],Itron.Metering.Device.LPSetActualLimits,Itron.Metering.Device.LPSetDataSelection)">
            <summary>
            Creates the LoadProfileData object from the specified blocks.
            </summary>
            <param name="loadProfileBlocks">The list of blocks to use to create the object ordered by date.</param>
            <param name="setLimits">The set limits for the data set</param>
            <param name="setDataSelection">The data selection for the data set</param>
            <returns>The LoadProfileData object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AddChannels(Itron.Metering.DeviceDataTypes.LoadProfileData@,Itron.Metering.Device.LPSetActualLimits,Itron.Metering.Device.LPSetDataSelection)">
            <summary>
            Adds the channels to the LoadProfilData object.
            </summary>
            <param name="loadProfileData">The LoadProfileData object to add the channels to.</param>
            <param name="setLimits">The set limits for the data set</param>
            <param name="setDataSelection">The data selection for the data set</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AddIntervals(Itron.Metering.DeviceDataTypes.LoadProfileData@,Itron.Metering.Device.LPBlockDataRecord[])">
            <summary>
            Adds all of the intervals in the specified blocks.
            </summary>
            <param name="loadProfileData">The load profile object to add the intervals to.</param>
            <param name="loadProfileBlocks">The load profile blocks to add.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertChannelStatuses(Itron.Metering.Device.LPIntervalDataRecord)">
            <summary>
            Converts the channel statuses to string format.
            </summary>
            <param name="interval">The interval to convert.</param>
            <returns>The channel status as strings.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.ConvertIntervalStatus(Itron.Metering.Device.LPIntervalDataRecord)">
            <summary>
            Converts the interval status to string format.
            </summary>
            <param name="CurrentInterval">The interval to convert.</param>
            <returns>The interval status in string format.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineIntervalTime(Itron.Metering.Device.LPBlockDataRecord,System.Int32,System.Int32)">
            <summary>
            Determines the time of the interval but does not account for DST changes.
            </summary>
            <param name="block">The current block.</param>
            <param name="intervalIndex">The index of the interval in the block.</param>
            <param name="intervalLength">The length of one interval</param>
            <returns>The date and time of the interval.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.AdjustTimeForDST(System.DateTime,Itron.Metering.Device.LPIntervalDataRecord,Itron.Metering.Device.LPIntervalDataRecord,Itron.Metering.Device.LPIntervalDataRecord)">
            <summary>
            Adjusts the time for DST as needed.
            </summary>
            <param name="intervalTime">The raw time for the current interval.</param>
            <param name="currentInterval">The current interval object.</param>
            <param name="nextInterval">The next interval object.</param>
            <param name="lastInterval">The last interval object.</param>
            <returns>The adjusted time.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.IsDSTFlagSet(Itron.Metering.Device.LPIntervalDataRecord)">
            <summary>
            Gets whether or not the DST flag is set for the specified interval
            </summary>
            <param name="interval">The interval to check.</param>
            <returns>True if the DST flag is set. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DetermineChannelNames(Itron.Metering.Device.LPSetDataSelection)">
            <summary>
            Determines the channel name for each of the channels.
            </summary>
            <param name="setDataSelection">The data set to determine the names for.</param>
            <returns>The list of channel names.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.DeterminePulseWeights(Itron.Metering.Device.LPSetActualLimits,Itron.Metering.Device.LPSetDataSelection)">
            <summary>
            Determines the pulse weights for each channel.
            </summary>
            <param name="setLimits">The set limits for the data set</param>
            <param name="setDataSelection">The data selection for the data set</param>
            <returns>The list of pulse weights.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsServiceLimitingTablePresent">
            <summary>
            Gets whether or not the Service Limiting table is present in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisconnectHardwareExists">
            <summary>
            Gets whether or not the disconnect hardware exists in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsConnected">
            <summary>
            Gets whether or not the meter is currently connected.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsConnectedUncached">
            <summary>
            Gets whether or not the meter is currently connected with a fresh table read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsDisconnectHardwareFunctioning">
            <summary>
            Gets whether or not the disconnect hardware is functioning
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsMeterArmed">
            <summary>
            Gets whether or not the meter is currently armed for activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeInFailsafe">
            <summary>
            Gets the Time remaining in Failsafe
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsInFailSafe">
            <summary>
            Gets the Failsafe Reason
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeRemainingInFailsafe">
            <summary>
            Gets the amount of time remaining in failsafe mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.FailsafeReason">
            <summary>
            tells whether the meter is in failsafe
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.WasLastDisconnectDueToSL">
            <summary>
            Gets the Last Disconnect due to Service Limiting
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsLoadVoltagePresent">
            <summary>
            Gets whether or not load voltage is currently present.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsLoadVoltagePresentUncached">
            <summary>
            Gets whether or not load voltage is currently present with a fresh table read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DidLastDisconnectAttemptFail">
            <summary>
            Gets whether or not the last disconnect attempt failed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ConnectsUsingUserIntervention">
            <summary>
            Gets whether or not user intervention is required after a connection.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.MaxDisconnects">
            <summary>
            Gets the maximum number of disconnects allowed in the configured period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.RemainingDailySwitches">
            <summary>
            Gets the number of remaining daily switches
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisconnectRandomizationAlarmPeriod">
            <summary>
            Gets the period of time when the alarm will be raised after a disconnect.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ReconnectStartDelay">
            <summary>
            Gets the minimum amount of time to wait before reconnecting.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ReconnectRandomDelay">
            <summary>
            Gets the period of time where the meter will be reconnected a
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.DisconnectOpenDelay">
            <summary>
            Gets the amount of time the switch will remain open after a service limiting disconnect.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NormalModeThresholdQuantity">
            <summary>
            Gets the quantity for the normal mode threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.NormalModeThreshold">
            <summary>
            Gets the threshold value for normal mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CriticalModeThresholdQuantity">
            <summary>
            Gets the quantity for the critical mode threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.CriticalModeThreshold">
            <summary>
            Gets the threshold value for critical mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EmergencyModeThresholdQuantity">
            <summary>
            Gets the quantity for the emergency mode threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.EmergencyModeThreshold">
            <summary>
            Gets the threshold value for emergency mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.IsServiceLimitingOverriden">
            <summary>
            Gets whether or not service limiting has been overriden in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.ActiveServiceLimitingThreshold">
            <summary>
            Gets the currently active service limiting threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI.TimeRemainingInServiceLimitingThreshold">
            <summary>
            Gets the amount of time left in the currently active service limiting threshold.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI.TranslateFailSafeReason(Itron.Metering.Device.FailsafeReasons)">
            <summary>
            Gets the failsafe reason if the is in failsafe period 
            </summary>
            <param name="reason">The reason to translate.</param>
            <returns>The reason for the failsafe mode</returns>
        </member>
        <member name="T:Itron.Metering.Device.HANInformation">
            <summary>
            Class to handle all functionality common retrieving HAN Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.ZigBeeKeyPairs">
            <summary>
            Gets the ZigBee key pair. The value will be null if not supported.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            The Constructor. Used to access common HAN methods and properites. Usually instantiated
            by classes that are implementing the IHANInformation Interface.
            </summary>
            <param name="PSEM">The PSEM object to be used in the class.</param>
            <param name="ANSIDevice">The ANSIDevice to be used in the class.</param>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.AddHANDevice(System.UInt64,System.Byte[],System.Int32@)">
            <summary>
            Add a HAN Device to the meter and return the Procedure Result with an out offset parameter
            </summary>
            <param name="deviceEUI">Device EUI</param>
            <param name="linkKey">linkKey derived from installation code</param>
            <param name="offset">offset received once the procedure is executed successfully, used in order to get the offset</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.PublishFullHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Writes all of the prices and tiers at one time
            </summary>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.ConfigCppWithHANPricing(System.UInt32,System.Byte,System.String,System.UInt32,System.Byte,System.Int16,System.Byte,System.DateTime,System.UInt16,System.UInt32)">
            <summary>
            Configure CPP with HAN Pricing Data
            </summary>
            <param name="uiProviderID">The ID of the provider</param>
            <param name="byRateLabelLength">The length of the rate label + 1</param>
            <param name="strRateLabel">The label for the rate</param>
            <param name="uiIssuerEventID">The issuer event ID</param>
            <param name="byUnitOfMeasure">The unit of measure of the rate</param>
            <param name="uiCurrency">The currency for the rate</param>
            <param name="byPriceTrailingDigit">The trailing digit for the price</param>
            <param name="startTime">Start Time</param>
            <param name="duration">Duration in minute.  The length must be at least a demand sub-interval length.</param>
            <param name="uiPrice">The price being charged</param>
            <returns>The CPP configuration result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.ScheduleHANDRLCEvent(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Schedules the DR/LC event at the specified time and duration
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="startTime">The time the event should start</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.HANCancelDRLCEvent(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="EffectiveTime">The time the event should start</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.HANCancelAllDRLCEvent(System.UInt64,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.ReconfigureHANChannels(Itron.Metering.Device.HANChannels)">
            <summary>
            Reconfigures the meter to use the specified HAN channels
            </summary>
            <param name="channels">The channels that should be used by the meter.</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.SetHANSecurityMode(System.Byte)">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="securityMode">The Security Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.SetHanDeviceAuthMode(System.Byte)">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.SetHanCbkeMode(System.Byte)">
            <summary>
            Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.PublishHANMessage(System.UInt32,System.DateTime,System.UInt16,System.Byte,Itron.Metering.DeviceDataTypes.AMIHANMsgRcd.MessagePriority,System.Boolean,System.String)">
             <summary>
             Publishes a HAN message to any devices bound to the Messaging cluster
             </summary>
             <param name="MessageID">Number to identify the message (duplicate Message IDs may be ignored by the end devices)</param>
             <param name="StartTime">When the message will become active</param>
             <param name="DurationInMinutes">How long from the start time the message will be able to be retrieved by an end device</param>
             <param name="Destination">Message Transmission values as defined in the ZigBee Smart Energy 
             profile spec. Bits 0 and 1 of MSG_CTRL</param>
             <param name="Priority"> Message Priority values as defined in the ZigBee Smart Energy 
             profile spec. Bits 2 and 3 of MSG_CTRL</param>
             <param name="ConfirmationRequired">Whether confirmation is required from end devices upon receipt of this message</param>
             <param name="MessageText">The actual text to send to the end device</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.PublishSingleHANPrice(Itron.Metering.Device.AMIHANPriceEntryRcd,System.Int32)">
             <summary>
             Publishes a HAN pricing table to any devices bound to the Pricing cluster by doing a full write
             to the Pricing table after a full read and overwriting the price at index - PriceIndex
             </summary>
            <param name="PriceInfo">An instance of an AMIHANPriceEntryRcd which contains the pricing data to send</param>
            <param name="PriceIndex">Index of which price to write over in the HAN pricing table</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.SetUtilityEnrollmentGroup(System.UInt64,System.Byte)">
            <summary>
            Sets the Utility Enrollment Group for a HAN device registered to the meter.
            </summary>
            <param name="clientAddress">The address of the client the message is intended for</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group for the device</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.HANInformation.CancelHANMessage(System.UInt32)">
            <summary>
            Cancels the message with the specified message ID
            </summary>
            <param name="messageID">The ID of the message to cancel</param>
            <returns>The response from the cancel message</returns>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.EnabledDownstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.EnabledUpstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.UpstreamHANLogEvents">
            <summary>
            Gets the list of Upstream HAN events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.DownstreamHANLogEvents">
            <summary>
            Gets the list of Downstream HAN Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.SupportedUpstreamHANLogEvents">
            <summary>
            Gets the list of supported Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.SupportedDownstreamHANLogEvents">
            <summary>
            Gets the list of supported Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.DownstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Downstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.UpstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Upstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.NumberOfSupportDRLCEvents">
            <summary>
            Gets the number of supported DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.NumOfValidEntries">
            <summary>
            Gets the Number of Valid DRLC Entries in the Meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANSupported">
            <summary>
            Gets whether the meter supports HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANEventsSupported">
            <summary>
            Gets whether the meter supports HAN event logs.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.DRLCMessagesWithExpired">
            <summary>
            Gets the list of DRLC Messages in the meter includeing the expired ones.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANPrices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANTiers">
            <summary>
            The HAN tier records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.AMIHANDevRecords">
            <summary>
            Gets all the AMI HAN Device Records from table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.AMIHANRspLogRecords">
            <summary>
            Gets all the AMI HAN Response Log records from table 2131
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.AMIHANMfgInfoRecords">
            <summary>
            Gets all the AMI HAN Manufacturer Info records from table 2137
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.AMIHANDiagnosticReadRecord">
            <summary>
            Gets a dump of the entire Mfg Table 2244.  Table 2244 contains the HAN Diagnostic Status 
            Read Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.ActualNumberOfHANDevicesJoined">
            <summary>
            Retrieves the number of HAN devices that are currently joined to the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.UpstreamHANEventDataLength">
            <summary>
            Gets the length of HAN upstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.DownstreamHANEventDataLength">
            <summary>
            Gets the length of HAN downstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.MaxUpstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN upstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.MaxDownstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN downstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANStartupOptions">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANSecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANSecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanDeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanDeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanCbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanCbkeModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANChannelsUsed">
            <summary>
            Gets the HAN Channels used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.SimpleMeteringMultiplier">
            <summary>
            Gets the Simple Metering Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.SimpleMeteringDivisor">
            <summary>
            Gets the Simple Metering Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANConfigVersion">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANSecurityProfile">
            <summary>
            Reads the HANSecurityProfile out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.ZigBeePowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANServerMACAddr">
            <summary>
            String version of the MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANNetworkID">
            <summary>
            Personal area network identifier (in Hex) for the HAN (Zigbee) network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANPANID">
            <summary>
            PAN Id for the HAN network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANMACAddress">
            <summary>
            The MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANChannelNbr">
            <summary>
            The current HAN (Zigbee) channel number in text format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANChannel">
            <summary>
            The current HAN (Zigbee) channel number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.BindingEntries">
            <summary>
            The current HAN (Zigbee) binding entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANDivisor">
            <summary>
            The HAN divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsZigBeeFirmwareCompatible">
            <summary>
            Gets whether or not the current ZigBee firmware is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.MinZigBeeVersion">
            <summary>
            Gets the Minimum required ZigBee FW version for the current register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.CurrentNetworkStatus">
            <summary>
            Gets the current network status: 0 => Network up; 1 => Network down; 2 => Network forming; 3 => invalid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.HANMultiplier">
            <summary>
            The HAN multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter via configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.IsHANRadioOff">
            <summary>
            Gets whether or not HAN radio is off
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2193">
            <summary>
            Gets the Enhanced security table and creates it if needed. If the meter does not support
            this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2099">
            <summary>
            Gets the Table CHANMfgTable2099 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2106">
            <summary>
            Gets the Table CHANMfgTable2106 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2107">
            <summary>
            Gets the Table 2107 object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2129">
            <summary>
            Gets the Table CHANMfgTable2129 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2133">
            <summary>
            Gets the Table 2133 object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2134">
            <summary>
            Gets the Table 2134 object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2241">
            <summary>
            Gets the Monitored HAN Events Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2098">
            <summary>
            Gets the Table CHANMfgTable2098 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2102">
            <summary>
            Gets the Table object for Table 2102
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2104">
            <summary>
            Gets the Table CHANMfgTable2104 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2128">
            <summary>
            Gets the Table CHANMfgTable2128 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2130">
            <summary>
            Gets the Table CHANMfgTable2130 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2131">
            <summary>
            Gets the Table CHANMfgTable2131 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2132">
            <summary>
            Gets the Table 2132 object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2137">
            <summary>
            Gets the Table CHANMfgTable2137 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2239">
            <summary>
            Gets the Actual HAN Log Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2240">
            <summary>
            Gets the Supported HAN Events Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2242">
            <summary>
            Gets the Upstream HAN Log Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2243">
            <summary>
            Gets the Supported HAN Events Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2244">
            <summary>
            Gets the Table CHANMfgTable2244 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2281">
            <summary>
            Gets the HAN network link key table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANInformation.Table2529">
            <summary>
            Gets the Table 2529 object and creates it if needed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_PSEM">
            <summary>
            The PSEM protocol object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_ANSIDevice">
            <summary>
            The ANSIDevice object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2098">
            <summary>
            The table 2098 object. The Dimension HAN Limiting table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2099">
            <summary>
            The table 2099 object. The Actual HAN Limiting table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2102">
            <summary>
            The table 2102 object. The HAN Server Transmit Table (read/write)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2104">
            <summary>
            The table 2104 object. The HAN Network Info table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2106">
            <summary>
            The table 2106 object. The HAN Config Parameters table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2107">
            <summary>
            The table 2107 object. The HAN Statistics table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2128">
            <summary>
            The table 2128 object. The Dimension AMI HAN Limiting table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2129">
            <summary>
            The table 2129 object. The Actual AMI HAN Limiting table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2130">
            <summary>
            The table 2130 object. The AMI HAN Registration table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2131">
            <summary>
            The table 2131 object. The AMI HAN Response Log table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2132">
            <summary>
            The table 2132 object. The AMI HAN DRLC Log table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2133">
            <summary>
            The table 2133 object. The AMI HAN Messaging table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2134">
            <summary>
            The table 2134 object. The AMI HAN Pricing table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2137">
            <summary>
            The table 2137 object. The HAN Device Manufacturer Info table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2193">
            <summary>
            The table 2193 object. The security model table (writable).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2239">
            <summary>
            The table 2239 object. The HAN2 Actual Log table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2240">
            <summary>
            The table 2240 object. The HAN2 Event Identification table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2241">
            <summary>
            The table 2241 object. The HAN2 Logger Control table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2242">
            <summary>
            The table 2242 object. The HAN2 Upstream Logger Data table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2243">
            <summary>
            The table 2243 object. The HAN2 Downstream Logger Data table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2244">
            <summary>
            The table 2244 object. The HAN Diagnostic Read table (read only).
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2281">
            <summary>
            The table 2281 object. The Zigbee Link Key Table.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANInformation.m_Table2529">
            <summary>
            The table 2529 object. The ICS LAN Information table (read only).
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICommModVersions">
            <summary>
            Interface which needs to be implemented by devices that use a Comm Module. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModType">
            <summary>
            Gets the Comm module type (IP or RFLAN).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModVer">
            <summary>
            Gets the Comm module version.revision.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModuleVersion">
            <summary>
            Gets the Comm Module Version as a byte.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICommModVersions.CommModBuild">
            <summary>
            Gets the Comm module build number.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IDiagnosticEvents">
            <summary>
            Interface which needs to be implemented by devices that can retrieve Diagnostic Events from
            an ICS Comm Module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IDiagnosticEvents.DiagnosticEvents">
            <summary>
            Returns the Diagnostic Events. These events are from the ICS Comm Module simliar to the
            "Events" property, however, these events have been filtered to only display the 
            diagnostic events and not the customer events.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPreviousSeason">
            <summary>
            Interface which needs to be implemented by devices that
            can support previous season data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.HasPreviousSeasonData">
            <summary>
            Gets whether the meter has any previous season data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonEndDate">
            <summary>
            Gets the end date of the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonRegisters">
            <summary>
            Proves access to a list of Energy Quantities from last season (Std table 24)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonAmpsNeutral">
            <summary>
            Gets the previous season Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonAmpsPhaseA">
            <summary>
            Gets the previous season Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonAmpsPhaseB">
            <summary>
            Gets the previous season Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonAmpsPhaseC">
            <summary>
            Gets the previous season Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonAmpsSquared">
            <summary>
            Gets the previous season Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonQDelivered">
            <summary>
            Gets the previous season Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonQReceived">
            <summary>
            Gets the previous season Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVALagging">
            <summary>
            Gets the previous season Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarDelivered">
            <summary>
            Gets the previous season Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVAReceived">
            <summary>
            Gets the previous season VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarNet">
            <summary>
            Gets the previous season Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarNetDelivered">
            <summary>
            Gets the previous season Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarNetReceived">
            <summary>
            Gets the previous season Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarQuadrant1">
            <summary>
            Gets the previous season Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarQuadrant2">
            <summary>
            Gets the previous season Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarQuadrant3">
            <summary>
            Gets the previous season Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarQuadrant4">
            <summary>
            Gets the previous season Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVarReceived">
            <summary>
            Gets the previous season Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVoltsAverage">
            <summary>
            Gets the previous season Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVoltsPhaseA">
            <summary>
            Gets the previous season Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVoltsPhaseB">
            <summary>
            Gets the previous season Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVoltsPhaseC">
            <summary>
            Gets the previous season Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonVoltsSquared">
            <summary>
            Gets the previous season Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonWattsDelivered">
            <summary>
            Gets the previous season Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonWattsReceived">
            <summary>
            Gets the previous season Watts Received quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonWattsNet">
            <summary>
            Gets the previous season Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonWattsUni">
            <summary>
            Gets the previous season Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPreviousSeason.PreviousSeasonPowerFactor">
            <summary>
            Gets the previous season Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IBridge">
            <summary>
            Interface which needs to be implemented by devices that
            can operate on a ChoiceConnect network.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.IsBridgePhase1Meter">
            <summary>
            Gets whether the meter is a Bridge meter that was released 
            during the initial Bridge project (Phase 1).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectManufacturedMode">
            <summary>
            Gets the mode the Bridge meter was manufactured as.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.CurrentRegisterCommOpMode">
            <summary>
            Gets the register's current communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.RequestedRegisterCommOpMode">
            <summary>
            Gets the register's requested communications operating mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectFWVerRev">
            <summary>
            Gets the ChoiceConnect MSM Firmware Version.Revision string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectFWBuild">
            <summary>
            Gets the ChoiceConnect MSM Firmware Build string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectERTID">
            <summary>
            Gets the ChoiceConnect MSM ERT ID as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectBubbleUpLIDDescription">
            <summary>
            Gets the ChoiceConnect MSM Bubble-up LID translated as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.ChoiceConnectSecurityStateDescription">
            <summary>
            Gets the ChoiceConnect MSM Security State as a formatted string
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IBridge.SwitchCommOperationMode(Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode)">
            <summary>
            Switches the Comm Operational Mode in an ChoiceConnect capable meter.
            </summary>
            <param name="opMode">The Comm Operational Mode to which the meter should switch</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.IBridge.RefreshChoiceConnectData">
            <summary>
            Method causes state and/or time sensitive ChoiceConnect table data to be refreshed
            when their data is next accessed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.Supports25YearTOUSchedule">
            <summary>
             Gets whether or not the 25 Year TOU schedule is supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.IsConfigChoiceConnectCompatible">
            <summary>
            Checks the meter's configuration to make sure that it is compatible with
            ChoiceConnect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IBridge.OpenWayCommModuleRevision">
            <summary>
            Checks the meter's configuration to make sure that it is compatible with
            ChoiceConnect
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IVoltMonitorCounts">
            <summary>
            Interface that needs to be implemented for devices support Voltage Monitor Counts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IVoltMonitorCounts.RMSBelowThresholdCount">
            <summary>
            Gets the number of RMS below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IVoltMonitorCounts.RMSHighThresholdCount">
            <summary>
            Gets the number of RMS high threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IVoltMonitorCounts.VhBelowThresholdCount">
            <summary>
            Gets the number of Vh below threshold counts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IVoltMonitorCounts.VhHighThresholdCount">
            <summary>
            Gets the number of Vh high threshold counts.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CommonFirmwareDownload">
            <summary>
            Class to handle all functionality common using Firmware Download for ICS Gateway Devices.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice,Itron.Metering.Utilities.Logger)">
            <summary>
            The Constructor. Used to access common FWDL methods and properites. Usually instantiated
            by classes that are implementing the IFirmwareDownload Interface. At this time it only
            applies to ICS Gateway devices.
            </summary>
            <param name="PSEM">The PSEM object to be used in the class.</param>
            <param name="ANSIDevice">The ANSIDevice to be used in the class.</param>
            <param name="DebugLogger">The DebugLogger to be used in the class.</param>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.DownloadFWBlocks(System.String,System.UInt16,System.UInt16)">
            <summary>
            This method just downloads the firmware file blocks to the device for a 
            given range of blocks.  Use 1-based indexing for blocks.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="usStartBlock">The first block to download.</param>
            <param name="usEndBlock">The last block to download.</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.DownloadFWNoActivate(System.String)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.DownloadFWNoActivate(System.String,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="eventCode">event code activation method</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.DownloadFW(System.String)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so 
            meter log off must follow this function call
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.DownloadFW(System.String,System.UInt16@,System.Boolean,System.Boolean)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so meter log off must
            follow this function call on success.  This method supports resuming
            a previous failed FWDL.
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <param name="usBlockIndex">Dual purpose parameter. The passed in value indicates 
            which block to begin downloading. The passed out parameter indicates which block to
            resume downloading in case there was a failure. This can then passed in again to 
            restart the download at the point where it left off.</param>
            <param name="blnRetry">Whether or not to leave the FWDL in a state
            to permit subsequent retries at point of faliure. If false the pending table 
            will be cleared on failure.</param>
            <param name="blnActivate">Whether or not to activate the firmware.</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.TranslateProtocolResult(Itron.Metering.Communications.PSEM.PSEMResponse)">
            <summary>
            Translates a PSEMResponse into a FWDownloadResult
            </summary>
            <param name="ProtocolResponse">PSEMResponse - enumerates all possible
            results or errors that could be returned from the PSEM layer</param>
            <returns>result codes specific to firmware download</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.TranslateProcedureResult(Itron.Metering.Device.ProcedureResultCodes)">
             <summary>
             Translates a ProcedureResultCodes into a FWDownloadResult
            </summary> 
             <param name="ProcResult">Table 08 results codes</param>
             <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CommonFirmwareDownload.EnterFirmwareDownloadMode(System.String)">
            <summary>
            Performs a manufacturer procedure 37 to tell the meter to get ready for
            firmware download
            </summary>
            <param name="strFilePath">path to the f/w file to download</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="F:Itron.Metering.Device.CommonFirmwareDownload.m_PSEM">
            <summary>
            The PSEM protocol object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommonFirmwareDownload.m_ANSIDevice">
            <summary>
            The ANSIDevice object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommonFirmwareDownload.m_Logger">
            <summary>
            Debug file logger
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSTableReader">
            <summary>
            Common tables and properties related to ICS Comm Module.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSTableReader.ICS_LOG_RCD_BASIC">
            <summary>
            Size of the invariant part of an ICS event entry.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSTableReader.ERT_STAT_DATA_RCD_SIZE">
            <summary>
            Size of the ERT statistics data record.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSTableReader.MAX_ENTRIES_IN_ONE_READ">
            <summary>
            We can't read more than 1400 bytes in one offset read.  The following constant was 
            determined by trial and error
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSTableReader.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM"></param>
            <param name="device"></param>
        </member>
        <member name="M:Itron.Metering.Device.ICSTableReader.ReadTable2508(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2508 (mfg 460)
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSTableReader.ReadTable2511(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2511 (mfg 463)
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSTableReader.ReadTable2524(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 2524 (mfg 476)
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <returns>The result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICSTableReader.DiagnosticEvents">
            <summary>
            Returns the Diagnostic Events. These events are from the ICS Comm Module simliar to the
            "Events" property, however, these events have been filtered to only display the 
            diagnostic events and not the customer events.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSTableReader.m_PSEM">
            <summary>
            The PSEM protocol object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSTableReader.m_ANSIDevice">
            <summary>
            The ANSIDevice object.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway">
            <summary>
            The ICS_Gateway class implementation of the ICommModVersions interface.
            </summary>
            <summary>
            Class representing the ICS Gateway
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModType">
            <summary>
            Gets the Comm module type (IP or RFLAN)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleVersion">
            <summary>
            Gets the Comm Module Version as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleRevision">
            <summary>
            Gets the Comm Module Revision as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleBuild">
            <summary>
            Gets the Comm Module Build as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModBuild">
            <summary>
            Gets the Comm module build number.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.ICS_MODEL">
            <summary>
            Standard table 01 Model
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.ICS_DEVICE_CLASS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.GATEWAY_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.LOG_ITR1_NAME">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.MAX_NUM_ERRORS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.ICS_MAX_OFFSET_READ_SIZE">
            <summary>
            ICS comm module restricts the offset read size.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.GetLocalDeviceTime(System.DateTime)">
            <summary>
            Convert a utc time from the meter to local time for the device
            </summary>
            <param name="utcTime">UDT time from the meter</param>
            <returns>Convertered Device Local Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.SaveConfiguration">
            <summary>
            Calls standard procedure 2 - save configuration
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.FWTableStillPendingExists">
            <summary>
            ITRU and ITRV do not support pending tables.  We need this at present for firmware 
            download to be enabled. This method is defined here only for use in Device Restrictions.
            Restrictions.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.FWRevisionForTableCreation">
            <summary>
            Gets the firmware revision. This is the same as "FWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different firmware versions. This should only be used as a parameter to pass
            in when creating a table. This allows us to override only a property and not the
            creation of a table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.HWRevisionForTableCreation">
            <summary>
            Gets the hardware revision. This is the same as "HWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different hardware versions. This should only be used as a parameter to pass
            in when creating a table. Reference table 2128 for example.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <param name="IncludedSections">EDL Sections to include</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.ReadTable(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Handles the special case table reads
            </summary>
            <param name="usTableID">id of the table to read</param>
            <param name="MeterTables">reference to the CE dll object</param>
            <returns>the PSEM response to the read attempt</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway.SetUpForICMEvents">
            <summary>
            Calls the procedures needed to populate the ICM event tables (2521 and 2524).  Does not read the tables.
            </summary>
            <returns>The result of the procedure calls</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.IsInFatalErrorRecoveryMode">
            <summary>
            Gets whether or not the meter is currently in Fatal Error Recovery Mode. This method is 
            defined here only for use in Device Restrictions.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.IsFullCoreDumpBlocked">
            <summary>
            Gets whether or not the meter currently has a Full Core Dump available
            and further core dumps are blocked. This method is defined here only for use in Device 
            Restrictions.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.IsFatalErrorRecoveryEnabled">
            <summary>
            Gets whether or not Fatal Error Recovery is enabled in the meter. This method is defined 
            here only for use in Device Restrictions.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.ErrorsList">
            <summary>
            Gets the list of fatal errors in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.SerialNumber">
            <summary>
            Returns the Customer Serial Number from Table 6 rather than 2048.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.MagneticTampersSupported">
            <summary>
            Property to determine if Magnetic Tampers should be supported. This method is defined 
            here only for use in Device Restrictions.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModulePresent">
            <summary>
            Boolean that indicates if any Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleDeviceClass">
            <summary>
            Returns the string that represents the Comm module device class
            Allows us to be able to distinguish ITRL devices.  Overridden in
            this device class to avoid a bug fix for HW 1.5 meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.DSTEnabled">
            <summary>
            Gets the dst enabled flag
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.MeterName">
            <summary>
            Property used to get the human readable meter name 
            (string).  Use this property when 
            displaying the name of the meter to the user.  
            This should not be confused with the MeterType 
            which is used for meter determination and comparison.
            </summary>
            <returns>A string representing the human readable name of the 
            meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.EventDescriptions">
            <summary>
            Builds the list of Event descriptions and returns the dictionary 
            </summary>
            <returns>
            Dictionary of Event Descriptions
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleEventConfigured">
            <summary>
            Retrieves the Comm Module history log configuration from the meter.  The list
            includes all possible supported events with a description and a boolean
            indicating whether or not the event is monitored in the meter.  This version
            reads the config from tables 2522 and 2523.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.CommModuleEvents">
            <summary>
            Retrieves the Comm Module Events that were recorded from the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Events">
            <summary>
            Retrieves all events from Comm Module (Table 2524).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.HistoryLogEventList">
            <summary>
            Get the list of configured events.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.HistoryLogSupported">
            <summary>
            Gets whether the meter supports History Log, more specifically the ICS Events.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.ICMConfigurationTableZigBeeEnabled">
            <summary>
            Gets whether ZigBee is enabled based on table 2512 (Mfg 464) values
            </summary>
            <remarks>A value of 0 means that ZigBee is enabled; 1 means it is disabled</remarks>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.DefaultMeterType">
            <summary>
            Gets the meter type "M2GATEWAY"
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2529">
            <summary>
            Gets the Table 2529 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2512">
            <summary>
            Gets the Table 2512 object and creates it if needed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2521">
            <summary>
            Gets the Table 2521 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2522">
            <summary>
            Gets the Table 2522 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2523">
            <summary>
            Gets the Table 2523 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICS_Gateway.Table2524">
            <summary>
            Gets the Table 2524 object (Creates it if needed)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2130">
            <summary>
            Table 2130 object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2512">
            <summary>
            The table 2512 object.  The ICM Configuration Table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2521">
            <summary>
            Table 2521 Object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2522">
            <summary>
            Table 2522 Object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2523">
            <summary>
            Table 2523 Object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2524">
            <summary>
            Table 2524 Object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_Table2529">
            <summary>
            Table 2529 Object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_EventDictionary">
            <summary>
            ICS Gateway EventDictionary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway.m_ICSTableReader">
            <summary>
            Helper class that contains "read table" methods to obtain ERT data from an ICM.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITR1">
            <summary>
            Device server class for the ITR1 single phase meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITR1.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITR1.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITRH">
            <summary>
            Device server class for the ITRH single phase cellular I-210+c meter with Michigan firmware
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRH.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRH.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRH.Events">
            <summary>
            Get events from the Comm Module (Table 2524).
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITRU">
            <summary>
            Device server class for the ITRU single phase cellular I-210+c meter with Superior firmware
            </summary>
            <summary>
            The OpenWayITRU class implementation of the IDiagnosticEvents interface.
            </summary>
            <summary>
            The OpenWayITRU class implementation of the IFirmwareDownload interface.
            </summary>
            <summary>
            The OpenWayITRU class implementation of the IHANInformation interface.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRU.m_HANInfo">
            <summary>
            The HANInformation object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRU.m_CommonFWDL">
            <summary>
            The CommonFirmwareDownload object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DiagnosticEvents">
            <summary>
            Returns the Diagnostic Events. These events are from the ICS Comm Module simliar to the
            "Events" property, however, these events have been filtered to only display the 
            diagnostic events and not the customer events.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.DownloadFWBlocks(System.String,System.UInt16,System.UInt16)">
            <summary>
            This method just downloads the firmware file blocks to the device for a 
            given range of blocks.  Use 1-based indexing for blocks.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="usStartBlock">The first block to download.</param>
            <param name="usEndBlock">The last block to download.</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.DownloadFWNoActivate(System.String)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared, if.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.DownloadFW(System.String)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            On download failure, the pending table is cleared, if possible.
            The activation will cause the meter to drop the psem task; therefore,
            a log off the meter is necessary after calling this method.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Result code for firmware downloads</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.DownloadFW(System.String,System.UInt16@,System.Boolean,System.Boolean)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so meter log off must
            follow this function call on success.  This method supports resuming
            a previous failed FWDL.
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <param name="usBlockIndex">Dual purpose parameter. The passed in value indicates 
            which block to begin downloading. The passed out parameter indicates which block to
            resume downloading in case there was a failure. This can then passed in again to 
            restart the download at the point where it left off.</param>
            <param name="blnRetry">Whether or not to leave the FWDL in a state
            to permit subsequent retries at point of faliure. If false the pending table 
            will be cleared on failure.</param>
            <param name="blnActivate">Whether or not to activate the firmware.</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.AddHANDevice(System.UInt64,System.Byte[],System.Int32@)">
            <summary>
             Add a HAN Device to the meter and return the Procedure Result with an out offset parameter
            </summary>
            <param name="deviceEUI">Device EUI</param>
            <param name="linkKey">linkKey derived from installation code</param>
            <param name="offset">offset received once the procedure is executed successfully, used in order to get the offset</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.PublishFullHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Writes all of the prices and tiers at one time
            </summary>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.ConfigCppWithHANPricing(System.UInt32,System.Byte,System.String,System.UInt32,System.Byte,System.Int16,System.Byte,System.DateTime,System.UInt16,System.UInt32)">
            <summary>
            Configure CPP with HAN Pricing Data
            </summary>
            <param name="uiProviderID">The ID of the provider</param>
            <param name="byRateLabelLength">The length of the rate label + 1</param>
            <param name="strRateLabel">The label for the rate</param>
            <param name="uiIssuerEventID">The issuer event ID</param>
            <param name="byUnitOfMeasure">The unit of measure of the rate</param>
            <param name="uiCurrency">The currency for the rate</param>
            <param name="byPriceTrailingDigit">The trailing digit for the price</param>
            <param name="startTime">Start Time</param>
            <param name="duration">Duration in minute.  The length must be at least a demand sub-interval length.</param>
            <param name="uiPrice">The price being charged</param>
            <returns>The CPP configuration result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.ScheduleHANDRLCEvent(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Schedules the DR/LC event at the specified time and duration
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="startTime">The time the event should start</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.HANCancelDRLCEvent(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="EffectiveTime">The time the event should start</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.HANCancelAllDRLCEvent(System.UInt64,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.ReconfigureHANChannels(Itron.Metering.Device.HANChannels)">
            <summary>
            Reconfigures the meter to use the specified HAN channels
            </summary>
            <param name="channels">The channels that should be used by the meter.</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.PublishHANMessage(System.UInt32,System.DateTime,System.UInt16,System.Byte,Itron.Metering.DeviceDataTypes.AMIHANMsgRcd.MessagePriority,System.Boolean,System.String)">
            <summary>
            Publishes a HAN message to any devices bound to the Messaging cluster
            </summary>
            <param name="MessageID">Number to identify the message (duplicate Message IDs may be ignored by the end devices)</param>
            <param name="StartTime">When the message will become active</param>
            <param name="DurationInMinutes">How long from the start time the message will be able to be retrieved by an end device</param>
            <param name="Destination">Message Transmission values as defined in the ZigBee Smart Energy 
            profile spec. Bits 0 and 1 of MSG_CTRL</param>
            <param name="Priority"> Message Priority values as defined in the ZigBee Smart Energy 
            profile spec. Bits 2 and 3 of MSG_CTRL</param>
            <param name="ConfirmationRequired">Whether confirmation is required from end devices upon receipt of this message</param>
            <param name="MessageText">The actual text to send to the end device</param>
            <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.PublishSingleHANPrice(Itron.Metering.Device.AMIHANPriceEntryRcd,System.Int32)">
             <summary>
             Publishes a HAN pricing table to any devices bound to the Pricing cluster by doing a full write
             to the Pricing table after a full read and overwriting the price at index - PriceIndex
             </summary>
            <param name="PriceInfo">An instance of an AMIHANPriceEntryRcd which contains the pricing data to send</param>
            <param name="PriceIndex">Index of which price to write over in the HAN pricing table</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.CancelHANMessage(System.UInt32)">
            <summary>
            Cancels the message with the specified message ID
            </summary>
            <param name="messageID">The ID of the message to cancel</param>
            <returns>The response from the cancel message</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.SetHANSecurityMode(System.Byte)">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="securityMode">The Security Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.SetHanDeviceAuthMode(System.Byte)">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.SetHanCbkeMode(System.Byte)">
            <summary>
            Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRU.SetUtilityEnrollmentGroup(System.UInt64,System.Byte)">
            <summary>
            Sets the Utility Enrollment Group for a HAN device registered to the meter.
            </summary>
            <param name="clientAddress">The address of the client the message is intended for</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group for the device</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.EnabledDownstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.EnabledUpstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.UpstreamHANLogEvents">
            <summary>
            Gets the list of Upstream HAN events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.SupportedUpstreamHANLogEvents">
            <summary>
            Gets the list of supported Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DownstreamHANLogEvents">
            <summary>
            Gets the list of Downstream HAN Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.SupportedDownstreamHANLogEvents">
            <summary>
            Gets the list of supported Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.UpstreamHANEventDataLength">
            <summary>
            Gets the length of HAN upstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DownstreamHANEventDataLength">
            <summary>
            Gets the length of HAN downstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.MaxUpstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN upstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.MaxDownstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN downstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DownstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Downstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.UpstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Upstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.NumberOfSupportDRLCEvents">
            <summary>
            Gets the number of supported DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.NumOfValidEntries">
            <summary>
            Gets the Number of Valid DRLC Entries in the Meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANPrices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANTiers">
            <summary>
            The HAN tier records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.AMIHANDevRecords">
            <summary>
            Gets all the AMI HAN Device Records from table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.AMIHANRspLogRecords">
            <summary>
            Gets all the AMI HAN Response Log records from table 2131
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.AMIHANMfgInfoRecords">
            <summary>
            Gets all the AMI HAN Manufacturer Info records from table 2137
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.AMIHANDiagnosticReadRecord">
            <summary>
            Gets a dump of the entire Mfg Table 2244.  Table 2244 contains the HAN Diagnostic Status 
            Read Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.ActualNumberOfHANDevicesJoined">
            <summary>
            Retrieves the number of HAN devices that are currently
            joined to the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.DRLCMessagesWithExpired">
            <summary>
            Gets the list of DRLC Messages in the meter includeing the expired ones.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANStartupOptions">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANChannelsUsed">
            <summary>
            Gets the HAN Channels used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.SimpleMeteringMultiplier">
            <summary>
            Gets the Simple Metering Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.SimpleMeteringDivisor">
            <summary>
            Gets the Simple Metering Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANConfigVersion">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANSecurityProfile">
            <summary>
            Reads the HANSecurityProfile out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANSecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANSecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanDeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanDeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanCbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanCbkeModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.ZigBeeKeyPairs">
            <summary>
            Gets the ZigBee key pair. The value will be null if not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.ZigBeePowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANServerMACAddr">
            <summary>
            String version of the MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANNetworkID">
            <summary>
            Personal area network identifier (in Hex) for the HAN (Zigbee) network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANPANID">
            <summary>
            PAN Id for the HAN network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANMACAddress">
            <summary>
            The MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANChannelNbr">
            <summary>
            The current HAN (Zigbee) channel number in text format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANChannel">
            <summary>
            The current HAN (Zigbee) channel number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.BindingEntries">
            <summary>
            The current HAN (Zigbee) binding entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANDivisor">
            <summary>
            The HAN divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.IsZigBeeFirmwareCompatible">
            <summary>
            Gets whether or not the current ZigBee firmware is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.MinZigBeeVersion">
            <summary>
            Gets the Minimum required ZigBee FW version for the current register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.CurrentNetworkStatus">
            <summary>
            Gets the current network status: 0 => Network up; 1 => Network down; 2 => Network forming; 3 => invalid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANMultiplier">
            <summary>
            The HAN multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANSupported">
            <summary>
            Gets whether the meter supports HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANEventsSupported">
            <summary>
            Gets whether the meter supports HAN event logs.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANAppVersion">
            <summary>
            Gets the HAN App version from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANAppRevision">
            <summary>
            Gets the HAN App revision from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANAppBuild">
            <summary>
            Gets the HAN App build from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRU.HANRadioOff">
            <summary>
             Gets whether or not HAN radio is off
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITRV">
            <summary>
            Device server class for the ITRV cellular kV2c meter
            </summary>
            <summary>
            The OpenWayITRV class implementation of the IDiagnosticEvents interface.
            </summary>
            <summary>
            The OpenWayITRV class implementation of the IFirmwareDownload interface.
            </summary>
            <summary>
            The OpenWayITRV class implementation of the IHANInformation interface.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRV.m_HANInfo">
            <summary>
            The HANInformation object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRV.m_CommonFWDL">
            <summary>
            The CommonFirmwareDownload object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DiagnosticEvents">
            <summary>
            Returns the Diagnostic Events. These events are from the ICS Comm Module simliar to the
            "Events" property, however, these events have been filtered to only display the 
            diagnostic events and not the customer events.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.DownloadFWBlocks(System.String,System.UInt16,System.UInt16)">
            <summary>
            This method just downloads the firmware file blocks to the device for a 
            given range of blocks.  Use 1-based indexing for blocks.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="usStartBlock">The first block to download.</param>
            <param name="usEndBlock">The last block to download.</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.DownloadFWNoActivate(System.String)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared, if.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.DownloadFW(System.String)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            On download failure, the pending table is cleared, if possible.
            The activation will cause the meter to drop the psem task; therefore,
            a log off the meter is necessary after calling this method.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Result code for firmware downloads</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.DownloadFW(System.String,System.UInt16@,System.Boolean,System.Boolean)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so meter log off must
            follow this function call on success.  This method supports resuming
            a previous failed FWDL.
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <param name="usBlockIndex">Dual purpose parameter. The passed in value indicates 
            which block to begin downloading. The passed out parameter indicates which block to
            resume downloading in case there was a failure. This can then passed in again to 
            restart the download at the point where it left off.</param>
            <param name="blnRetry">Whether or not to leave the FWDL in a state
            to permit subsequent retries at point of faliure. If false the pending table 
            will be cleared on failure.</param>
            <param name="blnActivate">Whether or not to activate the firmware.</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.AddHANDevice(System.UInt64,System.Byte[],System.Int32@)">
            <summary>
             Add a HAN Device to the meter and return the Procedure Result with an out offset parameter
            </summary>
            <param name="deviceEUI">Device EUI</param>
            <param name="linkKey">linkKey derived from installation code</param>
            <param name="offset">offset received once the procedure is executed successfully, used in order to get the offset</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.PublishFullHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Writes all of the prices and tiers at one time
            </summary>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.ConfigCppWithHANPricing(System.UInt32,System.Byte,System.String,System.UInt32,System.Byte,System.Int16,System.Byte,System.DateTime,System.UInt16,System.UInt32)">
            <summary>
            Configure CPP with HAN Pricing Data
            </summary>
            <param name="uiProviderID">The ID of the provider</param>
            <param name="byRateLabelLength">The length of the rate label + 1</param>
            <param name="strRateLabel">The label for the rate</param>
            <param name="uiIssuerEventID">The issuer event ID</param>
            <param name="byUnitOfMeasure">The unit of measure of the rate</param>
            <param name="uiCurrency">The currency for the rate</param>
            <param name="byPriceTrailingDigit">The trailing digit for the price</param>
            <param name="startTime">Start Time</param>
            <param name="duration">Duration in minute.  The length must be at least a demand sub-interval length.</param>
            <param name="uiPrice">The price being charged</param>
            <returns>The CPP configuration result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.ScheduleHANDRLCEvent(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Schedules the DR/LC event at the specified time and duration
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="startTime">The time the event should start</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.HANCancelDRLCEvent(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="EffectiveTime">The time the event should start</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.HANCancelAllDRLCEvent(System.UInt64,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.ReconfigureHANChannels(Itron.Metering.Device.HANChannels)">
            <summary>
            Reconfigures the meter to use the specified HAN channels
            </summary>
            <param name="channels">The channels that should be used by the meter.</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.PublishHANMessage(System.UInt32,System.DateTime,System.UInt16,System.Byte,Itron.Metering.DeviceDataTypes.AMIHANMsgRcd.MessagePriority,System.Boolean,System.String)">
            <summary>
            Publishes a HAN message to any devices bound to the Messaging cluster
            </summary>
            <param name="MessageID">Number to identify the message (duplicate Message IDs may be ignored by the end devices)</param>
            <param name="StartTime">When the message will become active</param>
            <param name="DurationInMinutes">How long from the start time the message will be able to be retrieved by an end device</param>
            <param name="Destination">Message Transmission values as defined in the ZigBee Smart Energy 
            profile spec. Bits 0 and 1 of MSG_CTRL</param>
            <param name="Priority"> Message Priority values as defined in the ZigBee Smart Energy 
            profile spec. Bits 2 and 3 of MSG_CTRL</param>
            <param name="ConfirmationRequired">Whether confirmation is required from end devices upon receipt of this message</param>
            <param name="MessageText">The actual text to send to the end device</param>
            <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.PublishSingleHANPrice(Itron.Metering.Device.AMIHANPriceEntryRcd,System.Int32)">
             <summary>
             Publishes a HAN pricing table to any devices bound to the Pricing cluster by doing a full write
             to the Pricing table after a full read and overwriting the price at index - PriceIndex
             </summary>
            <param name="PriceInfo">An instance of an AMIHANPriceEntryRcd which contains the pricing data to send</param>
            <param name="PriceIndex">Index of which price to write over in the HAN pricing table</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.CancelHANMessage(System.UInt32)">
            <summary>
            Cancels the message with the specified message ID
            </summary>
            <param name="messageID">The ID of the message to cancel</param>
            <returns>The response from the cancel message</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.SetHANSecurityMode(System.Byte)">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="securityMode">The Security Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.SetHanDeviceAuthMode(System.Byte)">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.SetHanCbkeMode(System.Byte)">
            <summary>
            Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRV.SetUtilityEnrollmentGroup(System.UInt64,System.Byte)">
            <summary>
            Sets the Utility Enrollment Group for a HAN device registered to the meter.
            </summary>
            <param name="clientAddress">The address of the client the message is intended for</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group for the device</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.EnabledDownstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.EnabledUpstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.UpstreamHANLogEvents">
            <summary>
            Gets the list of Upstream HAN events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.SupportedUpstreamHANLogEvents">
            <summary>
            Gets the list of supported Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DownstreamHANLogEvents">
            <summary>
            Gets the list of Downstream HAN Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.SupportedDownstreamHANLogEvents">
            <summary>
            Gets the list of supported Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.UpstreamHANEventDataLength">
            <summary>
            Gets the length of HAN upstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DownstreamHANEventDataLength">
            <summary>
            Gets the length of HAN downstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.MaxUpstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN upstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.MaxDownstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN downstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DownstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Downstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.UpstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Upstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.NumberOfSupportDRLCEvents">
            <summary>
            Gets the number of supported DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.NumOfValidEntries">
            <summary>
            Gets the Number of Valid DRLC Entries in the Meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANPrices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANTiers">
            <summary>
            The HAN tier records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.AMIHANDevRecords">
            <summary>
            Gets all the AMI HAN Device Records from table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.AMIHANRspLogRecords">
            <summary>
            Gets all the AMI HAN Response Log records from table 2131
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.AMIHANMfgInfoRecords">
            <summary>
            Gets all the AMI HAN Manufacturer Info records from table 2137
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.AMIHANDiagnosticReadRecord">
            <summary>
            Gets a dump of the entire Mfg Table 2244.  Table 2244 contains the HAN Diagnostic Status 
            Read Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.ActualNumberOfHANDevicesJoined">
            <summary>
            Retrieves the number of HAN devices that are currently
            joined to the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.DRLCMessagesWithExpired">
            <summary>
            Gets the list of DRLC Messages in the meter includeing the expired ones.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANStartupOptions">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANChannelsUsed">
            <summary>
            Gets the HAN Channels used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.SimpleMeteringMultiplier">
            <summary>
            Gets the Simple Metering Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.SimpleMeteringDivisor">
            <summary>
            Gets the Simple Metering Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANConfigVersion">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANSecurityProfile">
            <summary>
            Reads the HANSecurityProfile out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANSecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANSecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanDeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanDeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanCbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanCbkeModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.ZigBeeKeyPairs">
            <summary>
            Gets the ZigBee key pair. The value will be null if not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.ZigBeePowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANServerMACAddr">
            <summary>
            String version of the MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANNetworkID">
            <summary>
            Personal area network identifier (in Hex) for the HAN (Zigbee) network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANPANID">
            <summary>
            PAN Id for the HAN network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANChannelNbr">
            <summary>
            The current HAN (Zigbee) channel number in text format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANChannel">
            <summary>
            The current HAN (Zigbee) channel number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.BindingEntries">
            <summary>
            The current HAN (Zigbee) binding entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANDivisor">
            <summary>
            The HAN divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANMACAddress">
            <summary>
            The MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.IsZigBeeFirmwareCompatible">
            <summary>
            Gets whether or not the current ZigBee firmware is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.MinZigBeeVersion">
            <summary>
            Gets the Minimum required ZigBee FW version for the current register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.CurrentNetworkStatus">
            <summary>
            Gets the current network status: 0 => Network up; 1 => Network down; 2 => Network forming; 3 => invalid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANMultiplier">
            <summary>
            The HAN multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANSupported">
            <summary>
            Gets whether the meter supports HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANEventsSupported">
            <summary>
            Gets whether the meter supports HAN event logs.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANAppVersion">
            <summary>
            Gets the HAN App version from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANAppRevision">
            <summary>
            Gets the HAN App revision from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANAppBuild">
            <summary>
            Gets the HAN App build from table 2529
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRV.HANRadioOff">
            <summary>
             Gets whether or not HAN radio is off
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayPolyITRK">
            <summary>
            Device server class for the ITRK polyphase meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyITRK.HistoryLogEventList">
            <summary>
            Get the list of configured events.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.ReadTable(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads the specified table from the meter.
            </summary>
            <param name="usTableID">The table ID for the table to read.</param>
            <param name="MeterTables">The tables object to read the table into.</param>
            <returns>PSEMResponse code.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyITRK.MeterName">
            <summary>
             Gets the name of the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyITRK.Events">
            <summary>
            Get events from the Register (Table 74) and the Comm Module (Table 2524).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyITRK.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayPolyITRK.m_ICSTableReader">
            <summary>
            Helper class that contains "read table" methods to obtain data from an ICM comm module.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <param name="IncludedSections">The sections to include in the file</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayPolyITRK.START_ICM_EVENT_ID">
            <summary>
            The lowest supported event id for ITRK's table 2523
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayPolyITRK.END_ICM_EVENT_ID">
            <summary>
            The highest support event id for ITRK's table 2523
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetValidationTablesToRead">
            <summary>
            Returns the base class list of validation tables plus the ITRJ specific ICS exception report configuration tables
            </summary>
            <returns>the list of tables to validate</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetEventValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Gets the base class list of validation items plus the ICM events
            </summary>
            <param name="ValidationList"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetEventExceptionValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds event/exception validation items to the validation list.
            </summary>
            <param name="ValidationList"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyITRK.GetWANValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds WAN validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2265DataSetConfiguration">
            <summary>
            Class that describes the DataSet Configuration of mfg table 2265
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265DataSetConfiguration.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265DataSetConfiguration.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265DataSetConfiguration.Read">
            <summary>
            Reads the DataSet Configuration out of Mfg table 2265
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265DataSetConfiguration.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265DataSetConfiguration.DataSetConfiguration">
            <summary>
            Gets the DataSet Configuration from table 2265
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265DataSetConfiguration.ParseData">
            <summary>
            Parses the DataSet Configuration out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DataSetConfigRcd">
            <summary>
            Class that represents a Data Set Configuration Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DataSetConfigRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataSetConfigRcd.MonitoredLids">
            <summary>
            Monitored Lids
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataSetConfigRcd.DataSetId">
            <summary>
            Data Set Id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataSetConfigRcd.VMIntervalData">
            <summary>
            VM Interval Data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PushGroupConfigRcd">
            <summary>
            Class that represents a Push Group Configuration Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PushGroupConfigRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.GroupKey">
            <summary>
            Group Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.StartPushTime">
            <summary>
            Start Push Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.EndPushTime">
            <summary>
            End Push Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.FrequencyMin">
            <summary>
            Frequency Minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.DelayMin">
            <summary>
            Delay Minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.DelaySec">
            <summary>
            Delay Seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.WindowMin">
            <summary>
            Window Minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.WindowSec">
            <summary>
            Window Seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.DataSetId">
            <summary>
            Data Set Id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushGroupConfigRcd.EnableGroup">
            <summary>
            Enable Group
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PushConfigRcd">
            <summary>
            Class that represents a Push Configuration Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PushConfigRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.GlobalEnable">
            <summary>
            Global Enable
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.TransmitErrors">
            <summary>
            Transmit Errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.SuccessfulTransmits">
            <summary>
            Successful Transmits
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.MonitoredLids">
            <summary>
            Monitored Lids
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.VMIntervalCapture">
            <summary>
            VM Interval Capture
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PushConfigRcd.PushGroupConfigRcd">
            <summary>
            Push Group Config Record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2185">
            <summary>
            Class that describes mfg table 2185 - Bell Weather Configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Config Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.Read">
            <summary>
            Reads Mfg table 2185
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2185.BellWeatherConfigRcd">
            <summary>
            Gets the Bell Weather Configuration Record - Mfg Table 2185
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.GetTableSize">
            <summary>
            Get the size of the table.
            </summary>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2185.ParseData">
            <summary>
            Parses the Bell Weather Configuration out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.VMIntervalDataRcd">
            <summary>
            Class that represents the VM Interval Data Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.VMIntervalDataRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.TimestampGMT">
            <summary>
            Timestamp GMT
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.IntervalStatus">
            <summary>
            Interval Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.IntervalData">
            <summary>
            Interval Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.VMMinVoltage">
            <summary>
            VM Min Voltage
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.VMMaxVoltage">
            <summary>
            VM Max Voltage
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRcd.ValidPhases">
            <summary>
            Valid Phases
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.GroupDataStatusRcd">
            <summary>
            Class that represents the Group Data Status Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.GroupDataStatusRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.TimestampGMT">
            <summary>
            Timestamp GMT
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.GroupKey">
            <summary>
            Group Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.DataSetKey">
            <summary>
            DataSet Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.Lids">
            <summary>
            Lids
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.LidData">
            <summary>
            Lid Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupDataStatusRcd.VMIntervalDataRecord">
            <summary>
            VM Interval Data Record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2186">
            <summary>
            Class that describes mfg table 2186 - Group Data Status
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Config Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.Read">
            <summary>
            Reads Mfg table 2186
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2186.BellWeatherGroupDataStatusRcd">
            <summary>
            Gets the Bell Weather Group Data Status Record from table 2186
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.GetTableSize">
            <summary>
            Get the size of the table.
            </summary>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2186.ParseData">
            <summary>
            Parses the Bell Weather Group Status Record out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.GroupEnableRcd">
            <summary>
            Class that represents the Group Enable Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.GroupEnableRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupEnableRcd.GroupKey">
            <summary>
            Group Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GroupEnableRcd.Enable">
            <summary>
            Enable
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BubbleUpEnableRcd">
            <summary>
            Class that represents the Bubble Up Enable Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BubbleUpEnableRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BubbleUpEnableRcd.GlobalEnable">
            <summary>
            Global Enable
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BubbleUpEnableRcd.GroupStatus">
            <summary>
            Group Status
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2187">
            <summary>
            Class that describes mfg table 2187 - Bell Weather Enable Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Config Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.Read">
            <summary>
            Reads Mfg table 2187
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2187.BellWeatherEnableRcd">
            <summary>
            Gets the Bell Weather Enable Record - Mfg Table 2187
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.GetTableSize">
            <summary>
            Get the size of the table.
            </summary>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2187.ParseData">
            <summary>
            Parses the Bell Weather Enable Record out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2372Energy1MeterKey">
            <summary>
            Sub table into the 2372 factory data table to read/write Energy 1 Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy1MeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy1MeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Energy 1 Meter key.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy1MeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy1MeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2372Energy1MeterKey.Energy1MeterKey">
            <summary>
            This property gets and sets the energy 1 meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2372Energy2MeterKey">
            <summary>
            Sub table into the 2372 factory data table to read Energy 2 Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy2MeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy2MeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Energy 2 Meter key.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy2MeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2372Energy2MeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2372Energy2MeterKey.Energy2MeterKey">
            <summary>
            This property gets and sets the energy 2 meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2377">
            <summary>
            Class that describes OpenWay MFG table 2377 - Instantaneous Phase Current
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2377.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2377.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2377.Read">
            <summary>
            Reads the Instantaneous Phase Current out of Mfg table 2377
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2377.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2377.IPCDataRecord">
            <summary>
            Gets the Instantaneous Phase Current Record from table 2377
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2377.ParseData">
            <summary>
            Parses the Instantaneous Phase Current Record out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPCDataRcd">
            <summary>
            Class that represents a Instantaneous Phase Current Data Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPCDataRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPCDataRcd.InstCurrentRMSPhaseA">
            <summary>
            Instantaneous Current RMS Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPCDataRcd.InstCurrentRMSPhaseB">
            <summary>
            Instantaneous Current RMS Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPCDataRcd.InstCurrentRMSPhaseC">
            <summary>
            Instantaneous Current RMS Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPCDataRcd.LastUpdate">
            <summary>
            Last Update
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2437">
            <summary>
            This OpenWayMFGTable2437 class contains the 25 Year TOU Schedule.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2437.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The protocol instance to use</param>
            
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2437.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2437.CalendarConfig">
            <summary>
            Provides access to the Calendar Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2437.TOUConfig">
            <summary>
            Provides access to the TOU Config table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2437.m_CalendarConfig">
            <summary>
            The Calendar configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2437.m_TOUConfig">
            <summary>
            The TOU configuration
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig">
            <summary>
            The CENTRON_AMI_25_Year_TOUConfig class represents the 25 Year TOU Configuration 
            data block in table 2347. The TOU portion of the configuration defines the seasons
            that are applied across the years of the TOU schedule. Seasons are
            applied to years in the CalendarConfig portion of the configuration.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig.TOU_CONFIG_SIZE">
            <summary>
            Size of the TOU Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            Constructor for 25 Year TOU Configuration table used with file based structure
            </summary>
            <param name="BinaryReader">PSEM data reader.</param>
            <param name="Offset"></param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig.NumberOfSupportedSeasons">
            <summary>
            Provides access to the number of Supported Seasons
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_TOUConfig.InitializeData">
            <summary>
            Setup data items
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig">
            <summary>
            The CENTRON_AMI_25_Year_CalendarConfig class represents the 25 Year Calendar Configuration data 
            block in table 2437.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.CENTRON_AMI_CAL_SIZE">
            <summary>
            The size of the Calendar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.CENTRON_AMI_CAL_YEARS">
            <summary>
            Number of Years in the Calendar
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.Byte)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Calendar Configuration Construcutor used for file based structure
            </summary>
            <param name="BinaryReader">The binary Reader containing the data stream</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.EventsPerYear">
            <summary>
            Provides access to the Number of Events per Year
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_25_Year_CalendarConfig.InitializeData(System.Byte)">
            <summary>
            Setup data items
            </summary>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="T:Itron.Metering.Device.DecommissionType">
            <summary>
            Enumeration used to determine the type of decommission to perform
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DecommissionType.DECOMMISSION_AND_HALT">
            <summary>
            Bring down the HAN (Zigbee) network and reform after a delay
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DecommissionType.DECOMMISSION_AND_COMMISSION">
            <summary>
            Bring down the HAN (Zigbee) network and reform immediately
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DecommissionType.DROP_NODE">
            <summary>
            Remove a single node from the network
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice">
            <summary>
            CANSIDevice class - This is the "device server" for the ANSI device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ALL_CANADIAN_EVENTS">
            <summary>
            Can be used to mark all Canadian Events (table 76) as having been read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.MAX_TIME_ADJUST_SECONDS">
            <summary>
            Maximum amount of time to adjust the clock
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.SET_TIME_DATE_PROC_SIZE">
            <summary>
            Size of the Set Time Date procedure data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.SIZE_OF_ANSI_PASSWORD">
            <summary>SIZE_OF_ANSI_PASSWORD name says it all</summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.PRISM_LITE_REVISION">
            <summary>
            Constant describing the Prism light Firmware Revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_1_RELEASE_1">
            <summary>
            Constant describing the Firmware Version of Version 1 Release 1 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_1_RELEASE_1_5">
            <summary>
            Constant describing the Firmware Version of Version 1 Release 1.5 meters (SCE Updates)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_1_RELEASE_3">
            <summary>
            Constant describing the Firmware Version of Version 1 Release 2 meters (PR 1.3) (SR 1.0 - HW 1.5)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_1_5_RELEASE_1">
            <summary>
            1.005 release of FW
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_1_8_HARDWARE_2_0">
            <summary>
            Firmware Version for the Hardware 2.00 Project (1.008)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_2_RELEASE_1">
            <summary>
            Constant describing the Firmware Version of Version 2 Release 1 meters (New Design)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_2_SP3">
            <summary>
            Constant Describing the Firmware Version 2.0 SP3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_2_SP5">
            <summary>
            Constant Describing the Firmware Version for SR 2.0 SP5
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_2_SP5_1">
            <summary>
            Constant describing the firmware version for SR 2.0 SP5.1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_3_7_HYDROGEN_C">
            <summary>
            Constant describing the firmware version for SR 3.7 Hydrogen C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_3_12_LITHIUM">
            <summary>
            Constant describing the firmware version for the earliest Lithium release
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_CARBON">
            <summary>
            Constant describing the firmware version for Carbon
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_5_5_CARBON">
            <summary>
            Constant describing the firmware version for HW 3.x Carbon
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_5_8_BRIDGE_PHASE_2">
            <summary>
            Constant describing the firmware version for HW 3.x Carbon
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_5_9_CARBON_BRIDGE_ROBUST_RAM">
            <summary>
            Constant describing the firmware version for the combined Carbon/Bridge RAM Robustness firmware.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_6_0_MICHIGAN">
            <summary>
            Constant describing the firmware version for HW 3.x Michigan
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_1_5">
            <summary>
            Constant Describing the Hardware Version for 1.5 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_2_0">
            <summary>
            Constant Describing the Hardware Version for 2.0 meters 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_2_1">
            <summary>
            Constant Describing Hardware 2.0 oscillator meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_2_5">
            <summary>
            Constant Describing the Hardware Version for 2.050 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_2_6">
            <summary>
            Constant Describing Hardware 2.5 oscillator meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_1_0">
            <summary>
            Constant Describing the Hardware Version for 1.0 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_3_5">
            <summary>
            Constant Describing the Hardware Version for 3.050 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_3_6">
            <summary>
            Constant Describing the Hardware Version for 3.060 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_3_61">
            <summary>
            Constant Describing the Hardware Version for 3.061 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_3_8">
            <summary>
            Constant Describing the Hardware Version for 3.080 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HW_VERSION_3_81">
            <summary>
            Constant Describing the Hardware Version for 3.081 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_3">
            <summary>
            Constant describing the firmware version for SR 3.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_LITHIUM_3_12">
            <summary>
            Constant describing the firmware version for Lithium, 3.012
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.VERSION_M2RFMESH_2_1">
            <summary>
            Constant describing the firmware version for M2 Landis Gyr RF Mesh Single Phase
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ICM_HW_VERSION_2_255">
            <summary>
            Constant describing the max hardware version for ICM Superior modules
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FOURG_CATM1_HW_VERSION">
            <summary>
            Constant describing the hardware version for 4G CATM1 Modules
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRN_DEVICE_CLASS">
            <summary>
            Device class string for HW 1.0 OpenWay Centron meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITR1_DEVICE_CLASS">
            <summary>
            Device class string for HW 1.5 OpenWay Centron meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITR3_DEVICE_CLASS">
            <summary>
            Device class string for Basic Polyphase meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITR4_DEVICE_CLASS">
            <summary>
            Device class string for Advanced Polyphase meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRT_DEVICE_CLASS">
            <summary>
            Device class string for transparent devices.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRL_DEVICE_CLASS">
            <summary>
            Device class string for PrismLite devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRD_DEVICE_CLASS">
            <summary>
            Device class string for ITRD single phase meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRE_DEVICE_CLASS">
            <summary>
            Device class string for ITRE basic polyphase meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRF_DEVICE_CLASS">
            <summary>
            Device class string for ITRF advanced polyphase meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRS_DEVICE_CLASS">
            <summary>
            Device class string for SL7000 Gateway.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRH_DEVICE_CLASS">
            <summary>
            Device class string for single phase ICS Cellular ITRH gateway.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRJ_DEVICE_CLASS">
            <summary>
            Device class string for single phase ICS Cellular meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRK_DEVICE_CLASS">
            <summary>
            Device class string for polyphase ICS Cellular meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRU_DEVICE_CLASS">
            <summary>
            Device class string for single phase ICS Cellular ITRU gateway
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ITRV_DEVICE_CLASS">
            <summary>
            Device class string for polyphase ICS Cellular ITRV gateway
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ICS_GATEWAY">
            <summary>
            Meter type string for ICS Cellular gateways
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CE_VERSION_LITHIUM_3_9">
            <summary>
            Constant describing the CE version for Lithium, 3.9.0.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.RESET_RF_FUNC_CODE">
            <summary>
            Function code for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.RESET_RF_PARAM_1">
            <summary>
            Parameter 1 for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.RESET_RF_PARAM_2">
            <summary>
            Parameter 2 for the Reset RF procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.PENDING_BIT">
            <summary>
            Table identifiers in the range of 6144 to 8183 provide access to 
            Manufacturer-Pending tables 0 to 2039.  RegisterFWTbl = 2109 is 
            actually table 2109 + 4096 or 6205
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.COMM_EVENT_NUMBER">
            <summary>
            MFG defined event number.  This can be anything between 1 and 254.
            It will be used to identify pending table 2111 for activation and/or
            clearing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HAN_DEV_EVENT_NUMBER">
            <summary>
            MFG defined event number.  This can be anything between 1 and 254.
            It will be used to identify pending table 2181 for activation and/or
            clearing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.REGISTER_EVENT_NUMBER">
            <summary>
            MFG defined event number.  This can be anything between 1 and 254.
            It will be used to identify pending table 2109 for activation and/or
            clearing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ZIGBEE_EVENT_NUMBER">
            <summary>
            MFG defined event number.  This can be anything between 1 and 254.
            It will be used to identify pending table 2110 for activation and/or
            clearing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.BLOCK_SIZE">
            <summary>
            Size of chunks to break f/w download file into
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDL_BLOCK_OVERHEAD">
            <summary>
            Overhead for firware download block
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FW_HEADER_LENGTH">
            <summary>
            Length of the header in the firmware file
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.INIT_FW_DOWNLOAD_PARAM_LEN">
            <summary>
            Number of bytes in the parameter list for MFG procedure 37
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.INIT_FW_DOWNLOAD_THIRD_PARTY_LEN">
            <summary>
            Number of bytes in the parameter list for MFG procedure 37 when writing Third Party HAN FW
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.IMAGE_SIZE_FIELD_LEN">
            <summary>
            Size of field for firmware file size in parameter list for mfg 
            procedure 37
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CHUNK_SIZE_FIELD_LEN">
            <summary>
            Size of field for size of blocks in parameter list for mfg 
            procedure 37
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DEVICE_CLASS_LENGTH">
            <summary>
            Size of the Device Class field in the parameter list for MFG Proc 37
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.MANUFACTURER">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.PACKET_OVERHEAD_SIZE">
            <summary>
            Packet overhead size. Used when reading tables.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.PACKETS_PER_READ">
            <summary>
            Packets per read. Used when reading tables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.DisplayMode">
            <summary>
            Display Mode for Meter Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayMode.NORMAL_MODE">
            <summary>
            Normal Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayMode.ALT_MODE">
            <summary>
            Alt Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayMode.TEST_ALT_MODE">
            <summary>
            Test Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayMode.TEST_MODE">
            <summary>
            Test Alt Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayMode.EDIT_MODE">
            <summary>
            Used to retrieve the Editable Registers (Normal with modifications for Primary)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.CloseConfigOptions">
            <summary>
            Available options for the Close config procedure.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.None">
            <summary>
            No options selected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.Energy">
            <summary>
            Clear energy data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.Demand">
            <summary>
            Clear demand data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.HistoryLog">
            <summary>
            Clear history log data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.CPC">
            <summary>
            Clear CPC data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.StateMonitor">
            <summary>
            Clear State Monitor data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.LoadProfile">
            <summary>
            Clear load profile data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.SelfRead">
            <summary>
            Clear self reads
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.SiteScan">
            <summary>
            Clear SiteScan data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.PowerQuality">
            <summary>
            Clear power quality data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.ModeControl">
            <summary>
            Clear mode control data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.OptionBoard">
            <summary>
            Clear option board data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.CanadianMeter">
            <summary>
            Make the meter Canadian
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigOptions.ResetAllData">
            <summary>
            Clear all data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.CloseConfigErrors">
            <summary>
            Result parameters for the close config procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.None">
            <summary>
            No Errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.CoeffError">
            <summary>
            An error occurred changing Coefficients
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.ConstError">
            <summary>
            An error occurred changing Constants
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.EnergyError">
            <summary>
            An error occurred changing Energies
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.DemandError">
            <summary>
            An error occurred changing Demands
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.DisplayError">
            <summary>
            An error occurred changing the Display
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.HistLogError">
            <summary>
            An error occurred changing History log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.IOError">
            <summary>
            An error occurred changing IO
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.LoadProfileError">
            <summary>
            An error occurred changing Load Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.SelfReadError">
            <summary>
            An error occurred changing Self Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.SiteScanError">
            <summary>
            An error occurred changing SiteScan
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.CalendarError">
            <summary>
            An error occurred changing Calendar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.TOUError">
            <summary>
            An error occurred changing TOU
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.ModeError">
            <summary>
            An error occurred changing Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.EventLogError">
            <summary>
            An error occurred changing Event Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.OptionBoardError">
            <summary>
            An error occurred changing Option Board
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.BillingScheduleError">
            <summary>
            An error occurred changing Billing Schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.TotalizationError">
            <summary>
            An error occurred changing Totalization
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.OldSWError">
            <summary>
            An error occurred due to old software
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.CloseConfigErrors.CanEventLogError">
            <summary>
            An error occurred due to Canadian event log
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.HistoryEvents">
            <summary>
            History Events Enumeration
            </summary>
            <remarks>
            If you add any events to this enumeration, be sure to add them to
            HistoryLogEventList property in respective MFGTable2048 classes as well
            as adding a dictionary entry in the appropriate EventDictionary.  Furthermore,
            add the event to the HistoryEvents enum of the EndpointServerMeterEvents class
            in the file ServiceResponseData.cs of Itron.Metering.MeterServer project
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PRIMARY_POWER_DOWN">
            <summary>
            Power Outage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PRIMARY_POWER_UP">
            <summary>
            Power Restored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.BILLING_DATA_CLEARED">
            <summary>
            Device Data Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.BILLING_SCHED_EXPIRED">
            <summary>
            Billing Schedule Expired
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.DST_TIME_CHANGE">
            <summary>
            DST Time Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CLOCK_RESET">
            <summary>
            Clock Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.DEMAND_THRESHOLD_EXCEEDED">
            <summary>
            Demand Threshold Exceeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.DEMAND_THRESHOLD_RESTORED">
            <summary>
            Demand Threshold Restored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOGON_SUCCESSFUL">
            <summary>
            Logon Successful
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SECURITY_SUCCESSFUL">
            <summary>
            Security Successful
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SECURITY_FAILED">
            <summary>
            Security Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOAD_PROFILE_RESET">
            <summary>
            Load Profile Data Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HIST_LOG_CLEARED">
            <summary>
            History Log Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HIST_PTRS_UPDATED">
            <summary>
            History Log Pointers Updated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_LOG_CLEARED">
            <summary>
            Event Log Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_LOG_PTRS_UPDATED">
            <summary>
            Event Log Pointers Updated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.DEMAND_RESET">
            <summary>
            Demand Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SELF_READ_OCCURRED">
            <summary>
            Self Read Occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.INPUT_CHANNEL_HI">
            <summary>
            Input Channel Hi
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.INPUT_CHANNEL_LO">
            <summary>
            Input Channel Lo
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_SEASON_CHANGED">
            <summary>
            TOU Season Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RATE_CHANGE">
            <summary>
            TOU Rate Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EXTERNAL_EVENT">
            <summary>
            External Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SITESCAN_ERROR_OR_CUST_SCHED_CHANGED_EVT">
            <summary>
            Custom Schedule Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TABLE_ACTIVATION">
            <summary>
            Pending Table Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TABLE_CLEAR">
            <summary>
            Standard Event 29 - Pending Table Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SITESCAN_ERROR">
            <summary>
            Mfg Event 29 (2077) - SiteScan Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VQ_LOG_PTRS_UPDATED">
            <summary>
            Voltage Quality Log Pointers Updated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VQ_LOG_NEARLY_FULL">
            <summary>
            Voltage Quality Log Nearly Full
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ENTER_TEST_MODE">
            <summary>
            Enter Test Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EXIT_TEST_MODE">
            <summary>
            Exit Test mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ABC_PH_ROTATION_ACTIVE">
            <summary>
            ABC Phase Rotation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CBA_PH_ROTATION_ACTIVE">
            <summary>
            CBA Phase Rotation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.METER_REPROGRAMMED">
            <summary>
            Device Reporgrammed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CONFIGURATION_ERROR">
            <summary>
            Illegal Configuration Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CPC_COMM_ERROR">
            <summary>
            CPC Communication Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VQ_LOG_CLEARED">
            <summary>
            VQ Log Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_SCHEDULE_ERROR">
            <summary>
            TOU Schedule Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.MASS_MEMORY_ERROR">
            <summary>
            Mass Memory Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOSS_OF_PHASE_RESTORE">
            <summary>
            Loss of Phase Restored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOW_BATTERY">
            <summary>
            Low Batteru
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOSS_OF_PHASE">
            <summary>
            Loss of Phase
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REGISTER_FULL_SCALE">
            <summary>
            Register Full Scale
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REVERSE_POWER_FLOW_RESTORE">
            <summary>
            Reverse Power Flow Restore
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REVERSE_POWER_FLOW">
            <summary>
            Reverse Power Flow
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG1_ACTIVE">
            <summary>
            SiteScan Diag 1 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG2_ACTIVE">
            <summary>
            SiteScan Diag 2 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG3_ACTIVE">
            <summary>
            SiteScan Diag 3 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG4_ACTIVE">
            <summary>
            SiteScan Diag 4 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG5_ACTIVE">
            <summary>
            SiteScan Diag 5 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG1_INACTIVE">
            <summary>
            SiteScan Diag 1 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG2_INACTIVE">
            <summary>
            SiteScan Diag 2 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG3_INACTIVE">
            <summary>
            SiteScan Diag 3 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG4_INACTIVE">
            <summary>
            SiteScan Diag 4 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG5_INACTIVE">
            <summary>
            SiteScan Diag 5 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG6_ACTIVE">
            <summary>
            SiteScan Diag 6 Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SS_DIAG6_INACTIVE">
            <summary>
            SiteScan Diag 6 Inactive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SELF_READ_CLEARED">
            <summary>
            Self Read Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.INVERSION_TAMPER">
            <summary>
            Inversion Tamper
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOVAL_TAMPER">
            <summary>
            Removal tamper
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REG_DWLD_FAILED">
            <summary>
            Register Download Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REG_DWLD_SUCCEEDED">
            <summary>
            Register Download Succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_DWLD_SUCCEEDED">
            <summary>
            RFLAN Download Succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_DWLD_SUCCEEDED">
            <summary>
            Zigbee Download Succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.METER_FW_DWLD_SUCCEDED">
            <summary>
            Meter Firmware Download Succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.METER_DWLD_FAILED">
            <summary>
            Meter Firmware Download Failed 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_DWLD_FAILED">
            <summary>
            Zigbee Download Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_DWLD_FAILED">
            <summary>
            RFLAN Download Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SITESCAN_ERROR_CLEARED">
            <summary>
            SiteScan Error Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOAD_FIRMWARE">
            <summary>
            Load Firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RESET_COUNTERS">
            <summary>
            Reset Counters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FATAL_ERROR">
            <summary>
            Fatal Error Occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PERIODIC_READ">
            <summary>
            A Periodic Read has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SERVICE_LIMITING_ACTIVE_TIER_CHANGED">
            <summary>
            Service Limiting Active Tier Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SERVICE_LIMITING_CONNECT_SWITCH">
            <summary>
            Service Limiting Connect Switch
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SERVICE_LIMITING_SWITCH_PERIOD">
            <summary>
            Service Limiting Switch Period
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PRIOR_DEMAND_RESET">
            <summary>
            Prior Demand Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PRIOR_SELF_READ">
            <summary>
            Prior Self Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SAFE_INITIALIZATION_AFTER_FATAL">
            <summary>
            Safe Initialization After Fatal
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.BASE_SWITCH_COMMAND">
            <summary>
            Base Switch Command
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLTAGE_MONITORING_EOI">
            <summary>
            Voltage Monitoring EOI
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.COMMIT_LAN_LOG">
            <summary>
            Commit LAN Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.COMMIT_HAN_LOG">
            <summary>
            Commit HAN Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LAN_HAN_LOCATE_BY_EVENT">
            <summary>
            LAN/HAN Locate by Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LAN_HAN_LOCATE_BY_TIME">
            <summary>
            LAN/HAN Locate by Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.IO_OUT_RECONFIGURE">
            <summary>
            IO Out Reconfigure - CB2 Meters Get next season
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_DAY_TYPE_1">
            <summary>
            TOU Day Type 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_DAY_TYPE_2">
            <summary>
            TOU Day Type 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_DAY_TYPE_3">
            <summary>
            TOU Day Type 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TOU_DAY_TYPE_4">
            <summary>
            TOU Day Type 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TABLE_ACTIVATE_FAIL">
            <summary>
            Pending Table Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.THIRD_PARTY_RESERVED">
            <summary>
            Third Party Reserved
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_DOWNLOAD_TERMINATE">
            <summary>
            ZigBee Download Terminate
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_LOGGING_SUSPENDED">
            <summary>
            Event logging suspended
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOGGING_RESUMED">
            <summary>
            Event logging suspended
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.END_DEVICE_SEALED">
            <summary>
            End Device Sealed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.END_DEVICE_UNSEALED">
            <summary>
            End Device Unsealed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.WRONG_CONFIG_CRC">
            <summary>
            Wrong Config CRC - Event is logged when configuration CRC is wrong
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CHECK_CONFIG_CRC">
            <summary>
            Check Config CRC - Event occurs every 24 hrs to check the configuration CRC. On Wrong CRC it logs
            WRONG_CONFIG_CRC (Event 213)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FIRMWARE_ACTIVATE_IN_PROGRESS">
            <summary>
            Firmware Activate in Progress
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CONNECT_FORCED">
            <summary>
            Connect Forced
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.DISCONNECT_FORCED">
            <summary>
            Disconnect Forced
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ON_DEMAND_PERIODIC_READ">
            <summary>
            On Demand Periodic Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CARBON_ON_DEMAND_PERIODIC_READ">
            <summary>
            On Demand Periodic Read - Post carbon event it was changed to 244 + mfg offset 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FIRMWARE_DOWNLOAD_DEBUG">
            <summary>
            Firmware Download Debug
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TABLE_WRITTEN">
            <summary>
            Table Written Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.BASE_MODE_ERROR">
            <summary>
            Base Mode Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_RECONFIGURE">
            <summary>
            Pending Reconfigure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.MAGNETIC_TAMPER_DETECTED">
            <summary>
            Magnetic Tamper Detected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.MAGNETIC_TAMPER_CLEARED">
            <summary>
            Magnetic Tamper Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.NETWORK_TIME_UNAVAILABLE">
            <summary>
            Network Time Unavailable
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CTE_EVENT">
            <summary>
            Current Threshold Exceeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_TAMPER_CLEARED">
            <summary>
            Event Tamper Cleared
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LAN_HAN_LOG_RESET">
            <summary>
            LAN HAN Log Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TBL_ACTIVATE_FAIL">
            <summary>
            Pending Table Activate Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_DEVICE_STATUS_CHANGE">
            <summary>
            HAN Device Status Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ICS_ERT_EVENT">
            <summary>
            ICS ERT Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_LOAD_CONTROL_EVENT_STATUS">
            <summary>
            HAN Load Control Event Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_LOAD_CONTROL_EVENT_OPT_OUT">
            <summary>
            HAN Load Control Event Opt Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_MESSAGING_EVENT">
            <summary>
            HAN Messaging Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_DEVICE_ADDED_OR_REMOVED">
            <summary>
            HAN Device added or removed event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_EVENT_CACHE_OVERFLOW">
            <summary>
            HAN Event Cache Overflow
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REG_DWLD_INITIATED">
            <summary>
            Register Download Initiated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_DWLD_INITIATED">
            <summary>
            RFLAN Download Initiated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_DWLD_INITIATED">
            <summary>
            Zigbee Download Initiated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REG_DWLD_INITIATION_FAILED">
            <summary>
            Register download Initiation Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_DWLD_INITIATION_FAILED">
            <summary>
            RFLAN download Initiation Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_DWLD_INITIATION_FAILED">
            <summary>
            Zigbee download Initiation Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FW_DWLD_EVENT_LOG_FULL">
            <summary>
            Firmware Download Event Log Full
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_FW_DWLD_STATUS">
            <summary>
            RFLAN Firmware Download Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ZIGBEE_FW_DWLD_STATUS">
            <summary>
            Zigbee Firmware Download Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REG_DWLD_ALREADY_ACTIVE">
            <summary>
            Register Download Already Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RFLAN_DWLD_ALREADY_ACTIVE">
            <summary>
            RFLAN Download Already Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EXTENDED_OUTAGE_RECOVERY_MODE_ENTERED">
            <summary>
            Extended Outage Recovery Mode Entered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.THIRD_PARTY_HAN_FW_DWLD_STATUS">
            <summary>
            Register Download Terminated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FIRMWARE_DWLD_ABORTED">
            <summary>
            FW Load aborted
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOTE_CONNECT_FAILED">
            <summary>
            Remote Connect Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOTE_DISCONNECT_FAILED">
            <summary>
            Remote Disconnect Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOTE_DISCONNECT_RELAY_ACTIVATED">
            <summary>
            Remoate Diconnect Relay Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOTE_CONNECT_RELAY_ACTIVATED">
            <summary>
            Remote Connect Relay Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.REMOTE_CONNECT_RELAY_INITIATED">
            <summary>
            Remote Connect Relay Initiated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TABLE_CONFIGURATION">
            <summary>
            Table written
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.CPP_EVENT">
            <summary>
            Critical Peak Pricing Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RMS_VOLTAGE_FROM_BELOW_LOW_THRESHOLD_TO_NORMAL">
            <summary>
            RMS Voltage restores from below low threshold to the normal range
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RMS_VOLTAGE_FROM_ABOVE_HIGH_THRESHOLD_TO_NORMAL">
            <summary>
            RMS Voltage restores from above high threshold to the normal range
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLT_HOUR_FROM_BELOW_LOW_THRESHOLD_TO_NORMAL">
            <summary>
            VH restores from below low threshold to the normal range
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLT_HOUR_FROM_ABOVE_HIGH_THRESHOLD_TO_NORMAL">
            <summary>
            VH restores from above high threshold to the normal range
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_HARDWARE_ERROR_DETECTION">
            <summary>
            Hardware Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TEMPERATURE_EXCEEDS_THRESHOLD1">
            <summary>
            Temperature Exceeds Threshold1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TEMPERATURE_EXCEEDS_THRESHOLD2">
            <summary>
            Temperature Exceeds Threshold2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TEMPERATURE_RETURNED_TO_NORMAL">
            <summary>
            Temperature Returned to normal
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.NETWORK_HUSH_STARTED">
            <summary>
            Network Hush Started
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.ACTIVATE_IN_PROGRESS">
            <summary>
            Meter receives a f/w activate while activating some other f/w
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.LOAD_VOLT_PRESENT">
            <summary>
            Load Voltage Preset at time of Connect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TABLE_CLEAR_FAIL">
            <summary>
            Pending Table Clear Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FIRMWARE_PENDING_TABLE_FULL">
            <summary>
            Firmware Pending Table is full when request to add to it is made
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.FIRMWARE_PENDING_TABLE_HEADER_SWAPPED">
            <summary>
            Firmware Pending table header is swapped with new header
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_SCHEDULING_REJECTED">
            <summary>
            DEBUG EVENT - Event Scheduling Rejected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.C12_22_REGISTRATION_ATTEMPT">
            <summary>
            C12.22 Registration Attempt
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.C12_22_REGISTERED">
            <summary>
            C12.22 Registered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.C12_22_DEREGISTRATION_ATTEMPT">
            <summary>
            C12.22 Deregistration Attempt
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.C12_22_DEREGISTERED">
            <summary>
            C12.22 Deregistered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.C12_22_RFLAN_ID_CHANGED">
            <summary>
            C12.22 RFLAN ID Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.TIME_ADJUSTMENT_FAILED">
            <summary>
            Time Adjustment Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_CACHE_OVERFLOW">
            <summary>
            Event Cache Overflow
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.EVENT_GENERIC_HISTORY_EVENT">
            <summary>
            Event Generic History Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.RMS_VOLTAGE_BELOW_LOW_THRESHOLD">
            <summary>
            RMS Voltage Below Low Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLT_RMS_ABOVE_THRESHOLD">
            <summary>
            Volt(RMS) Above Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLT_HOUR_BELOW_LOW_THRESHOLD">
            <summary>
            Volt hour Below Low Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.VOLT_HOUR_ABOVE_THRESHOLD">
            <summary>
            Volt hour Above Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.PENDING_TABLE_ERROR">
            <summary>
            An Error occurred during a Pending Table Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SECURITY_EVENT">
            <summary>
            Security Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.KEY_ROLLOVER_PASS">
            <summary>
            Key Rollover Pass
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SIGN_KEY_REPLACE_PROCESSING_PASS">
            <summary>
            Sign Key Replace Processing Pass
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.SYMMETRIC_KEY_REPLACE_PROCESSING_PASS">
            <summary>
            Symmetric Key Replace Processing Pass
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.GW_CONFIGURATION_DOWNLOAD">
            <summary>
            M2 Gateway only event - configuration download
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_NEXT_BLOCK_PRICE_COMMIT_TIMEOUT">
            <summary>
            HAN Next Block Price Commit Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_LOAD_CTRL_OPT_OUT_EXCEPTION">
            <summary>
            HAN Load Control Opt Out Exception
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_DEVICE_STATUS_CHANGED">
            <summary>
            HAN Device Status Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_DEVICE_ADDED">
            <summary>
            HAN Device Added Exception
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.HistoryEvents.HAN_DEVICE_JOINED_EXCEPTION">
            <summary>
            HAN Device Joined Exception
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.ANSIStdPasswordIndex">
            <summary>
            The indices into table 42 for each of the passwords.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ANSIStdPasswordIndex.PRIMARY">
            <summary>
            Index of the Primary password
            </summary>1
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ANSIStdPasswordIndex.LIMITED_RECONFIG">
            <summary>
            Index of the Limited Reconfigure password
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ANSIStdPasswordIndex.SECONDARY">
            <summary>
            Index of the secondary password
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ANSIStdPasswordIndex.TERTIARY">
            <summary>
            Index of the tertiary password
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.DisplayType">
            <summary>
            Display Type for Change Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.TEST_DISPLAY">
            <summary>
            Test Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.TEST_MODE_TO_TEST_ALT">
            <summary>
            Enter Test Alt Mode from Test
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.EXIT_TEST_TO_NORMAL">
            <summary>
            Normal From Test Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.NORMAL_MODE">
            <summary>
            Goto Normal Mode (From Alt)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.ALT_MODE">
            <summary>
            Goto Alt Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.TOOLBOX_MODE">
            <summary>
            Goto Toolbox Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.DisplayType.SCROLL_LOCK">
            <summary>
            Scroll Lock the Display
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.SET_MASK_BFLD">
            <summary>
            Bitfield definition for the Set Time/Date mask bitfield
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.SET_MASK_BFLD.SET_TIME_FLAG">
            <summary>
            Flag for setting the time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.SET_MASK_BFLD.SET_DATE_FLAG">
            <summary>
            Flag for setting the date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.SET_MASK_BFLD.SET_TIME_DATE_QUAL">
            <summary>
            Flag for setting the Time Date Qualifier field
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD">
            <summary>
            Bitfield definition for the Set Time Date Qual bitfield
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD.DAY_OF_WEEK">
            <summary>
            The current day of the week
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD.DST_FLAG">
            <summary>
            Whether or not the time is in DST
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD.GMT_FLAG">
            <summary>
            Whether or not the time is in GMT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD.TM_ZN_APPLIED_FLAG">
            <summary>
            Whther or not the time zone has been applied
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.TIME_DATE_QUAL_BFLD.DST_APPLIED_FLAG">
            <summary>
            Whether or not DST has been applied
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.FWDLTableIds">
            <summary>
            Enum of the table ids of the supported pending tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.TOUConfigTbl">
            <summary>
            FWDL table id for TOU config table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.RegisterFWTbl">
            <summary>
            FWDL table id for register firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.CommModuleFWTbl">
            <summary>
            FWDL table id for RFLAN firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.HANModuleFWTbl">
            <summary>
            FWDL table id for Zigbee firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.HANPricingTable">
            <summary>
            FWDL table ID for HAN Pricing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.FWDLTableIds.HANDeviceFWTbl">
            <summary>
            FWDL table id for HAN device firmware
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CANSIDevice.ConfigCppResult">
            <summary>
            Enumeration for CPP (Critical Peak Pricing)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ConfigCppResult.ConfiguredOk">
            <summary>
            Ok
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ConfigCppResult.InvalidStartTime">
            <summary>
            Invalid Start Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ConfigCppResult.ClearedOk">
            <summary>
            Ok
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ConfigCppResult.CppIsActive">
            <summary>
            Is Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.ConfigCppResult.ErrorOrCPPInvalidDuration">
            <summary>
            ErrorOrCPPInvalidDuration 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            The CANSIDevice constructor
            </summary>
            <param name="ceComm">Communications object to use</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CANSIDevice ANSIDevice = new CANSIDevice(comm);
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            The CANSIDevice constructor
            </summary>
            <param name="PSEM">Protocol instance to use</param>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            PSEM psem( comm )
            CANSIDevice ANSIDevice = new CANSIDevice(psem);
            </code></example>
            
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.CreateDevice(Itron.Metering.Communications.ICommunications,Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.SignedAuthorizationKey)">
            <summary>
            Creates the appropriate device object. MUST BE LOGGED ON!!!
            </summary>
            <param name="CommPort">The open communication port</param>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="key">Signed authorization security key</param>
            <returns>The Comm Module object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Logon">
            <summary>
            Logs on the the meter
            </summary>
            <returns>A ItronDeviceResult</returns>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CANSIDevice ANSIDevice = new CANSIDevice(comm);
            ANSIDevice.Logon();
            </code></example>
            <remarks>Field-Pro does NOT use this function.  Field-Pro logs on
            using IdentifyMeter.IdentifyAndLogon.</remarks>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Logon(System.UInt32)">
            <summary>
            Logs on to the meter and negotiates to the specified Baud Rate.
            </summary>
            <param name="BaudRate">The baud rate to negotiate to.</param>
            <returns>The result of the logon</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Logoff">
            <summary>
            Logs off the meter
            </summary>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CANSIDevice ANSIDevice = new CANSIDevice(comm);
            ANSIDevice.Logon();
            ANSIDevice.Security( "strPassword" );
            ANSIDevice.Logoff();
            </code></example>
            
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Terminate">
            <summary>
            Calls the PSEM terminate command. Use this for times that the meter has timed out
            and we want to get back to base state.  It will reset the baud rate to 9600 and the
            meter won't try to commit changes that were pending.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Security(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Issues the PSEM security command
            </summary>
            <param name="Passwords">A list of passwords to be issued to the 
            meter. An empty string should be supplied if a null password is 
            to be attempted.</param>
            <param name="ShowSecurityCode">A boolean to make security codes
            accessible in log files during testing</param>
            <returns>A ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReissueSecurity">
            <summary>
            Reissues the PSEM security command
            </summary>
            <returns>A ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Security(System.Collections.Generic.List{System.Byte[]},System.Boolean)">
            <summary>
            Issues the PSEM security command
            </summary>
            <param name="Passwords">A list of passwords to be issued to the 
            meter. An empty string should be supplied if a null password is 
            to be attempted.</param>
            <param name="ShowSecurityCode">A boolean to make security codes
            accessible in log files during testing</param>
            <returns>A ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ClearEventLog">
            <summary>
            Clears the history log (std table 74)
            </summary>
            <returns>ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ClearStandardStatus">
            <summary>
            Clears the standard status bits in Std Table 3
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ClearManufacturerStatus">
            <summary>
            Clears the manufacturer's status bits in Std Table 3
            </summary>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.AdjustClock(System.Int32)">
            <summary>
            Performs a clock adjust on the connected meter
            </summary>
            <param name="iOffset">The offset from meter time (seconds)</param>
            <returns>A ClockAdjustResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReconfigurePasswords(System.Collections.Generic.List{System.String})">
            <summary>
            The PasswordReconfigResult reconfigures passwords.  Requires primary 
            password level access.  This method resets all passwords to null and 
            then sets up to 4 passwords starting with the primary password.
            </summary>
            <param name="Passwords">A list of passwords to write to the meter. 
            The Primary password should be listed first followed by the secondary
            password and so on.  Use empty strings for null passwords.  Passwords
            will be truncated or null filled as needed to fit in the device.</param>
            <returns>A PasswordReconfigResult object</returns>
            
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------------
            08/21/06 mcm 7.35.00 N/A    Created
            09/06/06 mcm 7.35.00 N/A    Default to C12.19 implementation for derived classes
            11/13/13 AF  3.50.03        Moved definition from ItronDevice
            
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReconfigureTertiaryPassword(System.String)">
            <summary>
            Reconfigures the tertiary password.
            </summary>
            <param name="strTertiaryPassword">The password to reconfigure.</param>
            <returns>A the result of the reconfigure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.SendWait">
            <summary>
            Sends a PSEM wait command. Note that there is a timer runing that
            should handle this in most cases, but in some scenarios like when
            a window is slow to populate, the timer is late.  It's thread is
            probably starving.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.GetLocalDeviceTime(System.DateTime)">
            <summary>
            Convert a meter time from the meter to local time for the device
            </summary>
            <param name="MeterTime">Time from the meter</param>
            <returns>Convertered Device Local Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.GetEvents(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the events that occurred within a specified time period
            </summary>
            <param name="startDate">No events older than this date should be retrieved</param>
            <param name="endDate">No events newer than this date should be retrieved</param>
            <returns>A list of event objects</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.IsProcedureUsed(System.UInt16)">
            <summary>
            Gets whether or not the specified procedure is used by the meter
            </summary>
            <param name="procedureID">The ID of the procedure to check</param>
            <returns>True if the procedure is used. False otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.IsTableUsed(System.UInt16)">
            <summary>
            Checks standard table 00 to see if the specified table is supported
            </summary>
            <param name="usTableId">identifier of the table we want to know about</param>
            <returns>true if the table is listed in table 00; false, otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ResetRFLAN">
            <summary>
            Resets the RFLAN processor on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ItronDeviceResult representing the result of the reset
            operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ResetRFMesh">
            <summary>
            Reset the RFMesh module
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ActivateFWDLTable(System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Activate the firmware download table
            </summary>
            <param name="TableID">Pending table id of the table to be activated</param>
            <param name="FWType">Firmware type</param>
            <param name="Version">Version of the firmware</param>
            <param name="Revision">Revision of the firmware</param>
            <param name="Build">Build of the firmware</param>
            <param name="Patch">Pad byte of the firmware header (can be used to store the patch value)</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.BuildPendingEventRecord(System.Boolean,System.Boolean,System.Byte,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Builds a PendingEventRecord object for a Non Time Activated pending event
            with the specified parameters.
            </summary>
            <param name="bSelfRead">Whether or not a Self Read should be performed on activation.</param>
            <param name="bDemandReset">Whether or not a Demand Reset should be performed on activation.</param>
            <param name="byMfgEventCode">The manufacturer event code for the pending event.</param>
            <param name="eCode">The event code for the pending event.</param>
            <returns>The EventRecord object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.BuildPendingEventRecord(System.Boolean,System.Boolean,System.Byte,System.TimeSpan)">
            <summary>
            Builds a PendingEventRecord object for a Relative Time Trigger
            with the specified parameters.  For use with automated tests
            </summary>
            <param name="bSelfRead">Whether or not a Self Read should be performed on activation.</param>
            <param name="bDemandReset">Whether or not a Demand Reset should be performed on activation.</param>
            <param name="byMfgEventCode">The manufacturer event code for the pending event.</param>
            <param name="timeSpan">timespan to wait before activating</param>
            <returns>The EventRecord object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Register">
            <summary>
            The Registration service is used to add and maintain (“keep-alive”)
            routing information of C12.22 Relays. To be part of C12.22 Network,
            a node shall send a registration service to one of the C12.22 Relays.
            This procedure, typically used on the local port (ANSI C12.18), is 
            used to initiate this process
            </summary>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.RegisterAndWaitForResult">
            <summary>
            The Registration service is used to add and maintain (“keep-alive”)
            routing information of C12.22 Relays. To be part of C12.22 Network,
            a node shall send a registration service to one of the C12.22 Relays.
            This procedure, typically used on the local port (ANSI C12.18), is 
            used to initiate this process
            </summary>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.Deregister">
            <summary>
            The deregistration service is used to remove routing information in
            C12.22 Relays. This procedure, typically used on the local port 
            (ANSI C12.18), is used to initiate this process
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.DeregisterAndWaitForResult">
            <summary>
            The deregistration service is used to remove routing information in
            C12.22 Relays. This procedure, typically used on the local port 
            (ANSI C12.18), is used to initiate this process
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.DecommissionHANNetwork(Itron.Metering.Device.DecommissionType,System.UInt64)">
            <summary>
            The decommission HAN (Zigbee) network procedure can bring down and 
            reform the HAN network or can remove a single node from the network
            </summary>
            <param name="eType">
            Type of decommission to perform
            </param>
            <param name="ulMACAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.JoinControl(System.Byte)">
            <summary>
            This procedure controls whether or not the HAN allows new devices to join
            </summary>
            <param name="byWhen">
            How long to allow joining:
            0x00 - No joining allowed
            0x01 - 0xFE - Minutes to Allow Joining
            0xFF - Allow until turned off
            </param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ExtendedJoinControl(System.UInt16)">
            <summary>
            This procedure controls whether or not the HAN allows new device to join
            </summary>
            <param name="minutes">The number of minutes to enable HAN joining</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ActivateFWOnHANClients(System.String,System.DateTime,System.Boolean)">
            <summary>
            This procedure tells the electric meter to send activation information 
            to the HAN device (gas module) after firmware download
            </summary>
            <param name="strFWFilePath">The firmware file to activate.  Passed in so
            that we can calculate the CRC32 value for it.</param>
            <param name="ActivationTime">The time at which the firmware should be
            activated in the HAN devices</param>
            <param name="bActivateNow">whether or not to activate the firmware immediately
            on download</param>
            <returns>The result returned by the meter</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ActivateAlternativeKey(System.Byte[])">
            <summary>
            This procedure forces the HAN to switch to the new keys designated in
            the HAN security table (MFG table 2105)
            </summary>
            <param name="AlternativeKey">The alternative key to activate</param>
            <returns></returns>
            <remarks>
            WARNING!!!  This procedure has NOT been tested!!!!
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.SetHANMultiplierAndDivisor(System.UInt32,System.UInt32)">
            <summary>
            The set HAN multiplier and divisor procedure allows the setting of 
            the multiplier and divisor that are used on primary quantities.
            </summary>
            <param name="uiMultiplier">The HAN multiplier.</param>
            <param name="uiDivisor">The HAN divisor.</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.EnableDisableHAN(System.Byte)">
            <summary>
            The Enable/Disable HAN procedure starts or stops the ZigBee network
            </summary>
            <param name="byStartStop">either the value 0xFF which will force a 
            decommission then disable the Zigbee network, or 0x00 will force a 
            decommission then enable the Zigbee network.</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.EnableDisableHAN(System.Byte,System.Byte)">
            <summary>
            The Enable/Disable HAN procedure starts or stops the ZigBee network
            </summary>
            <param name="byStartStop">either the value 0xFF which will force a 
            decommission then disable the Zigbee network, or 0x00 will force a 
            decommission then enable the Zigbee network.</param>
            <param name="byMinutesToDisable">The number of minutes before the Zigbee 
            network will automatically re-enable</param>
            <returns>The result returned by the meter</returns>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.EnableDisableZigBeePermanently(System.Boolean)">
            <summary>
            This method will either take down the ZigBee network permanently or reenable permanently
            depending on the bool parameter passed in.  Pass true to enable; false, to disable.
            </summary>
            <param name="blnEnable">tells whether the ZigBee network should be disabled or enabled.</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ConfigureConfigTag(System.String)">
            <summary>
            This method will reconfigure the config tag to a new value. Original intention is to 
            update the value so CE will flag change and update the meter's configuration.
            </summary>
            <param name="configTag">the value to set</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.IsNonFatalErrorIgnored(System.String)">
            <summary>
            This method will return whether an error is currently set to be ignored
            </summary>
            <param name="error">string containing the error in question.</param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.CommModulePresent">
            <summary>
            Boolean that indicates if any Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.IsLoggedOnViaZigBee">
            <summary>
            Gets whether or not the meter is currently logged on via ZigBee
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.IsLoggedOnViaBeltClipRadio">
            <summary>
            Gets whether or not the meter is currently logged on via ZigBee using a Belt Clip Radio
            or Telegesis dongle
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.CommPort">
            <summary>
            Gets the communication port that is currently in use
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.BaudRate">
            <summary>
            WARNING! This property will allow you to change the PSEM baud rate for a session.
            Use it only when the meter has timed out, will not communicate, and you want to reset
            the baud rate to the default of 9600.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWRevision">
            <summary>
            Property to get the hardware version.revision from table 01. The hardware
            version is specific to ANSI meters; SCS meters do not
            need this item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWRevisionOnly">
            <summary>
            Property to get just the hardware revision from table 01. The hardware
            version is specific to ANSI meters; SCS meters do not
            need this item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWVersionOnly">
            <summary>
            Property to get the hardware version from Table 01. Does not retrieve
            the hardware revision.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWVersionNibble">
            <summary>
            This basically returns the lower nibble of the hardware version.
            We can use this to compare the true hardware version of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWRevisionFiltered">
            <summary>
            Gets the HW Revision with the Prism Lite bit filtered out.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.NumberOfValidEventEntries">
            <summary>
            Gets the Number of Valid Event Entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.LastEntrySequenceNumber">
            <summary>
            Gets the Last Entry Sequence Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Events">
            <summary>
            Gets the Number of Valid Event Entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.EventLogEvents">
            <summary>
            Gets the event log events from table 76.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HistoryLogEventList">
            <summary>
            Retrieves the history log configuration from the meter.  The list
            includes all possible supported events with a description and a boolean
            indicating whether or not the event is enabled in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.StdTbl73HistoryLogEventList">
            <summary>
            Retrieves the history log configuration from the meter.  The list
            includes all possible supported events with a description and a boolean
            indicating whether or not the event is monitored in the meter.  This version
            reads the config from standard tables 72 and 73.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.StdTbl73HistoryLogEventListMonitored">
            <summary>
            Retrieves the history log configuration from the meter.  The list
            includes all possible monitored events with a description and a boolean
            indicating whether or not the event is monitored in the meter.  This version
            reads the config from standard tables 72 and 73.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.StdTbl75EventLogEventListMonitored">
            <summary>
            Retrieves the event log configuration from the meter.  The list
            includes all possible monitored events with a description and a boolean
            indicating whether or not the event is monitored in the meter.  This version
            reads the config from standard tables 75.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.UnitID">
            <summary>
            Property used to get the unit ID (string) from the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DeviceTime">
            <summary>
            Gets the device time
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FWRevision">
            <summary>
            Gets the firmware revision
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FWVersionOnly">
            <summary>
            Gets the firmware version only from table 01
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FWRevisionOnly">
            <summary>
            Gets the firmware revision only from table 01
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FWRevisionForTableCreation">
            <summary>
            Gets the firmware revision. This is the same as "FWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different firmware versions. This should only be used as a parameter to pass
            in when creating a table. Reference table 2129 in SL7000 device class for example.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HWRevisionForTableCreation">
            <summary>
            Gets the hardware revision. This is the same as "HWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different hardware versions. This should only be used as a parameter to pass
            in when creating a table. Reference table 2128 for example.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FirmwareBuild">
            <summary>
            Gets the firmware build
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FirmwareBuildUncached">
            <summary>
            Gets the firmware build fresh from the meter each time.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.ErrorsList">
            <summary>
            Gets the errors list.
            </summary>	
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.LIDNonFatalErrorsList">
            <summary>
            Gets the non-fatal errors list via read of LID values.
            </summary>	
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.StdTable3ErrorsList">
            <summary>
            Gets the non-fatal and fatal errors list via read of std. table 3.
            </summary>	
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.StdTable3NonFatalErrorsList">
            <summary>
            Gets the non-fatal errors list via read of std. table 3.
            </summary>	
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.SerialNumber">
            <summary>
            Gets the serial number out of the constants block of 2048 since
            table 6 was not supported in pre-Saturn meters.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.MFGSerialNumber">
            <summary>
            Get the mfg serial number out of table 1.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DeviceClass">
            <summary>
            Property used to get the Device Class of the meter.
            This is what used to be called Manufacturer in Table00.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.MeterType">
            <summary>
            Property used to get the meter type (string).  Use
            this property for meter determination and comparison.  
            This property should not be confused with MeterName which
            is used to obtain a human readable name of the meter.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.MeterName">
            <summary>
            Property used to get the human readable meter name 
            (string).  Use this property when 
            displaying the name of the meter to the user.  
            This should not be confused with the MeterType 
            which is used for meter determination and comparison.
            </summary>
            <returns>A string representing the human readable name of the 
            meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.ActivityLogMeterName">
            <summary>
            Gets the Meter Name that is to be used in the activity log. This name is limited to 25 characters.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.IsMeterInDST">
            <summary>
            Property to determine if the meter is in DST
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DSTConfigured">
            <summary>
            Gets whether DST is configured in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DSTEnabled">
            <summary>
            Gets the dst enabled flag
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.IsFatalErrorPresent">
            <summary>
            Determines if the meter has any active Fatal Errors
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.ClockRunning">
            <summary>
            Gets the clock running lid
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.EventDescriptions">
            <summary>
            Builds the list of Event descriptions and returns the dictionary 
            </summary>
            <returns>
            Dictionary of Event Descriptions
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.NetworkingSupported">
            <summary>
            Gets whether the meter supports network tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.HistoryLogSupported">
            <summary>
            Gets whether the meter supports History Log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.CommModuleDeviceClass">
            <summary>
            Returns the string that represents the Comm module device class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.ItronCommModulePresent">
            <summary>
            Boolean that indicates if an Itron Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DSTAdjustAmount">
            <summary>
            Gets the amount of time the meter will adjust while in DST 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.TimeZoneOffset">
            <summary>
            Gets a TimeSpan object that represents the Time Zone Offset
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.CommModule">
            <summary>
            Gets the Comm Module object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.IsDSTApplied">
            <summary>
            Gets the Std table 52 IsDSTApplied value
            </summary>
            <returns>bool</returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.SupportedTables">
            <summary>
            The tables reported as supported from std. table 0.
            </summary>
            <returns>An enumerator of the table numbers.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.PSEM">
            <summary>
            Returns the device's PSEM object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.NonFatalScrollLockBits">
            <summary>
            Returns a byte array containing Scroll and Lock Bits for NonFatal errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.ConfigTag">
            <summary>
            Get the config tag from the meter. The config tag is the misc id!
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.HandleIrregularRead(Itron.Metering.Device.ANSIDisplayItem)">
            <summary>
            Handles the reading of Display Items that can not be read using ReadDisplayData
            </summary>
            <param name="Item">The item to read.</param>
            <returns>True if the item was handled, false otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.HandleIrregularDescription(Itron.Metering.Device.ANSIDisplayItem)">
            <summary>
            Sets the Description of Display Items that can not be retrieved or are incorrect
            when using ConvertLidToQuantity
            </summary>
            <param name="Item">The item to handle</param>
            <returns>True if the item was handled, false otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.HandleIrregularFormatting(Itron.Metering.Device.ANSIDisplayItem,System.Object)">
            <summary>
            Formats irregular Display Item data that is not correctly handled when calling FormatData
            </summary>
            <param name="Item">The Display Item for the data</param>
            <param name="objData">The data to be formatted</param>
            <returns>True if the item was handled, false otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ExecuteProcedure(Itron.Metering.Device.Procedures,System.Byte[],System.Byte[]@)">
             <summary>Executes standard and manufacturer procedures via standard
             tables 7 and 8.</summary>
             <param name="Proc">Standard or MFG procedure to execute</param>
             <param name="Parameters">Procedure parameters</param>
             <param name="ResponseData"></param>
             <returns>A PSEMResponse encapsulating the layer 7 response
             to the layer 7 request.</returns>
             <example><code>
             // Input parameters, Data reset bits - we don't want to rest 
            	// any data, so just initialize them to 0.
            	ProcParam = new byte[4];
            	ProcParam.Initialize();
            
            	ProcResult = ExecuteProcedure( Procedure.CLOSE_CONFIG_FILE, 
            						 ProcParam, out ProcResponse );
            	if( Procedures.ProcedureResultCodes.COMPLETED != ProcResult )
            	{
            		Result = DSTUpdateResult.ERROR;
            	}		
             </code></example>
             
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ExecuteProcedure(System.UInt16,System.Byte[],System.Byte[]@)">
            <summary>
            Executes standard and manufacturer procedures via standard
            tables 7 and 8.  This version will be used primarily to execute
            procedures not included in our enum
            </summary>
            <param name="ProcId">Procedure id for the Standard or MFG procedure to execute</param>
            <param name="Parameters">Procedure parameters</param>
            <param name="ResponseData">Response returned by the meter</param>
            <returns>A PSEMResponse encapsulating the layer 7 response
            to the layer 7 request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ExecuteProcedureForBoron(System.UInt16,System.Byte[],System.Byte[]@)">
            <summary>
            Executes standard and manufacturer procedures via standard
            tables 7 and 8.  This version is designed primarily for Boron testing
            </summary>
            <param name="ProcId">Procedure id for the Standard or MFG procedure to execute</param>
            <param name="Parameters">Procedure parameters</param>
            <param name="ResponseData">Response returned by the meter</param>
            <returns>PSEMResponse encapsulating the layer 7 response
            to the layer 7 request</returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table00">
            <summary>
            Returns the Table00 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table05">
            <summary>
            Returns the Table05 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table06">
            <summary>
            Returns the Table06 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table07">
            <summary>
            Returns the Table07 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table08">
            <summary>
            Returns the Table08 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table2048">
            <summary>
            This method creates table 2048. It is expected to be overridden by
            derived devices
            </summary>
            <remarks>
            This method must be overriden by the device classes.
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table2084">
            <summary>
            This property returns Table 2084. (Creates it if needed)
            </summary>
            <remarks>
            This method must be overriden by the device classes.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.BuildPendingHeader(System.IO.MemoryStream@,System.Boolean,System.Boolean,System.Byte,Itron.Metering.Device.PendingEventRecord.PendingEventCode)">
            <summary>
            Builds the pending table header
            </summary>
            <param name="strmPSEM">Stream to which the data is written</param>
            <param name="bSelfRead">tells whether or not to perform a self read 
            before table is activated</param>
            <param name="bDemandReset">tells whether or not to perform a demand 
            reset before table is activated</param>
            <param name="byMfgEventCode">Mfg assigned code identifying event for 
            activating pending table</param>
            <param name="eCode">Event code for status bitfield.  2 => non-time activated</param>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.FWDLBlockSize">
            <summary>
            Retrieves the optimal firmware download block size based on the negotiated
            PSEM packet size.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.InitializeData">
            <summary>
            Initialize all of our member variables for the Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.AllowTableExport(System.UInt16)">
            <summary>
            Used to determine which tables will be written to the EDL file.
            </summary>
            <param name="usTableID">Table ID to check.</param>
            <returns>True if the table can be written, false otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.AllowFieldExport(System.Int64,System.Int32[])">
            <summary>
            Determines which fields may be written to the EDL file.
            </summary>
            <param name="idElement">The field to check.</param>
            <param name="anIndex">The indexes into the field.</param>
            <returns>True if the field may  be written to the EDL file. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.DoesTableHaveLength(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            This method checks to determine if a particular table has a length greater than zero.
            </summary>
            <param name="usTableID">The table ID to check.</param>
            <param name="MeterTables">Meter tables data.</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadTable(System.UInt16,System.Byte[]@)">
            <summary>
            This method peforms a full table read.
            </summary>
            <param name="table">The ID of the table to read.</param>
            <param name="data">The data read from the table.</param>
            <returns>The PSEM Response indicating the success or failure result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.OffsetRead(System.UInt16,System.Int32,System.UInt16,System.Byte[]@)">
            <summary>
            This method peforms an offset table read.
            </summary>
            <param name="table">The ID of the table to read.</param>
            <param name="offset">The offset of the data to read.</param>
            <param name="count">The number of bytes of data to read.</param>
            <param name="data">The data read from the table.</param>
            <returns>The PSEM Response indicating the success or failure result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.WriteTable(System.UInt16,System.Byte[])">
            <summary>
            This method performs a full table write
            </summary>
            <param name="table">The ID of the table to write</param>
            <param name="data">The data to write to the table</param>
            <returns>The PSEM Response indicating the success or failure of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.OffsetWrite(System.UInt16,System.Int32,System.Byte[])">
            <summary>
            This method performs an offset write to a table
            </summary>
            <param name="table">The ID of the table to write</param>
            <param name="offset">The offset of the data to write</param>
            <param name="data">The data to write to the meter</param>
            <returns>The PSEM Response indicating the success or failure of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadTable(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads the specified table from the meter.
            </summary>
            <param name="usTableID">The table ID for the table to read.</param>
            <param name="MeterTables">The tables object to read the table into.</param>
            <returns>PSEMResponse code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadTable64(Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads Table 64 from the meter.
            </summary>
            <param name="MeterTables">The table object for the meter.</param>
            <returns>The PSEM response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadTable2242(Itron.Common.C1219Tables.Centron.CentronTables@,System.UInt32)">
            <summary>
            Reads Table 2242
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <param name="MaxOffsetReadSize">The maximum size of an offset read</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadTable2243(Itron.Common.C1219Tables.Centron.CentronTables@,System.UInt32)">
            <summary>
            Reads Table 2243
            </summary>
            <param name="MeterTables">The meter tables object</param>
            <param name="MaxOffsetReadSize">The maximum size of an offset read</param>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.NullFillPassword(System.String,System.Int32,System.Byte[]@)">
            <summary>
            Copies the string password into the byte array.  The string is truncated to the 
            specified Length if necessary.  If the string is shorter than the requested length, the 
            byte array will be null filled.
            </summary>
            <exception cref="T:System.NotImplementedException">
            Throws a ArgumentException if the byte array length does not
            match the specified length
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table01">
            <summary>
            Returns the Table01 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table03">
            <summary>
            Returns the Table01 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DefaultMeterType">
            <summary>
            Gets the default meter type, overriden by inherited classes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.MeterReferenceTime">
            <summary>
            The Base Date for calculating dates in ANSI Devices
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.UTCMeterReferenceTime">
            <summary>
            The Base Date for calculating dates from LID reads in ANSI Devices
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.DeviceTimeZoneInfo">
            <summary>
            Gets the Time Zone Info class for the time zone the meter is programmed for.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table51">
            <summary>
            Gets the Table 51 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table52">
            <summary>
            Gets the Table 52 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table53">
            <summary>
            Gets the Table 53 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table2064">
            <summary>
            Return the Table Object for Table 2064 (Mirror of Comm Module Table 0)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table2193">
            <summary>
            Gets the Enhanced security table and creates it if needed. If the meter does not support
            this table null will be returned.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table2428">
            <summary>
            Gets the ChoiceConnect State table and creates it if needed.
            If the meter does not support this table null will be returned.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_CommModule">
            <summary>
            Represents the comm module object - DO NOT use this property directly, always use the accessor instead
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.GetErrors(Itron.Metering.Device.CANSIDevice.ErrorType,System.Byte,System.String[]@,System.Int32@)">
            <summary>
            This method decipher the error byte to determine which non-fatal or
            fatal errors are set. 
            </summary>
            <param name="errorType">The type of error byte passed in</param>
            <param name="byError">The error byte to translate</param>
            <param name="strErrorList">List to put the error strings in</param>
            <param name="iErrorCount">Count of errors in the list</param>		
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ExecuteProcedureAndWaitForResult(Itron.Metering.Device.Procedures,System.Byte[],System.Byte[]@)">
            <summary>Executes standard and manufacturer procedures via standard
            tables 7 and 8. This Method waits until the meter posts an actual response to the procedure.</summary>
            <param name="Proc">Standard or MFG procedure to execute</param>
            <param name="Parameters">Procedure parameters</param>
            <param name="ResponseData"></param>
            <returns>A PSEMResponse encapsulating the layer 7 response
            to the layer 7 request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.WaitForResultOfExecutedProcedure(System.Byte[]@,System.Nullable{System.TimeSpan})">
            <summary>Executes standard and manufacturer procedures via standard
            tables 7 and 8. This Method waits until the meter posts an actual response to the procedure.</summary>
            <param name="ResponseData"></param>
            <param name="maxWaitTime"></param>
            <returns>A PSEMResponse encapsulating the layer 7 response
            to the layer 7 request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.STDReconfigurePasswords(System.Collections.Generic.List{System.String})">
            <summary>
            The PasswordReconfigResult reconfigures passwords via standard table 42.
            </summary>
            <param name="Passwords">A list of passwords to write to the meter. 
            The Primary password should be listed first followed by the secondary
            password and so on.  Use empty strings for null passwords.  Passwords
            will be truncated or null filled as needed to fit in the device.</param>
            <returns>A PasswordReconfigResult object</returns>
            
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------------
            08/16/06 mcm 7.35.00 N/A    Created
            02/22/07 RCG 8.00.13        Changed to use the PasswordIndex enum
            
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.STDReconfigureTertiaryPassword(System.String)">
            <summary>
            Reconfigures the tertiary password using the standard tables
            </summary>
            <param name="strTertiaryPassword">The password to reconfigure.</param>
            <returns>A the result of the reconfigure.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table71">
            <summary>
            Gets the Table 71 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table72">
            <summary>
            Gets the Table 72 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table73">
            <summary>
            Gets the Table 73 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table74">
            <summary>
            Gets the Table 74 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table75">
            <summary>
            Gets the Table 75 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CANSIDevice.Table76">
            <summary>
            Gets the Table 76 object (Creates it if needed)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table0">
            <summary>
            The ANSI Table 00 object, used for reading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table1">
            <summary>
            The ANSI Table 01 object, used for reading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table3">
            <summary>
            The ANSI Table 03 object, used for reading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table5">
            <summary>
            The ANSI Table 05 object, used for reading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table6">
            <summary>
            The ANSI Table 06 object, used for reading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table7">
            <summary>
            The C12.19 Standard Table 7, Procedure Initiate Table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table8">
            <summary>
            The C12.19 Standard Table 8, Procedure Response Table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table2048">
            <summary>
            The MFG Table 2048 object, used for reading and writing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_MeterKeyTable">
            <summary>
            The MFG Table 2054 (MeterKey) object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table2084">
            <summary>
            The MFG Table 2084 (Multiple Custom Schedules) object, we only read
            the status.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_PSEM">
            <summary>
            The PSEM protocol object.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_lidRetriever">
            <summary>
            The LID retriever object used to get values from the meter via
            tables 2049 and 2050.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_LID">
            <summary>
            LID object, the inherited device object creates the correct LIDs object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Logger">
            <summary>
            Debug file logger
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_ClockRunning">
            <summary>
            Flag indicating whether or not the clock is running in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_NumTimesProgrammed">
            <summary>
            Counter for the Number of Times the meter has been programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_NumOutages">
            <summary>
            Counter for the Number of Outages the meter has been programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_DateLastOutage">
            <summary>
            Date and Time of the Last Outage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_DateLastCalibration">
            <summary>
            Date and Time of the Last Calibration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_DateLastTest">
            <summary>
            Date and Time of the meter last entered test mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_IsCanadian">
            <summary>
            Whether or not the meter is Canadian
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_IsSealedCanadian">
            <summary>
            Whether or not the meter is sealed for Canada
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_MinutesOnBattery">
            <summary>
            Number of Minutes on Battery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_DayOfTheWeek">
            <summary>
            Day of Week
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_TOUExpireDate">
            <summary>
            TOU Expiration Date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_uiNumTOURates">
            <summary>
            Number of TOU Rates
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_uiNumEnergies">
            <summary>
            Number of Energy Registers in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_uiNumDemands">
            <summary>
            Number of Demand registers in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_uiFWBuild">
            <summary>
            Firmware Build Number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_MeterInDST">
            <summary>
            Is Meter in DST
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_bDSTEnabled">
            <summary>
            Whether or not the meter supports DST
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_TOUSchedule">
            <summary>
            The TOU Schedule object for the TOU Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_lstDSTDates">
            <summary>
            The DST Dates in the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_dicEventDescriptions">
            <summary>
            Event Description Dictionary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CANSIDevice.m_Table2193">
            <summary>Table 2129 object</summary>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.CreateEDLFromMeter(System.String)">
            <summary>
            Creates an EDL file that contains all of the data for a meter.
            </summary>
            <param name="FileName">The file name that will be used to store the file.</param>
            <returns>CreateEDLResult code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.CreateEDLFromMeter(System.String,Itron.Metering.Device.EDLSections)">
            <summary>
            Creates an EDL file with the specified sections.
            </summary>
            <param name="fileName">Path to the file where the EDL file will be written.</param>
            <param name="includedSections">The sections to include in the EDL file.</param>
            <returns>CreateEDLResult Code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.CreateEDLFromMeter(System.String,Itron.Metering.Device.EDLSections,System.Func{System.Boolean})">
            <summary>
            Creates an EDL file with the specified sections.
            </summary>
            <param name="fileName">Path to the file where the EDL file will be written.</param>
            <param name="includedSections">The sections to include in the EDL file.</param>
            <param name="logoffAndLogon">Method to logoff and log back on to meter.</param>
            <returns>CreateEDLResult Code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CANSIDevice.ReadEDLTables(System.Collections.Generic.List{System.UInt16},System.Collections.Generic.List{System.UInt16}@,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads a group of tables and adds them to a CentronTables object.
            </summary>
            <param name="tablesToRead">List of tables to read.</param>
            <param name="tablesReadComplete">List of tables where read is successful.</param>
            <param name="meterTables">CentronTables object that contains table data.</param>
            <returns>PSEMResponse of table last table read.</returns>
        </member>
        <member name="T:Itron.Metering.Device.CStatistic">
             <summary>
             This structure represents a Network Statistic. 
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/15/06 KRC 7.35.00    N/A Created
            
        </member>
        <member name="F:Itron.Metering.Device.CStatistic.m_strStatName">
            <summary>
            The Statistic Desciption
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CStatistic.m_strStatValue">
            <summary>
            String representing the Statistic Value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CStatistic.StatName">
            <summary>
            Property to get and set Statistic Name
            </summary>
            <example>
            <code>
            CStatistic myStat = new CStatistic("Statistc  1", value);
            string strName = myStat.StatName;
            </code>
            </example>
            Revision History
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            08/15/06 KRC N/A	 N/A	Creation of class 
        </member>
        <member name="P:Itron.Metering.Device.CStatistic.StatValue">
            <summary>
            Property to get and set Statistic Value
            </summary>
            <example>
            <code>
            CStatistic myStat = new CStatistic("Statistc  1", value);
            string strName = myStat.Name;
            </code>
            </example>
            Revision History
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            08/15/06 KRC N/A	 N/A	Creation of class 
        </member>
        <member name="P:Itron.Metering.Device.CStatistic.IsStandard">
            <summary>
            Property to get and set whether the statistic is a standard statistic.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSIDisplayItem">
            <summary>
            This class provides access to all of the information required for a display item
            for the ANSI meters.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSIDisplayItem.UnitType">
            <summary>
            Definition of the display item's unit type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.NONE">
            <summary>
            No units
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.W">
            <summary>
            Watts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KW">
            <summary>
            Kilo Watts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.VAR">
            <summary>
            Var
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KVAR">
            <summary>
            Kilo Var
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.VA">
            <summary>
            VA
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KVA">
            <summary>
            Kilo VA
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.V">
            <summary>
            Volts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.A">
            <summary>
            Amps
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.WH">
            <summary>
            Watt hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KWH">
            <summary>
            Kilo Watt hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.VARH">
            <summary>
            Var hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KVARH">
            <summary>
            Kilo Var hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.VAH">
            <summary>
            VA hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KVAH">
            <summary>
            Kilo VA hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.VH">
            <summary>
            Volt hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KVH">
            <summary>
            Kilo Volt hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.AH">
            <summary>
            Amp hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.KAH">
            <summary>
            Kilo Amp hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MW">
            <summary>
            Mega Watts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MVAR">
            <summary>
            Mega Vars
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MVA">
            <summary>
            Mega VA
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MWH">
            <summary>
            Mega Watt hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MVARH">
            <summary>
            Mega Var hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.MVAH">
            <summary>
            Mega VA hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.K">
            <summary>
            Kilo
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.PF">
            <summary>
            Power Factor
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.UnitType.M">
            <summary>
            Mega
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSIDisplayItem.DisplayType">
            <summary>
            Definition of the display type values
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.UNSIGNED_INTEGER">
            <summary>
            Unsigned integer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.UNSIGNED_INTEGER_LEADING_ZERO">
            <summary>
            Unsigned integer with leading zeroes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.SINGED_INTEGER">
            <summary>
            Signed integer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DECIMAL">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DECIMAL_LEADING_ZERO">
            <summary>
            Decimal with leading zeroes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DECIMAL_DEGREES">
            <summary>
            Decimal degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.FLOATING_DECIMAL">
            <summary>
            Floating decimal point
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.FLOATING_DECIMAL_LEADING_ZEROS">
            <summary>
            Floating decmial point with leading zeroes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DATE_YY_MM_DD">
            <summary>
            Date (Year, Month, Day)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DATE_MM_DD_YY">
            <summary>
            Date (Month, Day, Year)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.DATE_DD_MM_YY">
            <summary>
            Date (Day, Month, Year)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.TIME_HH_MM_SS">
            <summary>
            Time (Hour, Minute, Second)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.USER_FIELD">
            <summary>
            User text field
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.DisplayType.ALL_SEGMENTS">
            <summary>
            All segments
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.#ctor(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Constructor for Display Item that can be called while reading Table 2048
            </summary>
            <param name="Lid">The LID for the given Display Item</param>
            <param name="strDisplayID">The Display ID for the given Display Item</param>
            <param name="usFormat">The Format Code for the given display item</param>
            <param name="byDim">The Dimension of the given display item</param>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.Editable">
            <summary>
            Gets whether or not the display item can be edited.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.NegativeAllowed">
            <summary>
            Determines if a Negative is allowed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.Format">
            <summary>
            Gets the format of the display item as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.Units">
            <summary>
            Gets the units of the display item as a string
            </summary>
            <summary>
            Gets the format of the display item as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.Unit">
            <summary>
            Gets the unit enumeration value of the display item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.Type">
            <summary>
            Gets the display type enumeration value of the display item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.TotalDigits">
            <summary>
            Gets the total number of digits to display for the display item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.DecimalDigits">
            <summary>
            Gets the number of decimal digits to display for the display item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsFloatingPoint">
            <summary>
            Determines if the Display Item is a Floating Decimal Point value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.DisplayLID">
            <summary>
            Gets the LID object for the item on the display.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.WriteNewValue(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Writes a new values to the meter for registers that appear on the display.
            </summary>
            <param name="psem">PSEM Object</param>
            <returns>ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatData(System.Object)">
            <summary>
            Formats the given data to match what is on the display
            </summary>
            <param name="objData">The object to format</param>
            <returns>The item formatted to match the display</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatTime(System.Int32)">
            <summary>
            Formats the a time stored as an Int32 to match the meter display
            </summary>
            <param name="iValue">The value to format</param>
            <returns>A string for the formatted time.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatUnsignedInteger(System.UInt32)">
            <summary>
            Formats the Unsigned Int Items
            </summary>
            <param name="uiData">The data to format</param>
            <returns>A string that represents the formatted Uint</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatSignedInteger(System.Int32)">
            <summary>
            Formats the Signed Int Items
            </summary>
            <param name="iData">The integer data to format</param>
            <returns>A string of the formatted integer</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatDateTime(System.DateTime)">
            <summary>
            Formats the Date/Time Items
            </summary>
            <param name="dtDateTime">The DateTime object to format</param>
            <returns>A string of the formatted DateTime</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatFloatingPoint(System.Double)">
            <summary>
            Formats a Floating Point Decimal Number
            </summary>
            <param name="dblValue">The floatig point value to format</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatFloatingPoint(System.Single)">
            <summary>
            Formats a Floating Point Decimal Number
            </summary>
            <param name="fValue">The floatig point value to format</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatFixedPoint(System.Double)">
            <summary>
            Formats a Fixed Point Decimal Number
            </summary>
            <param name="dbValue">The fixed point number to format</param>
            <returns>A string of the formatted fixed point number</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayItem.FormatFixedPoint(System.Single)">
            <summary>
            Formats a Fixed Point Decimal Number
            </summary>
            <param name="fValue">The fixed point number to format</param>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.DisplayFormat">
            <summary>
            Gets the format for the display item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.DisplayDim">
            <summary>
            Gets the Dimension of the Display Item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsLeadingZeros">
            <summary>
            Gets whether or not the display item uses Leading Zeros
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.MeasurementUnit">
            <summary>
            Gets the Measurement Unit of the display item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsFixedPoint">
            <summary>
            Determines if the Display Item is a Fixed Decimal Point value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsUnsignedInteger">
            <summary>
            Determines if the Display Item is an unsigned integer value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsSignedInteger">
            <summary>
            Determines if the Display Item is a signed integer value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsDate">
            <summary>
            Determines if the Display Item is a Date value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsTime">
            <summary>
            Determines if the Display Item is a Time value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayItem.IsUserField">
            <summary>
            Determines if the Display Item is a user field (String) value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIDisplayItem.m_LID">
            <summary>
            The LID for the current display item
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSIEventDictionary">
            <summary>
            Constructs a dictionary of common events for our ANSI devices
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIEventDictionary.#ctor">
            <summary>
            Constructs a dictionary of common events for our 
            ANSI devices. All ANSI devices must have events 0-76 listed in C12.19 spec.
            </summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version    Issue#      Description
            -------- --- -------    ------      ---------------------------------------
            05/11/07 mcm 8.10.04  	 	        Created
            07/02/09 AF  2.20.11    137349      Removed CUST_SCHED_CHANGED because this event
                                                 as a different meaning for OpenWay devices
            10/13/09 MMD 2.30.09    141987      Changed the string representation of LOSS_VOLTAGE_A from
                                                    LOSS_OF_POTENTIAL to LOSS_OF_PHASE
            05/11/10 jrf 2.41.01                Adding the Table Configuration event.
            06/15/16 MP  4.50.284   WR680128    Promoted On Demand Periodic Read from base dictionary.
            07/12/16 MP  4.70.7     WR688986    Changed how event descriptions were accessed
            07/14/16 MP  4.70.7     WR688986    Removed commented code
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.ANSIEventDictionary.TranslatedEventData(Itron.Metering.Device.HistoryEntry,Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            TranslateEventData - Takes the Event Data and translates it to something human readable
            </summary>
            <param name="HistoryEvent">The Event whose argument data is being translated</param>
            <param name="ArgumentReader">The raw data we are translating</param>
            <returns>The Human Readable text</returns>
        </member>
        <member name="P:Itron.Metering.Device.ANSIEventDictionary.TimeFormat">
            <summary>
            Gets or sets the time format to be used for interpreting set clock event arguments
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIEventDictionary.m_rmStrings">
            <summary>String resource describing our events</summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd">
            <summary>
            This class represents a C12.19 Calendar record (table 54) structure.
            The table contains the schedule definition for TOU metering activities
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.CalendarControlMasks">
            <summary>
            Enumeration for the actions that can take place when a specific date occurs
            </summary>
            <remarks>
            This enum is currently not in use.
            </remarks>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.RatesMasks">
            <summary>
            Bit mask for the TOU rates
            </summary>
            <remarks>
            This enum is currently not in use.
            </remarks>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD">
            <summary>
            Structure for holding the data of one recurring event date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD.RecurrDateBfld">
            <summary>
            Recurring date in an RDATE format
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD.CalendarControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD.DemandResetFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD.SelfReadFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.RECURR_DATE_RCD.Comment">
            <summary>
            Comment that may identify the recurring date
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD">
            <summary>
            Structure for holding the data of one non-recurring event date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD.NonRecurrDate">
            <summary>
            Non-recurring event date.  Action shall occur at midnight
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD.CalendarControl">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD.DemandResetFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD.SelfReadFlag">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.NON_RECURR_DATE_RCD.Comment">
            <summary>
            Comment that may identify the non-recurring date
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.TIER_SWITCH_RCD">
            <summary>
            Structure for holding the data of a rate change event (tier switch)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.TIER_SWITCH_RCD.NewTier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.TIER_SWITCH_RCD.SwitchMinute">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.TIER_SWITCH_RCD.SwitchHour">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.TIER_SWITCH_RCD.DaySchedNum">
            <summary>
            Specifies the daily schedule type associated with the tier switch
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.WEEKDAY_SCHEDULE_RCD">
            <summary>
            This struct is used if the Table 51 Separate Weekdays Flag is false;
            i.e., the meter does not support separate schedules for each weekday.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.WEEKDAY_SCHEDULE_RCD.SaturdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.WEEKDAY_SCHEDULE_RCD.SundaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.WEEKDAY_SCHEDULE_RCD.WeekdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.WEEKDAY_SCHEDULE_RCD.HolidaySchedule">
            <summary></summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD">
            <summary>
            This struct is used if the table 51 Separate Weekdays Flag is true;
            i.e., the meter supports separate schedules for each weekday.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.SaturdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.SundaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.MondaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.TuesdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.WednesdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.ThursdaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.FridaySchedule">
            <summary></summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.FULL_WEEKDAY_SCHEDULE_RCD.HolidaySchedule">
            <summary></summary>
        </member>
        <member name="T:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD">
            <summary>
            This structure represents a C12.19 table 54 CALENDAR_RCD.  The Anchor Date 
            may or may not be there depending on the table 51 ANCHOR_DATE_FLAG.  The 
            sizes of the arrays depends on various table 51 flags.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD.AnchorDate">
            <summary>
            If specified, any recurring date using the period/offset
            type shall use this date as a starting point
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD.NonRecurringDates">
            <summary>
            Array containing non-recurring dates
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD.RecurringDates">
            <summary>
            Array containing recurring dates
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD.TierSwitches">
            <summary>
            Array that contains the tier switches
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.C1219_CalendarRcd.CALENDAR_RCD.DailyScheduleIDMatrix">
            <summary>
            2-dimensional array containing daily schedule type identifiers.
            TODO - I'm not sure this is the right data structure to hold
            the daily schedule matrix.  Would it be any better to have
            2 1-dimensional arrays -- one an array of WEEKDAY_SCHEDULE_RCD
            and one, an array of FULL_WEEKDAY_SCHEDULE_RCD?
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.C1219_CalendarRcd.#ctor(System.Boolean,System.Boolean,System.Byte,System.Byte,System.UInt16,System.Boolean,System.Byte,System.Byte)">
            <summary>
            Constructs a table 54 CALENDAR_RCD based on table 51 values.
            </summary>
            <param name="SeparateSumDemandsFlag">Table 51 SEPARATE_SUM_DEMANDS_FLAG.
            Determines whether or not end device is switching summation and demands
            independently.</param>
            <param name="AnchorDateFlag">Table 51 ANCHOR_DATE_FLAG. Whether or not
            end device accepts an anchor date for the Period/Delta RDATE type</param>
            <param name="NbrNonRecurringDates">Table 51 NBR_NON_RECURR_DATES.
            Actual number of nonrecurring dates supported by the end device
            calendar</param>
            <param name="NbrRecurringDates">Table 51 NBR_RECURR_DATES.  Actual
            number of recurring dates supported by the end device calendar</param>
            <param name="NbrTierSwitches">Table 51 NBR_TIER_SWITCHES.  Actual
            number of tier switches supported by the end device calendar</param>
            <param name="SeparateWeekdaysFlag">Table 51 SEPARATE_WEEKDAYS_FLAG.
            Whether or not device is capable of having a different schedule for
            each of the 5 weekdays</param>
            <param name="NbrSeasons">Table 51 NBR_SEASONS.  Actual number of 
            seasons in use by the end device</param>
            <param name="NbrSpecialScheds">Table 51 NBR_SPECIAL_SCHED.  Actual 
            number of special schedules in use by the end device</param>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.NbrNonRecurringDates">
            <summary>
            Table 51 NBR_NON_RECURR_DATES - actual number of non-recurring dates
            supported by the end device calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.NbrRecurringDates">
            <summary>
            Table 51 NBR_RECURR_DATES - actual number of recurring dates
            supported by the end device calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.NbrTierSwitches">
            <summary>
            Table 51 NBR_TIER_SWITCHES - actual number of tier switches
            supported by the end device calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.AnchorDate">
            <summary>
            Table 54 ANCHOR_DATE - If specified, any recurring date using the 
            PERIOD/OFFSET type shall use this date as a starting date
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.NbrSeasons">
            <summary>
            Table 51 NBR_SEASONS - Actual number of seasons in use by the end 
            device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.NbrSpecialSchedules">
            <summary>
            Table 51 NBR_SPECIAL_SCHED - Actual number of special schedules in use
            by the end device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1219_CalendarRcd.CalendarRecord">
            <summary>
            Table 54 CALENDAR_RCD - Accesses the entire table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConnectDisconnectResponse">
            <summary>
            Response parameter for the connect/disconnect procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.Successful">
            <summary>
            Connect/Disconnect Successful
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.SwitchAlreadyClosed">
            <summary>
            Failed because the switch was already closed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.SwitchAlreadyOpened">
            <summary>
            Failed because the switch was already open
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.SwitchDisabled">
            <summary>
            Failed because the switch is currently disabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.InsufficientSecurity">
            <summary>
            Failed because of insufficient security
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.InvalidProcedureData">
            <summary>
            Failed because the procedure data was invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.NotPointToPointMessage">
            <summary>
            Failed because the connect/disconnect message was not point to point
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.NotReady">
            <summary>
            Failed because the metrology is not ready
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.ServiceLimitingOverride">
            <summary>
            Failed because switch operation is being overridden by Service Limiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.CapacitorNotCharged">
            <summary>
            Failed because the capacitor is not charged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.NoLoadSideVoltagePresentAfterConnect">
            <summary>
            Failed because no load side voltage was present after a connect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.LoadSideVoltagePresentAfterDisconnect">
            <summary>
            Failed because load side voltage was detected after a disconnect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.NoSwitchPresent">
            <summary>
            Failed because there is no switch in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectDisconnectResponse.SuccessfulInterventionRequired">
            <summary>
            Successful but waiting on user intervention to connect
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConnectType">
            <summary>
            Enumeration for Remote Connection Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectType.CONNECT_NO_USER_INTERVENTION">
            <summary>
            Do a Connect that does not require user intervention
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConnectType.CONNECT_USER_INTERVENTION">
            <summary>
            Do a Connect that requires user intervention
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LoadVoltageDetectionResult">
            <summary>
            Enumeration for the Load Side Voltage Detection Result Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LoadVoltageDetectionResult.LOAD_SIDE_VOLTAGE_NOT_PRESENT">
            <summary>
            No Load Voltage Present
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LoadVoltageDetectionResult.LOAD_SIDE_VOLTAGE_PRESENT">
            <summary>
            Load Side Voltage Present
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DisconnectSwitchSettings">
            <summary>
            Enumeration for the settings that can be configured for the 
            disconnect switch.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisconnectSwitchSettings.Disabled">
            <summary>
            The switch is disabled.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisconnectSwitchSettings.Enabled">
            <summary>
            The switch is enabled.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RemoteConnectResult">
            <summary>
            Enumeration for the Remote Connection Result Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.REMOTE_ACTION_SUCCESS">
            <summary>
            Remote Connect/Disconnect Succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.SECURITY_VIOLATION">
            <summary>
            Remote Connect/Disconnect Failed due to Security Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.LOAD_VOLTAGE_PRESENT">
            <summary>
            Load Voltage was detected, so operation failed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.REMOTE_CONNECT_FAILED">
            <summary>
            The Connect/Disconnect operation failed, but we don't have an exact reason
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.LOAD_VOLTAGE_NOT_DETECTED">
            <summary>
            Load Voltage was not detected after a connect, which could mean that the switch failed.  The base will be put
            back into the disconnect state.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteConnectResult.UNRECOGNIZED_PROCEDURE">
            <summary>
            Remote Connect/Disconnect is not supported on this device
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ProcedureFirmwareType">
            <summary>
            Enumeration for the Remote Connection Result Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.REGISTER">
            <summary>
            Register firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.COMM_MODULE">
            <summary>
            Comm Module firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.HAN_MODULE">
            <summary>
            HAN Module FW.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.AVR_DISPLAY">
            <summary>
            AVR Display FW
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.HAN_REMOTE_CLIENT">
            <summary>
            HAN Remote Client FW
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureFirmwareType.POWER_LINE_CARRIER_COMM_MODULE">
            <summary>
            Power Line Carrier Comm Module FW
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.EnhancedSecurityAlgorithmUsed">
            <summary>
            Enumeration for the type of enhanced security keys used
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EnhancedSecurityAlgorithmUsed.K_CURVE">
            <summary>
            K-curve security keys
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EnhancedSecurityAlgorithmUsed.P_CURVE">
            <summary>
            P-Curve security keys
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EnhancedSecurityAlgorithmUsed.UNDEFINED">
            <summary>
            Unknown - meaning either the keys have not been injected or the data item is not supported
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANCurrentNetworkStatus">
            <summary>
            Status of the HAN network
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANCurrentNetworkStatus.NETWORK_UP">
            <summary>
            HAN Network is Up
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANCurrentNetworkStatus.NETWORK_DOWN">
            <summary>
            HAN Network is Down
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANCurrentNetworkStatus.NETWORK_FORMING">
            <summary>
            HAN Network is Forming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANCurrentNetworkStatus.INVALID">
            <summary>
            Invalid HAN Network Status
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Opt">
            <summary>
            Enumeration for making a choice about whether or not to particitpate in a generic activity. 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Opt.Undecided">
            <summary>
            Unknown participation status.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Opt.Out">
            <summary>
            Choosing not to participate.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Opt.In">
            <summary>
            Choosing to participate
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary">
            <summary>
            Clas that translates the CENTRON AMI LAN Communication Event Log Events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.#ctor">
            <summary>Constructs a dictionary of Centron AMI specific LAN events</summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.TranslatedEventData(System.UInt16,System.IO.BinaryReader)">
            <summary>
            TranslateEventData - Takes the LAN Event Data and translates it to something human readable
            </summary>
            <param name="uiCommEventCode">The Event Code of the Comm Event the Data belongs to</param>
            <param name="ArgumentReader">The raw data we are translating</param>
            <returns>The Human Readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.GetC1222TableSendResult(System.UInt16)">
            <summary>
            Gets the Human Readable String for the C12.22 Table Send Result
            </summary>
            <param name="result">Numerical value of the error code</param>
            <returns>string - Human Readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.GetC1222MessageType(System.Byte)">
            <summary>
            Gets the Human Readable String for the C12.22 Message Type 
            </summary>
            <param name="C1222MessageType">Numerical value of the error code</param>
            <returns>string - Human Readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.GetC1222MessageFailureCode(System.Byte)">
            <summary>
            Gets the Human Readable String for the C12.22 Message Failure Code 
            </summary>
            <param name="C1222MessageFailureCode">Numerical value of the error code</param>
            <returns>string - Human Readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.GetC1222MessageValidationResult(System.Byte)">
            <summary>
            Get the Human Readable translation of the C12.22 Message Validation Result Code
            </summary>
            <param name="C122MessageValidationResult">Numerical value of the result code</param>
            <returns>string - Human Readable text</returns>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_CommEventDictionary.m_rmStrings">
            <summary>String resource describing our events</summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_EventDictionary">
            <summary>
            Constructs a dictionary of Centron AMI specific events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_EventDictionary.#ctor">
            <summary>
            Constructs a dictionary of Centron AMI specific events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_EventDictionary.TranslatedEventData(Itron.Metering.Device.HistoryEntry,Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            TranslateEventData - Takes the Event Data and translates it to something human readable
            </summary>
            <param name="HistoryEvent">The Event Code of the Event the Data belongs to</param>
            <param name="ArgumentReader">The raw data we are translating</param>
            <returns>The Human Readable text</returns>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_FWDownloadEventDictionary">
            <summary>
            Event Dictionary for the Firmware Download Event Log
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_FWDownloadEventDictionary.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.EDLValidationItem">
            <summary>
            Object that stores the information necessary for retrieving an item from the
            CentronTables object.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.EDLValidationItem.#ctor(System.Int64,System.Int32[],System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="item">The CentronTblEnum value for the item.</param>
            <param name="index">The index for the item.</param>
            <param name="strName">The name of the item.</param>
            <param name="strCategory">The category for the item.</param>
        </member>
        <member name="M:Itron.Metering.Device.EDLValidationItem.#ctor(System.Int64,System.Int32[],System.String,System.String,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="item">The CentronTblEnum value for the item.</param>
            <param name="index">The index for the item.</param>
            <param name="strName">The name of the item.</param>
            <param name="strCategory">The category for the item.</param>
            <param name="fltMinFWVersion">The minimum firmware version needed to validate this item.</param>
        </member>
        <member name="M:Itron.Metering.Device.EDLValidationItem.#ctor(System.Int64,System.Int32[],System.String,System.String,System.Single,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="item">The CentronTblEnum value for the item.</param>
            <param name="index">The index for the item.</param>
            <param name="strName">The name of the item.</param>
            <param name="strCategory">The category for the item.</param>
            <param name="fltMinFWVersion">The minimum firmware version needed to validate this item.</param>
            <param name="fltMaxFWVersion">The maximum firmwrae version that supported this item</param>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.Item">
            <summary>
            Gets the CentronTblEnum value for the item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.Index">
            <summary>
            Gets the index of the item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.Name">
            <summary>
            Gets the name of the item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.Category">
            <summary>
            Gets the category of the item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.MinFWVersion">
            <summary>
            Gets the category of the item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EDLValidationItem.MaxFWVersion">
            <summary>
            Gets the maximum firmware version that supports an item
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048_OpenWay">
            <summary>
            This CTable2048_OpenWay class manages the header and config blocks of 2048.
            This class is specific to the OpenWay meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_OpenWay.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, create the config blocks specific to the OpenWay.
            </summary>
            <param name="psem">The protocol instance to use</param>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable2048_OpenWayl Table2048 = new CTable2048_OpenWay( PSEM, FW_Rev ); 
            </code></example>
            
        </member>
        <member name="P:Itron.Metering.Device.CTable2048_OpenWay.MetrologyTable">
            <summary>
            Property to return Metrology Table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_HistoryLogConfig">
            <summary>
            Class that represents the history log configuration data stored in table 2048
            for the CENTRON_AMI meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for CENTRON_AMI History Log Config class
            </summary>
            <param name="psem"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_HistoryLogConfig.HistoryLogEventList">
            <summary>
            Returns the list of History Log event specfic to the CENTRON_AMI
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_DemandConfig">
            <summary>
            This DemandConfig class handles the reading of the demand config 
            block of 2048. The reading of this table in the meter will be implicit.
            (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DemandConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DemandConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_DemandConfig.Demands">
            <summary>
            Gets the list of configured demands as LID numbers
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DemandConfig.ParseData">
            <summary>
            Parses the data for the AMI meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_DisplayConfig">
            <summary>
            The DisplayConfig class represents the display configuration data in 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            Constructor for the Display Configuration table - used with file based structure.
            </summary>
            <param name="BinaryReader"></param>
            <param name="Offset"></param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_DisplayConfig.ReferenceTime">
            <summary>
            Gets the reference time for the the display items
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_TOUConfig">
            <summary>
            The TOUConfig class represents the TOU Configuration data block in
            table 2048. The TOU portion of the configuration defines the seasons
            that are applied across the years of the TOU schedule. Seasons are
            applied to years in the CalendarConfig portion of the configuration.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_TOUConfig.TOU_CONFIG_SIZE">
            <summary>
            Size of the TOU Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            <param name="ConfigSize">Size of Configuration.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            <param name="ConfigSize">Size of Configuration.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            Constructor for CENTRON AMI TOU Configuration table used with file based structure
            </summary>
            <param name="BinaryReader"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Constructor for CENTRON AMI TOU Configuration table used with file based structure
            </summary>
            <param name="BinaryReader"></param>
            <param name="TableID">ID of this table</param>
            <param name="Offset"></param>
            <param name="ConfigSize">Size of TOU config.</param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_TOUConfig.NumberOfSupportedSeasons">
            <summary>
            Provides access to the number of Supported Seasons
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_TOUConfig.EventsPerDayType">
            <summary>
            Provides access to the number of Events Per day Type
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_TOUConfig.InitializeData">
            <summary>
            Setup data items
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_CalendarConfig">
            <summary>
            The CENTRON_AMI_CalendarConfig class represents the Calendar Configuration data 
            block in table 2048.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.CENTRON_AMI_CAL_SIZE">
            <summary>
            The size of the OpenWay Calendar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.CENTRON_AMI_CAL_YEARS">
            <summary>
            Number of Years in the OpenWay Calendar
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.Byte)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Calendar ConfiguratioN Construcutor used for file based structure
            </summary>
            <param name="BinaryReader">The binary Reader containing the data stream</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Calendar ConfiguratioN Construcutor used for file based structure
            </summary>
            <param name="BinaryReader">The binary Reader containing the data stream</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.Clear">
            <summary>
            Clears MOST of the CalendarConfig table.  This is usually done 
            prior to reconfiguration, so unused portions don't explicitly have 
            to be updated. The Control value is not cleared because it's not
            in the TOU schedule.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.GetEventType(System.UInt16)">
            <summary>
            Translates the AMICalendarEventType for a Calendar event into an eEventType
            for the TOUSchedule class.
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.GetSeasonIndex(System.UInt16)">
            <summary>
            Translates the CalendarEventType for a Calendar event into an eEventType
            for the TOUSchedule class.
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.EventsPerYear">
            <summary>
            Provides access to the Number of Events per Year
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.ParseData">
            <summary>
            Parses the data read by the call to Read. This is used so
            that we do not try to parse to much data in the CENTRON_AMI
            version of the TOUConfig table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.InitializeData(System.Byte)">
            <summary>
            Setup data items
            </summary>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_CalendarConfig.m_blnHasControlByte">
            <summary>
            Parameter that determines if a season change control byte is defined.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_Metrology">
            <summary>
            Class that represents the Metrology Table in OpenWay (Partial Table Implementation)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_Metrology.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="offset">The offset of the table in 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_Metrology.Read">
            <summary>
            Reads the Coefficients Config block out of 2048
            </summary>
            <returns>AA PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_Metrology.Write">
            <summary>
            Writes the Coefficients Config block to table 2048. The member
            variables must contain the data that is to be written to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_Metrology.Dump">
            <summary>
            Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_Metrology.NormalKh">
            <summary>
            Gets the CT Multiplier field in table 2048.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_ModeControl">
            <summary>
            The mode control table for the AMI meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRT_HR_MASK">
            <summary>Mask for the Daily Self Read Hour</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRT_MIN_MASK">
            <summary>Mask for the Daily Self Read Minutes</summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes">
            <summary>Defintion for the Daily Self Read Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_0">
            <summary>0 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_10">
            <summary>10 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_15">
            <summary>15 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_20">
            <summary>20 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_30">
            <summary>30 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_40">
            <summary>40 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_45">
            <summary>45 Minutes</summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_ModeControl.DSRTMinutes.MIN_50">
            <summary>50 Minutes</summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_ModeControl.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device</param>
            <param name="Offset">The offset of the sub table in 2048</param>
        </member>
        <member name="P:Itron.Metering.Device.CENTRON_AMI_ModeControl.DailySelfReadTime">
            <summary>
            Gets the Daily Self Read Time value as a string.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_ModeControl.DetermineDailySelfRead(System.Byte)">
            <summary>
            Method that take shte Daily Self Read Byte and returns a string
              containing the Daily Self Read time in human readable format.
            </summary>
            <param name="byDailySelfRead">The Byte from the Meter that has the values</param>
            <returns>string - Daily Self Read Time</returns>
        </member>
        <member name="T:Itron.Metering.Device.AMICalendarEvent">
            <summary>
            CalendarEvent class for the AMI meter. This is overriden to account for the
            differences in the event types for the AMI meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMICalendarEvent.AMICalendarEventType">
            <summary>
            The list of Calendar event types for the AMI meter. 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMICalendarEvent.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMICalendarEvent.#ctor(System.UInt16)">
            <summary>
            Constructor. Takes the event data bit field as a paramater.
            </summary>
            <param name="usEvent">The event data from the Calendar Config in 2048</param>
        </member>
        <member name="M:Itron.Metering.Device.AMICalendarEvent.IsDST">
            <summary>
            Returns true if this event is a ToDST or FromDST event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMICalendarEvent.IsSeason">
            <summary>
            Returns true if this event is a season change event
            </summary>
            <returns>
            Always returns false since the AMI meter does not support Season
            change events.
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.AMICalendarEvent.Type">
            <summary>
            Gets or sets the event type for this event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMICalendarEvent.TranslatedType">
            <summary>
            Gets the event type as a string
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_IOConfig">
            <summary>
            This CENTRON OpenWay IO Config class handles the reading of the IO config 
            block of 2048. The reading of this table in the meter will be implicit 
            while the writing of this table will need to be explicitly called.  
            (read/write)	
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CENTRON_AMI_IOConfig.PULSE_WEIGHT_MULTIPLIER">
            <summary>
            Pulse weight mulitplier.  Pulse weight is stored in units of 0.01.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_IOConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor.</summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_IOConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used for file based structures.
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_IOConfig.RetrieveKYZConfiguration(Itron.Metering.DeviceDataTypes.KYZData@)">
            <summary>
            This method retrieves the KYZ configuration. 
            </summary>
            <param name="KYZConfig">A reference to the KYZ configuration object.</param>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_IOConfig.PopulateKYZConfiguration(Itron.Metering.DeviceDataTypes.KYZData)">
            <summary>
            This method populates the KYZ configuration. 
            </summary>
            <param name="KYZConfig">A KYZ configuration object.</param>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_DownstreamHANEventDictionary">
            <summary>
            Event Dictionary for the HAN Event Log
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_DownstreamHANEventDictionary.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CENTRON_AMI_UpstreamHANEventDictionary">
            <summary>
            Event Dictionary for the HAN Event Log
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CENTRON_AMI_UpstreamHANEventDictionary.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayDisplayItem">
            <summary>
            Display Item class for the OpenWay meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayDisplayItem.#ctor">
            <summary>
            Default Constructor.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayDisplayItem.#ctor(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Constructor for Display Item that can be called while reading Table 2048
            </summary>
            <param name="Lid">The LID for the given Display Item</param>
            <param name="strDisplayID">The Display ID for the given Display Item</param>
            <param name="usFormat">The Format Code for the given display item</param>
            <param name="byDim">The Dimension of the given display item</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayDisplayItem.Format">
            <summary>
            Gets the format as a string for the display item.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayDisplayItem.Units">
            <summary>
            Gets the units as a string for the display item.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SecurityLevel">
            <summary>
            The PSEM Security level.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SecurityLevel.Level0">
            <summary>
            Level 0 - None
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SecurityLevel.Level1">
            <summary>
            Level 1 - Quaternary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SecurityLevel.Level2">
            <summary>
            Level 2 - Tertiary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SecurityLevel.Level3">
            <summary>
            Level 3 - Secondary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SecurityLevel.Level4">
            <summary>
            Level 4 - Primary
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SignedAuthorizationKey">
            <summary>
            Data object for the OpenWay Signed Authorization key
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SignedAuthorizationKey.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SignedAuthorizationKey.#ctor(System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="data">The authorization key data</param>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.EncryptedData">
            <summary>
            Gets or sets the encrypted data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.Data">
            <summary>
            Gets the full key Data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.StartDate">
            <summary>
            Gets the start date for the credential
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.EndDate">
            <summary>
            Gets the end date for the credential
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.MFGSerialNumber">
            <summary>
            Gets the manufacturer serial number for the authorized device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.UserName">
            <summary>
            Gets the user name for the authorized user.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.UserID">
            <summary>
            Gets the User ID for the authorized user.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.Level">
            <summary>
            Gets the authorized security level.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SignedAuthorizationKey.IsValid">
            <summary>
            Gets whether or not the key is currently valid based on the time.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SignedAuthorizationKey.CreateEncryptionAlgorithm">
            <summary>
            Gets the encryption algorithm to use.
            </summary>
            <returns>The encryption algorithm</returns>
        </member>
        <member name="M:Itron.Metering.Device.SignedAuthorizationKey.InitializeData">
            <summary>
            Initializes the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SignedAuthorizationKey.ParseData">
            <summary>
            Parses the Authorization information from the data.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RMASignedAuthorizationKey">
            <summary>
            Data object for the RMA Signed Authorization key. The intention here
            is that this key is encrypted differently so that one can not copy this
            key into Field-Pro to use.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RMASignedAuthorizationKey.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RMASignedAuthorizationKey.#ctor(System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="data">The Authorization key data</param>
        </member>
        <member name="M:Itron.Metering.Device.RMASignedAuthorizationKey.CreateEncryptionAlgorithm">
            <summary>
            Gets the encryption algorithm to use.
            </summary>
            <returns>The encryption algorithm</returns>
        </member>
        <member name="T:Itron.Metering.Device.CiscoCommModule">
            <summary>
            Comm Module object for a Cisco Comm Module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.PPP_KEY_LENGTH">
            <summary>
            Length of the PPP key
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CiscoCommModule.WireType">
            <summary>
            Wire type provides the information needed to determine the length of the field in a TLV
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.VARINT">
            <summary>
            Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.I64_BIT">
            <summary>
            Used for fixed64, sfixed64, double
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.LENGTH_DELIMITED">
            <summary>
            Used for string, bytes, embedded messages, packed repeated fields
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.START_GROUP">
            <summary>
            groups (deprecated)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.END_GROUP">
            <summary>
            groups (deprecated)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.WireType.I32_BIT">
            <summary>
            Used for fixed32, sfixed32, float
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CiscoCommModule.IPv6StackState">
            <summary>
            Link Status provides the IPv6 stack state
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_NULL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_INIT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_STARTED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_NEGOTIATING">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_UP">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_BAD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_STOPPED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_FAILED">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_GOOD">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_READY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6StackState.IPV6_STACK_RUNNING">
            <summary>
            
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CiscoCommModule.IPv6SourceID">
            <summary>
            Current time source id
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6SourceID.NOT_SYNC">
            <summary>
            No external sync
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6SourceID.LOCAL_SYNC">
            <summary>
            Local sync (N/A for itron cg-mesh)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6SourceID.REGISTER_SYNC">
            <summary>
            Adminstrative sync (i.e. register sets time using CurrentTime TLV)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6SourceID.NET_SYNC">
            <summary>
            Net (synced to network time)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CiscoCommModule.IPv6SourceID.NOT_READ">
            <summary>
            Not read (or not available)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
            <param name="amiDevice"></param>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.SetDiagnosticsTablesActivationProc150(System.Boolean)">
            <summary>
            This procedure enables or disables access to the Boron tables for Boron 5.0 meters.
            This method is obsolete but must be kept so long as there are Boron 5.0 meters in the field.
            </summary>
            <param name="Activate">true means to activate the tables; false means to disable</param>
            <returns>PSEMResponse encapsulating the layer 7 response
            to the layer 7 request</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.SetDiagnosticsTablesActivationProc159(System.Boolean)">
            <summary>
            This procedure enables or disables access to the Boron tables.  This method replaces 
            SetDiagnosticsTablesActivationProc150() but can only be used on register firmware 5.2 or later.
            </summary>
            <param name="Activate">true means to activate the tables; false means to disable</param>
            <returns>PSEMResponse encapsulating the layer 7 response
            to the layer 7 request</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.RequestOnDemandTLV(System.String)">
            <summary>
            Causes the register to request a specific TLV from the comm module
            </summary>
            <param name="TlvId"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.SetPPPKey(System.Byte[])">
            <summary>
            Sets the PPP key to the register.  This must be followed by SendPPPKey() to make the key active
            </summary>
            <param name="PPPKey">The the PPP key in the form of a 32-byte array</param>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.ClearPPPKey">
            <summary>
            Clears the existing PPP key from the register
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.SendPPPKey">
            <summary>
            Sends the PPP key to the register.  This must be called after SetPPPKey()
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.IsPSKResident">
            <summary>
            Reads the PSK Resident field from table 511 to determine if PPP security is currently in use in the meter
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.ResetIPStack">
            <summary>
            This procedure will reset the stack from IP to C12.22 and back to IP.
            It can be used to give the IP stack a kick to get it unstuck.
            </summary>
            <returns>The result of the procedures call</returns>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.TranslateSourceId(System.UInt32)">
            <summary>
            Translates the source id into a human understandable string
            </summary>
            <param name="sourceID">The source id field from mfg table 549</param>
            <returns>a string representing the value of the source id</returns>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegFWType">
            <summary>
            Gets the register firmware type from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegFWVersionRevision">
            <summary>
            Gets the register firmware version/revision from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegFWBuild">
            <summary>
            Gets the register firmware build from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegBootloaderType">
            <summary>
            Gets the register bootloader firmware type from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegBootloaderVersion">
            <summary>
            Gets the register bootloader version from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegBootloaderRevision">
            <summary>
            Gets the register bootloader revision from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterRegBootloaderBuild">
            <summary>
            Gets the register bootloader build from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleFWType">
            <summary>
            Gets the comm module firmware type from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleFWVersion">
            <summary>
            Gets the comm module firmware version from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleFWRevision">
            <summary>
            Gets the comm module firmware revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleFWBuild">
            <summary>
            Gets the comm module firmware build from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleBootloaderType">
            <summary>
            Gets the comm module bootloader firmware type from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleBootloaderVersion">
            <summary>
            Gets the comm module bootloader firmware version from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleBootloaderRevision">
            <summary>
            Gets the comm module bootloader firmware revision from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPMeterModuleBootloaderBuild">
            <summary>
            Gets the comm module bootloader firmware build from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleMACAddress">
            <summary>
            Gets the comm module MAC address from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModulePANId">
            <summary>
            Gets the Comm module PAN id from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleJTAGSecurityEnabled">
            <summary>
            Gets the Comm module JTAG security status from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.LinkStatusByte">
            <summary>
            Gets the Comm module link status from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.LinkStatus">
            <summary>
            Gets the Comm module link status from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.NeighborMACAddress">
            <summary>
            Gets the neighbor MAC address from table 2580
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.SSId">
            <summary>
            Reads the SSID from Mfg table 532. Warning! Only available for
            firmware versions 5.2.33 and beyond.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleIPv6AddressLong">
            <summary>
            Reads the long version of the IP Address from Mfg table 501
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleIPv6AddressShort">
            <summary>
            Gets the short version of the comm module IPv6 address from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleGlobalIPAddrPresent">
            <summary>
            Gets the comm module global address present flag from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommModuleCurrentTime">
            <summary>
            Gets the Comm module's time from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.SourceID">
            <summary>
            Last time sync source
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.TLVNeighbors">
            <summary>
            Gets the comm module neighbor list
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.TLVNeighborsFromShadowTable">
            <summary>
            Gets the comm module neighbor list from the shadow table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.TLVIPRouteMetrics">
            <summary>
            Gets the IP Route Metrics list
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.ITPTime">
            <summary>
            Retrieves the RF Mesh comm module's current time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPSent">
            <summary>
            Gets the number of IP sent from 2611
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IPReceived">
            <summary>
            Gets the number of IP received from 2611
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.CommenceTimer">
            <summary>
            Gets the IPV6 commence timer.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IsIPV6LinkLocked">
            <summary>
            Determines whether or not the IPV6 link is locked.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IsC1222StatusSynchronized">
            <summary>
            Reads the IsSynchronizedOrConnected field out of Mfg table 14 (2062).
            Written for the IPv6 M2 Gateway.  If tempted to use for a different meter,
            be sure to check that the field exists and the offset is correct.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.IsRadioOn">
            <summary>
            Gets whether or not the comm module radio is on
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CiscoCommModule.DecodeSInt32(System.Int32)">
            <summary>
            Signed integers are zig zag encoded in CSMP, but there is no way
            to tell that it is a signed int from the raw CoAP. We will handle it here
            when we know that the field needs further processing.
            </summary>
            <param name="value">the decoded varint value</param>
            <returns>the actual value of the item</returns>
            <remarks>Zig zag encoding: 0 -> 0, -1 -> 1, 1 -> 2, -2 -> 3, 2 -> 4, etc.</remarks>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2549">
            <summary>
            Gets the IPv6 Address Information table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2559">
            <summary>
            Gets the IPv6 Secure PPP Information object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2580">
            <summary>
            Gets the RFLAN Information table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2588">
            <summary>
            Gets the IPMfgTable2588 table object (creates it if needed)
            This is the dimension table for tables 554 and 556
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2597">
            <summary>
            Gets the TLV Current Time table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2602">
            <summary>
            Gets the IPMfgTable2602 table object (creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2604">
            <summary>
            Gets the IPMfgTable2604 table object (creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2608">
            <summary>
            Gets the IPMfgTable2608 table object (creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CiscoCommModule.Table2611">
            <summary>
            Gets the IPMfgTable2604 table object (creates it if needed)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CommModuleBase">
            <summary>
            Basic Communications Module data object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleBase.ITR2_DEVICE_CLASS">
            <summary>
            Device Class for RFLAN Modules
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleBase.ITRL_DEVICE_CLASS">
            <summary>
            Device Class for PrismLite Modules
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleBase.ITRP_DEVICE_CLASS">
            <summary>
            Device Class for PLAN (PLC) Modules
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CommModuleBase.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
            <param name="amiDevice">The device object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.CommModuleBase.CreateCommModule(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Creates the appropriate Comm Module class based on the Comm Module device class
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="amiDevice">The Device Object for the current device</param>
            <returns>The Comm Module object.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.NumberOfInterfaces">
            <summary>
            Gets the number of network interfaces supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table121HasDefaultValues">
            <summary>
            Returns whether or not standard table 121 has default values (all 0xFFs)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.ElectronicSerialNumber">
            <summary>
            Gets the Electronic Serial Number for the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.NativeAddress">
            <summary>
            Gets the Native Address for the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.RawNativeAddress">
            <summary>
            Gets/Sets the Raw Native Address for the Comm Module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.NetworkStats">
            <summary>
            Gets the Decade 12 Statistics for each interface supported by the 
            implementation.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.RelayNativeAddress">
            <summary>
            Gets the Native Address used to access the C12.22 Relay on this
            route for the C12.22 Node's local C12.22 Network Segment
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.MasterRelayAptitle">
            <summary>
            Gets the Aptitle for the Cell Relay responsible for this node.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.NodeAptitle">
            <summary>
            Gets the Comm Module's Aptitle
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.RegistrationDelay">
            <summary>
            Maximum random delay, in seconds, between each power up
            and the automatic issuance of the first Registration Service
            request by the C12.22 node.  This function is disabled when
            this field is set to zero.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.RegistrationPeriod">
            <summary>
            Maximum duration, TimeSpan, before the C12.22 Node's registration
            expires.  The C12.22 Node needs to reregister itself before this 
            period lapses in order to remain registered.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.RegistrationCountDown">
            <summary>
            The amount of time (TimeSpan) left before the registration period expires
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.FormattedMACAddress">
            <summary>
            Gets the MAC Address of the Comm Module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.FormattedMACAddressFromFullRead">
            <summary>
            Gets the MAC Address of the Comm Module from a full table read. For automated
            testing.  Otherwise, use FormattedMACAddress.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.ITPTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.ITPTimeFromFullRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.MACAddress">
            <summary>
            Gets the MAC Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.MACAddressFromFullRead">
            <summary>
            Gets the MAC Address from a full table read. This property is for automated
            testing.  All other uses should use MACAddress.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.MulticastAddresses">
            <summary>
            Gets the multicast addresses for the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.ExceptionHostRecords">
            <summary>
            Gets the exception host records for the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.FactoryConfigUtilityID">
            <summary>
            The Utility ID from the Factory Config Table.  Setting this value
            will cause the meter to 3 button reset after logging off.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.FactoryConfigRFLANMACAddress">
            <summary>
             The RFLAN MAC address from the Factory Config Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.CommModuleIdentification">
            <summary>
            Gets the RFLAN Identification from Mfg Table 17
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.IsRegistered">
            <summary>
            Gets whether or not the Comm Module is currently registered.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.IsNetSynced">
            <summary>
            Gets whether or not the meter is synced to the network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.CommModuleSynchStatus">
            <summary>
            Gets the Comm Module Synch Status from Vender Field 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.HasMACAddress">
            <summary>
            Determines if comm module has a MAC address. Method should be overridden by those 
            comm modules that do not support it.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.CommModuleRegistrationStatus">
            <summary>
            Gets the Registration Status from Vender Field 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.CommModuleLevel">
            <summary>
            Gets the Comm Module Level from the Vender field.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.IsRadioOn">
            <summary>
            Gets whether or not the comm module radio is on
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table121">
            <summary>
            Gets the Table 121 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table122">
            <summary>
            Gets the Table 122 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table123">
            <summary>
            Gets the Table 123 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table126">
            <summary>
            Gets the Table 126 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table127">
            <summary>
            Gets the Table 127 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table2061RFLANConfig">
            <summary>
            Gets the RFLAN Config sub table object from the Factory Config Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleBase.Table2065">
            <summary>
            Gets the RFLAN Identification table object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleBase.m_PSEM">
            <summary>
            The PSEM communications object for the current device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleBase.m_AMIDevice">
            <summary>
            The current Device Object
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CellularConfiguationResult">
            <summary>
            Result of configuring the cellular comm module.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CellularConfiguationResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CellularConfiguationResult.SecurityError">
            <summary>
            Security Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CellularConfiguationResult.WriteError">
            <summary>
            Write Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CellularConfiguationResult.CommitError">
            <summary>
            Commit Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CellularConfiguationResult.UnspecifiedError">
            <summary>
            Unspecified Error
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSCommModule">
            <summary>
            Comm Module object for an ICS Comm Module
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
            <param name="amiDevice"></param>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.Refresh">
            <summary>
            This method sets all comm module tables to null so they will have to be 
            reread the next time they are accessed.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.IsTableUsed(System.UInt16)">
            <summary>
            Checks comm module's standard table 00 to see if the specified table is supported.
            </summary>
            <param name="usTableId">Identifier of the table we want to know about.</param>
            <returns>True if the table is listed in table 00; false, otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateERTDataTables(System.Byte[]@)">
            <summary>
            This method causes the ICS module to update the ERT data and statistics tables
            for subsequent read. 
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateERTDataTables(System.Byte@,System.Byte@,System.Byte@)">
            <summary>
            This method causes the ICS module to update the ERT data and statistics tables
            for subsequent read. 
            </summary>
            <param name="byDataRecordsCount">The count of ERT data records.</param>
            <param name="byStatRecordsCount">The count of ERT statistics records.</param>
            <param name="byDataRecordSize">The size of a data record.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.SendDiagnosticsCommand(System.Byte[],System.Byte[]@)">
            <summary>
            This method sends a CLI (Diagnostic) command to the ICS comm module
            </summary>
            <param name="Command">the command that was entered in the UI</param>
            <param name="CommandResponse">the response we will receive from the meter</param>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.ClearICSEventLog">
            <summary>
            Clears the ICS comm module event log (table 2524).  Only available on the OW Centron
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.FilterICSEvents(Itron.Metering.Device.ICSFilterSelection)">
            <summary>
            Creates a filter for the ICS events.
            </summary>
            <param name="filterSelection">Optional parameter used to filter the results. Defaults to Customer
            Filter.</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateEventTables(System.DateTime,System.DateTime,System.Byte[]@)">
            <summary>
            This method freezes the ICS comm module event tables
            </summary>
            <param name="startTime">the start of the time range for which we want events</param>
            <param name="endTime">the end of the time range for which we want events</param>
            <param name="CommandResponse">the response we will receive - should be the length of the data</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.GetICSERTStatisticsRecords">
            <summary>
            Creates a list of ERT statisitics records from the meter.
            </summary>
            <returns>The list.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.GetICSERTConsumptionDataRecords">
            <summary>
            Creates a list of ERT statisitics records from the meter.
            </summary>
            <returns>The list.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateCellularGateway(System.Net.IPAddress,System.UInt16)">
            <summary>
            This method updates the cellular gateway address and port on the cellular comm module.
            </summary>
            <param name="Address">The IP address of the Cellular Gateway.</param>
            <param name="usPort">The port of the Cellular Gateway.</param>
            <returns>The result of configuring the cellular module.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateERTUtilityID(System.UInt16)">
            <summary>
            This method updates the ERT utility ID on the cellular comm module.
            </summary>
            <param name="usERTUtilityID">The ERT utility ID.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateNTPAddress(Itron.Metering.Device.DestinationAddressRecord)">
            <summary>
            This method updates the cellular NTP address on the cellular comm module.
            </summary>
            <param name="NTPAddress">The NTP address to configure.</param>
            <returns>The result of configuring the cellular module.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.UpdateERTRadio(System.Boolean)">
            <summary>
            This method updates the ERT radio field on the cellular comm module.
            </summary>
            <param name="blnEnabled">Whether or not to enable the ERT Radio.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.ConfigureCellularData(Itron.Metering.Communications.PSEM.PSEMResponse)">
            <summary>
            Method that commits the cellular data to flash.
            </summary>
            <param name="WriteResult">The result of writing the cellular data to the comm module.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.IsICSStatusAlarmSet(Itron.Metering.Device.ICSStatusAlarms)">
            <summary>
            This method determines if a given ICS status alarm is set.
            </summary>
            <param name="Alarm">The alarm to check.</param>
            <returns>Whether or not the alarm is set.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.CommitCellularConfiguration">
            <summary>
            This method calls the procedure to commit cellular configuration values to flash.
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.InitiateFileRetrieval(System.String,System.UInt32@,System.UInt16@,System.Byte[]@)">
            <summary>
            Method that initiates the retrieval of a selected ICM debug log
            </summary>
            <param name="FilePath">null terminated ASCII string containing the path and file name of the file
            on the ICM's file system that we want to retrieve. It's this file's data that will be rendered into
            MFG table 497</param>
            <param name="FileTotalSize">total size in bytes of the file being requested. If this parameter is zero,
            then the file being requested either does not exist, or otherwise cannot be retrieved</param>
            <param name="RenderedDataSize">total size in bytes of the valid data renedered into MFG table 497.
            If the FileTotalSize parameter is less than MFG table 494 FileRetrievalSize, then only the first 
            FileRetrievalSize bytes are rendered into MFG table 497. We will need to call ContinueFileRetrieval 
            to get the next "block" of bytes from the file</param>
            <param name="RenderedDataMD5">MD5 of the data rendered into MFG table 497. Use this to validate the 
            integrity of the file data.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.ContinueFileRetrieval(System.Byte,System.UInt16@,System.Byte[]@)">
            <summary>
            Method to continue the retrieval of an ICM debug log in the case that the log is too
            large to retrieve in one go
            </summary>
            <param name="OperationCode">determines the operation requested. 1 = "Render Next", 2 = "Re-Render Current"</param>
            <param name="RenderedDataSize">total size in bytes of the valid data rendered into MFG table 497</param>
            <param name="RenderedDataMD5">MD5 of the dta rendered into MFG table 497</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.ReadTable2545(System.UInt16,System.Byte[]@)">
            <summary>
            
            </summary>
            <param name="RenderedDataSize"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularManufacturer">
            <summary>
            Gets the manufacturer from table 2518
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularModel">
            <summary>
            Gets the model from table 2518
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularHardwareVersion">
            <summary>
            Gets the hardware version from table 2518
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularFirmwareVersion">
            <summary>
            Gets the firmware version from table 2518
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.IMEI_or_ESN_or_MEID">
            <summary>
            Gets the International Mobile Station Equipment Identity (IMEI) 
            OR 
            electronic serial number (ESN)
            OR 
            mobile equipment identifier (MEID)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SIM_ICC_ID">
            <summary>
            Gets the subscriber identity module integrated circuit card identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.IMSI_or_MIN">
            <summary>
            Gets the International Mobile Subscriber Identity (IMSI) for GSM 
            OR 
            Mobile identification number (MIN) for Code division multiple access CDMA 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SignalStrength">
            <summary>
            Reads signal strength
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.RegistrationStatus">
            <summary>
            Reads registration status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NetworkMode">
            <summary>
            Reads Network Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Carrier">
            <summary>
            Reads Network Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.TowerIdentifier">
            <summary>
            Reads the Tower Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SectorIdentifier">
            <summary>
            Reads the Sector Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NumberOfCellTowerChanges">
            <summary>
            Reads the Number of Cell Tower Changes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LinkConnectionState">
            <summary>
            Reads the Link Connection State
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NetworkConnectionUptime">
            <summary>
            Reads the Network Connection Up Time (seconds)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.IPAddress">
            <summary>
            Reads the IP Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GatewayAddress">
            <summary>
            Reads the Gateway Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CumulativeKBytesSent">
            <summary>
            Reads the Cumulative KiloBytes Sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CumulativeKBytesReceived">
            <summary>
            Reads the Cumulative KiloBytes Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.BytesSent">
            <summary>
            Reads the Bytes Sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.BytesReceived">
            <summary>
            Reads the Bytes Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.PacketsSent">
            <summary>
            Reads the Packets Delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.PacketsReceived">
            <summary>
            Reads the Packets Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LastSuccessfulTowerCommunication">
            <summary>
            Reads the Last Successful Tower Communication
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NumberOfLinkFailures">
            <summary>
            Reads the Number Of Link Failures
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ModemTemperature">
            <summary>
            Reads the Number Of Link Failures
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LastModemShutdownForTemperature">
            <summary>
            Reads the Last Modem Shutdown For Temperature
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LastModemPowerUpAfterTemperatureShutdown">
            <summary>
            Reads the Last Modem Power Up After Temperature Shutdown
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.MDNRadioPhoneNumber">
            <summary>
            Reads the MDM Radio Phone Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NumberOfSectorIdentifierChanges">
            <summary>
            Reads the Number of Sector Identifier Changes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.TrafficChannelsGoodCRCCount">
            <summary>
            Reads the Traffic Channels - good CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.TrafficChannelsBadCRCCount">
            <summary>
            Reads the Traffic Channels - bad CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ControlChannelsGoodCRCCount">
            <summary>
            Reads the Control Channels - good CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ControlChannelsBadCRCCount">
            <summary>
            Reads the Control Channels - bad CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.FigureOfMerit">
            <summary>
            Reads the Figure of Merit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularCarrier">
            <summary>
            Reads the name of the cellular carrier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMFirmwareVersionMajor">
            <summary>
            ICM Major part of the Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.UncachedICMFirmwareVersionMajor">
            <summary>
            Uncached ICM Major part of the Firmware Version 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMFirmwareVersionMinor">
            <summary>
            ICM Minor part of the Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMFirmwareVersionRevision">
            <summary>
            ICM Revision part of the Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMExtendedFirmwareVersion">
            <summary>
            ICM Extended Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMHardwareVersionMajor">
            <summary>
            Hardware Version Major
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMHardwareVersionMinor">
            <summary>
            Hardware Version Minor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMNumberSuperCapacitors">
            <summary>
            Number of Super Capacitors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMSerialNumberMajor">
            <summary>
            ICM Module Major part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMSerialNumberMinor">
            <summary>
            ICM Module Minor part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMSerialNumberBuild">
            <summary>
            ICM Module Build part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMCPUIDHigh">
            <summary>
            ICM CPU Identifier High 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMCPUIDLow">
            <summary>
            ICM CPU Identifier Low
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMBootLoaderVersionMajor">
            <summary>
            Boot Loader Major part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMBootLoaderVersionMinor">
            <summary>
            Boot Loader Minor part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMBootLoaderVersionRevision">
            <summary>
            Boot Loader Revision part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMLastPowerFailure">
            <summary>
            Last Power Failure
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMSuperCapacitorStatus">
            <summary>
            Super Capacitor Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMRebootCount">
            <summary>
            Reboot Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMUptime">
            <summary>
            Uptime
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMModuleStatus">
            <summary>
            Module Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMModuleStatusUncached">
            <summary>
            Gets an uncached read of the module status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMModuleTemperature">
            <summary>
            Module Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SocketIdleTimeout">
            <summary>
            Socket Idle Timeout (in seconds).
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.DisplayableGatewayAddress">
            <summary>
            Gateway Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.DisplayableDNSAddress">
            <summary>
            DNS Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.DisplayableNTPAddress">
            <summary>
            NTP Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.PowerFailTime">
            <summary>
            The power fail time or the minimum outage required before the ICS module 
            recognizes a power outage.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NTPUpdateFrequency">
            <summary>
            The NTP update frequency (in hours) is how often the ICS module asks the 
            SNTP server for the time.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NTPValidTime">
            <summary>
            The NTP valid time (in minutes) is how long the ICS time is valid after
            being recieved from the SNTP server.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LinkFailureThreshold">
            <summary>
            Link Failure Threshold
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.TowerChangesThreshold">
            <summary>
            Tower Changes Threshold
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SectorIDChangesThreshold">
            <summary>
            Sector ID Changes Threshold
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.LinkFailureCounterResetFrequency">
            <summary>
            Link Failure Counter Reset Frequency
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.TowerChangesCounterResetFrequency">
            <summary>
            Tower Changes Counter Reset Frequency
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SectorIDChangesCounterResetFrequency">
            <summary>
            Sector ID Changes Counter Reset Frequency
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.IsERTPopulated">
            <summary>
            Indicates wheter or not ERT tables are populated.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ZigBeeAccess">
            <summary>
            Gets whether or not ZigBee is enabled by the ZigBeeAccess field in table 464
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.RadioPhoneNumber">
            <summary>
            Radio's phone number.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMPrimaryAPNName">
            <summary>
            GSM's Primary APN Name.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMPrimaryAPNUserName">
            <summary>
            GSM's Primary APN's User Name.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMPrimaryAPNPasswordConfigured">
            <summary>
            Determines if the GSM's Primary APN's password is configured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMSecondaryAPNName">
            <summary>
            GSM's Primary APN Name.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMSecondaryAPNUserName">
            <summary>
            GSM's Secondary APN's User Name.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.GSMSecondaryAPNPasswordConfigured">
            <summary>
            Determines if the GSM's Secondary APN's password is configured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularDataTimeoutUnits">
            <summary>
            The units the Cellular Data Timeout is stored in.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CellularDataTimeout">
            <summary>
            The Cellular Data Timeout.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SMSOnlyMode">
            <summary>
            Comm module is operating in SMS only mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SMSConfiguration">
            <summary>
            The configuration of SMS.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.MaxERTRecords">
            <summary>
            The max number of ERT data records
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTUtilityID">
            <summary>
            ERT Utility ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTDataLifetime">
            <summary>
            ERT Data Lifetime (in hours).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTRadioEnabled">
            <summary>
            ERT Radio, used to turn the ERT module's transceiver on/off.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTRestingChannelInterval">
            <summary>
            Resting Channel Interval (in minutes).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTMaxManagedMeters">
            <summary>
            Maximum managed meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTMaxUnmanagedMeters">
            <summary>
            Maximum unmanaged meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTMaxManagedThresholdAttempts">
            <summary>
            Maximum managed threshold attempts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTThresholdRSSI">
            <summary>
            Threshold RSSI
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTRSSISamples">
            <summary>
            RSSI samples
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTStealThreshold">
            <summary>
            Steal threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERT100GMeterSupport">
            <summary>
            100G meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERT100WMeterSupport">
            <summary>
            100W meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERT100WPlusMeterSupport">
            <summary>
            100W Plus meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTChannelHopFrequencyMultiplier">
            <summary>
            Channel hop frequency multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTDataStoreMultiplier">
            <summary>
            Data store multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTConnDownTime">
            <summary>
            Conn down time. This value determines how long the ICM will wait in hours when there is 
            no data connectivity before releasing the ERTs it is managing.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTCampingChannelTimer">
            <summary>
            Camping channel timer.   This value (in seconds) determines how long the ICM will wait
            on a “predicted” channel for a valid ERT packet to arrive at the radio.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.HasMACAddress">
            <summary>
            Determines if comm module has a MAC address. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CommModuleEvents">
            <summary>
            Retrieves the Comm Module Events that were recorded from the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CommModuleEventConfigured">
            <summary>
            Retrieves the Comm Module history log configuration from the meter.  The list
            includes all possible supported events with a description and a boolean
            indicating whether or not the event is monitored in the meter.  This version
            reads the config from tables 2522 and 2523.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.CommModuleEventMonitored">
            <summary>
            Retrieves the Comm Module history log configuration from the meter.  The list
            includes all monitored events regardless of whether or not they are listed as supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NumberOfICSEvents">
            <summary>	
            Returns the number of ICS event log entries from table 2521 (MFG 473).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NXPFirmwareVersion">
            <summary>
            Gets the NXP (ERT radio) firmware version out of mfg table 491 in the
            form of a byte array.  The array has 3 elements: version, revision, and build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTRadioFirmwareVersion">
            <summary>
            Gets the NXP (ERT radio) firmware version out of mfg table 491 in the
            form of an x.x string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTRadioFirmwareBuild">
            <summary>
            Gets the NXP (ERT radio) firmware build number out of mfg table 491 in the
            form of a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ModemFirmwareVersion">
            <summary>
            Gets the modem firmware version out of mfg table 491 in the
            form of an x.x string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ModemFirmwareBuild">
            <summary>
            Gets the modem firmware build number out of mfg table 491 in the
            form of a string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.PICFirmwareVersion">
            <summary>
            Gets the PIC firmware version out of mfg table 491 in the
            form of a x.x string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.PICFirmwareBuild">
            <summary>
            Gets the PIC firmware version out of mfg table 491 in the
            form of an x.x.x string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ICMModuleHardwareVersion">
            <summary>
            Gets the ICM hardware version out of mfg table 491 in the
            form of an x.x string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.MicrotypeRecords">
            <summary>
            Gets the list of microtype records from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SupportsICMSystemLogs">
            <summary>
            Returns whether the system logs in mfg table 496 are supported by this device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.NumberOfICMSystemLogs">
            <summary>
            Returns the number of system logs in mfg table 496
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.SystemLogEntries">
            <summary>
            List of the system logs available for download
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ITPTime">
            <summary>
            The comm module's network time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTStatisticsRecordsCount">
            <summary>
            Gets the count of ERT statistics records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.ERTDataRecordsCount">
            <summary>
            Gets the count of ERT data records.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSCommModule.InitializeTables">
            <summary>
            Initializes all tables to null. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table00">
            <summary>
            Returns the Table00 Object; Creates it if it has not been created
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2508">
            <summary>
            Gets ICS ERT consumption data table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2509">
            <summary>
            Gets ICS ERT actual table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2510">
            <summary>
            Gets ICS ERT configuration table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2511">
            <summary>
            Gets ICS ERT statistics table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2512">
            <summary>
            Gets the Module Configuration table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2515">
            <summary>
            Gets the Module Data table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2516">
            <summary>
            Gets the Module Status table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2517">
            <summary>
            Gets the Cellular Config table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2518">
            <summary>
            Gets the Cell Data table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2519">
            <summary>
            Gets the Cell Status table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2521">
            <summary>
            Gets the Table 2521 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2522">
            <summary>
            Gets the Table 2522 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2523">
            <summary>
            Gets the Table 2523 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2524">
            <summary>
            Gets the Table 2524 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2525">
            <summary>
            Gets the Table 2525 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2539">
            <summary>
            Gets the Table 2539 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2542">
            <summary>
            Gets the Table 2542 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2544">
            <summary>
            Gets the Table 2544 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSCommModule.Table2751">
            <summary>
            Gets the Table 2751 object (Creates it if needed)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANCommModule">
            <summary>
            Comm Module object for a PLAN Comm Module
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANCommModule.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="amiDevice">The current device object.</param>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.MACAddress">
            <summary>
            Gets the MAC Address of the Comm Module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.IsRegistered">
            <summary>
            Gets whether or not the Comm Module is currently registered.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.StackVersion">
            <summary>
            Gets the stack version of the PLC module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.FactoryDataVersion">
            <summary>
            Gets the Factory data Version for the PLC Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.BootLoaderVersion">
            <summary>
            Gets the Boot Loader Version for the PLC Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.MaxTxGain">
            <summary>
            Gets the Max Transmitted Gain for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.MaxRxGain">
            <summary>
            Gets the Max Recieved Gain for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.SearchInitiatorGain">
            <summary>
            Gets the Search Initiator Gain for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.RepeaterMode">
            <summary>
            Gets the Repeater mode of the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.SyncConfirmTimeout">
            <summary>
            Gets the Sync Confirm Timeout in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.FrameNotOkTimeout">
            <summary>
            Gets the Frame Not OK timeout in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.NotAddressedTimeout">
            <summary>
            Gets the Not Addressed timeout in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.SearchInitiatorTimeout">
            <summary>
            Gets the Not Addressed timeout in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.LocalMACAddress">
            <summary>
            Gets the local MAC Address of the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.LocalSystemTitle">
            <summary>
            Gets the local system title for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.InitiatorMACAddress">
            <summary>
            Gets the Search Initiator's MAC Addres for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.InitiatorSystemTitle">
            <summary>
            Gets the Search Initiator's system title for the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.CellID">
            <summary>
            Gets the Cell ID of the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.ElectricalPhaseDelta">
            <summary>
            Gets the Electrical Phase Delta of the PLAN module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.Channel0LinkAttenuation">
            <summary>
            Gets the Link Attenuation (signal) for Channel 0 in dB
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.Channel1LinkAttenuation">
            <summary>
            Gets the Link Attenuation (signal) for Channel 1 in dB
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.Channel0Noise">
            <summary>
            Gets the Noise Level for Channel 0 in dBuV
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.Channel1Noise">
            <summary>
            Gets the Noise Level for Channel 1 in dBuV
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.CreditLevel">
            <summary>
            Gets the Credit Level
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.Table2194">
            <summary>
            Gets the Table 2194 Comm Module Table ID object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.PLANTable2210">
            <summary>
            Gets the PLAN Table 2210 object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.PLANTable2211">
            <summary>
            Gets the PLAN Table 2211 object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.PLANTable2212">
            <summary>
            Gets the PLAN Table 2212 object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANCommModule.PLANTable2215">
            <summary>
            Gets the PLAN Table 2215 object
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANCommModule">
            <summary>
            Comm Module object for an RFLAN module
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current sessions</param>
            <param name="amiDevice">The current device object.</param>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.SetPreferredCellID(System.UInt32)">
            <summary>
            This method sets the preferred cell ID for the RFLAN.  The comm module 
            will try for this cell for about 10 minutes before it will clear the cell
            ID out and try all cells.
            </summary>
            <param name="uiCellID">The preferred cell ID.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.ResetC1222Stack">
            <summary>
            This method resets the C12.22 stack.  
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.ForceNetRegistration">
            <summary>
            This method forces a NET registration. 
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.ResetRFLANMCU">
            <summary>
            This method resets RFLAN MCU 
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.RefreshRFLANInfo">
            <summary>
            This method reads the RFLAN Info table, mfg. table 2068.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.SetRFLANUtilityID(System.Byte)">
            <summary>
            This method sets the RFLAN utility ID without writing to mfg. table 13 and 
            causing a 3-button reset.  
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANCommModule.SetRFLANLevel(System.Byte)">
            <summary>
            Sets the cell switch parameter selection in the expansion control bits of mfg table 73.
            We want to set bits 4 and 5 in the expansion control bits byte and leave the rest of the
            bits unchanged.  Of the 4 possible combinations, only 2 and 3 should be allowed.  Other
            values have not been tested.
            Hysteresis=400;Level=0;GPD=0;CSI=128 (00)
            Hysteresis=500;Level=64;GPD=1;CSI=128 (01)
            Hysteresis=400;Level=64;GPD=1;CSI=128 (10)
            Hysteresis=400;Level=0;GPD=1;CSI=128 (11)
            </summary>
            <param name="byCellSwitchParamByte">cell switch parameter value. Only 2 and 3 are allowed</param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.SCMERTID">
            <summary>
            Gets the SCM ERT ID from the RFLAN module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.IsHighDataRate">
            <summary>
            Gets whether or not the RFLAN Module is using High Data Rate
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.MACAddress">
            <summary>
            Gets the RFLAN MAC Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.MACAddressFromFullRead">
            <summary>
            Gets the RFLAN MAC Address from a full table read rather than an offset read.
            This was written for automated testing. Otherwise, use MACAddress
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.MACAddressNoRead">
            <summary>
            Property to retrieve the RFLAN MAC address without a table read.  This property expects
            an independant table read to have already been performed by calling RefreshRFLANInfo()
            first.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.ITPTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.ITPTimeFromFullRead">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.IsRegistered">
            <summary>
            Gets whether or not the Comm Module is currently registered.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.IsNetRegistered">
            <summary>
            Gets whether or not the Comm Module is net registered.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.NetRoutingCount">
            <summary>
            Gets Net Routing Count.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.RFLANLevelFromOffsetRead">
            <summary>
            Property to retrieve the RFLAN level directly instead of through the display 
            vendor field 1.  It should not be used elsewhere unless a conscience decision is
            made to use this value instead of the level returned from the vendor field.  Using 
            it could create a discrepancy in the level shown to the user.  Use the property, 
            CommModuleLevel, instead.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.RFLANLevelNoRead">
            <summary>
            Property to retrieve the RFLAN level without a table read.  This property expects
            an independant table read to have already been performed by calling RefreshRFLANInfo()
            first.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.RFLANNeighbors">
            <summary>
            Gets the RFLAN neighbor list.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.RFLANFactoryConfigUtilityID">
            <summary>
            The Utility ID from the RFLAN Factory Config Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.RFLANCellSwitchParameterSelection">
            <summary>
            Gets the cell switch parameter selection from mfg table 73.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.IsRadioOn">
            <summary>
            Gets whether or not the comm module radio is on
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.Table2068">
            <summary>
            Gets the RFLAN Information table object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.Table2078">
            <summary>
            Gets the Table CRFLANMfgTable2078 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.Table2113">
            <summary>
            Gets the Reg Copy RFLAN Factory Config Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANCommModule.Table2121">
            <summary>
            Gets the RFLAN Factory Config Table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IClientMetering">
            <summary>
            Interface which needs to be implemented by a device capable of supporting
            HAN Clients
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IClientMetering.ClientMeters">
            <summary>
            Client data retrieved from mfg table 2101
            </summary>
            <returns>list of readings along with tamper information and the customer id</returns>
        </member>
        <member name="P:Itron.Metering.Device.IClientMetering.ClientConfigCommands">
            <summary>
            Essentially a dump of manufacturer's table 2100, this property will
            give users a way to view the queued up client meter commands.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IClientMetering.SetClientMeterTime(System.UInt64)">
            <summary>
            Tells the client to set its internal clock to the date
            time specified.  The time parameter will be constructed by the
            electric meter at the time the command is sent
            </summary>
            <param name="ulClientAddr">
            MAC address of the client to which to send the command
            </param>
            <returns>ClientMeterCmdResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.IClientMetering.SetCollectionConfig(System.UInt64,System.Byte,System.Byte)">
            <summary>
            Configures how the Gas/Water meter is to collect its meter data
            </summary>
            <param name="ulClientAddress">
            MAC address of the client to which to send the command
            </param>
            <param name="byDFTHour">
            Daily Freeze Hour - the hour at which the daily consumption readings are read
            </param>
            <param name="byReadingType">
            Current Consumption and DFT readings (0x00), 
            Hourly interval data (0x01), 
            Daily Interval data (0x02)
            </param>
            <returns>ClientMeterCmdResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.IClientMetering.SetDataDeliveryConfig(System.UInt64,System.Byte,System.Byte)">
            <summary>
            Configures the schedule by which the Gas/Water meter
            will wake up and send its meter data to the electric meter
            </summary>
            <param name="ulClientAddress">
            MAC address of the client to which to send the command
            </param>
            <param name="byWakeUpHour">
            Hour for wake up and data delivery: midnight is 0, 11 pm is 23
            </param>
            <param name="byFrequency">
            Whether the client should wake up once or twice a day. 1 => every 12 hours;
            0 => every 24 hours.
            </param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.eNodeType">
            <summary>
            Enumerates the types of Zigbee nodes.  Gas meters and, eventually, 
            water meters are the only types that will have client data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.ElectricMeter">
            <summary>
            Electric meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.CellRelay">
            <summary>
            Cell relay
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.GasMeter">
            <summary>
            Gas meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.WaterMeter">
            <summary>
            Water meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.HHC">
            <summary>
            Hand Held Computer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.ComvergeGateway">
            <summary>
            Comverge Gateway
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.GasRangeExtender">
             <summary>
            Gas Range Extender
             </summary>
        </member>
        <member name="F:Itron.Metering.Device.eNodeType.Other">
            <summary>
            All other types
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.eZigbeeAppCmds">
            <summary>
            Enumeration of the Zigbee Application Level Commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.ACK">
            <summary>
            General purpose ACK
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetDateTime">
            <summary>
            Sets the date and time in a client
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetCollectionCfg">
            <summary>
            Configures how the Gas/Water meter is to collect its meter data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetDataDeliveryCfg">
            <summary>
            Configures when the Gas/Water meter is to wake up and send its data
            to the electric meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetTimeoutDuration">
            <summary>
            Configures how long the Gas/Water meter will wait before assuming
            a communications failure with the Electric meter has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetDateTime">
            <summary>
            Returns the current date and time in the Gas/Water meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetCollectionCfg">
            <summary>
            Returns the configuration for collecting the Gas/Water meter data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetDataDeliveryCfg">
            <summary>
            Returns the configuration for the Gas/Water meter wake up time.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetTimeoutDuration">
            <summary>
            Returns the configuration of how long the Gas/Water meter will wait
            before assuming a communication failure with the Electric meter has
            occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.ForceDecommission">
            <summary>
            Instructs the Gas or Water meter to leave the current Network
            (PAN ID) and reassociate with another Electric Meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetCfgBlock1">
            <summary>
            Provides the ability to send a block of configuration (Programming)
            data during the meter installation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetCfgBlock1">
            <summary>
            Retrieves the block of configuration (Programming) data that was
            set in the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetHighAppSecKey">
            <summary>
            Alters the upper half of the 128-bit Application Security Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetLowAppSecKey">
            <summary>
            Alters the lower half of the 128-bit Application Security Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetHighNetSecKey">
            <summary>
            Alters the upper half of the 128-bit Network Level Security Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetLowNetSecKey">
            <summary>
            Alters the lower half of the 128-bit Network Level Security Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetHandlerCfg">
            <summary>
            Sets the variables used to control sensor switch handling 
            sensitivity
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetHandlerCfg">
            <summary>
            Returns the variables used to control sensor switch handling 
            sensitivity
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetRFRetry">
            <summary>
            Sets the variables used to control the RF sequencing under error 
            conditions
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetRFRetry">
            <summary>
            Retrieves the RF retry configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.KeepAlive">
            <summary>
            Notifies the Gas/Water meter that there are no additional commands
            to be processed this cycle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.NewAppKeyActivate">
            <summary>
            Notifies the Gas/Water meter to immediately start utilizing the
            new Application Level Security Key
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.SetInitConsumption">
            <summary>
            Allows the HHC to set the initial consumption value to match 
            current dial readings
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.ReadFirmwareVersion">
            <summary>
            Gets the firmware version of the gas module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetMeterDataLatest">
            <summary>
            Gets consumption data only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetMeterDataHourly">
            <summary>
            Consumption data with hourly interval data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetMeterDataDaily">
            <summary>
            Consumption data with daily DFT reads
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetSEMeterDataLatest">
            <summary>
            Gets the consumption data using the SE Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetSEMeterDataHourly">
            <summary>
            Consumption data with hourly interval data (Using SE Profile)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetSEMeterDataDaily">
            <summary>
            Consumption data with daily DFT reads (Using SE Profile)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetBatteryInformation">
            <summary>
            Gets information on the battery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.GetGasRangeExtenderData">
            <summary>
            Gets Gas Range Extender status and child data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.eZigbeeAppCmds.NAK">
            <summary>
            General purpose NAK
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientMeter">
            <summary>
            Represents all the data available in table 2101 (HAN Client Data Table) 
            for a single client
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.ProcessClientData(System.Collections.Generic.List{Itron.Metering.Device.HANClientDataRcd})">
            <summary>
            This static method retrieves data from mfg table 2101 and processes
            it into Client Meter objects.
            </summary>
            <param name="lstRcds">A list of HANClientDataRcds.</param>
            <returns>a list of ClientMeter objects.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.MACAddress">
            <summary>
            MAC address of the client this block of data belongs to.  The MAC
            address is an 8-byte identifier assigned at the factory which uniquely 
            identifies the client
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.NodeType">
            <summary>
            Translates the node type enum into a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.CustomerID">
            <summary>
            4-byte customer id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.TimeRecorded">
            <summary>
            The time at which the electric meter recorded the client meter readings
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.LatestConsumption">
            <summary>
            Value and timestamp for the latest consumption reading
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.DFTConsumption">
            <summary>
            Value and timestamp for the reading that occurred at the daily
            freeze time.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeter.TamperIndicators">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeter.CommandResponses">
            <summary>
            List of command responses.  The list could be empty
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.TranslateIntervalReadingSpecialValue(System.UInt32)">
            <summary>
            Translates special IPP Interval Values to a readable status
            </summary>
            <param name="value">The value to translate</param>
            <returns>The readable status</returns>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.DetermineNodeType(System.UInt64)">
            <summary>
            Extracts the client node type from the MAC address passed in and
            translates the type into a string
            </summary>
            <param name="ulMACAddr"></param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.ManipulateDateTime(Itron.Metering.Communications.PSEM.PSEMBinaryReader@)">
            <summary>
            Translates the seconds since 1970 into a datetime value
            </summary>
            <param name="BinReader">
            reference to the binary reader that has access to the data
            </param>
            <returns>the datetime value calculated from the input</returns>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.InterpretBCDValue(System.Byte[])">
            <summary>
            Translates the array of bytes representing a BCD value into an 
            unsigned long
            </summary>
            <param name="abyBCDValue">BCD value contained in an array of bytes</param>
            <returns>unsigned long value of the BCD quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.TranslateErrorCode(System.Byte)">
            <summary>
            Translates a Zigbee command error code into a string description
            </summary>
            <param name="bytErrorCode">Zigbee command error code</param>
            <returns>Error description</returns>
        </member>
        <member name="M:Itron.Metering.Device.ClientMeter.TranslateScaleFactor(System.Byte)">
            <summary>
            The gas consumption reading payload has a field called Consumption
            Normalization Value, the low nibble of which gives us the digits
            to the right of the decimal point and is a scaling factor
            </summary>
            <param name="bytScale">the lower nibble of the Consumption Normalization Value</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.ClientMeterReading">
            <summary>
            Class which encapsulates a single water or gas reading as a value and
            timestamp pair.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeterReading.Value">
            <summary>
            Value of the reading
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeterReading.Timestamp">
            <summary>
            Time at which the reading occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeterReading.Units">
            <summary>
            The units to use when displaying the reading
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientMeterReading.Status">
            <summary>
            Gets the status for the reading
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientCommandResponse">
            <summary>
            Class that represents the information available in a command response from 
            a client meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientCommandResponse.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientCommandResponse.GetCommandName(Itron.Metering.Device.eZigbeeAppCmds)">
            <summary>
            Takes a command id enum as input and returns the description of the
            command
            </summary>
            <param name="eCmd">eZigbeeAppCmds</param>
            <returns>command description</returns>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.CommandName">
            <summary>
            Description of the command
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.Success">
            <summary>
            Boolean which tells whether or not the command succeeded
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.Data">
            <summary>
            Summary of the data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.HourlyReadings">
            <summary>
            List of hourly readings.  This list could be empty.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.DailyReadings">
            <summary>
            List of daily readings.  This list could be empty.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCommandResponse.ClientRangeExtenderRecord">
            <summary>
            Client Range Extender Record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientRangeExtenderRcd">
            <summary>
            Class that represents a single Client Range Extender (24ZR) record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientRangeExtenderRcd.Alarms">
            <summary>
            Gas Range Extender Alarm Flags
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientRangeExtenderRcd.Alarms.None">
            <summary>
            None selected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientRangeExtenderRcd.Alarms.BatteryAlarm">
            <summary>
            Battery Alarm
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientRangeExtenderRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.HasBatteryAlarm">
            <summary>
            Has Battery Alarm
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.AlarmFlags">
            <summary>
            Alarm Flags
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.TotalOnTime">
            <summary>
            Total on time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.NetworkAccessTamper">
            <summary>
            Network Access Tamper
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.ChildCount">
            <summary>
            Child count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderRcd.Children">
            <summary>
            Children
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientRangeExtenderChildRcd">
            <summary>
            Class that represents a single Client Range Extender (24ZR) Child record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ClientRangeExtenderChildRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderChildRcd.MACAddress">
            <summary>
            MAC Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientRangeExtenderChildRcd.RSSI">
            <summary>
            RSSI
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.EDLSections">
            <summary>
            Enumeration to used to determine what to include in an EDL file. 
            Configuration and billing data is assumed to always be included.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.None">
            <summary>
            No extra tables will be included.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.HistoryLog">
            <summary>
            Include History and Event log tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.LoadProfile">
            <summary>
            Include Load Profile tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.VoltageMonitoring">
            <summary>
            Include Voltage Monitoring tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.NetworkTables">
            <summary>
            Include LAN and HAN network tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.LANandHANLog">
            <summary>
            Include LAN and HAN log tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.EDLSections.InstrumentationProfile">
            <summary>
            Include Instrumentation Profile tables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BlocksForPartialConfiguration">
            <summary>
            Enumeration to used to determine what configuration blocks
            to write to during a partial configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlocksForPartialConfiguration.ExtendedEnergyAndLoadProfile">
            <summary>
            Reconfigure Non-billing Energy and Load Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlocksForPartialConfiguration.InstrumentationProfile">
            <summary>
            Reconfigure Instrumentation Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlocksForPartialConfiguration.ExtendedVoltageMonitoring">
            <summary>
            Reconfigure Extended Voltage Monitoring
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlocksForPartialConfiguration.ExtendedSelfRead">
            <summary>
            Reconfigure Extended Self Read
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICreateEDL">
            <summary>
            Interface for devices that can create an EDL file
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICreateEDL.CreateEDLFromMeter(System.String)">
            <summary>
            Creates an EDL file from the device tables.
            </summary>
            <param name="FileName">Path to the file where the EDL file will be written.</param>
            <returns>CreateEDLResult Code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICreateEDL.CreateEDLFromMeter(System.String,Itron.Metering.Device.EDLSections)">
            <summary>
            Creates an EDL file with the specified sections.
            </summary>
            <param name="FileName">Path to the file where the EDL file will be written.</param>
            <param name="IncludedSections">The sections to include in the EDL file.</param>
            <returns>CreateEDLResult Code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICreateEDL.CreateEDLFromMeter(System.String,Itron.Metering.Device.EDLSections,System.Func{System.Boolean})">
            <summary>
            Creates an EDL file with the specified sections.
            </summary>
            <param name="fileName">Path to the file where the EDL file will be written.</param>
            <param name="includedSections">The sections to include in the EDL file.</param>
            <param name="logoffAndLogon">Method to logoff and log back on to meter.</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.IPending">
            <summary>
            Interface which needs to be implemented by a device capable of 
            supporting pending tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPending.LastActivationDate">
            <summary>
            Date of last pending table activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPending.PendingTableData">
            <summary>
            Returns a list representing the pending table activation records
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPending.ActivatePendingTable(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Activates the pending table with the specified Event Record
            </summary>
            <param name="pendingEvent">The Event Record for the event to activate</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPending.ClearPendingTable(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Clears the pending table with the specified Event Record
            </summary>
            <param name="pendingEvent">The Event Record for the event to clear</param>
            <returns>ProcedureResultCodes</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPending.ClearAllPendingTables">
            <summary>
            Clears all pending tables from the meter.
            </summary>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPending.ActivateAllPendingTables">
            <summary>
            Activates all pending tables in the meter.
            </summary>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPending.FWTableStillPendingExists">
            <summary>
            Checks std table 04 to see if there is a firmware pending table waiting
            activation.
            </summary>
            <returns>True if a pending firmware table exists in table 04; false,
            otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPending.FWPendingTableDownloadComplete">
            <summary>
            Determines whether or not there is an incomplete firmware pending 
            table
            </summary>
            <returns>
            true if all firmware pending tables are complete and false otherwise
            </returns>
        </member>
        <member name="T:Itron.Metering.Device.IPendingTOU">
            <summary>
            Interface for devices that can write to the pending TOU table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPendingTOU.WritePendingTOU(System.String,System.Int32)">
            <summary>
            Writes the TOU schedule in the specified EDL file to the TOU pending table.
            </summary>
            <param name="strFileName">The EDL file that contains the TOU schedule</param>
            <param name="iSeasonIndex">The index of the season to write.</param>
            <returns>WritePendingTOUResult code.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayAdvPolyITRF">
            <summary>
            Device server class for the ITRF advanced poly meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPolyITRF.NumberOfSupportedEnergies">
            <summary>
            Gets the number of energies supported by this device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.GetEnergyQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds energy quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.GetExtendedEnergyQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds extended energy quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPolyITRF.GetExtendedLoadProfileValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds extended load profile validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayAdvPoly">
            <summary>
            Device server for the OpenWay Advanced Polyphase meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.ReconfigureSiteScan(Itron.Metering.Device.ServiceTypes,System.Single,System.Single,System.Byte,System.Single,System.Single,System.Single)">
            <summary>
            Reconfigures SiteScan information
            </summary>
            <param name="serviceType">The new service type to use.</param>
            <param name="nominalVoltage">The new nominal voltage to use.</param>
            <param name="diag1CurrentTolerance">The Diag 1 Current Tolerance</param>
            <param name="diag2VoltDeviation">The Diag 2 Voltage Deviation</param>
            <param name="diag3CurrentThreshold">The Diag 3 Current Threshold</param>
            <param name="diag4PhaseDeviation">The Diag 4 Phase Deviation</param>
            <param name="diag4CurrentThreshold">The Diag 4 Current Threshold</param>
            <returns>The result of the reconfigure</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.CoincidentValues">
            <summary>
            Gets the Coincident Values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.IsSSDiag1Enabled">
            <summary>
            Gets whether or not SiteScan Diagnostic 1 is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.IsSSDiag2Enabled">
            <summary>
            Gets whether or not SiteScan Diagnostic 2 is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.IsSSDiag3Enabled">
            <summary>
            Gets whether or not SiteScan Diagnostic 3 is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.IsSSDiag4Enabled">
            <summary>
            Gets whether or not SiteScan Diagnostic 4 is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diag1CurrentTolerance">
            <summary>
            Gets the Current Tolerance for SiteScan Diag 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diag2VoltagePhasePercentDeviation">
            <summary>
            Gets the Phase Voltage Deviation for SiteScan Diag 2 as a percentage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diag3CurrentThreshold">
            <summary>
            Gets the Current Tolerance for SiteScan Diag 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diag4CurrentPhaseDeviation">
            <summary>
            Gets the Current Phase Deviation for SiteScan Diag 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diag4MinimumCurrent">
            <summary>
            Gets the Minimum Current for SiteScan Diag 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.SRCoincidentValues(System.UInt32)">
            <summary>
            Gets the Self Read Coincident Values for the specified Self Read.
            </summary>
            <param name="uiIndex">The index of the Self Read to get.</param>
            <returns>The coincident quantities</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.DRCoincidentValues(System.UInt32)">
            <summary>
            Gets the Demand Reset Coincident Values for the specified Demand Reset.
            </summary>
            <param name="uiIndex">The index of the Demand Reset to get.</param>
            <returns>The list of coincidents.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetDemandLIDForRate(Itron.Metering.Device.LID,System.Int32)">
            <summary>
            Gets a LID value for the specified rate.
            </summary>
            <param name="originalLID">The original LID that should be changed.</param>
            <param name="iRate">The rate to change to (0 = A, 1 = B, etc)</param>
            <returns>The resulting LID</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.ResetDiagCounters">
            <summary>
            Resets the number of diagnostic counters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.ClearSiteScanSnapshots">
            <summary>
            Clears the SiteScan Snapshots
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.Diagnostics">
            <summary>
            Gets the current diagnostics data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.ServiceType">
            <summary>
            Gets the service type of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.SnapshotsSupported">
            <summary>
            Gets whether or not the meter supports snapshots.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.SnapshotCount">
            <summary>
            Gets the number of available snapshots.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayAdvPoly.SiteScanSnapshots">
            <summary>
            Gets the list of snapshots.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetServiceTypeDescription(Itron.Metering.Device.ServiceTypes)">
            <summary>
            Returns a string representing the service type
            </summary>
            <param name="service"></param>
            <returns>Service Type</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetDemandQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds demand quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetDisplayErrorsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display errors validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayAdvPoly.GetSiteScanValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display errors validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayBasicPolyITRE">
            <summary>
            Device server class for the ITRE basic polyphase meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPolyITRE.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPolyITRE.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPolyITRE.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPolyITRE.GetExtendedEnergyQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds extended energy quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPolyITRE.GetExtendedLoadProfileValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds extended load profile validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayBasicPoly">
            <summary>
            Device server for the OpenWay Basic Polyphase meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.ReconfigureSiteScan(Itron.Metering.Device.ServiceTypes,System.Single)">
            <summary>
            Reconfigures SiteScan information
            </summary>
            <param name="serviceType">The new service type to use.</param>
            <param name="nominalVoltage">The new nominal voltage to use.</param>
            <returns>The result of the reconfigure</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.ReconfigurePolyLEDQuantity(Itron.Metering.DeviceDataTypes.LEDQuantity,System.UInt16)">
            <summary>
            Reconfigures the LED Quantity on a Polyphase meter.
            </summary>
            <param name="quantity">The quantity to reconfigure.</param>
            <param name="pulseWeight">The pulse weight to use. Note: The pulse weight will be divided by 40 to get the actual value.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetCurrentPolyLEDQuantity">
            <summary>
            Gets the current LED Quantity
            </summary>
            <returns>The currently pulsing quantity or null if the procedure fails.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetCurrentPolyPulseWeight">
            <summary>
            Gets the current pulse weight
            </summary>
            <returns>The current pulse weight or null if the procedure fails</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.ConfigureBaseEnergies(System.Collections.Generic.List{Itron.Metering.Device.BaseEnergies})">
            <summary>
            Configures the meter to use the specified base energies
            </summary>
            <param name="baseEnergies">The base energy values to use.</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.EnterExitTestMode(Itron.Metering.Device.CENTRON_AMI.TestMode,System.Byte)">
            <summary>
            This method executes the enter/exit test mode.
            </summary>
            <param name="modeType">TestMode Type</param>
            <param name="timeInTestMode">time for the meter to remain in test minutes</param>
            <returns>The result of the test mode operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.EnterExitTestMode(Itron.Metering.Device.CENTRON_AMI.TestMode,System.Byte,System.Single)">
            <summary>
            This method executes the enter/exit test mode.
            </summary>
            <param name="modeType">TestMode Type</param>
            <param name="timeInTestMode">time for the meter to remain in test minutes</param>
            <param name="pulseWeight">actual test mode kh</param>
            <returns>The result of the test mode operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.EnterExitTestMode(Itron.Metering.Device.CENTRON_AMI.TestMode,System.Byte,System.Single,System.UInt32)">
            <summary>
            This method executes the enter/exit test mode.
            </summary>
            <param name="modeType">TestMode Type</param>
            <param name="timeInTestMode">time for the meter to remain in test minutes</param>
            <param name="pulseWeight">actual test mode kh</param>
            /// <param name="pulseQuantity">Quantity to be measured in test mode</param>
            <returns>The result of the test mode operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.ConfigureIO(Itron.Metering.DeviceDataTypes.KYZData)">
            <summary>
            This method updates the IO configuration in the meter.
            </summary>
            <param name="IOConfig">KYZ configuration data object.</param>
            <returns>The result of the configuration.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetRequiredEnergiesFromProgram(System.String)">
            <summary>
            Gets the list of Energies required by the program.
            </summary>
            <param name="programFile">The path to the program file</param>
            <returns>The list of required energies</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.MeterForm">
            <summary>
            Gets the form of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.ConfiguredServiceType">
            <summary>
            Gets the configured Service Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.ConfiguredNominalVoltage">
            <summary>
            Gets the configured Nominal Voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.DelayUntillServiceSense">
            <summary>
            Gets the number seconds to delay untill service sense.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.TestQuantity">
            <summary>
            Property to retrieve Test Quantity out of the Metrology Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.PulseWeightTestKh">
            <summary>
            Property to retrieve Test Kh out of the Metrology Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.ToolboxData">
            <summary>
            Gets the current toolbox data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.Table2048">
            <summary>
            Gets the Table 2048 object for the current device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.SiteScanConfig">
            <summary>
            Gets the SiteScan configuration object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.Table2091">
            <summary>
            Gets the SiteScan Toolbox table 2091 and creates it if necessary
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.Table2170">
            <summary>
            Gets the Meter CPC table and creates it if needed. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.Table2088">
            <summary>
            Gets the MFG Table 2088 object
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.DetermineEnergyDivisor">
            <summary>
            Determines the Energy Divisor value for the meter
            </summary>
            <returns>The Energy Divisor to use</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.CalculatePulseWeightValueForLEDReconfigureBug(System.UInt16)">
            <summary>
            Calculates the pulse weight that should be used in cases where the LED Reconfigure bug was present
            </summary>
            <param name="unmodifiedPulseWeight">The unmodified pulse weight.</param>
            <returns>The modified pulse weight</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly.NumberofBaseConfigurableEnergies">
            <summary>
            Gets the number of energies that can be configured to the base by this device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.Centron.CentronTables,Itron.Common.C1219Tables.Centron.CentronTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetDemandQuantityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds demand quantity validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetDeviceMultiplierValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds device multiplier validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetAdditionalDisplayOptionsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display options validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly.GetLEDValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds LED validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="T:Itron.Metering.Device.PhaseRotation">
            <summary>
            Phase rotations.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PhaseRotation.ABC">
            <summary>
            ABC Phase Rotation.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PhaseRotation.CBA">
            <summary>
            CBA Phase Rotation.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PhaseRotation.NoRotation">
            <summary>
            No phase roation (Single Phase)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PhaseRotation.Any">
            <summary>
            Can use any phase rotation
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ServiceTypes">
            <summary>
            Service Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.ThreeElem3Phase4WireWYE">
            <summary>
            3 Element 3 Phase 4 Wire WYE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoAndHalfElem3Phase4WireWYE6S46S">
            <summary>
            2.5 Element 3 Phase 4 Wire WYE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoElemNetwork">
            <summary>
            2 Element Network
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.ThreeElem3Phase4WireDelta">
            <summary>
            3 Element 3 Phase 4 Wire Delta
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoElem3Phase4WireWYE">
            <summary>
            2 Element 3 Phase 4 Wire WYE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoElem3Phase3WireDelta">
            <summary>
            2 Element 3 Phase 3 Wire Delta
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoElem3Phase4WireDelta">
            <summary>
            2 Element 3 Phase 4 Wire Delta
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoElemSinglePhase">
            <summary>
            2 Element Single Phase
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.OneElemSinglePhase3Wire">
            <summary>
            1 Element Single Phase 3 Wire 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.OneElemSinglePhase2Wire">
            <summary>
            1 Element Single Phase 2 Wire
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.TwoAndHalfElem3Phase4WireWYE9S">
            <summary>
            2.5 Element 3 Phase 4 Wire Wye – 9S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ServiceTypes.AutoServiceSense">
            <summary>
            Auto Service Sense
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048_OpenWayPoly">
            <summary>
            Table 2048 class for the OpenWay PolyPhase meters.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_OpenWayPoly.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayPolySiteScanConfig">
            <summary>
            Sub table for the SiteScan configuration.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolySiteScanConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="offset">The offset of the sub table into 2048</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolySiteScanConfig.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolySiteScanConfig.Write">
            <summary>
            Writes the subtable to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag1Enabled">
            <summary>
            Gets whether or not Diagnostic 1 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag2Enabled">
            <summary>
            Gets whether or not Diagnostic 2 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag3Enabled">
            <summary>
            Gets whether or not Diagnostic 3 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag4Enabled">
            <summary>
            Gets whether or not Diagnostic 4 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag5Enabled">
            <summary>
            Gets whether or not Diagnostic 5 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDaig6Enabled">
            <summary>
            Gets whether or not Diagnostic 6 is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag1SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 1 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag2SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 2 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag3SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 3 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag4SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 4 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDiag5SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 5 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsDaig6SnapshotEnabled">
            <summary>
            Gets whether or not Diagnostic 6 Snapshot is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag1CurrentLeadTolerance">
            <summary>
            Gets or sets the Current Lead Tolerance for Diag 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag1CurrentLagTolerance">
            <summary>
            Gets or sets the Current Lag Tolerance for Daig 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag1VoltageLeadTolerance">
            <summary>
            Gets or sets the Voltage Lead Tolerance for Diag 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag1VoltageLagTolerance">
            <summary>
            Gets or sets the Voltage Lag Tolerance for Diag 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag2VoltagePercentDeviation">
            <summary>
            Gets or sets the Voltage Percent Deviation for Diag 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag3CurrentThreshold">
            <summary>
            Gets or sets the Current Threshold for Diag 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag4CurrentPhaseDeviation">
            <summary>
            Gets or sets the Current Phase Deviation for Diag 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsPhaseAEnabled">
            <summary>
            Gets or sets whether or not Phase A is enabled for Diag 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsPhaseBEnabled">
            <summary>
            Gets or sets whether or not Phase B is enabled for Diag 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.IsPhaseCEnabled">
            <summary>
            Gets or sets whether or not Phase C is enabled for Diag 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.VoltageThreshold">
            <summary>
            Gets or sets the Voltage Threshold used for Missing Phase Non Fatal
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.PhaseRotation">
            <summary>
            Gets or sets the Phase Rotation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.ServiceType">
            <summary>
            Gets or sets the Service Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.DelayUntillServiceSense">
            <summary>
            Gets or sets the amount of time to delay before service sense
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag4MinCurrent">
            <summary>
            Gets or sets the Minimum Current for diag 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.NominalVoltage">
            <summary>
            Gets or sets the nominal voltage. 0 means sense nominal voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag6MinDuration">
            <summary>
            Gets or sets the minimum duration for Diag 6
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag6MaxTHDV">
            <summary>
            Gets or sets the maximum THD V per phase
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag6MaxTDDI">
            <summary>
            Gets or sets the maximum TDD I per phase for Diag 6
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolySiteScanConfig.Diag5DCVoltageDetectionThreshold">
            <summary>
            Gets or sets the DC Voltage Detection Threshold for Diag 5
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolySiteScanConfig.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayBasicPoly_HistoryLogConfig">
            <summary>
            Class that represents the history log configuration data stored in table 2048
            for the CENTRON_AMI meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for CENTRON_AMI History Log Config class
            </summary>
            <param name="psem"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly_HistoryLogConfig.HistoryLogEventList">
            <summary>
            Returns the list of History Log event specfic to the CENTRON_AMI
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayBasicPoly_DemandConfig">
            <summary>
            This DemandConfig class handles the reading of the demand config 
            block of 2048. The reading of this table in the meter will be implicit.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly_DemandConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly_DemandConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayBasicPoly_DemandConfig.Demands">
            <summary>
            Gets the list of configured demands as LID numbers
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayBasicPoly_DemandConfig.ParseData">
            <summary>
            Parses the data for the AMI meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary">
            <summary>
            Constructs a dictionary of Centron AMI specific events
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ICS_OFFSET">
            <summary>
            ICS Offset (3584)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents">
            <summary>
            History Events Enumeration
            </summary>
            <remarks>
            If you add any events to this enumeration, be sure to add them to
            HistoryLogEventList property in respective MFGTable2048 classes as well
            as adding a dictionary entry in the appropriate EventDictionary.
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.UNINTELLIGIBLE_MESSAGE_RECEIVED">
            <summary>
            UNINTELLIGIBLE MESSAGE RECEIVED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FAILURE_TO_SET_METER_TIME">
            <summary>
            FAILURE TO SET METER TIME
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SYNCHRONIZATION_TIME_ERROR_IS_TOO_LARGE">
            <summary>
            SYNCHRONIZATION TIME ERROR IS TOO LARGE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_COMMUNICATION_FAULT">
            <summary>
            METER COMMUNICATION FAULT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_COMMUNICATION_REESTABLISHED">
            <summary>
            METER COMMUNICATION REESTABLISHED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_OUTAGE_DETECTED">
            <summary>
            POWER OUTAGE DETECTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_ERROR_GREATER_THAN_MAXIMUM_CORRECTABLE_TIME_ERROR">
            <summary>
            METER ERROR GREATER THAN MAXIMUM CORRECTABLE TIME ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_PASSWORD_RECOVERY_DETECTED">
            <summary>
            TAMPER DETECTION - PASSWORD RECOVERY DETECTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_TOTAL_DEMAND_RESETS">
            <summary>
            TOTAL DEMAND RESETS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_OPTICAL_PORT_SESSION_IN_PROGRESS">
            <summary>
            OPTICAL PORT SESSION IN PROGRESS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_DEVICE_RECONFIGURED_REPROGRAMMED">
            <summary>
            DEVICE RECONFIGURED REPROGRAMMED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_SERVICE_ERROR_DETECTED">
            <summary>
            SERVICE ERROR DETECTED (KV2C ONLY)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_PASSWORD_FAILURE">
            <summary>
            PASSWORD FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_POWER_OUTAGES_RECOGNIZED_BY_SSI_MODULE">
            <summary>
            POWER OUTAGES RECOGNIZED BY ICM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_POWER_OUTAGES_DUE_TO_LOSS_OF_AC_POWER">
            <summary>
            POWER OUTAGES DUE TO LOSS OF AC POWER
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_TILT_SWITCH_SET">
            <summary>
            TILT SWITCH SET
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_TILT_SWITCH_CLEARED">
            <summary>
            TILT SWITCH CLEARED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_REMOTE_DISCONNECT_SWITCH_BYPASS">
            <summary>
            REMOTE DISCONNECT SWITCH BYPASS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_DETECTION_MODULE_INVERTED">
            <summary>
            MODULE INVERTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.EXTREME_TEMPERATURE_SHUTDOWN">
            <summary>
            EXTREME TEMPERATURE SHUTDOWN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.EXTREME_TEMPERATURE_INSERVICE">
            <summary>
            EXTREME TEMPERATURE INSERVICE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_IMAGE_CORRUPTED">
            <summary>
            FIRMWARE IMAGE CORRUPTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_1">
            <summary>
            POWER QUALITY DETECTION POLARITY, CROSS-PHASE, AND ENERGY FLOW (DIAGNOSTIC 1)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_2">
            <summary>
            POWER QUALITY DETECTION VOLTAGE IMBALANCE (DIAGNOSTIC 2)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_3">
            <summary>
            POWER QUALITY DETECTION INACTIVE PHASE CURRENT (DIAGNOSTIC 3)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_4">
            <summary>
            POWER QUALITY DETECTION CURRENT PHASE ANGLE (DIAGNOSTIC 4)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_5">
            <summary>
            POWER QUALITY DETECTION HIGH DISTORTION (DIAGNOSTIC 5)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_6">
            <summary>
            POWER QUALITY DETECTION UNDER VOLTAGE TEST (DIAGNOSTIC 6)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_7">
            <summary>
            POWER QUALITY DETECTION OVER VOLTAGE TEST (DIAGNOSTIC 7)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_DIAGNOSTIC_8">
            <summary>
            POWER QUALITY DETECTION HIGH IMPUTED NEUTRAL CURRENT (DIAGNOSTIC 8)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_VOLTAGE_SAG">
            <summary>
            POWER QUALITY DETECTION VOLTAGE SAG
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_VOLTAGE_SWELL">
            <summary>
            POWER QUALITY DETECTION VOLTAGE SWELL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_PASSWORDS_OUT_OF_SYNC">
            <summary>
            METER PASSWORDS OUT OF SYNC
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_RCDC_COMM_ERROR">
            <summary>
            RCDC FAULT RCDC COMM ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_SWITCH_CONTROLLER_ERROR">
            <summary>
            RCDC FAULT SWITCH CONTROLLER ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_SWITCHED_FAILED_TO_CLOSE">
            <summary>
            RCDC FAULT SWITCHED FAILED TO CLOSE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_ALTERNATE_SOURCE">
            <summary>
            RCDC FAULT ALTERNATE SOURCE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_BYPASSED">
            <summary>
            RCDC FAULT BYPASSED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_SWITCH_FAILED_TO_OPEN">
            <summary>
            RCDC FAULT SWITCH FAILED TO OPEN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_PPM_ALERT">
            <summary>
            RCDC FAULT PPM ALERT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RCDC_FAULT_MANUAL_ARM_TIMED_OUT">
            <summary>
            RCDC FAULT MANUAL ARM TIMED OUT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.AUTO_REGISTRATION">
            <summary>
            AUTO REGISTRATION (CORE)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SUCCESSFUL_TIME_SYNC_TIME_CHANGE_OCCURRED">
            <summary>
            SUCCESSFUL TIME SYNC TIME CHANGE OCCURED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_RESTORATION_DETECTED">
            <summary>
            POWER RESTORATION DETECTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.IP_ADDRESS_REPORT">
            <summary>
            IP ADDRESS REPORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.DELAYED_RESET_SSI_MODULE_ALARM">
            <summary>
            DELAYED RESET SSI MODULE ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_COMMUNICATION_STATUS_ALARM">
            <summary>
            METER COMMUNICATION STATUS ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.EXTENSIBLE_FIRMWARE_DOWNLOAD_STATUS">
            <summary>
            EXTENSIBLE FIRMWARE DOWNLOAD STATUS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SET_ACTIVE_FIRMWARE_ALARM">
            <summary>
            SET ACTIVE FIRMWARE ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_UPGRADE_DOWNLOAD_ALARM">
            <summary>
            FIRMWARE UPGRADE DOWNLOAD ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_UPGRADE_ACTIVE_ALARM">
            <summary>
            FIRMWARE UPGRADE ACTIVE ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_COPYING_FILE">
            <summary>
            FIRMWARE DOWNLOAD COPYING FILE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_CANCELING">
            <summary>
            FIRMWARE DOWNLOAD CANCELING
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_CANCELED">
            <summary>
            FIRMWARE DOWNLOAD CANCELED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_TOTAL_TIME">
            <summary>
            FIRMWARE DOWNLOAD TOTAL TIME
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_SUCCESSFUL">
            <summary>
            FIRMWARE DOWNLOAD SUCCESSFUL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_REMOVING_INACTIVE_FILES">
            <summary>
            FIRMWARE DOWNLOAD REMOVING INACTIVE FILES
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_RETRIES_EXCEEDED">
            <summary>
            FIRMWARE DOWNLOAD RETRIES EXCEEDED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_FAILED_WILL_RETRY">
            <summary>
            FIRMWARE DOWNLOAD FAILED WILL RETRY
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_INCORRECT_VERSION">
            <summary>
            FIRMWARE DOWNLOAD INCORRECT VERSION
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_FILE_EXISTS">
            <summary>
            FIRMWARE DOWNLOAD FILE EXISTS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_ACTIVATING">
            <summary>
            FIRMWARE DOWNLOAD ACTIVATING
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_SET_ACTIVE_REBOOT">
            <summary>
            FIRMWARE DOWNLOAD SET ACTIVE REBOOT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.COMM_LINK_FAILURE">
            <summary>
            COMM LINK FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_REBOOT_MODEM_NOT_RESPONDING">
            <summary>
            ICM REBOOT MODEM NOT RESPONDING
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.INITIAL_MODEM_PROVISION">
            <summary>
            INITIAL MODEM PROVISION
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MODEM_PROVISION_FAILED">
            <summary>
            MODEM PROVISION FAILED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MODEM_PROVISION_SUCCESSFUL">
            <summary>
            MODEM PROVISION SUCCESSFUL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MODEM_IDENTITY_ERROR">
            <summary>
            MODEM IDENTITY ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CDMA_SUBSCRIPTION_ERROR">
            <summary>
            CDMA SUBSCRIPTION ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MDN_LOGIN_ERROR">
            <summary>
            MDN LOGIN ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RECEIVED_SMS">
            <summary>
            RECEIVED SMS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.GATEWAY_CHANGED">
            <summary>
            GATEWAY CHANGED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CELLUAR_TIMEOUT_SENT">
            <summary>
            CELLUAR NON-COMM TIMEOUT SENT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CELLUAR_TIMEOUT_RECEIVED">
            <summary>
            CELLUAR NON-COMM TIMEOUT RECEIVED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.UNKNOWN_METER_TYPE">
            <summary>
            CAN'T UPDATE DISPLAY UNKNOWN METER TYPE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_MODEL_I_210C">
            <summary>
            METER MODEL I-210C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_MODEL_I_210">
            <summary>
            METER MODEL I-210
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_MODEL_KV2C">
            <summary>
            METER MODEL KV2C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_INVERSION_DETECTED_ON_STARTUP">
            <summary>
            METER INVERSION DETECTED ON STARTUP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MODULE_POWER_FAIL">
            <summary>
            MODULE POWER FAIL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.QUALIFIED_POWER_FAIL">
            <summary>
            QUALIFIED POWER FAIL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_HEATER_ENABLED">
            <summary>
            ICM HEATER ENABLED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_HEATER_DISABLED">
            <summary>
            ICM HEATER DISABLED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_PASSWORD_FAILED">
            <summary>
            CLI PASSWORD FAILED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_ENTERING_QUIET_MODE">
            <summary>
            ICM ENTERING QUIET MODE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_LEAVING_QUIET_MODE">
            <summary>
            ICM LEAVING QUIET MODE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MAGNETIC_SWIPE_IN_MANUFACTURING_MODE">
            <summary>
            MAGNETIC SWIPE IN MANUFACTURING MODE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MAGNETIC_SWIPE_IN_PRODUCTION_MODE">
            <summary>
            MAGNETIC SWIPE IN PRODUCTION MODE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MAGNETIC_SWIPE_IGNORED_NOT_IN_NON_COMM">
            <summary>
            MAGNETIC SWIPE IGNORED NOT IN NON-COMM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MAGNETIC_SWIPE_IGNORED_CONDITION_NOT_MET">
            <summary>
            MAGNETIC SWIPE IGNORED CONDITION NOT MET
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_LOGIN_VIA_OPTICAL_PORT">
            <summary>
            METER LOGIN VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_LOGOFF_VIA_OPTICAL_PORT">
            <summary>
            METER LOGOFF VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_LOGIN_VIA_OPTICAL_PORT">
            <summary>
            CLI LOGIN VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_LOGIN_ATTEMPTED_VIA_OPTICAL_PORT">
            <summary>
            CLI LOGIN ATTEMPTED VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_COMMAND_EXECUTED_VIA_OPTICAL_PORT">
            <summary>
            CLI COMMAND EXECUTED VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_LOCKED_OUT_TOO_MANY_LOGIN_ATTEMPTS_VIA_OPTICAL_PORT">
            <summary>
            CLI LOCKED OUT TOO MANY LOGIN ATTEMPTS VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ZIGBEE_OPTICAL_PASSTHROUGH_STARTED">
            <summary>
            ZIGBEE OPTICAL PASSTHROUGH STARTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MODEM_OPTICAL_PASSTHROUGH_STARTED">
            <summary>
            MODEM OPTICAL PASSTHROUGH STARTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.STARTED_C1218_SESSION_VIA_OPTICAL_PORT">
            <summary>
            STARTED C12.18 SESSION VIA OPTICAL PORT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_CONFIGURATION_CHANGE">
            <summary>
            ICM CONFIGURATION CHANGE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_STATE_CHANGED">
            <summary>
            ICM STATE CHANGED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_TIME_UPDATED_FROM_NETWORK">
            <summary>
            ICM TIME UPDATED FROM NETWORK
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_TIME_SET_FROM_METER">
            <summary>
            ICM TIME SET FROM METER
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TIMESYNCH_STATE_CHANGED">
            <summary>
            TIMESYNCH STATE CHANGED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_IS_DISABLED">
            <summary>
            CLI IS DISABLED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLI_IS_REVERT_ONLY">
            <summary>
            CLI IS REVERT ONLY
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LOADSIDE_VOLTAGE_WHILE_SWITCH_OPEN">
            <summary>
            LOADSIDE VOLTAGE WHILE SWITCH OPEN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LOADSIDE_VOLTAGE_WHILE_SWITCH_OPEN_CLEAR">
            <summary>
            LOADSIDE VOLTAGE WHILE SWITCH OPEN CLEAR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CELL_TOWER_CHANGES_EXCEED_THRESHOLD">
            <summary>
            CELL TOWER CHANGES EXCEED THRESHOLD
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SECTOR_CHANGES_EXCEED_THRESHOLD">
            <summary>
            SECTOR CHANGES EXCEED THRESHOLD
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ACCUMULATOR_READ_FAILURE">
            <summary>
            ACCUMULATOR READ FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CELLULAR_CONNECTION_TIMEOUT_ALARM">
            <summary>
            CELLULAR CONNECTION TIMEOUT ALARM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SMS_WAKEUP_RECEIVED">
            <summary>
            SMS WAKEUP RECEIVED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METER_MODEL_OW_CENTRON">
            <summary>
            METER MODEL OW CENTRON
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_SUCCESSFULLY_INITIALIZED_SPI_DRIVER">
            <summary>
            ERT SUCCESSFULLY INITIALIZED SPI DRIVER
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_CC1121_PART_NUMBER">
            <summary>
            ERT CC1121 PART NUMBER
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ERT_HW_SUCCESSFULLY_INITIALIZED">
            <summary>
            ERT HW SUCCESSFULLY INITIALIZED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ERT_RADIO_TURNED_OFF_IN_ERT_CFG_DATA_TABLE">
            <summary>
            ERT RADIO TURNED OFF IN ERT CFG DATA TABLE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ERT_CC1121_MANUAL_CALIBRATION_SUCCESSFUL">
            <summary>
            ERT CC1121 MANUAL CALIBRATION SUCCESSFUL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ERT_MASTER_LIST_INITIALIZATION_CREATION_FAILED">
            <summary>
            ERT MASTER LIST INITIALIZATION CREATION FAILED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ICM_CAMPING_CHANNEL">
            <summary>
            ICM camping channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ADDING_AN_ERT_METER_READING_TO_OUR_MASTER_LIST">
            <summary>
            ERT: ADDING AN ERT METER READING TO OUR MASTER LIST
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_REACHED_MAX_NUMBER_OF_ERT_METERS">
            <summary>
            ERT: REACHED MAX NUMBER OF ERT METERS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_INCOMING_ERT_PACKET_CRC_ERROR">
            <summary>
            ERT: INCOMING ERT PACKET CRC ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_CHANGING_ERT_RESTING_CHANNEL">
            <summary>
            ERT: CHANGING ERT RESTING CHANNEL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_ERT_RADIO_OFF_FREEZE_PROC_IMC_REJECTED">
            <summary>
            ERT: ERT RADIO OFF FREEZE PROC IMC REJECTED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_NUMBER_OF_ERTS_WHOSE_RECORDS_WERE_FROZEN">
            <summary>
            ERT: NUMBER OF ERTS WHOSE RECORDS WERE FROZEN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_RECEIVED_INVALID_TIME_FROM_NTP_TASK">
            <summary>
            ERT: RECEIVED INVALID TIME FROM NTP TASK
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_UNSUCCESSFUL_PDOID_READ">
            <summary>
            ERT: UNSUCCESSFUL PDOID READ
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_242_TX_FAILED">
            <summary>
            ERT 242 TX FAILED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ADDED_ERT_TO_MANAGED_LIST">
            <summary>
            Added ERT to managed list
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_TIME_SET_FAILED">
            <summary>
            ERT time set failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ICM_EVENT_LOG_CLEARED">
            <summary>
            ICM EVENT LOG CLEARED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_MOMENTARY_INTERRUPTION">
            <summary>
            POWER QUALITY DETECTION MOMENTARY INTERRUPTION
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_QUALITY_DETECTION_SUSTAINED_INTERRUPTION">
            <summary>
            POWER QUALITY DETECTION SUSTAINED INTERRUPTION
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TAMPER_TILT_SET_ON_OUTAGE">
            <summary>
            TAMPER TILT SET ON OUTAGE (REMOVAL TAMPER)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CONFIGURATION_COMMIT">
            <summary>
            CONFIGURATION COMMIT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FIRMWARE_DOWNLOAD_INITIALIZATION_FAILURE">
            <summary>
            Firmware Download: Initialization Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.HAN_FIRMWARE_DOWNLOAD_FAILURE">
            <summary>
            HAN Firmware Download Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_242_COMMAND_REQUEST">
            <summary>
            ERT 242 Command Request
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SMS_WAKEUP_IDENTITY_REQUEST_SENT">
            <summary>
            SMS Wakeup Identity Request Sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SMS_WAKEUP_IDENTITY_NOT_SENT_BECAUSE_NOT_REGISTERED">
            <summary>
            SMS Wakeup Identity Request Not Sent Because Not Registered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SMS_WAKEUP_IDENTITY_REQUEST_NOT_SENT_BECAUSE_NOT_SYNCHRONIZED">
            <summary>
            SMS Wakeup Identity Request Not Sent Because Not Synchronized
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FAILED_SECURITY_KEY_VERIFICATION">
            <summary>
            Failed Security Key Verification
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FAILED_CE_CONFIGURATION_VERIFICATION">
            <summary>
            Failed CE configuration verification
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MIGRATION_STATE_CHANGE">
            <summary>
            Migration State Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CRITICAL_PEAK_PRICING_STATUS">
            <summary>
            Critical Peak Pricing Status 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SECURITY_EVENT">
            <summary>
            Security Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_METER_STOLEN">
            <summary>
            ERT Meter Stolen
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_METER_REMOVED">
            <summary>
            ERT Meter Removed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_CONNECTION_DOWNTIME_TIME_EXCEEDED">
            <summary>
            ERT Connection Downtime  Time Exceeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_PREDICTOR_LIST_TIME_MODIFIED">
            <summary>
            ERT Predictor List Time Modified
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_MANUAL_CALIBRATION_FAILED">
            <summary>
            ERT CC1121 Manual Calibration Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ERT_100G_TRACKING_FAILED">
            <summary>
            ICM tracking 100G failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TIME_SOURCE_UNAVAILABLE">
            <summary>
            Time Source Unavailable
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SIGNING_KEY_UPDATE_SUCCESS">
            <summary>
            Signing key update success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SYMMETRIC_KEY_UPDATE_SUCCESS">
            <summary>
            Symmetric key update success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.KEY_ROLLOVER_SUCCESS">
            <summary>
            Key rollover success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.UNPROGRAMMED">
            <summary>
            UNPROGRAMMED
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RAM_FAILURE">
            <summary>
            RAM FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.ROM_FAILURE">
            <summary>
            ROM FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.NONVOLATILE_MEMORY_FAILURE">
            <summary>
            NONVOLATILE MEMORY FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.CLOCK_ERROR">
            <summary>
            CLOCK ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.MEASUREMENT_ERROR">
            <summary>
            MEASUREMENT ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LOW_BATTERY">
            <summary>
            LOW BATTERY
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LOW_LOSS_POTENTIAL">
            <summary>
            LOW LOSS POTENTIAL
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.DEMAND_OVERLOAD">
            <summary>
            DEMAND OVERLOAD
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.POWER_FAILURE">
            <summary>
            POWER FAILURE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.BAD_PASSWORD">
            <summary>
            BAD PASSWORD
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.METERING_ERROR">
            <summary>
            METERING ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.DC_DETECTED_OR_TIME_CHANGED">
            <summary>
            DC DETECTED (I-210) OR TIME CHANGED (kV2c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.SYSTEM_ERROR">
            <summary>
            SYSTEM ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.RECEIVED_KWH">
            <summary>
            RECEIVED KWH
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LEADING_KVARH">
            <summary>
            LEADING KVARH
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.LOSS_OF_PROGRAM">
            <summary>
            LOSS OF PROGRAM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.HIGH_TEMP_OR_FLASH_CODE_ERROR">
            <summary>
            HIGH TEMP (I-210) OR FLASH CODE ERROR (kV2c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.TIME_CHANGED_STATUS">
            <summary>
            Time Changed Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FLASH_CODE_ERROR">
            <summary>
            FLASH CODE ERROR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CommModuleHistoryEvents.FLASH_DATA_ERROR">
            <summary>
            FLASH DATA ERROR
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTMaxCountInfo">
            <summary>
            Reached the MAX Number of 100G Meters Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTMaxCountInfo.UnmanagedList">
            <summary>
            Unmanaged List
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTMaxCountInfo.ManagedList">
            <summary>
            Managed List
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTMaxCountInfo.ConsumptionData">
            <summary>
            Consumption Data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTPredictorListTimeModifiedInfo">
            <summary>
            ERT Predictor List Time Modified Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTPredictorListTimeModifiedInfo.ForceTimeSync">
            <summary>
            Force Time Sync
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTPredictorListTimeModifiedInfo.NTPTimeDrift">
            <summary>
            NTP Time Drift
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTDeviceClass">
            <summary>
            ERT Device Class Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTDeviceClass.ERT100W">
            <summary>
            100W
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTDeviceClass.ERT100G">
            <summary>
            100G
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.ERTDeviceClass.ERT100WPlus">
            <summary>
            100W+
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState">
            <summary>
            Migration State Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.TMS">
            <summary>
            Initial state, using TMS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.Start">
            <summary>
            Start migration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.VerifySecurity">
            <summary>
            Verify security
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.VerifyConfig">
            <summary>
            Verify configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.CERegister">
            <summary>
            Register and authenticate with CE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.VerifyRegistration">
            <summary>
            Verify registeration with CE was successful
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.DisableTMS">
            <summary>
            Disable TMS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.UsingCE">
            <summary>
            Using CE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.Error">
            <summary>
            Error state
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.MigrationState.Unknown">
            <summary>
            Unknown state
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus">
            <summary>
            CPP Status Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.Configured">
            <summary>
            Configured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.Waiting">
            <summary>
            Waiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.WaitingEOI">
            <summary>
            Waiting for End of Interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.DoneEOI">
            <summary>
            Done awaiting EOI
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.Done">
            <summary>
            Done
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.CPPStatus.NotInit">
            <summary>
            Not initialized
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.FWType">
            <summary>
            Firmware Type Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FWType.CommModule">
            <summary>
            Comm Module Firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FWType.CellularModem">
            <summary>
            Cellular Modem firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FWType.GEMeter">
            <summary>
            GE I210/KV2c Meter Firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FWType.GEMeterProgram">
            <summary>
            GE I210/KV2c Meter Program
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason">
            <summary>
            Firmware Failure Reason Event argument data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.BadFileSize">
            <summary>
            Bad File Size
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.BadFWType">
            <summary>
            Bad Firmware Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.BadCRC">
            <summary>
            Bad CRC
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.RetryFailure">
            <summary>
            Retry Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.InsufficientBlocks">
            <summary>
            Insufficient Blocks
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.BadHash">
            <summary>
            Bad Hash
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.BadInterface">
            <summary>
            Bad Interface
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.SameVersion">
            <summary>
            Same Version
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.ActivationInProgress">
            <summary>
            Activation In Progress
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.FilePrefillFailure">
            <summary>
            File Prefill Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.HANActivationFailure">
            <summary>
            HAN Activation Failure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICS_Gateway_EventDictionary.FirmwareFailureReason.HANActivationInProgress">
            <summary>
            HAN Activation in Progress
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway_EventDictionary.#ctor">
            <summary>Constructs a dictionary of M3 Gateway specific events</summary>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway_EventDictionary.TranslatedEventData(Itron.Metering.Device.HistoryEntry,Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            TranslateEventData - Takes the Event Data and translates it to something human readable
            </summary>
            <param name="HistoryEvent">The Event Code of the Event the Data belongs to</param>
            <param name="ArgumentReader">The raw data we are translating</param>
            <returns>The Human Readable text</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICS_Gateway_HistoryLogConfig">
            <summary>
            Class that represents the ICS history log configuration data stored in table 2523
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for ICS History Log Config class
            </summary>
            <param name="psem"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.ICS_Gateway_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITRD">
            <summary>
            Device server class for the ITRD single phase meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRD.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRD.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRD.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayITRJ">
            <summary>
            Device server class for the ITRJ single phase cellular meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <param name="IncludedSections">EDL Sections to include</param>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.ReadTable(System.UInt16,Itron.Common.C1219Tables.Centron.CentronTables@)">
            <summary>
            Reads the specified table from the meter.
            </summary>
            <param name="usTableID">The table ID for the table to read.</param>
            <param name="MeterTables">The tables object to read the table into.</param>
            <returns>PSEMResponse code.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRJ.MeterName">
            <summary>
            Gets the name of the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRJ.Events">
            <summary>
            Get events from the Register (Table 74) and the Comm Module (Table 2524).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayITRJ.HistoryLogEventList">
            <summary>
            Get the list of configured events.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRJ.m_ICSTableReader">
            <summary>
            Helper class that contains "read table" methods to obtain ERT data from an ICM.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRJ.START_ICM_EVENT_ID">
            <summary>
            The lowest supported event id for ITRJ's table 2523
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayITRJ.END_ICM_EVENT_ID">
            <summary>
            The highest support event id for ITRJ's table 2523
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetCommunicationsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds communications validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetEventValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Gets the base class list of validation items plus the ICM events
            </summary>
            <param name="ValidationList"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetEventExceptionValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Gets the base class list of validation items plus the ICM exception report configuration items
            </summary>
            <param name="ValidationList">The validation list to populate</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetWANValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds WAN validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayITRJ.GetValidationTablesToRead">
            <summary>
            Returns the base class list of validation tables plus the ITRJ specific ICS exception report configuration tables
            </summary>
            <returns>the list of tables to validate</returns>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway">
            <summary>
            Class representing the M2 Gateway.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.M2GATEWAY">
            <summary>
            Meter type identifier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.LIS1_DEVICE_CLASS">
            <summary>
            Device class string for M2 Gateway devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.M2GATEWAY_NAME">
            <summary>
            Human readable name of meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.LOG_ITR1_NAME">
            <summary>
            Name used in the activity log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.GTWY_HW_VERSION_1_0">
            <summary>
            Constant Describing the Hardware Version for 1.0 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.NUMBER_COREDUMP_PAGES">
            <summary>
            Number of pages in an M2 Gateway core dump
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.NUMBER_BYTES_PER_PAGE">
            <summary>
            Number of bytes in an M2 Gateway data flash page
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.COREDUMP_START_PAGE">
            <summary>
            Page in data flash where the M2 Gateway core dump starts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.M2_GATEWAY_MAX_WAIT">
            <summary>
            How long to wait before timing out (in seconds)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway.Fatal_Error_Status">
            <summary>
            Fatal error status bitfield from Gateway table 157
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.Fatal_Error_Status.FATAL_ERROR_CORE_DUMP_VALID">
            <summary>
            If set, a valid core dump exists
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.Fatal_Error_Status.FATAL_RECOVERY_ENABLED">
            <summary>
            If set, fatal error recovery is enabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway.Fatal_Error_Status.FATAL_RECOVERY_MODE">
            <summary>
            If set, meter is in fatal error recovery mode
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ResetDiagnosticCounters">
            <summary>
            Resets the SiteScan Diagnostic Counters.
            </summary>
            <returns>The result of the reset.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.RemoteConnect(Itron.Metering.Device.ConnectType,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Connect.
            </summary>
            <returns>An RemoteConnectResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.RemoteConnect(Itron.Metering.Device.ConnectType,System.Boolean,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method executes the remote connect.
            </summary>
            <param name="connectType">The connection type.</param>
            <param name="ignoreLoadVoltage">Whether or not load voltage should be ignored.</param>
            <param name="responseCode">The response data for the connect request</param>
            <returns>The result of the connect operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.RemoteDisconnect(Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Disconnect.
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.LoadSideVoltageDetection">
            <summary>
            This method will execute the Load Voltage Detection.
            </summary>
            <returns>An ItronDeviceResult representing the result of the Load Voltage Detection
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SwitchActiveThreshold(System.Byte,System.TimeSpan)">
            <summary>
            Switches the currently active service limiting threshold
            </summary>
            <param name="threshold">The number of the thershold to switch to.</param>
            <param name="thresholdPeriod">The amount of time to stay in this thershold.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ResetNumberInversionTampers">
            <summary>
            Resets the Number of Inversion tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ResetNumberRemovalTampers">
            <summary>
            Resets the Number of Removal tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.AdjustClock(System.Int32)">
            <summary>
            Performs a clock adjust on the connected meter
            </summary>
            <param name="iOffset">The offset from meter time (seconds)</param>
            <returns>A ClockAdjustResult</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsSealedCanadian">
            <summary>
            Gets whether or not the meter is Sealed for Canada
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.PerformSelfRead">
             <summary>
             This method causes a Self Read to occur on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             03/31/10 AF  2.40.31         Created
            
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetLocalDeviceTime(System.DateTime)">
            <summary>
            Convert a utc time from the meter to local time for the device
            </summary>
            <param name="utcTime">UDT time from the meter</param>
            <returns>Convertered Device Local Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ServiceLimitingFailSafe(System.UInt16)">
            <summary>
            This method forces the meter enable or disable servicelimiting by 
            entering into the failsafe mode
            </summary>
            <param name="minsInFailSafe">The number of minutes the meter stays in the failsafe mode.</param>
            <returns>The result of the service limiting.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ConfigureRemoteDisconnectSwitch(Itron.Metering.Device.DisconnectSwitchSettings)">
            <summary>
            This method configures the remote disconnect switch to be enabled or disabled.
            </summary>
            <param name="SwitchSetting">Whether or not the switch is enabled</param>
            <returns>The result of the configuration.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.EncryptC1218Passwords">
            <summary>
            This method will encrypt the C12.18 passwords stored in the meter.
            </summary>
            <returns>Results of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ReconfigureLEDQuantity(Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption)">
            <summary>
            Changes the LED to pulse the specified quantity.
            </summary>
            <param name="quantity">The Quantity to change to.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ClearTamperTapMaxStats">
            <summary>
            Clears the max readings from table 2263 (Mfg 215)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.OpticalPortLockout(System.UInt16)">
            <summary>
            Allows L+G security level 5 optical port access to the Focus meter for
            a specified period of time
            </summary>
            <param name="uiMinutes">Number of minutes to allow level 5 access.  0x0000 unlocks
            the port until another command is received.  0xffff unlocks the port until 
            another command is received</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SaveConfiguration">
            <summary>
            Calls standard procedure 2 - save configuration
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsCanadian">
            <summary>
            Gets whether or not the meter is a Canadian meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsInFatalErrorRecoveryMode">
            <summary>
            Gets whether or not the meter is currently in Fatal Error Recovery Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsFullCoreDumpBlocked">
            <summary>
            Gets whether or not the meter currently has a Full Core Dump available
            and further core dumps are blocked.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsFatalErrorRecoveryEnabled">
            <summary>
            Gets whether or not Fatal Error Recovery is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.ErrorsList">
            <summary>
            Gets the list of fatal errors in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LastFatalError">
            <summary>
            Gets the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LastFatalErrorReason">
            <summary>
            Gets the reason for the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsAssetSyncEnabled">
            <summary>
            Gets whether or not Asset Sync is enabled. Currently
            not supported in the Gateway
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CurrentSecurityLevel">
            <summary>
            Gets the current security level
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsSwapOutTablePresent">
            <summary>
            Gets whether or not the SwapOut table is present in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.NumberOfInversionTampers">
            <summary>
            Property to retrieve the Number of Inversion tampers
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MagneticTampersSupported">
            <summary>
            Property to determine if Magnetic Tampers should be supported. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.NumberOfMagneticTampersDetected">
            <summary>
            Property to retrieve the Number of detected Magnetic Tampers
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.NumberOfMagneticTampersCleared">
            <summary>
            Property to retrieve the Number of cleared magnetic tampers.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.TimeRemainingInTestMode">
            <summary>
            Property to retrieve the Number of Minutes the meter is on test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.GetDefaultPulseWeightTest">
            <summary>
            Property to retrieve the configured/default pulse weight in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.NumberOfRemovalTampers">
            <summary>
            Property to retrieve the Number of Removal tampers
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CommModulePresent">
            <summary>
            Boolean that indicates if any Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.ItronCommModulePresent">
            <summary>
            Boolean that indicates if an Itron Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CommModuleDeviceClass">
            <summary>
            Returns the string that represents the Comm module device class
            Allows us to be able to distinguish ITRL devices.  Overridden in
            this device class to avoid a bug fix for HW 1.5 meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CommModType">
            <summary>
            Gets the Comm module type (IP or RFLAN)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.CommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DisplayModVer">
            <summary>
            Gets the display version.revision fom MFG Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DisplayModBuild">
            <summary>
            Gets the display Build fom MFG Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LGRegModVer">
            <summary>
            Gets the L+G register version from Mfg Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LGRegModBuild">
            <summary>
            Gets the L+G register build from Mfg Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LGRegEngVersion">
            <summary>
            L+G Firmware Engineering Version 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.RegModVer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.RegModBuild">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DSTEnabled">
            <summary>
            Gets the dst enabled flag
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.NumberofLastDemandResets">
            <summary>
            Returns the number of Last Demand Resets in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DateProgrammed">
            <summary>
            Gets the Date Programmed out of 2048
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.ServiceVoltage">
            <summary>
            Retrieves the instantaneous secondary Volts RMS Phase A from the meter.
            The firmware folks say this should be considered to be the service voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterName">
            <summary>
            Property used to get the human readable meter name 
            (string).  Use this property when 
            displaying the name of the meter to the user.  
            This should not be confused with the MeterType 
            which is used for meter determination and comparison.
            </summary>
            <returns>A string representing the human readable name of the 
            meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.EventDescriptions">
            <summary>
            Builds the list of Event descriptions and returns the dictionary 
            </summary>
            <returns>
            Dictionary of Event Descriptions
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_DisconnectAvailable">
            <summary>
            Gets the Disconnect Status
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_PoleTopCellRelaySupported">
            <summary>
            Gets the Pole Top Cell Relay meter key bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_EnhancedBlurtsSupported">
            <summary>
            Returns whether or not Enhanced Blurts are supported.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_UseSR1DeviceClass">
            <summary>
            Returns whether or not the meter uses the SR1.0 Device Class.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_ZigBeeDebug">
            <summary>
            Returns whether or not the meter enables ZigBee Debugging.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_TransparentDeviceSupported">
            <summary>
            Returns whether or not the meter is a transparent device.
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_DisableCoreDump">
            <summary>
            Returns whether or not the meter will Disable Core Dump.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_DisableCoreDumpOnTotalStackUseLimit">
            <summary>
            Returns whether or not the meter will Disable Core Dump on Total Stack Use Limit.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_AdvancedPolySupported">
            <summary>
            Returns whether or not the meter is an Advanced Poly.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterKey_QuantityConfiguration">
            <summary>
            Returns an OpenWay device type string based on the meter key settings.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LoadLimitingConnectWithoutUserIntervetion">
            <summary>
            Determines if User Intervention is required after a load limiting disconnect
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LoadControlDisconnectThreshold">
            <summary>
            Determines if Load Control is enabled and what the Threshold is if it is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DailySelfReadTime">
            <summary>
            Gets the configured daily self read time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AmpsNeutral">
            <summary>
            Gets the Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AmpsPhaseA">
            <summary>
            Gets the Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AmpsPhaseB">
            <summary>
            Gets the Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AmpsPhaseC">
            <summary>
            Gets the Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AmpsSquared">
            <summary>
            Gets the Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.PowerFactor">
            <summary>
            Gets the Power Factor from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.QDelivered">
            <summary>
            Gets the Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.QReceived">
            <summary>
            Gets the Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VALagging">
            <summary>
            Gets the Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarDelivered">
            <summary>
            Gets the Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VAReceived">
            <summary>
            Gets the VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarNet">
            <summary>
            Gets the Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarNetDelivered">
            <summary>
            Gets the Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarNetReceived">
            <summary>
            Gets the Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarQuadrant1">
            <summary>
            Gets the Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarQuadrant2">
            <summary>
            Gets the Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarQuadrant3">
            <summary>
            Gets the Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarQuadrant4">
            <summary>
            Gets the Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VarReceived">
            <summary>
            Gets the Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VoltsAverage">
            <summary>
            Gets the Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VoltsPhaseA">
            <summary>
            Gets the Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VoltsPhaseB">
            <summary>
            Gets the Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VoltsPhaseC">
            <summary>
            Gets the Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.VoltsSquared">
            <summary>
            Gets the Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WattsDelivered">
            <summary>
            Gets the Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WattsReceived">
            <summary>
            Gets the Watts Revieved quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WattsNet">
            <summary>
            Gets the Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WattsUni">
            <summary>
            Gets the Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsCurrentPhaseA">
            <summary>
            Gets the Instantaneous Current for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsCurrentPhaseB">
            <summary>
            Gets the Instantaneous Current for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsCurrentPhaseC">
            <summary>
            Gets the Instantaneous Current for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsVoltagePhaseA">
            <summary>
            Gets the Instantaneous Voltage for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsVoltagePhaseB">
            <summary>
            Gets the Instantaneous Voltage for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsVoltagePhaseC">
            <summary>
            Gets the Instantaneous Voltage for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsW">
            <summary>
            Gets the Instantaneous Watts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsVAArith">
            <summary>
            Gets the Instantaneous VA Arith
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InsVAVect">
            <summary>
            Gets the Instantaneous VA Vect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.SelfReadRegisters">
            <summary>
            Proves access to a list of Self Read Collections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MeterDisplayMode">
            <summary>
            Property to determine the Display Mode
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.FWLoaderVersion">
            <summary>
            Gets the Firmware Loader Version number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.FWLoaderRevision">
            <summary>
            Gets the Firmware Loader Revision number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.FWLoaderBuild">
            <summary>
            Gets the Firmware Loader Build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.InversionThreshold">
            <summary>
            An event is triggered if the acceleration value along the X axis of the accelerometer
            is greater than or equal to this threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.RemovalThreshold">
            <summary>
            An event is triggered if average acceleration value on X and Z axes of the accelerometer
            is above this threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.TapThreshold">
            <summary>
            A tap is detected if average acceleration value on the Y axis of the accelerometer
            is above this threshold and falls below it within 400 milliseconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WakeupDuration">
            <summary>
             The number of seconds to pull data from the accelerometer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccelerometerConfigError">
            <summary>
            If true, there are errors in accelerometer configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.WakeUpStatus">
            <summary>
             If false, tap and tamper detections are not running
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.RemovalPDNCheck">
            <summary>
            If true, a removal tamper has been detected and the meter is checking 
            the power down for 10 seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.TapDetected">
            <summary>
            Checks the tap check field of table 2262 to see if a tap has been detected
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsAccelerometerSupported">
            <summary>
            Whether or not the accelerometer is supported 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccReferenceAngleX">
            <summary>
            The reference angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccReferenceAngleY">
            <summary>
            The reference angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccReferenceAngleZ">
            <summary>
            The reference angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccCurrentAngleX">
            <summary>
            Current angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccCurrentAngleY">
            <summary>
            Current angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.AccCurrentAngleZ">
            <summary>
            Current angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MaxDeltaX">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along X axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MaxDeltaY">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Y axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MaxDeltaZ">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Z axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MaxAvgDeltaTap">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.MaxAvgDeltaTamper">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.C1222DebugFWDLBlockCount">
            <summary>
             Gets the number of firmware blocks currently downloaded from the C1222 debug table.
             </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.TotalFWDLBlockCount">
            <summary>
            Gets the number total number of firmware blocks to download.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsActivateInProgress">
            <summary>
            Gets whether or not activation is occurring now.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsFWDLEnabled">
            <summary>
            Gets whether or not firmware download is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DisplayVenderField1">
            <summary>
            Gets Vender Field 1 Display data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DisplayVenderField2">
            <summary>
            Gets Vender Field 2 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DisplayVenderField3">
            <summary>
            Gets Vender Field 3 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsInTestMode">
            <summary>
            Determines whether or not the meter is currently in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IOSupported">
             <summary>
             Returns true if IO is supported, false if not.
             </summary>
             Revision History
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             04/16/10 AF 2.40.38 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.TOUEnabled">
            <summary>
            We don't have a way of determining whether or not the Gateway 
            supports or is using TOU so just return false.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.SWRevision">
            <summary>
            Get the software version from the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.LPRunning">
            <summary>
            Indicates whether or not the meter is currently recording
            load profile data.  We can't determine this with the Gateway
            so return false.
            </summary>
            <remarks>
             Revision History
             MM/DD/YY Who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             06/08/10 AF  2.41.08        Created
            </remarks>
            
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.Supports25YearDST">
            <summary>
            Gets whether or not the meter supports the 25 year DST Calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.IsCTEConfigured">
            <summary>
            Gets the current per phase exceeded enabled field from Mfg table 217
            and determines if CTE has been configured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.FWRevisionForTableCreation">
            <summary>
            Gets the firmware revision. This is the same as "FWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different firmware versions. This should only be used as a parameter to pass
            in when creating a table. This allows us to override only a property and not the
            creation of a table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.HWRevisionForTableCreation">
            <summary>
            Gets the hardware revision. This is the same as "HWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different hardware versions. This should only be used as a parameter to pass
            in when creating a table. Reference table 2128 for example.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.FirmwareBuild">
            <summary>
            Gets the firmware build (without using a LID request)
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ValidateDESKeys(System.String,Itron.Metering.Device.CENTRON_AMI.DESKeys)">
            <summary>
            Validates the DES Keys.
            </summary>
            <param name="ProgName">Name of the program</param>
            <param name="KeyID">Key ID: Key1, Key2...</param>
            <returns>Procedure Result code</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ValidateEnhancedSecurityKeys(System.String,System.Boolean)">
            <summary>
            Validates the Enhanced Security keys in the meter to those in the specified file.
            </summary>
            <param name="strEnhancedSecurityKeyFile">The file that contains the keys to validate against.</param>
            <param name="Wait">Whether or not to send a wait to the device before calling 
            method to validate enhanced security keys.</param>
            <returns>list of bool items</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.CauseFatalError">
            <summary>
            Causes Fatal Error on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.CreateDisplayItem(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Creates a new DisplayItem
            </summary>
            <returns>ANSIDisplayItem</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetSecurityLevel(Itron.Metering.Device.SecurityLevel@)">
            <summary>
            Gets the current security level from the meter.
            </summary>
            <param name="level">The current security level</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRAmpsNeutral(System.UInt32)">
            <summary>
            Gets the Self Read values for Neutral Amps
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRAmpsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (a)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRAmpsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (b)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRAmpsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (c)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRAmpsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps Squared
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRPowerFactor(System.UInt32)">
            <summary>
            Gets the Self Read values for Power Factor
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRQDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRQReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVADelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVALagging(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Lagging
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVAReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarNetDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarNetReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarQuadrant1(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q1.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarQuadrant2(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q2.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarQuadrant3(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q3.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarQuadrant4(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q4.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVarReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVoltsAverage(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Average.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (a).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVoltsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts(b).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVoltsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (c).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRVoltsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Squared.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRWattsDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Delivered.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRWattsNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRWattsReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.SRWattsUni(System.UInt32)">
            <summary>
            Gets the Self Read values for Unidirectional Watts.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DateTimeOfSelfRead(System.UInt32)">
            <summary>
            Gets the Self Read date for the specified index.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The date of the Self Read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DateTimeOfDemandReset(System.UInt32)">
            <summary>
            Gets the Demand Reset date for the specified index.
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The date of the demand reset.</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DateLastDemandReset">
            <summary>
            Gets the last demand reset date.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRVADelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for VA d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRVAReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for VA r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the demand reset value for Volts (a)
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRWattsDelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRWattsNet(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh Net
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRWattsReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.DRWattsUni(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ReadFWLoaderVersion">
            <summary>
            Reads the Firmware Loader Version from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.WriteCoreDumpHeader(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the Header information to the Core Dump file
            </summary>
            <param name="writer">The Binary writer to the Core Dump file</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.WriteCoreDumpTables(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the tables portion of the Core Dump for all meter types.
            </summary>
            <param name="writer">The Binary Writer for the Core Dump file.</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.M2GatewayTable2048">
            <summary>
            Gets the M2GatewayTable2048 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.M2GatewayTable2108">
            <summary>
            Gets the M2GatewayTable2108 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.M2GatewayTable2205">
            <summary>
            Gets the M2GatewayTable2205 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.DefaultMeterType">
            <summary>
            Gets the meter type "M2GATEWAY"
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway.Table2127EnhancedSecurityKeys">
            <summary>
            Gets the Enhanced Security Keys sub table object
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.RequiresDESKeysValidation(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract Security Provider, Exception Security Model, DESKey Length in order to decide 
             whether to Validate DES keys or not
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="DESKeyID">
             DESKeyID
            </param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetSecurityCode(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityType,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract optical and DES keys from it
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="SecType">
             Type of Security (i.e Optical Passwords or DES Keys
             </param>
             <param name="PasswordLevel">
             KeyID of Security
             </param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.Configure(System.String)">
            <summary>
            Configures the meter with the specified program
            </summary>
            <param name="sProgramName">The path to the program file</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/10 AF  2.41.07		Created
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.Configure(System.String,Itron.Metering.DeviceDataTypes.PromptForData)">
            <summary>
            Configures the meter with the specified program
            </summary>
            <param name="sProgramName">The path to the program file</param>
            <param name="PFData">Prompt For data Object</param>
            <returns></returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/10 AF  2.41.07		Created
            02/02/11 AF  2.50.04        Added check for null to quiet compiler warning
        </member>
        <member name="E:Itron.Metering.Device.M2_Gateway.ShowProgressEvent">
            <summary>
            Event that shows the progress bar
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.M2_Gateway.HideProgressEvent">
            <summary>
            Event that hides the progress bar
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.M2_Gateway.StepProgressEvent">
            <summary>
            Event that causes the progress bar to perform a step
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.OnShowProgress(Itron.Metering.Progressable.ShowProgressEventArgs)">
            <summary>
            Raises the event to show the progress bar.
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.OnStepProgress(Itron.Metering.Progressable.ProgressEventArgs)">
            <summary>
            Raises the event that causes the progress bar to perform a step
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.OnHideProgress(System.EventArgs)">
            <summary>
            Raises the event that hides or closes the progress bar
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.CreateEDLFromMeter(System.String,Itron.Metering.Device.EDLSections)">
            <summary>
            Creates an EDL file with the specified sections.
            </summary>
            <param name="FileName">Path to the file where the EDL file will be written.</param>
            <param name="IncludedSections">The sections to include in the EDL file.</param>
            <returns>CreateEDLResult Code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.CreateEDLFromMeter(System.String)">
            <summary>
            Creates an EDL file that contains all of the data for a meter.
            </summary>
            <param name="FileName">The file name that will be used to store the file.</param>
            <returns>CreateEDLResult code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ReadTable(System.UInt16,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables@)">
            <summary>
            Reads the specified table from the meter.
            </summary>
            <param name="usTableID">The table ID for the table to read.</param>
            <param name="MeterTables">The tables object to read the table into.</param>
            <returns>PSEMResponse code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetTablesToRead(Itron.Metering.Device.EDLSections)">
            <summary>
            Creates a list of tables to read from the meter.
            </summary>
            <returns>The list of tables to read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.AllowTableExport(System.UInt16)">
            <summary>
            Used to determine which tables will be written to the EDL file.
            </summary>
            <param name="usTableID">Table ID to check.</param>
            <returns>True if the table can be written, false otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.AllowFieldExport(System.Int64,System.Int32[])">
            <summary>
            Determines which fields may be written to the EDL file.
            </summary>
            <param name="idElement">The field to check.</param>
            <param name="anIndex">The indexes into the field.</param>
            <returns>True if the field may  be written to the EDL file. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.FWPendingTableDownloadComplete">
            <summary>
            Determines whether or not there is an incomplete firmware pending 
            table
            </summary>
            <returns>
            true if all firmware pending tables are complete and false otherwise
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ValidateProgram(System.String)">
            <summary>
            Returns a list of items that are not consistent between the configuration
            of the program and the device.
            </summary>
            <param name="strProgramName">The name of the program to validate against.</param>
            <returns>
            A list of items that failed the validation. Returns an empty list if
            all items match.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetValidationList">
            <summary>
            Creates the list of validation items.
            </summary>
            <returns>A list of items that will be validated.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetTOUTimeValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds TOU/Time validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetSecurityValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds security validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetDisplayValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds display validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetEventExceptionValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds event/exception validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetCommunicationsValidationItems(System.Collections.Generic.List{Itron.Metering.Device.EDLValidationItem})">
            <summary>
            Adds communications validation items to the validation list.
            </summary>
            <param name="ValidationList">The list to add validaiton items to.</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.ValidateItem(Itron.Metering.Device.EDLValidationItem,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables)">
            <summary>
            Checks to see if the item matches and then creates a ProgramValidationItem if it does not.
            </summary>
            <param name="item">The item to validate</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>Returns the ProgramValidationItem for the value if the items do not match, and null if the values match.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.HandleSpecialCases(System.Int64,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables)">
            <summary>
            Handles and special cases.
            </summary>
            <param name="item">The item to handle</param>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of invalid items for the special case.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetInvalidExceptionItems(Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables,Itron.Common.C1219Tables.LandisGyr.Gateway.GatewayTables)">
            <summary>
            Gets a list of invalid exception items.
            </summary>
            <param name="meterTables">The table structure for the meter.</param>
            <param name="programTables">The table structure for the program.</param>
            <returns>The list of invalid items.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.RequiresSpecialHandling(System.Int64)">
            <summary>
            Determines whether or not an item requires special handling.
            </summary>
            <param name="item">The item to check</param>
            <returns>True if the item requires special handling. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway.GetValidationTablesToRead">
            <summary>
            Gets the list of tables to read from the meter.
            </summary>
            <returns>The list of Table IDs</returns>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_EventDictionary">
            <summary>
            Constructs a dictionary of Centron AMI specific events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_EventDictionary.#ctor">
            <summary>Constructs a dictionary of M2 Gateway specific events</summary>
        </member>
        <member name="T:Itron.Metering.Device.SL7000_Gateway">
            <summary>
            Class representing the M2 Gateway.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.M2GATEWAY">
            <summary>
            Meter type identifier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.LIS1_DEVICE_CLASS">
            <summary>
            Device class string for M2 Gateway devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.M2GATEWAY_NAME">
            <summary>
            Human readable name of meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.LOG_ITR1_NAME">
            <summary>
            Name used in the activity log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.GTWY_HW_VERSION_1_0">
            <summary>
            Constant Describing the Hardware Version for 1.0 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.NUMBER_COREDUMP_PAGES">
            <summary>
            Number of pages in an M2 Gateway core dump
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.NUMBER_BYTES_PER_PAGE">
            <summary>
            Number of bytes in an M2 Gateway data flash page
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.COREDUMP_START_PAGE">
            <summary>
            Page in data flash where the M2 Gateway core dump starts
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SL7000_Gateway.Fatal_Error_Status">
            <summary>
            Fatal error status bitfield from Gateway table 157
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.Fatal_Error_Status.FATAL_ERROR_CORE_DUMP_VALID">
            <summary>
            If set, a valid core dump exists
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.Fatal_Error_Status.FATAL_RECOVERY_ENABLED">
            <summary>
            If set, fatal error recovery is enabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SL7000_Gateway.Fatal_Error_Status.FATAL_RECOVERY_MODE">
            <summary>
            If set, meter is in fatal error recovery mode
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.#ctor(Itron.Metering.Communications.ICommunications)">
            <summary>
            Constructor
            </summary>
            <param name="ceComm"></param>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="PSEM">Protocol obj used to identify the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ResetDiagnosticCounters">
            <summary>
            Resets the SiteScan Diagnostic Counters.
            </summary>
            <returns>The result of the reset.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.RemoteConnect(Itron.Metering.Device.ConnectType,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Connect.
            </summary>
            <returns>An RemoteConnectResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.RemoteConnect(Itron.Metering.Device.ConnectType,System.Boolean,Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method executes the remote connect.
            </summary>
            <param name="connectType">The connection type.</param>
            <param name="ignoreLoadVoltage">Whether or not load voltage should be ignored.</param>
            <param name="responseCode">The response data for the connect request</param>
            <returns>The result of the connect operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.RemoteDisconnect(Itron.Metering.Device.ConnectDisconnectResponse@)">
            <summary>
            This method will execute the Disconnect.
            </summary>
            <returns>An ItronDeviceResult representing the result of the reset
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.LoadSideVoltageDetection">
            <summary>
            This method will execute the Load Voltage Detection.
            </summary>
            <returns>An ItronDeviceResult representing the result of the Load Voltage Detection
            operation.</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SwitchActiveThreshold(System.Byte,System.TimeSpan)">
            <summary>
            Switches the currently active service limiting threshold
            </summary>
            <param name="threshold">The number of the thershold to switch to.</param>
            <param name="thresholdPeriod">The amount of time to stay in this thershold.</param>
            <returns>The result of the procedure.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ResetNumberInversionTampers">
            <summary>
            Resets the Number of Inversion tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ResetNumberRemovalTampers">
            <summary>
            Resets the Number of Removal tampers
            </summary>
            <returns>ItronDeviceResult.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.AdjustClock(System.Int32)">
            <summary>
            Performs a clock adjust on the connected meter
            </summary>
            <param name="iOffset">The offset from meter time (seconds)</param>
            <returns>A ClockAdjustResult</returns>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsSealedCanadian">
            <summary>
            Gets whether or not the meter is Sealed for Canada
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.PerformSelfRead">
             <summary>
             This method causes a Self Read to occur on a connected ANSI device.
             </summary>
             <returns>An ItronDeviceResult representing the result of the reset
             operation.</returns>
             
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             03/31/10 AF  2.40.31         Created
            
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.GetLocalDeviceTime(System.DateTime)">
            <summary>
            Convert a utc time from the meter to local time for the device
            </summary>
            <param name="utcTime">UDT time from the meter</param>
            <returns>Convertered Device Local Time</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ServiceLimitingFailSafe(System.UInt16)">
            <summary>
            This method forces the meter enable or disable servicelimiting by 
            entering into the failsafe mode
            </summary>
            <param name="minsInFailSafe">The number of minutes the meter stays in the failsafe mode.</param>
            <returns>The result of the service limiting.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ConfigureRemoteDisconnectSwitch(Itron.Metering.Device.DisconnectSwitchSettings)">
            <summary>
            This method configures the remote disconnect switch to be enabled or disabled.
            </summary>
            <param name="SwitchSetting">Whether or not the switch is enabled</param>
            <returns>The result of the configuration.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.EncryptC1218Passwords">
            <summary>
            This method will encrypt the C12.18 passwords stored in the meter.
            </summary>
            <returns>Results of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ReconfigureLEDQuantity(Itron.Metering.Device.CENTRON_AMI.LEDQuantityOption)">
            <summary>
            Changes the LED to pulse the specified quantity.
            </summary>
            <param name="quantity">The Quantity to change to.</param>
            <returns>The result of the procedure call.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ClearTamperTapMaxStats">
            <summary>
            Clears the max readings from table 2263 (Mfg 215)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.OpticalPortLockout(System.UInt16)">
            <summary>
            Allows L+G security level 5 optical port access to the Focus meter for
            a specified period of time
            </summary>
            <param name="uiMinutes">Number of minutes to allow level 5 access.  0x0000 unlocks
            the port until another command is received.  0xffff unlocks the port until 
            another command is received</param>
            <returns>The result of the procedure</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SaveConfiguration">
            <summary>
            Calls standard procedure 2 - save configuration
            </summary>
            <returns>the result of the procedure call</returns>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.FirmwareBuild">
            <summary>
            Gets the firmware build
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsCanadian">
            <summary>
            Gets whether or not the meter is a Canadian meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsInFatalErrorRecoveryMode">
            <summary>
            Gets whether or not the meter is currently in Fatal Error Recovery Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsFullCoreDumpBlocked">
            <summary>
            Gets whether or not the meter currently has a Full Core Dump available
            and further core dumps are blocked.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsFatalErrorRecoveryEnabled">
            <summary>
            Gets whether or not Fatal Error Recovery is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.ErrorsList">
            <summary>
            Gets the list of fatal errors in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LastFatalError">
            <summary>
            Gets the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LastFatalErrorReason">
            <summary>
            Gets the reason for the last Fatal Error that occurred in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsAssetSyncEnabled">
            <summary>
            Gets whether or not Asset Sync is enabled. Currently
            not supported in the Gateway
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.CurrentSecurityLevel">
            <summary>
            Gets the current security level
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsSwapOutTablePresent">
            <summary>
            Gets whether or not the SwapOut table is present in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.NumberOfInversionTampers">
            <summary>
            Property to retrieve the Number of Inversion tampers
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MagneticTampersSupported">
            <summary>
            Property to determine if Magnetic Tampers should be supported. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.NumberOfMagneticTampersDetected">
            <summary>
            Property to retrieve the Number of detected Magnetic Tampers
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.NumberOfMagneticTampersCleared">
            <summary>
            Property to retrieve the Number of cleared magnetic tampers.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.TimeRemainingInTestMode">
            <summary>
            Property to retrieve the Number of Minutes the meter is on test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.GetDefaultPulseWeightTest">
            <summary>
            Property to retrieve the configured/default pulse weight in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.NumberOfRemovalTampers">
            <summary>
            Property to retrieve the Number of Removal tampers
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.ItronCommModulePresent">
            <summary>
            Boolean that indicates if an Itron Communication Module is present in the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.CommModuleDeviceClass">
            <summary>
            Returns the string that represents the Comm module device class
            Allows us to be able to distinguish ITRL devices.  Overridden in
            this device class to avoid a bug fix for HW 1.5 meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.CommModType">
            <summary>
            Gets the Comm module type (IP or RFLAN)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.CommModVer">
            <summary>
            Gets the Comm module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.CommModBuild">
            <summary>
            Gets the Comm module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LGRegModVer">
            <summary>
            Gets the L+G register version from Mfg Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LGRegModBuild">
            <summary>
            Gets the L+G register build from Mfg Table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LGRegEngVersion">
            <summary>
            L+G Firmware Engineering Version 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.RegModVer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.RegModBuild">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DSTEnabled">
            <summary>
            Gets the dst enabled flag
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.NumberofLastDemandResets">
            <summary>
            Returns the number of Last Demand Resets in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DateProgrammed">
            <summary>
            Gets the Date Programmed out of 2048
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.ServiceVoltage">
            <summary>
            Retrieves the instantaneous secondary Volts RMS Phase A from the meter.
            The firmware folks say this should be considered to be the service voltage.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterName">
            <summary>
            Property used to get the human readable meter name 
            (string).  Use this property when 
            displaying the name of the meter to the user.  
            This should not be confused with the MeterType 
            which is used for meter determination and comparison.
            </summary>
            <returns>A string representing the human readable name of the 
            meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.ActivityLogMeterName">
            <summary>
            Gets the meter name that will be used in the activity log.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.EventDescriptions">
            <summary>
            Builds the list of Event descriptions and returns the dictionary 
            </summary>
            <returns>
            Dictionary of Event Descriptions
            </returns> 
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_DisconnectAvailable">
            <summary>
            Gets the Disconnect Status
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_PoleTopCellRelaySupported">
            <summary>
            Gets the Pole Top Cell Relay meter key bit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_EnhancedBlurtsSupported">
            <summary>
            Returns whether or not Enhanced Blurts are supported.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_UseSR1DeviceClass">
            <summary>
            Returns whether or not the meter uses the SR1.0 Device Class.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_ZigBeeDebug">
            <summary>
            Returns whether or not the meter enables ZigBee Debugging.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_TransparentDeviceSupported">
            <summary>
            Returns whether or not the meter is a transparent device.
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_DisableCoreDump">
            <summary>
            Returns whether or not the meter will Disable Core Dump.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_DisableCoreDumpOnTotalStackUseLimit">
            <summary>
            Returns whether or not the meter will Disable Core Dump on Total Stack Use Limit.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_AdvancedPolySupported">
            <summary>
            Returns whether or not the meter is an Advanced Poly.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterKey_QuantityConfiguration">
            <summary>
            Returns an OpenWay device type string based on the meter key settings.
            </summary> 
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LoadLimitingConnectWithoutUserIntervetion">
            <summary>
            Determines if User Intervention is required after a load limiting disconnect
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LoadControlDisconnectThreshold">
            <summary>
            Determines if Load Control is enabled and what the Threshold is if it is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DailySelfReadTime">
            <summary>
            Gets the configured daily self read time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AmpsNeutral">
            <summary>
            Gets the Neutral Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AmpsPhaseA">
            <summary>
            Gets the Phase A Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AmpsPhaseB">
            <summary>
            Gets the Phase B Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AmpsPhaseC">
            <summary>
            Gets the Phase C Amps from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AmpsSquared">
            <summary>
            Gets the Amps squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.PowerFactor">
            <summary>
            Gets the Power Factor from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.QDelivered">
            <summary>
            Gets the Q Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.QReceived">
            <summary>
            Gets the Qh Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VADelivered">
            <summary>
            Gets the VA Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VALagging">
            <summary>
            Gets the Lagging VA from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarDelivered">
            <summary>
            Gets the Var Delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VAReceived">
            <summary>
            Gets the VA Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarNet">
            <summary>
            Gets the Var Net from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarNetDelivered">
            <summary>
            Gets the Var Net delivered from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarNetReceived">
            <summary>
            Gets the Var Net Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarQuadrant1">
            <summary>
            Gets the Var Q1 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarQuadrant2">
            <summary>
            Gets the Var Q2 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarQuadrant3">
            <summary>
            Gets the Var Q3 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarQuadrant4">
            <summary>
            Gets the Var Q4 from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VarReceived">
            <summary>
            Gets the Var Received from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VoltsAverage">
            <summary>
            Gets the Average Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VoltsPhaseA">
            <summary>
            Gets the Phase A Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VoltsPhaseB">
            <summary>
            Gets the Phase B Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VoltsPhaseC">
            <summary>
            Gets the Phase C Volts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.VoltsSquared">
            <summary>
            Gets the Volts squared from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WattsDelivered">
            <summary>
            Gets the Watts Delivered quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WattsReceived">
            <summary>
            Gets the Watts Revieved quantity from the standard tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WattsNet">
            <summary>
            Gets the Watts Net quantity from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WattsUni">
            <summary>
            Gets the Unidirectional Watts from the standard tables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsCurrentPhaseA">
            <summary>
            Gets the Instantaneous Current for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsCurrentPhaseB">
            <summary>
            Gets the Instantaneous Current for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsCurrentPhaseC">
            <summary>
            Gets the Instantaneous Current for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsVoltagePhaseA">
            <summary>
            Gets the Instantaneous Voltage for Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsVoltagePhaseB">
            <summary>
            Gets the Instantaneous Voltage for Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsVoltagePhaseC">
            <summary>
            Gets the Instantaneous Voltage for Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsW">
            <summary>
            Gets the Instantaneous Watts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsVAArith">
            <summary>
            Gets the Instantaneous VA Arith
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InsVAVect">
            <summary>
            Gets the Instantaneous VA Vect
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.SelfReadRegisters">
            <summary>
            Proves access to a list of Self Read Collections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MeterDisplayMode">
            <summary>
            Property to determine the Display Mode
            </summary>
            <exception>
            Throws: NotSupportedException
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.FWLoaderVersion">
            <summary>
            Gets the Firmware Loader Version number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.FWLoaderRevision">
            <summary>
            Gets the Firmware Loader Revision number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.FWLoaderBuild">
            <summary>
            Gets the Firmware Loader Build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.InversionThreshold">
            <summary>
            An event is triggered if the acceleration value along the X axis of the accelerometer
            is greater than or equal to this threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.RemovalThreshold">
            <summary>
            An event is triggered if average acceleration value on X and Z axes of the accelerometer
            is above this threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.TapThreshold">
            <summary>
            A tap is detected if average acceleration value on the Y axis of the accelerometer
            is above this threshold and falls below it within 400 milliseconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WakeupDuration">
            <summary>
             The number of seconds to pull data from the accelerometer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccelerometerConfigError">
            <summary>
            If true, there are errors in accelerometer configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.WakeUpStatus">
            <summary>
             If false, tap and tamper detections are not running
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.RemovalPDNCheck">
            <summary>
            If true, a removal tamper has been detected and the meter is checking 
            the power down for 10 seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.TapDetected">
            <summary>
            Checks the tap check field of table 2262 to see if a tap has been detected
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsAccelerometerSupported">
            <summary>
            Whether or not the accelerometer is supported 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccReferenceAngleX">
            <summary>
            The reference angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccReferenceAngleY">
            <summary>
            The reference angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccReferenceAngleZ">
            <summary>
            The reference angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccCurrentAngleX">
            <summary>
            Current angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccCurrentAngleY">
            <summary>
            Current angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.AccCurrentAngleZ">
            <summary>
            Current angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MaxDeltaX">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along X axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MaxDeltaY">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Y axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MaxDeltaZ">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Z axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MaxAvgDeltaTap">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.MaxAvgDeltaTamper">
            <summary>
            
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.C1222DebugFWDLBlockCount">
            <summary>
             Gets the number of firmware blocks currently downloaded from the C1222 debug table.
             </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.TotalFWDLBlockCount">
            <summary>
            Gets the number total number of firmware blocks to download.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsActivateInProgress">
            <summary>
            Gets whether or not activation is occurring now.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsFWDLEnabled">
            <summary>
            Gets whether or not firmware download is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DisplayVenderField1">
            <summary>
            Gets Vender Field 1 Display data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DisplayVenderField2">
            <summary>
            Gets Vender Field 2 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DisplayVenderField3">
            <summary>
            Gets Vender Field 3 Display data
            </summary> 
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IsInTestMode">
            <summary>
            Determines whether or not the meter is currently in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.IOSupported">
             <summary>
             Returns true if IO is supported, false if not.
             </summary>
             Revision History
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             04/16/10 AF 2.40.38 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.TOUEnabled">
            <summary>
            We don't have a way of determining whether or not the Gateway 
            supports or is using TOU so just return false.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.SWRevision">
            <summary>
            Get the software version from the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.LPRunning">
            <summary>
            Indicates whether or not the meter is currently recording
            load profile data.  We can't determine this with the Gateway
            so return false.
            </summary>
            <remarks>
             Revision History
             MM/DD/YY Who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             06/08/10 AF  2.41.08        Created
            </remarks>
            
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.Supports25YearDST">
            <summary>
            Gets whether or not the meter supports the 25 year DST Calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.FWRevisionForTableCreation">
            <summary>
            Gets the firmware revision. This is the same as "FWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different firmware versions. This should only be used as a parameter to pass
            in when creating a table. This allows us to override only a property and not the
            creation of a table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.HWRevisionForTableCreation">
            <summary>
            Gets the hardware revision. This is the same as "HWRevision" but was created for the 
            purpose of using as a parameter to pass in on table creation. Some Tables are different
            sizes in different hardware versions. This should only be used as a parameter to pass
            in when creating a table. Reference table 2128 for example.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ValidateDESKeys(System.String,Itron.Metering.Device.CENTRON_AMI.DESKeys)">
            <summary>
            Validates the DES Keys.
            </summary>
            <param name="ProgName">Name of the program</param>
            <param name="KeyID">Key ID: Key1, Key2...</param>
            <returns>Procedure Result code</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ValidateEnhancedSecurityKeys(System.String,System.Boolean)">
            <summary>
            Validates the Enhanced Security keys in the meter to those in the specified file.
            </summary>
            <param name="strEnhancedSecurityKeyFile">The file that contains the keys to validate against.</param>
            <param name="Wait">Whether or not to send a wait to the device before calling 
            method to validate enhanced security keys.</param>
            <returns>list of bool items</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.CauseFatalError">
            <summary>
            Causes Fatal Error on an OpenWay CENTRON meter.
            </summary>
            <returns>
            An ProcedureResultCodes representing the result of the operation.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.CreateDisplayItem(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte)">
            <summary>
            Creates a new DisplayItem
            </summary>
            <returns>ANSIDisplayItem</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.GetSecurityLevel(Itron.Metering.Device.SecurityLevel@)">
            <summary>
            Gets the current security level from the meter.
            </summary>
            <param name="level">The current security level</param>
            <returns>The result of the procedure call</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRAmpsNeutral(System.UInt32)">
            <summary>
            Gets the Self Read values for Neutral Amps
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRAmpsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (a)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRAmpsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (b)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRAmpsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps (c)
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRAmpsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Amps Squared
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRPowerFactor(System.UInt32)">
            <summary>
            Gets the Self Read values for Power Factor
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRQDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRQReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Q Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVADelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVALagging(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Lagging
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVAReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for VA Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarNetDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Delivered
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarNetReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Net Received
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarQuadrant1(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q1.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarQuadrant2(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q2.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarQuadrant3(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q3.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarQuadrant4(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Q4.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVarReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Var Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVoltsAverage(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Average.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (a).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVoltsPhaseB(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts(b).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVoltsPhaseC(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts (c).
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRVoltsSquared(System.UInt32)">
            <summary>
            Gets the Self Read values for Volts Squared.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRWattsDelivered(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Delivered.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRWattsNet(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Net.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRWattsReceived(System.UInt32)">
            <summary>
            Gets the Self Read values for Watts Received.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.SRWattsUni(System.UInt32)">
            <summary>
            Gets the Self Read values for Unidirectional Watts.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The self read quantity.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DateTimeOfSelfRead(System.UInt32)">
            <summary>
            Gets the Self Read date for the specified index.
            </summary>
            <param name="uiIndex">The index of the self read to get.</param>
            <returns>The date of the Self Read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DateTimeOfDemandReset(System.UInt32)">
            <summary>
            Gets the Demand Reset date for the specified index.
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The date of the demand reset.</returns>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DateLastDemandReset">
            <summary>
            Gets the last demand reset date.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRVADelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for VA d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRVAReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for VA r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRVoltsPhaseA(System.UInt32)">
            <summary>
            Gets the demand reset value for Volts (a)
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRWattsDelivered(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh d
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRWattsNet(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh Net
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRWattsReceived(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh r
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.DRWattsUni(System.UInt32)">
            <summary>
            Gets the demand reset value for Wh
            </summary>
            <param name="uiIndex">The index of the demand reset to get.</param>
            <returns>The demand reset quantity</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.ReadFWLoaderVersion">
            <summary>
            Reads the Firmware Loader Version from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.WriteCoreDumpHeader(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the Header information to the Core Dump file
            </summary>
            <param name="writer">The Binary writer to the Core Dump file</param>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.WriteCoreDumpTables(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the tables portion of the Core Dump for all meter types.
            </summary>
            <param name="writer">The Binary Writer for the Core Dump file.</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.M2GatewayTable2048">
            <summary>
            Gets the M2GatewayTable2048 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.M2GatewayTable2108">
            <summary>
            Gets the M2GatewayTable2108 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.M2GatewayTable2205">
            <summary>
            Gets the M2GatewayTable2205 object (Creates it if needed)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.DefaultMeterType">
            <summary>
            Gets the meter type "M2GATEWAY"
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.SL7000_Gateway.Table2127EnhancedSecurityKeys">
            <summary>
            Gets the Enhanced Security Keys sub table object
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.RequiresDESKeysValidation(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract Security Provider, Exception Security Model, DESKey Length in order to decide 
             whether to Validate DES keys or not
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="DESKeyID">
             DESKeyID
            </param>
        </member>
        <member name="M:Itron.Metering.Device.SL7000_Gateway.GetSecurityCode(System.String,Itron.Metering.Device.CENTRON_AMI.SecurityType,Itron.Metering.Device.CENTRON_AMI.SecurityKeyID)">
             <summary>
             This method will Load the program file and extract optical and DES keys from it
             </summary>
             <param name="ProgName">
             Program Name
            </param>
             <param name="SecType">
             Type of Security (i.e Optical Passwords or DES Keys
             </param>
             <param name="PasswordLevel">
             KeyID of Security
             </param>
        </member>
        <member name="T:Itron.Metering.Device.SENTINEL_EventDictionary">
            <summary>
            Constructs a dictionary of SENTINEL specific events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINEL_EventDictionary.#ctor">
            <summary>Constructs a dictionary of SENTINEL specific events</summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/11/07 mcm 8.10.04		Created
            07/02/09 AF  2.20.11 135878 Renamed the CUST_SCHED_CHANGED event
                                        since this refers to a different event 
                                        for OpenWay meters
            07/12/16 MP  4.70.7  WR688986 Changed how event descriptions were accessed
            </remarks>
        </member>
        <member name="T:Itron.Metering.Device.StdTable11">
            <summary>
            Standard Table 11 - Actual Sources Limiting
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable11.ConstantTypes">
            <summary>
            Enumeration for the Constants Selector types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable11.ConstantTypes.GasAGA3">
            <summary>
            Use AGA3 constant structure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable11.ConstantTypes.GasAGA7">
            <summary>
            Use AGA7 constant structure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable11.ConstantTypes.Electric">
            <summary>
            Use Electric constant structure
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The psem communications object for the current session.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.NumUnitOfMeasureEntries">
            <summary>
            Gets the number of Unit Of Measure Entries in Table 12
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.NumDemandControlEntries">
            <summary>
            Gets the number of Demand Control entries in Table 13
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.DataControlLength">
            <summary>
            Gets the length of a Data Control element
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.NumDataControlEntries">
            <summary>
            Gets the number of Data Control entries in Table 14
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.NumConstantEntries">
            <summary>
            Gets the number of Constant entries in Table 15
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.ConstantsSelector">
            <summary>
            Gets the selector for the Constants record structure
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.NumberOfSources">
            <summary>
            Gets the number of sources in Table 16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.UsePowerFailExclusion">
            <summary>
            Gets whether or not Power Fail Exclusion is used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.UseResetExclusion">
            <summary>
            Gets whether or nor Demand Reset Exclusion is used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.UseBlockDemand">
            <summary>
            Gets whether or not Block Demand is used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.UseSlidingDemand">
            <summary>
            Gets whether or not Sliding Demand is used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.UseThermalDemand">
            <summary>
            Gets whether or not Thermal Demand is used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.Set1ConstantsPresent">
            <summary>
            Gets whether or not the Set 1 constants are present.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable11.Set2ConstantsPresent">
            <summary>
            Gets whether or not the Set 2 constants are present.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The psem communications object for the current session.</param>
            <param name="tableID">The Table ID number</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="tableID">The Table ID number</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable11.ParseData">
            <summary>
            Parses that data after a read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable14">
            <summary>
            Standard Table 14 - Data Control
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable11)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table11">The actual sources limiting table.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable11)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table11">Table 11 object for the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable14.SourceIDs">
            <summary>
            Gets the list of Source IDs as a LID number.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable11,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table11">The actual sources limiting table.</param>
            <param name="tableID">The Table ID Number</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable11,System.UInt16)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table11">Table 11 object for the meter</param>
            <param name="tableID">The Table ID Number</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.DetermineTableSize(Itron.Metering.Device.StdTable11)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table11">The actual sources limiting table.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable14.ParseData">
            <summary>
            Parses the data that was last read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable21">
            <summary>
            Standard Table 21 - Actual Register
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable21.SRDRType">
            <summary>
            Enumeration for the Self Read and Demand Reset capabilities
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable21.SRDRType.Neither">
            <summary>
            The meter does not perform a Self Read on every Demand Reset nor
            a Demand Reset on every Self Read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable21.SRDRType.SelfReadOnDemandReset">
            <summary>
            The meter only performs a Self Read on every Demand Reset.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable21.SRDRType.DemandResetOnSelfRead">
            <summary>
            The meter only performs a Demand Reset on every Self Read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable21.SRDRType.Both">
            <summary>
            The meter performs a Self Read on every Demand Reset and
            a Demand Reset on every Self Read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable21.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable21.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable21.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeSeasonInfo">
            <summary>
            Gets whether or not the season information is included in the data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeDateTime">
            <summary>
            Gets whether or not the date and time is being included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeDemandResetCounter">
            <summary>
            Gets whether or not the Demand Reset counter is being included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.DemandResetLockEnabled">
            <summary>
            Gets whether or not the Demand Reset lockout is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeCumulativeDemand">
            <summary>
            Gets whether or not the Cumulative Demand is included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeContinuousCumulativeDemand">
            <summary>
            Gets whether or not the Continuous Cumulative Demand is included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeTimeRemaining">
            <summary>
            Gets whether or not the time remaing in a demand interval is included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.InhibitSelfReadAfterOverflow">
            <summary>
            Gets whether or not the device will inhibit self reads if an overflow occurs
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.IncludeSelfReadSequenceNumber">
            <summary>
            Gets whether or not the Self Read Sequence number should be included for each entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.SupportsDailySelfRead">
            <summary>
            Gets whether or not daily self reads are enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.SupportsWeeklySelfRead">
            <summary>
            Gets whether or not weekly self reads are enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.SelfReadDemandReset">
            <summary>
            Gets the setting for whether or not Self Reads will be performed on a Demand Reset
            and Demand Reset will be be performed on a Self Read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfSelfReads">
            <summary>
            Gets the number of Self Reads.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfSummations">
            <summary>
            Gets the number of summations (Energies)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfDemands">
            <summary>
            Gets the number of demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfCoincidentValues">
            <summary>
            Gets the number of coincident values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfOccurances">
            <summary>
            Gets the number of occurances
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfTiers">
            <summary>
            Gets the number of TOU tiers
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfPresentDemands">
            <summary>
            Gets the number of present demands
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable21.NumberOfPresentValues">
            <summary>
            Gets the number of present values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable21.ParseData">
            <summary>
            Parses that data that has been read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable22">
            <summary>
            Standard Table 22 - Data Selection
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable22.DemandType">
            <summary>
            Specifies the type of the demand selection
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable22.DemandType.Min">
            <summary>
            The demand is a minimum value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable22.DemandType.Max">
            <summary>
            The demand is a maximum value.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable22.SummationSelections">
            <summary>
            Gets the list of summation (energy) selections as an index into table 14/16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable22.DemandSelections">
            <summary>
            Gets the list of demand selections as an index into table 14/16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable22.DemandTypes">
            <summary>
            Gets the type of demand for each demand selection.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable22.CoincidentSelection">
            <summary>
            Gets the list of Coincident Selection as an index into table 16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable22.CoincidentDemandAssocations">
            <summary>
            Gets the list of Coincident Associations as an index into the Demand Selections
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.DetermineTableSize(Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of Standard Table 22
            </summary>
            <param name="Table21">The table 21 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.ParseSummations">
            <summary>
            Parses the Summation (Energy) data that was just read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.ParseDemands">
            <summary>
            Parses the demand data that was just read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable22.ParseCoincidents">
            <summary>
            Parses the coincident data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable23">
            <summary>
            Standard Table 23 - Current Register Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable23.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table21">The Table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable23.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable23.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable23.CurrentRegisters">
            <summary>
            Gets the current register data record.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable23.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determine the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table21">The Table 21 object for the current device.</param>
            <returns>The size of the table as an uint</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable23.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable24">
            <summary>
            Standard Table 24 - Previous Season Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable24.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable24.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable24.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable24.PreviousSeasonEndDate">
            <summary>
            Gets the end date and time for the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable24.PreviousSeasonIndex">
            <summary>
            Gets the season index for the previous season.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable24.PreviousSeasonRegisterData">
            <summary>
            Gets the register data for the previous season.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable24.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines that size of the table.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable24.ParseData">
            <summary>
            Parse that data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable25">
            <summary>
            Standard Table 25 - Previous Demand Reset Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable25.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable25.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable25.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable25.DemandResetDate">
            <summary>
            Gets the end date and time of the last demand reset.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable25.DemandResetSeasonIndex">
            <summary>
            Gets the season index for the last demand reset.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable25.DemandResetRegisterData">
            <summary>
            Gets the register data for the last demand reset.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable25.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines that size of the table.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable25.ParseData">
            <summary>
            Parse that data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable26">
            <summary>
            Standard Table 26 - Self Read Data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable26.Order">
            <summary>
            Describes the sort order of the self reads.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable26.Order.Ascending">
            <summary>
            The self reads are sorted in ascending order by date.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable26.Order.Descending">
            <summary>
            The self reads are sorted in descending order by date.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable26.ListType">
            <summary>
            Describes the type of list used to store the self reads
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable26.ListType.FIFO">
            <summary>
            The list is stored as first in first out 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable26.ListType.Circular">
            <summary>
            The list is stored circularly.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable26.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable26.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable26.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.SelfReadOrder">
            <summary>
            Gets the sort order of the self read list.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.HasOverflown">
            <summary>
            Gets whether or not the self read list has overflown.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.TypeOfList">
            <summary>
            Gets the type of list used to store the self reads.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.InhibitOverflow">
            <summary>
            Gets whether or not self read overflow is inhibited.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.NumberOfValidEntries">
            <summary>
            Gets the number of valid self reads stored in the table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.LastEntryElement">
            <summary>
            Gets the element index of the last self read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.LastEntrySequenceNumber">
            <summary>
            Gets the sequence number of the last self read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.NumberOfUnreadEntries">
            <summary>
            Gets the number of self read entries that have not been read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable26.SelfReadEntries">
            <summary>
            Gets the list of self read entries.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable26.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable26.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable27">
            <summary>
            Standard Table 27 - Present Register Selection
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable27.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable27.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable27.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable27.PresentDemandSelections">
            <summary>
            Gets the list of Present Demand selections
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable27.PresentValueSelections">
            <summary>
            Gets the list of Present Value selections
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable27.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable27.DetermineTableSize(Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable28">
            <summary>
            Standard Table 28 - Present Register Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable28.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable28.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable28.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable28.PresentDemands">
            <summary>
            Gets the list of present demand record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable28.PresentValues">
            <summary>
            Gets the list of present values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable28.ParseData">
            <summary>
            Parses the data that has just been read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable28.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.DemandRecord">
            <summary>
            The demand record used by the 2's decade.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DemandRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.DemandRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the demand record from the binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the demand record.</param>
        </member>
        <member name="M:Itron.Metering.Device.DemandRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the demand record.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the demand record in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.DemandRecord.TimeOfOccurances">
            <summary>
            Gets the time of occurances for the current demand.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DemandRecord.Cum">
            <summary>
            Gets the cummulative demand value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DemandRecord.CCum">
            <summary>
            Gets the continuously cummulative demand value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DemandRecord.Demands">
            <summary>
            Gets all of the demand values for the current Demand.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CoincidentRecord">
            <summary>
            The coincident record used by the 2's decade
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CoincidentRecord.#ctor(Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor.
            </summary>
            <param name="Table21">The Table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.CoincidentRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the record from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the record.</param>
        </member>
        <member name="M:Itron.Metering.Device.CoincidentRecord.Size(Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the record.
            </summary>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the record in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CoincidentRecord.Coincidents">
            <summary>
            Gets the coincident values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DataBlockRecord">
            <summary>
            The data block record used by the 2's decade
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DataBlockRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.DataBlockRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the record from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.DataBlockRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the record.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the record in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.DataBlockRecord.Summations">
            <summary>
            Gets the summation (energy) values.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataBlockRecord.Demands">
            <summary>
            Gets the demand records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataBlockRecord.Coincidents">
            <summary>
            Gets the coincident records.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RegisterDataRecord">
            <summary>
            The register data record used by the 2's decade.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RegisterDataRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.RegisterDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the record from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data for the record.</param>
        </member>
        <member name="M:Itron.Metering.Device.RegisterDataRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the record.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the record in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.RegisterDataRecord.DemandResetCount">
            <summary>
            Gets the demand reset count.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RegisterDataRecord.TotalDataBlock">
            <summary>
            Gets the data record for the current total registers.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RegisterDataRecord.TierDataBlocks">
            <summary>
            Gets the data records for each of the TOU rates.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SelfReadDataRecord">
            <summary>
            The data record for Self Reads used by the 2's decade.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SelfReadDataRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.SelfReadDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the record from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data for the record.</param>
        </member>
        <member name="M:Itron.Metering.Device.SelfReadDataRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the Self Read data record.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.SelfReadDataRecord.SequenceNumber">
            <summary>
            Gets the sequence number for the Self Read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SelfReadDataRecord.SelfReadDate">
            <summary>
            Gets the date and time the Self Read occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SelfReadDataRecord.SeasonIndex">
            <summary>
            Gets the season index when the Self Read occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SelfReadDataRecord.SelfReadRegisters">
            <summary>
            Gets the registers for the Self Read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PresentDemandRecord">
            <summary>
            Represents the Present Demand Data Record used by the 2's decade.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PresentDemandRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.PresentDemandRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to be parsed.</param>
        </member>
        <member name="M:Itron.Metering.Device.PresentDemandRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines the size of the Present Demand record.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the record in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.PresentDemandRecord.TimeRemaining">
            <summary>
            Gets the amount of time remaining in the demand interval.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PresentDemandRecord.DemandValue">
            <summary>
            Gets the value of the present demand.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RegistrationStatus">
            <summary>
            Registration status enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.NotRegisteredMTNotSearching">
            <summary>
            not registered, MT is not currently searching a new operator to register to
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.RegisteredHomeNetwork">
            <summary>
            registered, home network
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.NotRegisteredMTSearching">
            <summary>
            not registered, but MT is currently searching a new operator to register to
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.RegistrationDenied">
            <summary>
            registration denied
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.Unknown">
            <summary>
            unknown
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.RegisteredRoaming">
            <summary>
            registered, roaming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.RegisteredSMSOnlyHomeNetwork">
            <summary>
            registered for "SMS only", home network
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.RegisteredSMSOnlyRoaming">
            <summary>
            registered for "SMS only", roaming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RegistrationStatus.AttachedEmergencyBearerServicesOnly">
            <summary>
            attached for emergency bearer services only
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LinkConnectionState">
            <summary>
            Link Connection State enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LinkConnectionState.LinkDown">
            <summary>
            Link Down
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LinkConnectionState.LinkUp">
            <summary>
            Link Up
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMModuleStatus">
            <summary>
            Link Connection State enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.Initial">
            <summary>
            Default state on fresh device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.ManufacturingState">
            <summary>
            Manufacturing state
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.PriorToContactingConfigurationServer">
            <summary>
            Prior to contacting configuration server
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.AutoConfiguredAttemptingAutoRegister">
            <summary>
            Auto-configured and attempting to auto-register
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.AutoRegisteredWaitingToBeProvisioned">
            <summary>
            Auto-registered with TMS waiting to be provisioned
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMModuleStatus.Provisioned">
            <summary>
            Provisioned
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ERTType">
            <summary>
            ERT Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.TelemetryDevices">
            <summary>
            Telemerty Devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.Phase1TelemetryDevices">
            <summary>
            Phase 1 Telemerty Devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredW">
            <summary>
            100W
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredWPlusLS">
            <summary>
            100W + LS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredWPWE">
            <summary>
            100WP, 100WE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredWPWEPlusLS">
            <summary>
            100WP, 100WE + LS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredWPWEId2">
            <summary>
            100WP, 100WE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OneHundredWPWEPlusLSId2">
            <summary>
            100WP, 100WE + LS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OnehundredG">
            <summary>
            100G
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OnehundredGP2">
            <summary>
            100G P2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OnehundredGP2PlusRD">
            <summary>
            100G P2 + RD
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OnehundredGP3">
            <summary>
            100G P3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.OnehundredGP4">
            <summary>
            100G P4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.MSM">
            <summary>
            MSM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTType.MSMPP">
            <summary>
            MSM PP
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSStatusAlarms">
            <summary>
            The ICS Status Filter Alarms.  Each value represents the bit
            position of the specified alarm.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSStatusAlarms.PowerOutage">
            <summary>The Power outage alarm - Bit 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSStatusAlarms.Tamper">
            <summary>The Tamper alarm - Bit 16 - Set when either the removal or inversion tamper is triggered.</summary>
        </member>
        <member name="T:Itron.Metering.Device.HANModuleStatus">
            <summary>
            An indication of the HAN Modules Status. The HAN module populated or not based on run time detection.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANModuleStatus.DisabledChipNotPopulated">
            <summary>
            HAN Network disabled and chip not populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANModuleStatus.DisabledChipPopulated">
            <summary>
            HAN Network disabled and chip populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANModuleStatus.EnabledChipNotPopulated">
            <summary>
            HAN Network enabled and chip not populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANModuleStatus.EnabledChipPopulated">
            <summary>
            HAN Network enabled and chip populated.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ERTModuleStatus">
            <summary>
            An indication of the ERT Modules Status. The HAN module populated or not based on run time detection.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTModuleStatus.DisabledChipNotPopulated">
            <summary>
            ERT Radio disabled and chip not populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTModuleStatus.DisabledChipPopulated">
            <summary>
            ERT Radio disabled and chip populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTModuleStatus.EnabledChipNotPopulated">
            <summary>
            ERT Radio enabled and chip not populated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTModuleStatus.EnabledChipPopulated">
            <summary>
            ERT Radio enabled and chip populated.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2508ERTData">
            <summary>
            MFG Table 2508 (Itron 460)
            ERT Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2508ERTData.ERT_PAYLOAD_SIZE">
            <summary>
            payload size hardcoded in TDL def for table ... may change
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Int32,Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            Constructor
            </summary>
            <param name="psem">Protocol instance being used by the device.</param>
            <param name="sTIMEFormat">Indicates the format of the time in the meter.</param>
            <param name="Table2510">The actual ERT dimension table.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.Int32,Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="sTIMEFormat">Indicates the format of the time in the meter.</param>
            <param name="Table2510">The actual ERT dimension table.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2508ERTData.ERTConsumptionDataRecords">
            <summary>
            Gets the read time
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.InitializeMembers(System.Int32,Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2508ERTData.DetermineTableSize(System.Int32,System.Byte)">
            <summary>
            This method determines the size of the table.
            </summary>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable">
            <summary>
            MFG Table 2509 (Itron 461)
            ERT Configuration Table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields">
            <summary>
            Enumeration that identifies configuration fields. Enumeration values
            are set to config field offsets.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields.MaxERTRecords">
            <summary>
            Max ERT Records
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields.ERTUtilityID">
            <summary>
            ERT Utility ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields.ERTDataLifetime">
            <summary>
            ERT Data Lifetime
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields.ERTRadio">
            <summary>
            ERT Radio Enabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields.ERTRestingChannelInterval">
            <summary>
            ERT Resting Channel Interval
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Write">
            <summary>
            Writes the specified field to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Write(Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConfigFields)">
            <summary>
            Writes the specified field to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.RestingChannelInterval">
            <summary>
            Resting Channel Interval (in minutes).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ERTRadioEnabled">
            <summary>
            ERT Radio, used to turn the ERT module's transceiver on/off.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.DataLifetime">
            <summary>
            Data Lifetime (in hours).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.UtilityID">
            <summary>
            Utility ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.MaxRecords">
            <summary>
            The max number of data records
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.MaxManagedMeters">
            <summary>
            Maximum managed meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.MaxUnmanagedMeters">
            <summary>
            Maximum unmanaged meters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.MaxManagedThresholdAttempts">
            <summary>
            Maximum managed threshold attempts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ThresholdRSSI">
            <summary>
            Threshold RSSI
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.RSSISamples">
            <summary>
            RSSI samples
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.StealThreshold">
            <summary>
            Steal threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Support100GMeter">
            <summary>
            100G meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Support100WMeter">
            <summary>
            100W meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.Support100WPlusMeter">
            <summary>
            100W plus meter support
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ChannelHopFrequencyMultiplier">
            <summary>
            Channel hop frequency multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.DataStoreMultiplier">
            <summary>
            Data store multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.CampingChannelTimer">
            <summary>
            Camping channel timer.   This value (in seconds) determines how long the ICM will wait
            on a “predicted” channel for a valid 100G packet to arrive at the radio.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ConnDownTime">
            <summary>
            Conn down time. This value determines how long the ICM will wait in hours when there is 
            no data connectivity before releasing the 100Gs it is managing.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.InitializeMembers">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2509ERTConfigurationTable.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2510ERTActual">
            <summary>
            MFG Table 2510 (Itron 462)
            ERT Actual.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2510ERTActual.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2510ERTActual.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2510ERTActual.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2510ERTActual.RecordSize">
            <summary>
            Record size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2510ERTActual.NumberOfStatisticsRecords">
            <summary>
            Number of statistics records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2510ERTActual.NumberOfDataRecords">
            <summary>
            The number of data records
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2510ERTActual.InitializeMembers">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2510ERTActual.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2511ERTStatistics">
            <summary>
            MFG Table 2511 (Itron 463)
            ERT Statistics
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            Constructor
            </summary>
            <param name="psem">Protocol instance being used by the device.</param>
            <param name="Table2510">The actual ERT dimension table.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="Table2510">The actual ERT dimension table.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.ERTStatisiticsRecords">
            <summary>
            Gets the read time
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.InitializeMembers(Itron.Metering.Device.ICMMfgTable2510ERTActual)">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2511ERTStatistics.DetermineTableSize(System.Byte)">
            <summary>
            This method determines the size of the table.
            </summary>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ERTStatisticsRecord">
            <summary>
            The ERT statisitics data table object.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTStatisticsRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTStatisticsRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.ERTStatisticsRecord.Size">
            <summary>
            Gets the size of a data block.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTStatisticsRecord.AverageRSSI">
            <summary>
            Gets the average RSSI
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTStatisticsRecord.FrequencyLast24Hours">
            <summary>
            Gets the frequency in the last 24 hours
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTStatisticsRecord.ERTId">
            <summary>
            Gets ERT serial number
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ERTConsumptionDataRecord">
            <summary>
            The ERT consumption data table object.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTConsumptionDataRecord.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTConsumptionDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.ERTConsumptionDataRecord.Size(System.Int32)">
            <summary>
            Gets the size of a data block.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTConsumptionDataRecord.TimeRecorded">
            <summary>
            Gets the read time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTConsumptionDataRecord.SizeOfERTPayload">
            <summary>
            Gets the size of the ERT payload
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTConsumptionDataRecord.ERTPayload">
            <summary>
            Gets ERT payload.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ERTPayloadDataRecord">
            <summary>
            The ERT payload object.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTPayloadDataRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ERTPayloadDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.ERTPayloadDataRecord.Size(System.Int32,System.Byte)">
            <summary>
            Gets the size of a data block.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTPayloadDataRecord.ERTType">
            <summary>
            Gets the ERT Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTPayloadDataRecord.ERTId">
            <summary>
            Gets the ERT Id / ERT Serial Number / Device Id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTPayloadDataRecord.SequenceCounter">
            <summary>
            Gets the sequence counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTPayloadDataRecord.MessageNumber">
            <summary>
            Gets the message number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ERTPayloadDataRecord.UtilityId">
            <summary>
            Gets the Utility ID
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DestinationAddressRecord">
            <summary>
            Destination Address. Specifies either an email, IP or URL address.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DestinationAddressRecord.AddressType">
            <summary>
            Destination address types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DestinationAddressRecord.AddressType.Unset">
            <summary>
            Unspecified address
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DestinationAddressRecord.AddressType.Reserved">
            <summary>
            Reserved Address (Do Not Use)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DestinationAddressRecord.AddressType.Email">
            <summary>
            E-mail address
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DestinationAddressRecord.AddressType.IP">
            <summary>
            IP address
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DestinationAddressRecord.AddressType.URL">
            <summary>
            URL address
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DestinationAddressRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DestinationAddressRecord.#ctor(Itron.Metering.Device.DestinationAddressRecord.AddressType,System.Byte[])">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DestinationAddressRecord.#ctor(System.Net.IPAddress,System.UInt16)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DestinationAddressRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.DestinationAddressRecord.Write(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the data to the specified binary writer.
            </summary>
            <param name="Writer">The binary reader that contains the data to parse.</param>
        </member>
        <member name="P:Itron.Metering.Device.DestinationAddressRecord.Format">
            <summary>
            Gets the type of destination address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DestinationAddressRecord.DisplayAddress">
            <summary>
            Gets the record's destination address formatted for display.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DestinationAddressRecord.DestinationAddress">
            <summary>
            Sets the record's destination address. Assumes the passed in byte array's length
            equals the length of the destination address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DestinationAddressRecord.AsIPAddress">
            <summary>
            Gets the record's destination address formatted as an IP address.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration">
            <summary>
            ICM Mfg Table 2512 (Itron 464) - Module Configuration.
            MFG Table 2512 (Itron 464)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields">
            <summary>
            Enumeration that identifies configuration fields. Enumeration values
            are set to config field offsets.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.SocketIdleTimeOut">
            <summary>
            Socket Idle Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.GatewayAddress">
            <summary>
            Cellular Gateway
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.DNSAddress">
            <summary>
            Cellular DNS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.NTPAddress">
            <summary>
            Cellular NTP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.ICSStatusFilterLength">
            <summary>
            ICS Status Filter Length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.ICSStatusFilter">
            <summary>
            ICS Status Filter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.PowerFailTime">
            <summary>
            Cellular Power Outage Recognition Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.NTPUpdateFrequency">
            <summary>
            NTP Update Frequency
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.NTPValidTime">
            <summary>
            NTP Valid Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.LinkFailuresThreshold">
            <summary>
            Link Failures Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.TowerChangesThreshold">
            <summary>
            Tower Changes Threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields.SectorIDChangesThreshold">
            <summary>
            Sector ID Changes Threshold
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.Read">
            <summary>
            Full read of 2512 (Mfg 464) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.Write">
            <summary>
            Writes the specified field to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.Write(Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ConfigFields)">
            <summary>
            Writes the specified field to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.IsAlarmSet(Itron.Metering.Device.ICSStatusAlarms)">
            <summary>
            Determines if the given alarm is set in the ICS status filter.
            </summary>
            <returns>Returns whether or not the given alarm is set.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.SocketIdleTimeout">
            <summary>
            Socket Idle Timeout (in seconds).
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.DisplayableGatewayAddress">
            <summary>
            Gateway Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.GatewayAddress">
            <summary>
            Gateway Address.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.DisplayableDNSAddress">
            <summary>
            DNS Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.DNSAddress">
            <summary>
            DNS Address
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.DisplayableNTPAddress">
            <summary>
            NTP Address formatted for display.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.NTPAddress">
            <summary>
            NTP Address
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ICSStatusFilter">
            <summary>
            Sets the ICS status filter. Assumes the passed in byte array's length
            is set to the length of the ICSStatusFilter.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.PowerFailTime">
            <summary>
            The power fail time or the minimum outage required before the ICS module 
            recognizes a power outage.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.NTPUpdateFrequency">
            <summary>
            The NTP update frequency (in hours) is how often the ICS module asks the 
            SNTP server for the time.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.NTPValidTime">
            <summary>
            The NTP valid time (in minutes) is how long the ICS time is valid after
            being recieved from the SNTP server.
            Supported by: OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.LinkFailuresThreshold">
            <summary>
            Link Failures Threshold.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.TowerChangesThreshold">
            <summary>
            Tower Changes Threshold.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.SectorIDChangesThreshold">
            <summary>
            Sector ID Changes Threshold.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.LinkFailuresCounterResetFrequency">
            <summary>
            Link Failures Counter Reset Frequency.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.TowerChangesCounterResetFrequency">
            <summary>
            Tower Changes Counter Reset Frequency.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.SectorIDChangesCounterResetFrequency">
            <summary>
            Sector ID Changes Counter Reset Frequency.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.IsERTPopulated">
            <summary>
            Indicates wheter or not ERT tables are populated.
            Supported by: I-210, kV2c, OW Centron
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.MaximumAPDUSize">
            <summary>
            Reads the maximum APDU size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.IsZigBeePopulated">
            <summary>
            Indicates if ZigBee is populated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ZigBeeAccess">
            <summary>
            Reads the ZigBee access bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.InitializeMembers">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2512ModuleConfiguration.FormatBytesHex(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2515ModuleData">
            <summary>
            ICM Mfg Table Module Data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2515ModuleData.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2515ModuleData.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2515ModuleData.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2515ModuleData.Read">
            <summary>
            Full read of 2515 (Mfg 467) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMFirmwareVersionMajor">
            <summary>
            ICM Major part of the Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.UncachedICMFirmwareVersionMajor">
            <summary>
            Uncached ICM Major part of the Firmware Version. Will be used to verify communications
            with the comm module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMFirmwareVersionMinor">
            <summary>
            ICM Minor part of the Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMFirmwareVersionRevision">
            <summary>
            ICM Firmware Version Revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMExtendedFirmwareVersion">
            <summary>
            ICM Extended Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.HardwareVersionMajor">
            <summary>
            Hardware Version Major
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.HardwareVersionMinor">
            <summary>
            Hardware Version Minor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.NumberSuperCapacitors">
            <summary>
            Number of Super Capacitors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMSerialNumberMajor">
            <summary>
            ICM Module Major part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMSerialNumberBuild">
            <summary>
            ICM Module Build part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMSerialNumberMinor">
            <summary>
            ICM Module Minor part of the Serial Number 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMCPUIDHigh">
            <summary>
            ICM CPU Identifier High 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.ICMCPUIDLow">
            <summary>
            ICM CPU Identifier Low
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.BootLoaderVersionMajor">
            <summary>
            Boot Loader Major part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.BootLoaderVersionMinor">
            <summary>
            Boot Loader Minor part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.BootLoaderVersionRevision">
            <summary>
            Boot Loader Revision part of the version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2515ModuleData.LastPowerFailure">
            <summary>
            Last Power Failure
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2515ModuleData.FormatBytesHex(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2516ModuleStatus">
            <summary>
            ICM Mfg Table Module Status.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
            <param name="deviceClass">the device class for the meter we are logged onto</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.String)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="deviceClass">the device class for the meter we are logged onto</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.Read">
            <summary>
            Full read of 2516 (Mfg 468) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.SuperCapacitorStatus">
            <summary>
            Super Capacitor Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.RebootCount">
            <summary>
            Reboot Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.Uptime">
            <summary>
            Uptime
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.ModuleStatus">
            <summary>
            Module Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.ModuleStatusUncached">
            <summary>
            Module status - does a fresh read of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.ModuleTemperature">
            <summary>
            Module Temperature
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2516ModuleStatus.GetTableLength(System.String)">
            <summary>
            Determines the length of the table
            </summary>
            <param name="deviceClass">the device class for the meter we are logged onto</param>
            <returns>length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.GenericAPNRecord">
            <summary>
            Generic APN record. Specifies the APN, user name and password.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.GenericAPNRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.GenericAPNRecord.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.GenericAPNRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.GenericAPNRecord.Write(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the data to the specified binary writer.
            </summary>
            <param name="Writer">The binary reader that contains the data to parse.</param>
        </member>
        <member name="P:Itron.Metering.Device.GenericAPNRecord.APN">
            <summary>
            Sets the record's APN. Assumes the passed in byte array's length
            equals the length of the APN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GenericAPNRecord.UserName">
            <summary>
            Sets the record's user name. Assumes the passed in byte array's length
            equals the length of the user name.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.GenericAPNRecord.Password">
            <summary>
            Sets the record's password. Assumes the passed in byte array's length
            equals the length of the password.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration">
            <summary>
            ICM Mfg Table 2517 (Itron 469) - Cellular Configuration.
            MFG Table 2517 (Itron 469)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.TimeoutUnits">
            <summary>
            The units used to designate what the cellular data timout value is stored in.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.TimeoutUnits.Hours">
            <summary>
            Hours
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.TimeoutUnits.Minutes">
            <summary>
            Minutes
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSConfiguration">
            <summary>
            SMS configuration options.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSConfiguration.Unset">
            <summary>
            SMS configuration has not been set.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSConfiguration.SMSPingEnabled">
            <summary>
            SMS is configured with Ping enabled.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSConfiguration.SMSTMIEnabled">
            <summary>
            SMS is configured with TMI enabled.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSConfiguration.SMSPingAndTMIEnabled">
            <summary>
            SMS is configured with both Ping and TMI enabled.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields">
            <summary>
            Enumeration that identifies configuration fields. Enumeration values
            are set to config field offsets.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.RadioPhoneNumber">
            <summary>
            Radio Phone Number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.GSMPrimaryAPN">
            <summary>
            GSM Primary APN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.GSMSecondaryAPN">
            <summary>
            GSM Secondary APN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.CellularDataTimeoutUnits">
            <summary>
            Cellular Data Timeout Units
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.CellularDataTimeout">
            <summary>
            Cellular Data Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.SMSOnlyMode">
            <summary>
            SMS Only Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields.SMSConfiguration">
            <summary>
            SMS Configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.Read">
            <summary>
            Full read of 2517 (Mfg 469) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.Write">
            <summary>
            Writes the subtable to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.Write(Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ConfigFields)">
            <summary>
            Writes the subtable to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.RadioPhoneNumber">
            <summary>
            Cellular radio's phone number.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.GSMPrimaryAPN">
            <summary>
            The GSM's primary APN record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.GSMSecondaryAPN">
            <summary>
            The GSM's secondary APN record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.CellularDataTimeoutUnits">
            <summary>
            The units (hours or minutes) that the cellular data timeout is measured in.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.CellularDataTimeout">
            <summary>
            The timeout value for cellular data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSOnlyMode">
            <summary>
            Determines if cellular configuration is set for SMS mode only.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.SMSOperation">
            <summary>
            How SMS is configured.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.InitializeMembers">
            <summary>
            This method initializes all member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2517CellularConfiguration.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2518CellularData">
            <summary>
            ICM Mfg Table Cellular Data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2518CellularData.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2518CellularData.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2518CellularData.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2518CellularData.Read">
            <summary>
            Full read of 2518 (Mfg 470) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.Manufacturer">
            <summary>
            Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.Model">
            <summary>
            Model
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.HardwareVersion">
            <summary>
            Hardware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.FirmwareVersion">
            <summary>
            Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.IMEI_or_ESN_or_MEID">
            <summary>
            IMEI (International Mobile Station Equipment Identity) OR
            ESN (Electronic Serial Number) OR
            MEID (Mobile Equipment IDentifier)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.SIMICCID">
            <summary>
            Subscriber identity module (SIM) integrated circuit card (ICC) identifier (ID)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2518CellularData.IMSIforGSMorMINforCDMA">
            <summary>
            International Mobile Subscriber Identity or IMSI  for Global System for Mobile Communications (GSM) OR
            Mobile identification number (MIN) for Code division multiple access (CDMA) 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2518CellularData.FormatBytesHex(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2519CellularStatus">
            <summary>
            ICM Mfg Table Cellular Status.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.Read">
            <summary>
            Full read of 2519 (Mfg 471) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.SignalStrength">
            <summary>
            Reads signal strength
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.RegistrationStatus">
            <summary>
            Reads registration status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.NetworkMode">
            <summary>
            Reads Network Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.Carrier">
            <summary>
            Reads Network Mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.IPAddress">
            <summary>
            Reads the IP Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.GatewayAddress">
            <summary>
            Reads the Gateway Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.TowerIdentifier">
            <summary>
            Reads the Tower Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.SectorIdentifier">
            <summary>
            Reads the Sector Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.NumberOfCellTowerChanges">
            <summary>
            Reads the Number of Cell Tower Changes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.LinkConnectionState">
            <summary>
            Reads the Link Connection State
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.NetworkConnectionUptime">
            <summary>
            Reads the Network Connection Up Time (seconds)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.CumulativeKBytesSent">
            <summary>
            Reads the Cumulative KiloBytes Sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.CumulativeKBytesReceived">
            <summary>
            Reads the Cumulative KiloBytes Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.BytesSent">
            <summary>
            Reads the Bytes Sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.BytesReceived">
            <summary>
            Reads the Bytes Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.PacketsSent">
            <summary>
            Reads the Packets Delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.PacketsReceived">
            <summary>
            Reads the Packets Received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.LastSuccessfulTowerCommunication">
            <summary>
            Reads the Last Successful Tower Communication
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.NumberOfLinkFailures">
            <summary>
            Reads the Number Of Link Failures
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.ModemTemperature">
            <summary>
            Reads the Modem Temperature
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.LastModemShutdownForTemperature">
            <summary>
            Reads the Last Modem Shutdown For Temperature
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.LastModemPowerUpAfterTemperatureShutdown">
            <summary>
            Reads the Last Modem Power Up After Temperature Shutdown
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.MDNRadioPhoneNumber">
            <summary>
            Reads the MDM Radio Phone Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.NumberOfSectorIdentifierChanges">
            <summary>
            Reads the Number Of Sector Identifier Changes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.TrafficChannelsGoodCRCCount">
            <summary>
            Reads the Traffic Channels - good CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.TrafficChannelsBadCRCCount">
            <summary>
            Reads the Traffic Channels - bad CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.ControlChannelsGoodCRCCount">
            <summary>
            Reads the Control Channels - good CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.ControlChannelsBadCRCCount">
            <summary>
            Reads the Control Channels - bad CRC count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.FigureOfMerit">
            <summary>
            Reads the Figure of Merit (% good CRC count)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2519CellularStatus.CellularCarrier">
            <summary>
            Reads the name of the cellular carrier.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.ConvertIPAddressByteArrayToString(System.Byte[],System.UInt16)">
            <summary>
            Converts the raw IP address in byte[] format to standard string 
            representation
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2519CellularStatus.FormatBytesHex(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2521">
            <summary>
            ICS Mfg ACT Table Event Log Control
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2521.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Table 2521 - Actual Log Dimensions Constructor
            </summary>
            <remarks>Very similar to STD table 71</remarks>
            <param name="psem">PSEM object for this current session</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2521.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2521.Read">
            <summary>
            Reads table ICM Mfg 2521 out of the meter.
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2521.Refresh">
            <summary>
            Provide a way to have us reread the table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2521.ParseData">
            <summary>
            Get the data out of the binary reader and into the member variables.
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.HistoryDateTimeFlag">
            <summary>
            Exposes the History Date Time Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.EventNumberFlag">
            <summary>
            Exposes the Event Number Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.HistorySequenceNumberFlag">
            <summary>
            Exposes the History Sequence Number Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.ICSDataLength">
            <summary>
            Exposes the ICS Data Length
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.NumberICSEntries">
            <summary>
            Exposes the Number of ICS Entries
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.SizeOfTable2524">
            <summary>
            Property that will return the size of 74 based off the values in 71
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.SizeOfEventEntry">
            <summary>
            Property that will return the size of 76 based off the values in 71
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.NumberStandardEvents">
            <summary>
            The number of bytes needed for a bitfield of std events supported
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2521.NumberManufacturerEvents">
            <summary>
            The number of bytes needed for a bitfield of mfg events supported
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2522">
            <summary>
            ICS Mfg Table Events ID
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2522.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICSMfgTable2521)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
            <param name="table2521">MFG ICM Table 2521</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2522.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICSMfgTable2521)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="table2521">MFG ICM Table 2521</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2522.Read">
            <summary>
            Full read of 2522 (Mfg 474) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2522.StdEventsSupported">
            <summary>
            Each bit position in the byte array returned represents a std event.
            If the event is supported, the bit value is 1; otherwise, 0.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2522.MfgEventsSupported">
            <summary>
            Each bit position in the byte array returned represents an mfg event.
            If the event is supported, the bit value is 1; otherwise, 0.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2522.GetTableLength(Itron.Metering.Device.ICSMfgTable2521)">
            <summary>
            Helper method to determine the length of the table.
            </summary>
            <param name="table2521">MFG ICM table 2521</param>
            <returns>length in bytes of table 2522</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2522.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523">
            <summary>
            ICS Mfg Table Event Log Control
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.RESOURCE_FILE_PROJECT_STRINGS">
            <summary>The Resource Project strings</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.UNINTELLIGIBLE_MESSAGE_RECEIVED">
            <summary>Unintelligible Message Received - Index 0</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.FAILURE_TO_SET_METER_TIME">
            <summary>Failure to Set Meter Time - Index 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.SYNCHRONIZATION_TIME_ERROR_IS_TOO_LARGE">
            <summary>Synchronization Time Error is too Large - Index 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.METER_COMMUNICATION_FAULT">
            <summary>Meter Communication Fault - Index 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.METER_COMMUNICATION_REESTABLISHED">
            <summary>Meter Communication Reestablished - Index 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.POWER_OUTAGE_DETECTED">
            <summary>Power Outage Detected - Index 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.METER_ERROR_GREATER_THAN_MAXIMUM_CORRECTABLE_TIME_ERROR">
            <summary>Meter Error Greater than Maximum Correctable Time Error - Index 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_PASSWORD_RECOVERY_DETECTED">
            <summary>Tamper Detection Password Recovery Detected- Index 9</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_TOTAL_DEMAND_RESETS">
            <summary>Tamper Detection Total Demand Resets- Index 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_OPTICAL_PORT_SESSION_IN_PROGRESS">
            <summary>Tamper Detection Optical Port Session in Progress- Index 11</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_DEVICE_RECONFIGURED_REPROGRAMMED">
            <summary>Tamper Detection Reconfigured Reprogrammed- Index 12</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_SERVICE_ERROR_DETECTED">
            <summary>Tamper Detection Service Error Detected- Index 13</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_PASSWORD_FAILURE">
            <summary>Tamper Detection Password Failure- Index 14</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1536_1551.TAMPER_DETECTION_POWER_OUTAGES_RECOGNIZED_BY_SSI_MODULE">
            <summary>Tamper Detection Power Outages Recognized by SSI Module- Index 15</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.TAMPER_DETECTION_POWER_OUTAGES_DUE_TO_LOSS_OF_AC_POWER">
            <summary>Tamper Detection Power Outages Due to Loss of AC Power - Index 16</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.TAMPER_DETECTION_TILT_SWITCH_SET">
            <summary>Tamper Detection Tilt Switch Set - Index 17</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.TAMPER_DETECTION_TILT_SWITCH_CLEARED">
            <summary>Tamper Detection Tilt Switch Cleared - Index 18</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.TAMPER_DETECTION_REMOTE_DISCONNECT_SWITCH_BYPASS">
            <summary>Tamper Detection Disconnect Switch Bypass - Index 19</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.TAMPER_DETECTION_MODULE_INVERTED">
            <summary>Tamper Detection Module Inverted - Index 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.EXTREME_TEMPERATURE_SHUTDOWN">
            <summary>Extreme Temperature Shutdown - Index 21</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.EXTREME_TEMPERATURE_INSERVICE">
            <summary>Extreme Temperature In Service - Index 22</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.FIRMWARE_IMAGE_CORRUPTED">
            <summary>Firmware Image Corrupted - Index 23</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_1">
            <summary>Power Quality Detection Diagnostic 1 - Index 24</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_2">
            <summary>Power Quality Detection Diagnostic 2 - Index 25</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_3">
            <summary>Power Quality Detection Diagnostic 3 - Index 26</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_4">
            <summary>Power Quality Detection Diagnostic 4 - Index 27</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_5">
            <summary>Power Quality Detection Diagnostic 5 - Index 28</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_6">
            <summary>Power Quality Detection Diagnostic 6 - Index 29</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_7">
            <summary>Power Quality Detection Diagnostic 7 - Index 30</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1552_1567.POWER_QUALITY_DETECTION_DIAGNOSTIC_8">
            <summary>Power Quality Detection Diagnostic 8 - Index 31</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.POWER_QUALITY_DETECTION_VOLTAGE_SAG">
            <summary>Power Quality Detection Voltage Sag - Index 32</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.POWER_QUALITY_DETECTION_VOLTAGE_SWELL">
            <summary>Power Quality Detection Voltage Swell - Index 33</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.METER_PASSWORDS_OUT_OF_SYNC">
            <summary>Meter Passwords Out of Sync - Index 34</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_RCDC_COMM_ERROR">
            <summary>RCDC Fault RCDC Comm Error - Index 35</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_SWITCH_CONTROLLER_ERROR">
            <summary>RCDC Fault Switch Controller Error - Index 36</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_SWITCHED_FAILED_TO_CLOSE">
            <summary>RCDC Fault Switch Failed to Close - Index 37</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_ALTERNATE_SOURCE">
            <summary>RCDC Fault Alternate Source - Index 38</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_BYPASSED">
            <summary>RCDC Fault Bypassed - Index 39</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_SWITCH_FAILED_TO_OPEN">
            <summary>RCDC Fault Switch Failed to Open - Index 40</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_PPM_ALERT">
            <summary>RCDC Fault PPM Alert - Index 41</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.RCDC_FAULT_MANUAL_ARM_TIMED_OUT">
            <summary>RCDC Fault Manual Arm Timed Out - Index 42</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.AUTO_REGISTRATION">
            <summary>Auto Registration - Index 43</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.SUCCESSFUL_TIME_SYNC_TIME_CHANGE_OCCURRED">
            <summary>Successful Time Sync Time Change Occurred - Index 44</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.POWER_RESTORATION_DETECTED">
            <summary>Power Restoration Detected- Index 45</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.IP_ADDRESS_REPORT">
            <summary>IP Address Report - Index 46</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1568_1583.DELAYED_RESET_SSI_MODULE_ALARM">
            <summary>Delayed Reset SSI Module Alarm - Index 47</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.METER_COMMUNICATION_STATUS_ALARM">
            <summary>Meter Communication Status Alarm - Index 48</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.EXTENSIBLE_FIRMWARE_DOWNLOAD_STATUS">
            <summary>Extensible Firmware Download Status - Index 49</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.SET_ACTIVE_FIRMWARE_ALARM">
            <summary>Set Active Firmware Alarm - Index 50</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_UPGRADE_DOWNLOAD_ALARM">
            <summary>Firmware Upgrade Download Alarm - Index 51</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_UPGRADE_ACTIVE_ALARM">
            <summary>Firmware Upgrade Active Alarm - Index 52</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_COPYING_FILE">
            <summary>Firmware Download Copying File - Index 53</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_CANCELING">
            <summary>Firmware Download Canceling - Index 54</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_CANCELED">
            <summary>Firmware Download Cancelled - Index 55</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_TOTAL_TIME">
            <summary>Firmware Download Total Time - Index 56</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_SUCCESSFUL">
            <summary>Firmware Download Successful - Index 57</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_REMOVING_INACTIVE_FILES">
            <summary>Firmware Download Removing Inactive Files - Index 58</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_RETRIES_EXCEEDED">
            <summary>Firmware Download Retries Exceeded - Index 59</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_FAILED_WILL_RETRY">
            <summary>Firmware Download Failed Will Retry - Index 60</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_INCORRECT_VERSION">
            <summary>Firmware Download Incorrect Version - Index 61</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_FILE_EXISTS">
            <summary>Firmware Download File Exists - Index 62</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1584_1599.FIRMWARE_DOWNLOAD_ACTIVATING">
            <summary>Firmware Download Activating - Index 63</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.FIRMWARE_DOWNLOAD_SET_ACTIVE_REBOOT">
            <summary>Firmware Download Set Active Reboot - Index 64</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.COMM_LINK_FAILURE">
            <summary>Comm Link Failure - Index 65</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.ICM_REBOOT_MODEM_NOT_RESPONDING">
            <summary>ICM Reboot Modem Not Responding - Index 66</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.INITIAL_MODEM_PROVISION">
            <summary>Initial Modem Provision - Index 67</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.MODEM_PROVISION_FAILED">
            <summary>Modem Provision Failed - Index 68</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.MODEM_PROVISION_SUCCESSFUL">
            <summary>Modem Provision Successful - Index 69</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.MODEM_IDENTITY_ERROR">
            <summary>Modem Identity Error - Index 70</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.CDMA_SUBSCRIPTION_ERROR">
            <summary>CDMA Subscription Error - Index 71</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.MDN_LOGIN_ERROR">
            <summary>MDN Login Error - Index 72</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.RECEIVED_SMS">
            <summary>Received SMS - Index 73</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.GATEWAY_CHANGED">
            <summary>Gateway Changed - Index 74</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.CELLUAR_TIMEOUT_SENT">
            <summary>Cellular Timeout Sent - Index 75</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.CELLUAR_TIMEOUT_RECEIVED">
            <summary>Cellular Timeout Received - Index 76</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.UNKNOWN_METER_TYPE">
            <summary>Unknown Meter Type - Index 77</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.METER_MODEL_I_210C">
            <summary>Meter Model I 210C - Index 78</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1600_1615.METER_MODEL_I_210">
            <summary>Meter Model I 210 - Index 79</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.METER_MODEL_KV2C">
            <summary>Meter Model kV2C - Index 80</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.METER_INVERSION_DETECTED_ON_STARTUP">
            <summary>Meter Inversion Detected on Startup - Index 81</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.MODULE_POWER_FAIL">
            <summary>Module Power Fail - Index 82</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.QUALIFIED_POWER_FAIL">
            <summary>Qualified Power Fail - Index 83</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.ICM_HEATER_ENABLED">
            <summary>ICM Heater Enabled - Index 84</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.ICM_HEATER_DISABLED">
            <summary>ICM Heater Disabled - Index 85</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.CLI_PASSWORD_FAILED">
            <summary>CLI Password Failed - Index 86</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.ICM_ENTERING_QUIET_MODE">
            <summary>ICM Entering Quiet Mode - Index 87</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.ICM_LEAVING_QUIET_MODE">
            <summary>ICM Leaving Quiet Mode - Index 88</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.MAGNETIC_SWIPE_IN_MANUFACTURING_MODE">
            <summary>Magnetic Swipe in Manufacturing Mode - Index 89</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.MAGNETIC_SWIPE_IN_PRODUCTION_MODE">
            <summary>Magnetic Swipe in Production Mode - Index 90</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.MAGNETIC_SWIPE_IGNORED_NOT_IN_NON_COMM">
            <summary>Magnetic Swipe Ignored Not in Non-Comm - Index 91</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.MAGNETIC_SWIPE_IGNORED_CONDITION_NOT_MET">
            <summary>Magnetic Swipe Ignored Condition Not Met - Index 92</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.METER_LOGIN_VIA_OPTICAL_PORT">
            <summary>Meter Login via Optical Port - Index 93</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.METER_LOGOFF_VIA_OPTICAL_PORT">
            <summary>Meter Logoff via Optical Port - Index 94</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1616_1631.CLI_LOGIN_VIA_OPTICAL_PORT">
            <summary>CLI Login via Optical Port - Index 95</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CLI_LOGIN_ATTEMPTED_VIA_OPTICAL_PORT">
            <summary>CLI Login Attempted via Optical Port - Index 96</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CLI_COMMAND_EXECUTED_VIA_OPTICAL_PORT">
            <summary>CLI Command Executed via Optical Port - Index 97</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CLI_LOCKED_OUT_TOO_MANY_LOGIN_ATTEMPTS_VIA_OPTICAL_PORT">
            <summary>CLI Locked Out Too Many Login Attempts via Optical Port - Index 98</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.ZIGBEE_OPTICAL_PASSTHROUGH_STARTED">
            <summary>ZigBee Optical Passthrough Started - Index 99</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.MODEM_OPTICAL_PASSTHROUGH_STARTED">
            <summary>Modem Optical Passthrough Started - Index 100</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.STARTED_C1218_SESSION_VIA_OPTICAL_PORT">
            <summary>Started C12.18 Session via Optical Port - Index 101</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.ICM_CONFIGURATION_CHANGE">
            <summary>ICM Configuration Change - Index 102</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.ICM_STATE_CHANGED">
            <summary>ICM State Changed - Index 103</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.ICM_TIME_UPDATED_FROM_NETWORK">
            <summary>ICM Time Updated From Network - Index 104</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.ICM_TIME_SET_FROM_METER">
            <summary>ICM Time Set From Meter - Index 105</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.TIMESYNCH_STATE_CHANGED">
            <summary>Time Synch State Changed - Index 106</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CLI_IS_DISABLED">
            <summary>CLI is Disabled- Index 107</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CLI_IS_REVERT_ONLY">
            <summary>CLI is Revert Only - Index 108</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.LOADSIDE_VOLTAGE_WHILE_SWITCH_OPEN">
            <summary>Loadside Voltage While Switch Open - Index 109</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.LOADSIDE_VOLTAGE_WHILE_SWITCH_OPEN_CLEAR">
            <summary>Loadside Voltage While Switch Open - Index 110</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1632_1647.CELL_TOWER_CHANGES_EXCEED_THRESHOLD">
            <summary>Loadside Voltage While Switch Open - Index 111</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.SECTOR_CHANGES_EXCEED_THRESHOLD">
            <summary>Sector Changes Exceed Threshold - Index 112</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ACCUMULATOR_READ_FAILURE">
            <summary>Accumulator Read Failure - Index 113</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.CELLULAR_CONNECTION_TIMEOUT_ALARM">
            <summary>Cellular Connection Timeout Alarm - Index 114</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.SMS_WAKEUP_RECEIVED">
            <summary>SMS Wakeup Received - Index 115</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.METER_MODEL_OW_CENTRON">
            <summary>Meter Model OpenWay CENTRON - Index 116</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_SUCCESSFULLY_INITIALIZED_SPI_DRIVER">
            <summary>ERT Successfully Initialized SPI Driver - Index 117</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_CC1121_PART_NUMBER">
            <summary>ERT CC1121 PART NUMBER - Index 118</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ERT_HW_SUCCESSFULLY_INITIALIZED">
            <summary>ERT CC1121 PART NUMBER - Index 119</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ERT_RADIO_TURNED_OFF_IN_ERT_CFG_DATA_TABLE">
            <summary>ERT RADIO TURNED OFF IN ERT CFG DATA TABLE - Index 120</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ERT_CC1121_MANUAL_CALIBRATION_SUCCESSFUL">
            <summary>ERT CC1121 MANUAL CALIBRATION SUCCESSFUL - Index 121</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ERT_MASTER_LIST_INITIALIZATION_CREATION_FAILED">
            <summary>ERT MASTER LIST INITIALIZATION CREATION FAILED - Index 122</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ICM_CAMPING_CHANNEL">
            <summary>ICM camping channel - Index 123</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_ADDING_AN_ERT_METER_READING_TO_OUR_MASTER_LIST">
            <summary>ERT: ADDING AN ERT METER READING TO OUR MASTER LIST - Index 124</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_REACHED_MAX_NUMBER_OF_ERT_METERS">
            <summary>ERT: REACHED MAX NUMBER OF ERT METERS - Index 125</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_INCOMING_ERT_PACKET_CRC_ERROR">
            <summary>ERT: INCOMING ERT PACKET CRC ERROR - Index 126</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1648_1663.ERT_CHANGING_ERT_RESTING_CHANNEL">
            <summary>ERT: CHANGING ERT RESTING CHANNEL - Index 127</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_ERT_RADIO_OFF_FREEZE_PROC_IMC_REJECTED">
            <summary>ERT: ERT RADIO OFF FREEZE PROC IMC REJECTED - Index 128</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_NUMBER_OF_ERTS_WHOSE_RECORDS_WERE_FROZEN">
            <summary>ERT: NUMBER OF ERTS WHOSE RECORDS WERE FROZEN - Index 129</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_RECEIVED_INVALID_TIME_FROM_NTP_TASK">
            <summary>ERT: RECEIVED INVALID TIME FROM NTP TASK - Index 130</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_UNSUCCESSFUL_PDOID_READ">
            <summary>ERT: UNSUCCESSFUL PDOID READ - Index 131</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_242_TX_FAILED">
            <summary>ERT 242 TX FAILED - Index 132</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ADDED_ERT_TO_MANAGED_LIST">
            <summary>Added ERT to Managed List - Index 133</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_TIME_SET_FAILED">
            <summary>ERT Time Set Failed - Index 134</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ICM_EVENT_LOG_CLEARED">
            <summary>ICM Event Log Cleared - Index 135</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.TAMPER_TILT_SET_ON_OUTAGE">
            <summary>TAMPER TILT SET ON OUTAGE (REMOVAL TAMPER) - Index 138</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.CONFIGURATION_COMMIT">
            <summary>Configuration Commit - Index 139</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.FIRMWARE_DOWNLOAD_INITIALIZATION_FAILURE">
            <summary>Firmware Download: Initialization Failure - Index 140</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.HAN_FIRMWARE_DOWNLOAD_FAILURE">
            <summary>HAN Firmware Download Failure - Index 141</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.ERT_242_COMMAND_REQUEST">
            <summary>ERT 242 Command Request - Index 142</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1664_1679.SMS_WAKEUP_IDENTITY_REQUEST_SENT">
            <summary>SMS Wakeup Identity Request Sent - Index 143</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.SMS_WAKEUP_IDENTITY_NOT_SENT_BECAUSE_NOT_REGISTERED">
            <summary>SMS Wakeup Identity Request Not Sent Because Not Registered - Index 144</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.SMS_WAKEUP_IDENTITY_REQUEST_NOT_SENT_BECAUSE_NOT_SYNCHRONIZED">
            <summary>SMS Wakeup Identity Request Not Sent Because Not Synchronized - Index 145</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.FAILED_SECURITY_KEY_VERIFICATION">
            <summary>Failed Security Key Verification - Index 146</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.FAILED_CE_CONFIGURATION_VERIFICATION">
            <summary>Failed CE Configuration Verification - Index 147</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.MIGRATION_STATE_CHANGE">
            <summary>Migration State Change - Index 148</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.CRITICAL_PEAK_PRICING_STATUS">
            <summary>Critical Peak Pricing Status - Index 149</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.SECURITY_EVENT">
            <summary>Security Event - Index 150</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_METER_STOLEN">
            <summary>ERT Meter Stolen - Index 151</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_METER_REMOVED">
            <summary>ERT Meter Removed - Index 152</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_CONNECTION_DOWNTIME_TIME_EXCEEDED">
            <summary>ERT Connection Downtime  Time Exceeded - Index 153</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_PREDICTOR_LIST_TIME_MODIFIED">
            <summary>ERT Predictor List Time Modified - Index 154</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_MANUAL_CALIBRATION_FAILED">
            <summary>ERT CC1121 Manual Calibration Failed - Index 155</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1680_1695.ERT_100G_TRACKING_FAILED">
            <summary>ICM tracking 100G failed - Index 156</summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2523.Event_1696_1711">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1696_1711.TIME_SOURCE_UNAVAILABLE">
            <summary>Time Source Unavailable - Index 165</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1696_1711.SIGNING_KEY_UPDATE_SUCCESS">
            <summary>Signing Key Update Success - Index 166</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1696_1711.SYMMETRIC_KEY_UPDATE_SUCCESS">
            <summary>Symmetric Key Update Success - Index 167</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.Event_1696_1711.KEY_ROLLOVER_SUCCESS">
            <summary>Key Roll Over Success - Index 168</summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICSMfgTable2522,Itron.Metering.Device.ICSMfgTable2521,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
            <param name="table2522">MFG ICM table 2522 object</param>
            <param name="table2521">MFG ICM table 2521 object</param>
            <param name="CommModuleVersion">the firmware version of the ICM</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICSMfgTable2522,Itron.Metering.Device.ICSMfgTable2521,System.Byte)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="table2522">MFG ICM table 2522 object</param>
            <param name="table2521">MFG ICM table 2521 object</param>
            <param name="ICMFWVersion">the firmware version of the ICM</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.Read">
            <summary>
            Full read of 2523 (Mfg 475) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2523.ICSHistoryLogEventList">
            <summary>
            Returns a list of supported events with their descriptions and whether 
            or not they are monitored.  Designed to provide the same information as 
            MFGTable2048.HistoryLogConfig.HistoryLogEventList
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2523.ICSHistoryLogMonitoredEventList">
            <summary>
            Returns a list of monitored events with their descriptions.  Designed to provide
            the same type of information as MFGTable2048.HistoryLogConfig.HistoryLogEventList
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2523.ICSHistoryLogSupportedUserEventList">
            <summary>
            Returns a list of supported user events with their descriptions and whether 
            or not they are monitored.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2523.ICSHistoryLogSupportedNonUserEventList">
            <summary>
            Returns a list of supported non-user events with their descriptions and whether 
            or not they are monitored.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.GetTableLength(Itron.Metering.Device.ICSMfgTable2521)">
            <summary>
            Helper method to determine the length of the table.
            </summary>
            <param name="table2521">ICM MFG table 2521</param>
            <returns>length in bytes of table 73</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.AddSupportedEvents(System.Collections.Generic.List{Itron.Metering.Device.EventEntry}@,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Produces a list of supported events from the information read from standard
            tables 72 and 73
            </summary>
            <param name="SupportedEvents">The list being constructed</param>
            <param name="StdOrMfgEventsSupported">
            Byte array, each bit of which represents a standard or manufacturers event.
            The value of the bit is 1 if the event is supported; 0, if not.
            </param>
            <param name="StdOrMfgEventsMonitored">
            Byte array, each bit of which represents a std or mfg event.
            The value of the bit is 1 if the event is monitored; 0, if not.
            </param>
            <param name="bIsMfgEvent">
            Flag to let us know to add 2048 to the event id.
            </param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.AddMonitoredEvents(System.Collections.Generic.List{Itron.Metering.Device.EventEntry}@,System.Byte[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="MonitoredEvents"></param>
            <param name="StdOrMfgEventsMonitored"></param>
            <param name="bIsMfgEvent"></param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.AddEventItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Adds an event item to the list.
            </summary>
            <param name="strResourceString">The description of the event</param>
            <param name="usEventField">The raw data from the meter</param>
            <param name="usEventMask">The mask to apply to determine whether or not
            the event is enabled</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.GetEventItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Gets the Event Item
            </summary>
            <param name="strResourceString"> The Description of the Event</param>
            <param name="usEventField">The raw data from the device</param>
            <param name="usEventMask">The mast to apply to determ if the event is enabled</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2523.AddEventItem(Itron.Metering.Device.EventEntry)">
            <summary>
            Takes an event entry item, translates the event id into a text description 
            and adds it to the MFG2048EventItem list
            </summary>
            <param name="entry"></param>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_rmStrings">
            <summary>The Resource Manager</summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1536_1551">
            <summary>
            Events 1536-1551
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1552_1567">
            <summary>
            Events 1552-1567
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1568_1583">
            <summary>
            Events 1568-1583
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1584_1599">
            <summary>
            Events 1584-1599
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1600_1615">
            <summary>
            Events 1600-1615
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1616_1631">
            <summary>
            Events 1616-1631
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1632_1647">
            <summary>
            Events 1632-1647
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1648_1663">
            <summary>
            Events 1648-1663
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1664_1679">
            <summary>
            Events 1664-1679
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1680_1695">
            <summary>
            Events 1680-1695
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2523.m_usEvent1696_1711">
            <summary>
            Events 1696-1711
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2524">
            <summary>
            ICS Mfg Table Event Log Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSMfgTable2524.MAX_ENTRIES_IN_ONE_READ">
            <summary>
            We can't read more than 1400 bytes in one offset read.  The following
            constant was determined by trial and error
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2524.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICSMfgTable2521,Itron.Metering.Device.ICS_Gateway_EventDictionary)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
            <param name="table2521">Table 2521 object</param>
            <param name="eventDictionary">The ICS Gateway Event Dictionary</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2524.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICSMfgTable2521,Itron.Metering.Device.ICS_Gateway_EventDictionary,System.Int32)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
            <param name="table2521">Table 2521 object</param>
            <param name="eventDictionary">The ICS Gateway Event Dictionary</param>
            <param name="timeFormat">The time format used in the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2524.Read">
            <summary>
            Full read of 2524 (Mfg 476) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2524.Refresh">
            <summary>
            Provide a way to have us reread the Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2524.CommModuleHistoryEventEntries">
            <summary>
            Access to the History Log Event Collection
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2524.NumberValidEntries">
            <summary>
            Access to the Number of valid Entries count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2524.LastEntryElement">
            <summary>
            Access to the Last Entry Element
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2524.LastEntrySequenceNumber">
            <summary>
            Access to the Last Entry Sequence Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICSMfgTable2524.NumberUnreadEntries">
            <summary>
            Access to the Number of Unread Entries
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2524.ParseFromReader">
            <summary>
            Parses the data from the binary reader. This should not be used when reading data from an actual meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2529CommLanInfo">
            <summary>
            MFG Table 481 (2529) - ICS Comm LAN (ERT and Zigbee) Information.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.Read">
            <summary>
            Full read of table 2529 (ICS Comm LAN) out of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HanModuleType">
            <summary>
            Gets the HAN module Type.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HanModuleBuild">
            <summary>
            Gets the HAN Module firmware build version.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HanModuleVersion">
            <summary>
            Gets the Han module version and revision in the format VERSION.REVISION
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANVersionOnly">
            <summary>
            Gets the Version of the HAN module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANRevisionOnly">
            <summary>
            Gets the Revision of the HAN module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANBuildOnly">
            <summary>
            Gets the Build of the HAN module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HanHardwareVersion">
            <summary>
            Gets the HAN Hardware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HanMacAddress">
            <summary>
            MAC address of the HAN client.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTModType">
            <summary>
            Gets the ERT Module Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTHwVersion">
            <summary>
            Gets the ERT Hardware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTHwRevision">
            <summary>
            Gets the ERT Hardware Revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTModFwVersion">
            <summary>
            Gets the ERT Module Firmware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTModFwRevision">
            <summary>
            Gets the ERT Module Firmware Revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ERTModFwBuild">
            <summary>
            Gets the ERT Module Firmware Build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANAppVersionOnly">
            <summary>
            Gets the Version of the HAN application firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANAppRevisionOnly">
            <summary>
            Gets the Revision of the HAN application firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.HANAppBuildOnly">
            <summary>
            Gets the Build of the HAN application firmware
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.InitializeVariables">
            <summary>
            Initialize Variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.ParseData">
            <summary>
            Parses the data from the specified reader.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2529CommLanInfo.TranslateHanModuleType(System.Byte)">
            <summary>
            Translate the Han Module Type
            </summary>
            <param name="byHanModType">byte value from the device</param>
            <returns>string - HAN Module Type</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2525">
            <summary>
            ICS Mfg Table Force Time Sync Clock Table.  It mirrors the std table 52 clock table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2525.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for this session</param>
            <param name="Table0">The table object for table 0.</param>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2536ActualNetwork">
            <summary>
            Actual table for the ICM exception configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="Reader">The current PSEM binary reader object</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.Read">
            <summary>
            Reads ICM mfg table 2536 out of the meter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.NumberOfExceptionHosts">
            <summary>
            The number of exception hosts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.NumberOfExceptionEvents">
            <summary>
            The number of exception events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2536ActualNetwork.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2537ExceptionReport">
            <summary>
            Class representing the ICM Exception Report Configuration table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2537ExceptionReport.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICMMfgTable2536ActualNetwork)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
            <param name="Table2536">The actual table which gives us the number 
            of exception hosts and the number of exception events configured</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2537ExceptionReport.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICMMfgTable2536ActualNetwork)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="Reader">The current PSEM binary reader object</param>
            <param name="Table2536"></param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2537ExceptionReport.Read">
            <summary>
            Reads ICM mfg table 2537 out of the meter
            </summary>
            <returns>the result of the read attempt</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2537ExceptionReport.GetTableSize(Itron.Metering.Device.ICMMfgTable2536ActualNetwork)">
            <summary>
            Calculates the size of table 2537 based on values read from 2536
            </summary>
            <param name="Table2536">Table 2536 object</param>
            <returns>the size of the table</returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2537ExceptionReport.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExceptionReportRecord">
            <summary>
            Class that represents an exception report record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExceptionReportRecord.#ctor(Itron.Metering.Device.ICMMfgTable2536ActualNetwork)">
            <summary>
            Constructor
            </summary>
            <param name="Table2536">Table 2536 object, which will give us the number of exception events</param>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportRecord.AptitleNotify">
            <summary>
            Gets/sets the Aptitle Notify
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportRecord.MaxNumberOfRetries">
            <summary>
            Gets/sets the max number of retries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportRecord.RetryDelay">
            <summary>
            Gets/sets the retry delay
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportRecord.ExclusionPeriod">
            <summary>
            Gets/sets the exclusion period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportRecord.EventReported">
            <summary>
            Gets/sets the event reported
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2539FWDLComponent">
            <summary>
            ICM Mfg Table FWDL Component. It has the firmware and hardware versions 
            of all the microtypes
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.Read">
            <summary>
            Reads table ICM Mfg 2539 out of the meter.
            </summary>
            <returns>the result of the read attempt</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.MicrotypeRecords">
            <summary>
            Gets the list of microtype records from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.NXPFWVersion">
            <summary>
            Gets the NXP (ERT radio firmware) version from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.ModemFWVersion">
            <summary>
            Gets the modem firmware version from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.PICFWVersion">
            <summary>
            Gets the PIC firmware version from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.ICMModuleFWVersion">
            <summary>
            Gets the ICM module firmware version from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.ICMModuleHWVersion">
            <summary>
            Gets the ICM module hardware version from the table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2539FWDLComponent.IsModemFirmware(System.Byte)">
            <summary>
            Method determines if the firmware type represented by the 
            byte paramater is a modem firmware type.
            </summary>
            <param name="fWType">The byte representing the firmware type</param>
            <returns>Whether or not firmware type is modem firmware</returns>
        </member>
        <member name="T:Itron.Metering.Device.MicrotypeRecord">
            <summary>
            Class representing one entry in the Mfg table 2539 (491) table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MicrotypeRecord.MICROTYPES">
            <summary>
            The firmware types for all the ICM micros
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.ICM_MODULE_FIRMWARE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.MODEM_FIRMWARE_SIERRA_VERIZON_3G">
            <summary>
            
            </summary>            
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.GE_REGISTER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.GE_METERMATE_PROGRAM">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.MODEM_FIRMWARE_SIERRA_ATT_3G">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.MODEM_FIRMWARE_SIERRA_VERIZON_LTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.MODEM_FIRMWARE_SIERRA_ATT_LTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.MODEM_FIRMWARE_SIERRA_ROGERS_LTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.NXP_FIRMWARE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MicrotypeRecord.MICROTYPES.PIC_FIRMWARE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MicrotypeRecord.#ctor">
            <summary>
            Constructor - initializes the member arrays
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MicrotypeRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
            <param name="Reader"></param>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.MicrotypeFirmwareType">
            <summary>
            The firmware type of the mfg table 491 entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.HardwareVersion">
            <summary>
            The hardware version of the microtype in the form of a byte array.
            The members of the array will be version, revision, and reserved
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.FirmwareVersion">
            <summary>
            The firmware version of the microtype in the form of a byte array.
            The members of the array will be version, revision, and build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.FormattedFirmwareVersion">
            <summary>
            Gets the firmware version out of microtype record in the
            form of an x.x string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.FormattedFirmwareBuild">
            <summary>
            Gets the firmware build number out of microtype record in the
            form of a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MicrotypeRecord.MicrotypeName">
            <summary>
            Gets the name of the microtype based on the microtype byte.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual">
            <summary>
            MFG Table 494 - File Retrieval Actual Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Table 2542 - File Retrieval Actual Table
            </summary>
            <param name="psem">PSEM object for this current session</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.Read">
            <summary>
            Reads table ICM Mfg 2542 out of the meter.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.ParseData">
            <summary>
            Get the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.FileRetrievalSize">
            <summary>
            Maximum length of the file retrieval data table. The actual data populated into the table
            might be less, but this value will be given in the return parameter for mfg proc 200, 16,
            and mfg proc 200, 17
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual.FileConfigEntrySize">
            <summary>
            Maximum length of the arrays in mfg table 495 and 496 that hold the file
            and directory names. The file and directory names are ASCII null-terminated
            strings and thus the data is self-describing in terms of actual length
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig">
            <summary>
            MFG Table 495 - File Retrieval Configuration
            Lists the directories from which MFG table 496 will be populated
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual)">
            <summary>
            Table 2543 - File Retrieval Configuration
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="Table2542">Table 2542 object to retrieve the size of each entry</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
            <param name="Table2542">Table 2542 object to retrieve the size of each entry</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.Read">
            <summary>
            Reads table ICM Mfg 2543 out of the meter.
            </summary>
            <returns>success or failure of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.NumberOfEntries">
            <summary>
            The number of directories, file names, or search strings in the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.EntriesList">
            <summary>
            List of null-terminated ASCII strings describing the directory, file name, or search string.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2543FileRetrievalConfig.ParseData">
            <summary>
            Get the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition">
            <summary>
            MFG Table 496 - File List Table
            Lists the files available for retrieval
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual)">
            <summary>
            Table 2544 - File List
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="Table2542">Table 2542 object to retrieve the size of each entry</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.ICMMfgTable2542FileRetrievalActual)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
            <param name="Table2542">Table 2542 object to retrieve the size of each entry</param>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.Read">
            <summary>
            Reads table ICM Mfg 2544 out of the meter.
            </summary>
            <returns>success or failure of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.NumberOfEntries">
            <summary>
            The number of entries in the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.EntriesList">
            <summary>
            The list of file names from the table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICMMfgTable2544FileListTableDefinition.ParseData">
            <summary>
             Get the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSMfgTable2751">
            <summary>
            ICS Mfg Table Comm Module Clock Table.  It mirrors the std table 52 clock table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICSMfgTable2751.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for this session</param>
            <param name="Table0">The table object for table 0.</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2191">
            <summary>
            MFG Table 2191 (Itron 143) class
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2191.C1222Options0Mask">
            <summary>
            Contains the mask for the C12.22 Options 0 bitfield
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2191.ConfigFields">
            <summary>
            Enumeration that identifies configuration fields. Enumeration values
            are set to config field offsets.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2191.ConfigFields.BitmappedOptions0">
            <summary>
            C12.22 Options Bitfield 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2191.ConfigFields.PollPeriodMinutes">
            <summary>
            Poll Period Minutes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2191.ConfigFields.PollFailThresholdMinsHours">
            <summary>
            Poll Fail Threshold Mins/Hours
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2191.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2191.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2191.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2191.MinDeltaSeconds">
            <summary>
            Gets minimum difference that register time will be adjusted to comm module time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2191.MaxDeltaSeconds">
            <summary>
            Gets maximum difference that register time will be adjusted to comm module time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2191.TimePollFailThresholdUseHours">
            <summary>
            Gets/Sets whether or not the time poll fail threshold value is 
            stored as hours (True) or minutes (False).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2191.PollPeriodMinutes">
            <summary>
            Gets/Sets the frequency the register will attempt to read the time from the comm module.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2191.PollFailThresholdMinsHours">
            <summary>
            Gets/Sets the amount of time after which a time adjustment failed event will be recorded
            if the comm module time cannot be successfully aquired.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2191.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2221">
            <summary>
            MFG Table 173 (2221) - Security Information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2221.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2221.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL file.
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2221.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2221.KeysInjected">
            <summary>
            Gets whether or not the meter is Canadian
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2221.KeyType">
            <summary>
            Gets whether or not the meter is Canadian
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2221.ParseData">
            <summary>
            Parses the data that has just been read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2265CTEConfig">
            <summary>
            Class that describes the mfg table 217 object
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265CTEConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265CTEConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265CTEConfig.Read">
            <summary>
            Reads the current per phase threshold config out of Mfg table 217
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265CTEConfig.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEEnable">
            <summary>
            Gets or sets the current threshold exceeded enable field from table 2265, true to enable, false to disable. Set
            is for automated testing only.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEConfigured">
            <summary>
            Gets the current threshold exceeded enable field from table 2265 and
            determines whether or not it has been configured.  CTE can be configured
            but not enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEThreshold">
            <summary>
            Gets or sets the current threshold exceeded threshold field from table 2265
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEHysteresis">
            <summary>
            Gets or sets the current threshold exceeded hysteresis field from table 2265
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEDebounce">
            <summary>
            Gets or sets the Current Threshold Exceeded Debounce field from table 2265
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265CTEConfig.CTEMinActiveDuration">
            <summary>
            Gets or sets the Current Threshold Exceeded minimum active duration from table 2265
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265CTEConfig.ParseCTEConfig">
            <summary>
            Parses the CTE data out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2265ExtendedSelfReadConfig">
            <summary>
            Class for reading through the Extended Self Read configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265ExtendedSelfReadConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265ExtendedSelfReadConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2265ExtendedSelfReadConfig.Read">
            <summary>
            Read sub table
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2265ExtendedSelfReadConfig.ESRConfiguration">
            <summary>
            Publicly accessible ConfigList
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SR2InstQuantity">
            <summary>
            Object for SR2 configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SR2InstQuantity.#ctor(System.UInt32,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="LID"></param>
            <param name="Qualifier"></param>
        </member>
        <member name="M:Itron.Metering.Device.SR2InstQuantity.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SR2InstQuantity.LID">
            <summary>
            Publicly accessible LID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.SR2InstQuantity.Qualifier">
            <summary>
            Publicly accessible Qualifier
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2361">
            <summary>
            MFG Table 2361
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2361.DSTModeBitMask">
            <summary>
            Contains the bit masks for the DST Mode
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2361.BadTimeBitMask">
            <summary>	
            Contains the bit masks for the BadTime
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2361.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2361.Read">
            <summary>
            Full read of 2361 (MFG 313) from the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.LocalTime">
            <summary>
            The local time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.GMTTime">
            <summary>
            The GMT time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.UseDSTMode">
            <summary>
            DST Mode on or off.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.TimeZoneOffset">
            <summary>
            The Time Zone Offset.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.DSTAdjustment">
            <summary>
            The DST Adjustment.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2361.BadTime">
            <summary>
            Returns true of false if the time is bad.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE">
            <summary>
            Source of the request to switch the stack
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.None">
            <summary>
            No request source
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.ActivateRFLANFW">
            <summary>
            Activate RFLAN firmware
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.ChkRFLANInBootload">
            <summary>
            Check RFLAN in Bootloader mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.MonitorRFLANLink">
            <summary>
            Monitor RFLAN Link
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.IPv6StackReset">
            <summary>
            IPv6 Stack Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_SWITCH_REQUEST_SOURCE.MFGProc159">
            <summary>
            Mfg Procedure 159
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.STACK_TYPE">
            <summary>
            Stack Type - RFLAN or IP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_TYPE.C1222">
            <summary>
            RFLAN/C12.22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_TYPE.IP">
            <summary>
            IPv6
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.STACK_TYPE.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2640.COMM_STACK_SWITCH_STATE">
            <summary>
            State of the stack switch
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2640.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2640.Read">
            <summary>
            Full read of 2640 (Mfg 592) from the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.FallbackEnabled">
            <summary>
            Returns whether or not fallback is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.CurrentStackType">
            <summary>
            Which stack is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.LastSwitchTime">
            <summary>
            When did the last stack switch occur
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.StackSwitchCount">
            <summary>
            How many stack switches have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.CommStackSwitchState">
            <summary>
            Reads the state of the stack switch: idle, stack switch requested, or 
            stack switch in progress
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.SwitchToWhichStack">
            <summary>
            Reads the type of stack to which the meter will switch
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.StackAfterLastSwitch">
            <summary>
            Reads the type of stack after the last switch.  Should be the same as
            the current stack type if there has ever been a switch
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.StackBeforeLastSwitch">
            <summary>
            Reads the stack that was active before the last switch
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2640.StackSwitchHistoryRecords">
            <summary>
            Reads the Comm stack switch history from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DualStackSwitchHistoryRecord">
            <summary>
            Class that represents a single stack switch history record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DualStackSwitchHistoryRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DualStackSwitchHistoryRecord.SwitchRequestSource">
            <summary>
            The source of the stack switch request
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DualStackSwitchHistoryRecord.SwitchRequestTime">
            <summary>
            The time the switch was requested
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HAN2LimitRcd">
            <summary>
            HAN2LimitRcd - for Table 2439 and 2440.
            Supports HAN RIB (Residential Inclining Block) pricing. 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HAN2LimitRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HAN2LimitRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified reader.
            </summary>
            <param name="reader">The reader used to parse the data</param>
        </member>
        <member name="M:Itron.Metering.Device.HAN2LimitRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the writable data in this record to the specified writer.
            </summary>
            <param name="Writer">The PSEMBinaryWriter used to write the data.</param>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.ActiveNumberOfBillingPeriods">
            <summary>
            Gets the Number of Billing Periods in the active schedule
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.ActiveNumberOfBlockPeriods">
            <summary>
            Gets the number of block periods in the active schedule
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.ActiveNumberOfBlocks">
            <summary>
            Gets the number of blocks in the active schedule
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.NextNumberOfBillingPeriods">
            <summary>
            Gets or sets the number of billing periods in the next schedule
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.NextNumberOfBlockPeriods">
            <summary>
            Gets or sets the number of block periods in the next schedule
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN2LimitRcd.NextNumberOfBlocks">
            <summary>
            Gets the number of blocks in the next schedule
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2438">
            <summary>
            Table 2438 (ITR1 390)  - Dimension HAN2 Limiting Table.
            Supports HAN RIB (Residential Inclining Block) pricing. 
            </summary>
            <remarks>
              <para>
              This table is used by CHANMfgTable2440and CHANMfgTable2441
              This read-only table is supported only by OpenWay meters.     
              </para>
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2438.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2438.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2438.Read">
            <summary>
            Full read of table 2438
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2438.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.Version">
            <summary>
            Get Version.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.ActiveNbrBillingPeriods">
            <summary>
            Get Number of Billing Periods.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.ActiveNbrBlockPeriods">
            <summary>
            Get Number of Block Periods
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.ActiveNbrBlocks">
            <summary>
            Get Number of Blocks.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.NextNbrBillingPeriods">
            <summary>
            Get Next Number of Billing Periods.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.NextNbrBlockPeriods">
            <summary>
            Get Next Number of Block Periods.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2438.NextNbrBlocks">
            <summary>
            Gets Next Number of Blocks.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2439">
            <summary>
            Table 2439 - Actual HAN2 Limiting Table.
            Supports HAN RIB (Residential Inclining Block) pricing. 
            </summary>
            <remarks>
              <para>
              This table is used by CHANMfgTable2440 and CHANMfgTable2441
              This read/write table is supported only by OpenWay meters.     
              </para>
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2439.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2439.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2439.Read">
            <summary>
            Full read of table 2439
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2439.WriteNextScheduleData">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2439.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.ActiveNbrBillingPeriods">
            <summary>
            Gets the Active Number of Billing Periods (in Table 2440).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.ActiveNbrBlockPeriods">
            <summary>
            Gets the Active Number of Block Periods (in Table 2440).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.ActiveNbrBlocks">
            <summary>
            Gets the Active Number of Blocks (in Table 2440).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.NextNbrBillingPeriods">
            <summary>
            Gets or sets the Next Number of Billing Periods (in Table 2441).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.NextNbrBlockPeriods">
            <summary>
            Gets or sets the Next Number of Block Periods (in Table 2441).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2439.NextNbrBlocks">
            <summary>
            Gets or sets the Next Number of Blocks (in Table 2441).
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConfigBitFieldRcd">
            <summary>
            ConfigBitFieldRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConfigBitFieldRcd.ConfigBitField">
            <summary>
            The bit field definition
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigBitFieldRcd.ConfigBitField.None">
            <summary>No bits are set</summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigBitFieldRcd.ConfigBitField.BlockPricingEnable">
            <summary>Block Pricing is enabled</summary>
        </member>
        <member name="M:Itron.Metering.Device.ConfigBitFieldRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ConfigBitFieldRcd.BlockPricingEnable">
            <summary>
            Set/get Block Price Enable
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ConfigBitFieldRcd.BitField">
            <summary>
            Gets or sets the raw bit field value.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PublishPriceDataEntryRcd">
            <summary>
            PublishPriceDataEntryRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceControlBitField">
            <summary>
            The bit field definition
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceControlBitField.None">
            <summary>No bits are set</summary>
        </member>
        <member name="F:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceControlBitField.PriceAcknowledgement">
            <summary>Block Pricing is enabled</summary>
        </member>
        <member name="M:Itron.Metering.Device.PublishPriceDataEntryRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PublishPriceDataEntryRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            This method parses the data of a publish price data entry record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
            <param name="uiNumberOfRateLabels">The number of rate labels.</param>
        </member>
        <member name="M:Itron.Metering.Device.PublishPriceDataEntryRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter,System.UInt32)">
            <summary>
            This method writes the data of a publish price data entry record to a PSEMBinaryWriter.
            </summary>
            <param name="Writer">PSEM binary Writer to write the record data.</param>
            <param name="uiNumberOfRateLabels">The number of rate labels.</param>
        </member>
        <member name="M:Itron.Metering.Device.PublishPriceDataEntryRcd.GetSize(System.UInt32)">
            <summary>
            This static method returns the size of a publish price data entry record.
            </summary>
            <param name="uiNumberOfRateLabels">The number of rate labels.</param>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.ProviderId">
            <summary>
            Gets or sets the Provider ID.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.Currency">
            <summary>
            Gets or sets the price's currency.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.CurrencySymbol">
            <summary>
            Gets the symbol for the currency in use.  
            </summary>
            <returns>The symbol for the currency or an empty string if none is defined.</returns>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.CurrencyName">
            <summary>
            The text representing the symbol for the local unit of currency 
            used in the price field.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceTrailingDigits">
            <summary>
            Gets or sets the price's decimal trailing digits.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceControl">
            <summary>
            Gets or sets the price control byte.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.PriceAcknowledgementRequired">
            <summary>
            Gets whether price acknowledgement is reqired.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PublishPriceDataEntryRcd.RateLabels">
            <summary>
            Gets or sets the Rate Labels.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BlockPriceEntryRcd">
            <summary>
            BlockPriceEntryRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            This method parses the data of a block price entry record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            This method writes the data of a block price entry record to a PSEMBinaryWriter.
            </summary>
            <param name="Writer">PSEM binary Writer to write the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.FormatThreshold(System.UInt32,System.UInt32,System.String)">
            <summary>
            This method takes the raw threshold, multiplier and divisor and 
            formats them into a displayable string.
            </summary>
            <param name="uiMultiplier">The currency symbol.</param>
            <param name="uiDivisor">The number of trailing decimal digits.</param>
            <param name="strUnits">The units to use to display threshold.</param>
            <returns>A displayable threshold string.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.FormatPrice(System.String,System.Byte)">
            <summary>
            This method takes the raw block price, unit of currency and number of trailing digits and 
            formats them into a displayable string.
            </summary>
            <param name="strCurrencySymbol">The currency symbol.</param>
            <param name="byTrailingDigits">The number of trailing decimal digits.</param>
            <returns>A displayable price string.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.FormatPrice(System.UInt32,System.String,System.Byte)">
            <summary>
            This method takes a raw price, unit of currency and number of trailing digits and 
            formats them into a displayable string.
            </summary>
            <param name="uiPrice">The price.</param>
            <param name="strCurrencySymbol">The currency symbol.</param>
            <param name="byTrailingDigits">The number of trailing decimal digits.</param>
            <returns>A displayable price string.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceEntryRcd.GetSize">
            <summary>
            This static method returns the size of a block price entry record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPriceEntryRcd.BlockPrice">
            <summary>
            Get/Set Block Price
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPriceEntryRcd.BlockThreshold">
            <summary>
            Get/Set Block Threshold (48-bit value)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BlockPriceRcd">
            <summary>
            BlockPriceRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            This method parses the data of a block price record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
            <param name="uiNumberOfNextBlocks">Number of blocks in the next schedule.</param>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter,System.UInt32)">
            <summary>
            This method writes the data of a block price record to a PSEMBinaryWriter.
            </summary>
            <param name="Writer">PSEM binary Writer to write the record data.</param>
            <param name="uiNumberOfNextBlocks">Number of blocks in the next schedule.</param>
        </member>
        <member name="M:Itron.Metering.Device.BlockPriceRcd.GetSize(System.UInt32)">
            <summary>
            This static method returns the size of a block price record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPriceRcd.BlockPrice">
            <summary>
            Gets or sets the Block Price
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BlockPeriodRcd">
            <summary>
            BlockPeriodRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPeriodRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BlockPeriodRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            This method parses the data of a block period record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
            <param name="uiNumberOfBlocks">Number of active blocks</param>
        </member>
        <member name="M:Itron.Metering.Device.BlockPeriodRcd.FormatStandingCharge(System.String,System.Byte)">
            <summary>
            This method unit of currency and number of trailing digits and 
            formats the standing charge into a displayable string.
            </summary>
            <param name="strCurrencySymbol">The currency symbol.</param>
            <param name="byTrailingDigits">The number of trailing decimal digits.</param>
            <returns>A displayable price string.</returns>
        </member>
        <member name="M:Itron.Metering.Device.BlockPeriodRcd.GetSize(System.UInt32)">
            <summary>
            This static method returns the size of a block period record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPeriodRcd.StartTime">
            <summary>
            Gets the start of the block period.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPeriodRcd.BlockPeriodDuration">
            <summary>
            Gets or sets the block period duration (24-bit value)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPeriodRcd.StandingCharge">
            <summary>
            Gets or sets the standing charge
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPeriodRcd.Blocks">
            <summary>
            Gets or sets the blocks
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BlockPeriodRcd.BlockEventIDs">
            <summary>
            Gets or sets the block event ID
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BillingPeriodRcd">
            <summary>
            BillingPeriodRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BillingPeriodRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BillingPeriodRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            This method parses the data of a billing period record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.BillingPeriodRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            This method writes the data of a billing period record to a PSEMBinaryWriter.
            </summary>
            <param name="Writer">PSEM binary Writer containing the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.BillingPeriodRcd.GetSize">
            <summary>
            This static method returns the size of a billing period record.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BillingPeriodRcd.BillingPeriodStart">
            <summary>
            Gets or sets the BillingPeriodStart.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BillingPeriodRcd.BillingPeriodDuration">
            <summary>
            Gets or sets the BillingPeriodDuration
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.NextBlockPeriodRcd">
            <summary>
            NextBlockPeriodRcd - for Table 2440 and 2441.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.NextBlockPeriodRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.NextBlockPeriodRcd.GetSize">
            <summary>
            This static method returns the size of a next block period record.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.NextBlockPeriodRcd.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            This method parses the data of a next block period record.
            </summary>
            <param name="Reader">PSEM binary reader containing the record data.</param>
        </member>
        <member name="M:Itron.Metering.Device.NextBlockPeriodRcd.WriteData(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            This method writes the data of a next block period record to a PSEMBinaryWriter.
            </summary>
            <param name="Writer">PSEM binary writer.</param>
        </member>
        <member name="P:Itron.Metering.Device.NextBlockPeriodRcd.StartOfBlockPeriod">
            <summary>
            Gets or sets start of the block period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.NextBlockPeriodRcd.BlockPeriodDuration">
            <summary>
            Gets or sets the duration of the Block Period (24-bit value)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.NextBlockPeriodRcd.StandingCharge">
            <summary>
            Gets or sets the standing charge
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2440">
            <summary>
            Table 2440 - Active Block Price Schedule TABLE.
            Supports HAN RIB (Residential Inclining Block) pricing.
            </summary>
            <remarks>
              <para>
              This readonly table is supported only by OpenWay meters.     
              </para>
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2439">Dimension Table</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="table2439">Dimension Table</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.Read">
            <summary>
            Full read of table 2440
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.ToString">
            <summary>
            Provide a string for pretty printout
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.GetTableLength(Itron.Metering.Device.CHANMfgTable2439,System.Boolean)">
            <summary>
            Helper method to determine the length of the table.  The length depends on number of elements in the table as 
            defined in the Actual Limiting Table.
            </summary>
            <param name="table2439">Mfg Table 2439 object</param>
            <param name="ShouldRead2439">Allows us to prevent a read of 2439 when dealing with EDL files</param>
            <returns>the length in bytes of table</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2440.ParseData(Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
            <param name="table2439">Mfg Table 2439 object</param>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.BlockPricingEnabled">
            <summary>
            Gets whether or not block pricing is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.ScheduleId">
            <summary>
            Get/Set Schedule ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.CurrentHANTime">
            <summary>
            Gets the current HAN time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.CurrentBlockPeriodConsumptionDelivered">
            <summary>
            Gets the current block period's consumption delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.PreviousBlockPeriodConsumptionDelivered">
            <summary>
            Gets the previous block period's consumption delivered value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.ActiveBlockPeriod">
            <summary>
            Gets the active block period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.ActiveBillingPeriod">
            <summary>
            Gets the active billing period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.PublishPriceData">
            <summary>
            Gets the publish price data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.Multiplier">
            <summary>
            Gets the multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.Divisor">
            <summary>
            Gets the divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.BillingPeriods">
            <summary>
            Gets the billing periods
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2440.BlockPeriods">
            <summary>
            Gets the block periods
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2441">
            <summary>
            Table 2441 - Next Block Price Schedule TABLE.
            Supports HAN RIB (Residential Inclining Block) pricing.
            </summary>
            <remarks>
              <para>
              This read/write table is supported only by OpenWay meters.     
              </para>
            </remarks>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2441.NextBlockPriceScheduleStatus">
            <summary>
            Activation Mode for Table 2441.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2441.NextBlockPriceScheduleStatus.WAITING_FOR_COMMIT">
            <summary>Tables have been Written, Ready for Commit</summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2441.NextBlockPriceScheduleStatus.COMMITTED">
            <summary>Tables have been committed</summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2441.NextBlockPriceScheduleStatus.WAITING_FOR_VALID_SCHEDULE">
            <summary>No Data, need to write to tables</summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2441.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2439">Dimension table</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2441.Read">
            <summary>
            Full read of table 2441
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2441.Write">
            <summary>
            Write table to the Meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2441.GetTableLength(Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Helper method to determine the length of the table.  The length depends on number of elements in the table as 
            defined in the Actual Limiting Table.
            </summary>
            <param name="table2439">Mfg Table 2439 object</param>
            <returns>the length in bytes of table</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2441.ParseData(Itron.Metering.Device.CHANMfgTable2439)">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
            <param name="table2439">Mfg Table 2439 object</param>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.Configuration">
            <summary>
            Get/Set Configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.ScheduleId">
            <summary>
            Get/Set Schedule Id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.PublishPriceData">
            <summary>
            Get/Set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.Multiplier">
            <summary>
            Get/Set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.Divisor">
            <summary>
            Get/Set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.BillingPeriods">
            <summary>
            Gets or sets the Billing Periods
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.BlockPeriodData">
            <summary>
            Gets or sets the Block Period Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.BlockPrices">
            <summary>
            Gets or sets the block prices
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.NextTableState">
            <summary>
            Get/Set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2441.TableLength">
            <summary>
            Get/Set
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2549">
            <summary>
            The IPMfgTable2549 class handles the reading of the IPv6 Address Information table (501).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2549.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2549.Read">
            <summary>
            Full read of 2549 (Mfg 501) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2549.IPv6AddressLong">
            <summary>
            Reads the long version of the IP address from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2549.IPv6AddressShort">
            <summary>
            Reads the IPv6 short address from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2549.IPv6GlobalAddressPresent">
            <summary>
            Reads the IPv6 Global Address Present field from the table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2559">
            <summary>
            The IPMfgTable 2559 class handles the reading of the IPv6 Secure PPP Information (511)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2559.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2559.Read">
            <summary>
            Full read of 2559 (Mfg 511) out of the meter
            </summary>
            <returns>the response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2559.PSKResident">
            <summary>
            Gets the PSK Resident field from the table.  This tells us if
            security is used for the PPP link
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2580">
            <summary>
            The IPMfgTable2580 class handles the reading of the IPv6 Manufacturing Information
            table (532).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2580.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2580.Read">
            <summary>
            Full read of 2580 (Mfg 532) out of the meter
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.RegFWVersionInfo">
            <summary>
            Reads the Register firmware version information from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.RegBootloaderVersionInfo">
            <summary>
            Reads the Register bootloader version information from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModuleFWVersionInfo">
            <summary>
            Reads the Comm module firmware version information from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModuleBootloaderVersionInfo">
            <summary>
            Reads the Comm module bootloader version information from the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModuleMACAddress">
            <summary>
            Reads the Comm Module MAC address out of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.NeighborMACAddress">
            <summary>
            Reads the Neighbor MAC address out of the table via an offset read
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModulePANId">
            <summary>
            Reads the Comm Module PAN Id out of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModuleJTAGSecurityEnabled">
            <summary>
            Reads the Comm Module JTAG status out of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.ModuleLinkStatus">
            <summary>
            Reads the Comm Module link status out of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2580.SSID">
            <summary>
            Reads the SSID out of the table.  Warning! Only for firmware 5.2.33 and above.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2588">
            <summary>
            The IPMfgTable2588 class handles the reading of the Diagnostics Dimension table (540)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2588.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2588.Read">
            <summary>
            Full read of 2588 (Mfg 540) out of the meter
            </summary>
            <returns>The PSEM response for the table read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2588.TLVListLength">
            <summary>
            Gets the number of TLVs supported by the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2588.CSMPSupportedTLVs">
            <summary>
            Gets the list of the supported TLV Ids supported by the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2588.CSMPTLVSizes">
            <summary>
            Gets the list of the total size of the TLV data.  Listed in the same order as the
            supported TLVs, so that we can use the offset in the supported TLVs to find the 
            length in this list.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2588.CSMPTLVItemCounts">
            <summary>
            Gets list of sizes of the TLV record.  The offset in this list
            will be the same as the offset in the supported TLVs list
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2597">
            <summary>
            The IPMfgTable2597 class handles the reading of the Boron TLV Current Time table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2597.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">the PSEM object for the device</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2597.Read">
            <summary>
            Full read of 2597 (Mfg 549) out of the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2597.CommModuleCurrentTime">
            <summary>
            Gets the comm module's current time from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2597.SourceID">
            <summary>
            Last sync source
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2602">
            <summary>
            The IPMfgTable2602 class handles the reading of the Boron IP Route Metrics table (554)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2602.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.IPMfgTable2588)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
            <param name="table2588"></param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2602.Read">
            <summary>
            Full read of table 2602 (TLV IP Route Metrics) out of the meter.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2602.IPRouteMetrics">
            <summary>
            Returns a list of the IP Route Metrics items
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2602.GetTableSize(Itron.Metering.Device.IPMfgTable2588)">
            <summary>
            Returns the size of the table
            </summary>
            <param name="table2588">The size of the table depends on Mfg table 540</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2604">
            <summary>
            The IPMfgTable2604 class handles the reading of the Boron TLV Neighbors table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2604.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.IPMfgTable2588)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2604.Read">
            <summary>
            Full read of table 2604 (TLV Neighbor Table) out of the meter.
            </summary>
            <returns>The PSEM response for the table read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2604.Neighbors">
            <summary>
            Returns a list of Comm Module neighbor records
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2604.GetTableSize(Itron.Metering.Device.IPMfgTable2588)">
            <summary>
            Returns the size of the table
            </summary>
            <param name="table2588">The size of the table depends on Mfg table 540</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2608">
            <summary>
            The IPV6 Status Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2608.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2608.Read">
            <summary>
            Full read of table 2608 out of the meter.
            </summary>
            <returns>The PSEM response for the table read</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2608.CommenceTimer">
            <summary>
            Returns the value of the commence timer.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPMfgTable2611">
            <summary>
            The IPMfgTable2611 class handles the reading of the Boron UIP Stack Statistics table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2611.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
            <param name="fltRegFWVersion">The register FW version for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2611.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2611.UDPDropped">
            <summary>
            Reads the number of UDP packets dropped using an offset read
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2611.IPSent">
            <summary>
            Reads the number of IP packets sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2611.IPReceived">
            <summary>
            Reads the number of IP packets reveived
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2611.UDPCheckError">
            <summary>
            Reads the number of UDP check errors using an offset read
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IPMfgTable2611.IPv6Dropped">
            <summary>
            Reads the number of IPv6 packets that have been dropped using an offset read
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2611.GetTableSize(System.Single)">
            <summary>
            Returns the size of the table
            </summary>
            <param name="fltRegFWRevision">the firmware version running in the meter</param>
            <returns>the size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.IPMfgTable2611.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TLVRouteMetricsItem">
            <summary>
            Class that represents a single Route Metrics Item
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TLVRouteMetricsItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.InetCidrRouteIndex">
            <summary>
            InetCidrRouteIndex field.  Must be non-zero to be valid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.InstanceIndex">
            <summary>
            Instance Index field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.Rank">
            <summary>
            Rank field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.Hops">
            <summary>
            Hops.  Have to add 1 to the value read from the table to determine
            the number of hops from the CG Mesh
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.PathEtx">
            <summary>
            Path Etx.  Have to divide table value by 256 for display.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.LinkEtx">
            <summary>
            Link Etx. Have to divide table value by 256 for display.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.RssiForward">
            <summary>
            RSSI forward
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.RssiReverse">
            <summary>
            RSSI reverse
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.LqiForward">
            <summary>
            LQI forward
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVRouteMetricsItem.LqiReverse">
            <summary>
            LQI reverse
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TLVNeighborsItem">
            <summary>
            Class that represents a single Comm Module neighbor record.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TLVNeighborsItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVNeighborsItem.Index">
            <summary>
            Index field.  Must be non-zero to be valid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVNeighborsItem.PhysicalAddress">
            <summary>
            Physical address of the neighbor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVNeighborsItem.LastChanged">
            <summary>
            Last changed field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVNeighborsItem.RssiForward">
            <summary>
            RSSI forward
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TLVNeighborsItem.RssiReverse">
            <summary>
            RSSI reverse
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FirmwareVersionInfo">
            <summary>
            Class to represent the firmware version info object from Mfg table 532
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FirmwareVersionInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FirmwareVersionInfo.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="byType">firmware type</param>
            <param name="byVersion">firmware version</param>
            <param name="byRevision">firmware revision</param>
            <param name="byBuild">firmware build</param>
        </member>
        <member name="P:Itron.Metering.Device.FirmwareVersionInfo.Type">
            <summary>
            Gets/sets the firmware type 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FirmwareVersionInfo.Version">
            <summary>
            Gets/sets the firmware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FirmwareVersionInfo.Revision">
            <summary>
            Gets/sets the firmware revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FirmwareVersionInfo.Build">
            <summary>
            Gets/sets the firmware build
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.NotchInfo">
            <summary>
            Class to represent the notch information object from Mfg table 532
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.NotchInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.NotchInfo.StartChannel">
            <summary>
            Gets/sets the start channel of the notch info
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.NotchInfo.StopChannel">
            <summary>
            Gets/sets the stop channel of the notch info
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DwellInfo">
            <summary>
            Class to represent the dwell information object from Mfg table 532
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DwellInfo.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DwellInfo.Window">
            <summary>
            Gets/sets the Window field of the Dwell Info object
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DwellInfo.MaxDwell">
            <summary>
            Gets/sets the Max Dwell field of the Dwell info object
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2GatewayTable2048">
            <summary>
            M2 Gateway's Mfg table 2048.  This table is different from other OpenWay meters.
            It has only the event configuration, the configuration date, DST enabled, 
            and customer serial number
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2048.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2048.Read">
            <summary>
            Reads Mfg table 2048 out of the meter
            </summary>
            <returns>Result code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2048.CustomerSerialNumber">
            <summary>
            Customer Serial Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2048.DateProgrammed">
            <summary>
            Gets the date of the last configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2048.DSTEnabled">
            <summary>
            Returns whether or not DST is enabled in the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2048.ParseData">
            <summary>
            Reads the contents of the table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2GatewayTable2108">
            <summary>
            M2 Gateway's Mfg table 2108
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2108.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2108.Read">
            <summary>
            Full read of M2 Gateway's table 2108 out of the meter
            </summary>
            <returns>Result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommModuleType">
            <summary>
            Returns the type - RFLAN or IP
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommModuleTypeByte">
            <summary>
            Gets Comm Module type as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommModuleVersion">
            <summary>
            Gets the Comm Module version.revision from 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommModuleBuild">
            <summary>
            Gets the Comm Module firmware build number from 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommVersionOnly">
            <summary>
            Gets the Version of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommRevisionOnly">
            <summary>
            Gets the Revision of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.CommBuildOnly">
            <summary>
            Gets the Build of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HanModuleType">
            <summary>
            Gets the HAN type from table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HanModuleTypeByte">
            <summary>
            Gets the HAN Module type as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HanModuleVersion">
            <summary>
            Gets the firmware version of the ZigBee module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HanModuleBuild">
            <summary>
            Gets the firmware build of the ZigBee module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.GatewayModuleVersion">
            <summary>
            Gets the firmware version.revision of the Gateway module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.GatewayModuleBuild">
            <summary>
            Gets the Gateway module firmware build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleVersion">
            <summary>
            Gets the L+G M2 module register firmware version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleVersionOnly">
            <summary>
            Gets the Version of the L+G M2 module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleRevisionOnly">
            <summary>
            Gets the Revision of the L+G M2 module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleBuild">
            <summary>
            Gets the L+G M2 module register firmware build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleBuildOnly">
            <summary>
            Gets the Build of the L+G M2 module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HANModuleTypeByte">
            <summary>
            Gets HAN Module type as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HANVersionOnly">
            <summary>
            Gets the Version of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HANRevisionOnly">
            <summary>
            Gets the Revision of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.HANBuildOnly">
            <summary>
            Gets the Build of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2GVersionOnly">
            <summary>
            Gets the Version of the M2 Gateway firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2GRevisionOnly">
            <summary>
            Gets the Revision of the M2 Gateway firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2GBuildOnly">
            <summary>
            Gets the build of the M2 Gateway firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleEngVerOnly">
            <summary>
            L+G Firmware Engineering Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleEngVer">
            <summary>
            L+G Firmware Engineering Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2108.M2ModuleFCNOnly">
            <summary>
            L+G firmware FCN
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2108.ParseData">
            <summary>
            Reads the contents of the table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2GatewayTable2205">
            <summary>
            M2 Gateway's Mfg table 2205
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2205.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object</param>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2205.Read">
            <summary>
            Full read of M2 Gateway's table 2205 out of the meter
            </summary>
            <returns>Result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2205.IsFatalErrorPresent">
            <summary>
            Determines whether a fatal error has occurred in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2205.FatalErrorReason">
            <summary>
            Gets the reason the Fatal Error occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2205.FatalErrors">
            <summary>
            Gets the fatal errors field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.M2GatewayTable2205.FatalErrorStatus">
            <summary>
            Gets the status of the fatal error. Can be interpreted to determine if
            a core dump exists, if fatal error recovery is enabled, and if the meter
            is in fatal error recovery mode
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2GatewayTable2205.ParseData">
            <summary>
            Reads the contents of the table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig">
            <summary>
            Class that represents the history log configuration data stored in table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EVENT_CONFIG_SIZE">
            <summary>
            
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.PRIMARY_POWER_DOWN">
            <summary>Power Outage - Index 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.PRIMARY_POWER_UP">
            <summary>Power Restored - Index 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.CLEAR_BILLING_DATA">
            <summary>Clear Billing Data - Index 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.BILLING_SCHED_EXPIRED">
            <summary>Billing Schedule Expirted - Index 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.DST_TIME_CHANGE">
            <summary>DST Time Change - Index 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.CLOCK_RESET">
            <summary>Clock Reset - Index 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.DEMAND_THRESHOLD_EXCEEDED">
            <summary>Demand Threshold Exceeded - Index 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.DEMAND_THRESHOLD_RESTORED">
            <summary>Demand Threshold Restored - Index 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.LOGON_SUCCESSFUL">
            <summary>Logon Successful - Index 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.SECURITY_SUCCESSFUL">
            <summary>Security Successful - Index 12</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.SECURITY_FAILED">
            <summary>Security Failed - Index 13</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_0_15.LOAD_PROFILE_RESET">
            <summary>Load Profile Reset - Index 14</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.HIST_LOG_CLEARED">
            <summary>History Log Cleared - Index 16</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.HIST_PTRS_UPDATED">
            <summary>History Pointers Updated - Index 17</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.EVENT_LOG_CLEARED">
            <summary>Event Log Cleared - Index 18</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.EVENT_LOG_PTRS_UPDATED">
            <summary>Event Log Pointers Updated - Index 19</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.DEMAND_RESET">
            <summary>Demand Reset - Index 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.SELF_READ_OCCURRED">
            <summary>Self Read Occurred - Index 21</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.INPUT_CHANNEL_HI">
            <summary>Input Channel Hi - Index 22</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.INPUT_CHANNEL_LO">
            <summary>Input Channel Low - Index 23</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.TOU_SEASON_CHANGED">
            <summary>TOU Season Changed - Index 24</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.RATE_CHANGE">
            <summary>TOU Rate Change - Index 25</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.EXTERNAL_EVENT">
            <summary>External Event - Index 26</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.SITESCAN_OR_CUSTOM_SCHED_ERROR">
            <summary>SiteScan for AMI; Custom Schedule Changed - V and I and C12.19 - Index 27</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.PENDING_TABLE_ACTIVATION">
            <summary>Pending table Activation - Index 28</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.SITESCAN_OR_PENDING_TABLE_CLEAR">
            <summary>SiteScan for Non-AMI; Pending Table Clear for AMI - Index 29</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.VQ_LOG_PTRS_UPDATED">
            <summary>VQ Log Pointers Updated - Index 30</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_16_31.VQ_LOG_NEARLY_FULL">
            <summary>VQ Log Nearly Full - Index 31</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.ENTER_TEST_MODE">
            <summary>Enter Test Mode - Index 32</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.EXIT_TEST_MODE">
            <summary>Exit Test Mode - Index 33</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.ABC_PH_ROTATION_ACTIVE">
            <summary>ABC Phase Rotation Active - Index 34</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.CBA_PH_ROTATION_ACTIVE">
            <summary>CBA Phase Rotation Active - Index 35</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.METER_REPROGRAMMED">
            <summary>Meter Reprogrammed - Index 36</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.ILLEGAL_CONFIG_ERROR">
            <summary>Illegal Configuration Error - Index 37</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.CPC_COMM_ERROR">
            <summary>CPC Communication Error - Index 38</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.REVERSE_ROTATION_RESTORE">
            <summary>Reverse Rotation Restored - Index 39</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.VQ_LOG_CLEARED">
            <summary>VQ Log Cleared - Index 40</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.TOU_SCHEDULE_ERROR">
            <summary>TOU Schedule Error - Index 41</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.MASS_MEMORY_ERROR">
            <summary>Mass Memory Error - Index 42</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.LOSS_OF_PHASE_RESTORE">
            <summary>Loss of Phase Restore - Index 43</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.LOW_BATTERY">
            <summary>Low Battery - Index 44</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.LOSS_VOLTAGE_A_OR_LOSS_OF_PHASE">
            <summary>Loss of Voltage phase A or Loss of Phase for OpenWay- Index 45</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.REGISTER_FULL_SCALE">
            <summary>Register Full Scale - Index 46</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_32_47.REVERSE_POWER_FLOW_RESTORE">
            <summary>Reverse Power Flow Restore - Index 47</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.REVERSE_POWER_FLOW">
            <summary>Reverse Power Flow - Index 48</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG1_ACTIVE">
            <summary>Site Scan Diagnostic 1 Active - Index 49</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG2_ACTIVE">
            <summary>Site Scan Diagnostic 2 Active - Index 50</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG3_ACTIVE">
            <summary>Site Scan Diagnostic 3 Active - Index 51</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG4_ACTIVE">
            <summary>Site Scan Diagnostic 4 Active - Index 52</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG5_ACTIVE">
            <summary>Site Scan Diagnostic 5 Active - Index 53</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG1_INACTIVE">
            <summary>Site Scan Diagnostic 1 Inactive - Index 54</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG2_INACTIVE">
            <summary>Site Scan Diagnostic 2 Inactive - Index 55</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG3_INACTIVE">
            <summary>Site Scan Diagnostic 3 Inactive - Index 56</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG4_INACTIVE">
            <summary>Site Scan Diagnostic 4 Inactive - Index 57</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG5_INACTIVE">
            <summary>Site Scan Diagnostic 5 Inactive - Index 58</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG6_ACTIVE">
            <summary>Site Scan Diagnostic 6 Active - Index 59</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SS_DIAG6_INACTIVE">
            <summary>Site Scan Diagnostic 6 Inactive - Index 60</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.SELF_READ_CLEARED">
            <summary>Self Read Cleared - Index 61</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.INVERSION_TAMPER">
            <summary>Inversion Tamper - Index 62</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_48_63.REMOVAL_TAMPER">
            <summary>Removal tamper - Index 63</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.REG_DWLD_FAILED">
            <summary>Register Firmware Download Failed - Index 66</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.REG_DWLD_SUCCEEDED">
            <summary>Register Firmware Download Succeeded - Index 67</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.RFLAN_DWLD_SUCCEEDED">
            <summary>RFLAN Firmware Download Succeeded - Index 68</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.ZIGBEE_DWLD_SUCCEEDED">
            <summary>ZigBee Firmware Download Succeeded - Index 69</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.DISP_DWLD_SUCCEEDED">
            <summary>Display Firmware Download Succeeded - Index 72</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_64_79.DISP_DWLD_FAILED">
            <summary>Display Firmware Download Failed - Index 73</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_80_95">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_80_95.ZIGBEE_DWLD_FAILED">
            <summary>ZigBee Firmware Download Failed - Inxed 81</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_80_95.RFLAN_DWLD_FAILED">
            <summary>RFLAN Firmware Download Failed - Index 82</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_80_95.SITESCAN_ERROR_CLEAR">
            <summary>SiteScan Error Cleared - Index 84</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_80_95.LOAD_FIRMWARE">
            <summary>Load Firmare - Index 85</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_96_111">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_96_111.RESET_COUNTERS">
            <summary>Reset Counter - Index 101</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_112_127">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_112_127.FATAL_ERROR">
            <summary>Fatal Error - Index 121</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_112_127.SERVICE_LIMITING_ACTIVE_TIER_CHANGED">
            <summary>Service Limiting Active Tier Changed - Index 126</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_128_143">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_128_143.TABLE_WRITTEN">
            <summary>Table Written</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_128_143.BASE_MODE_ERROR">
            <summary>Base Mode Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_128_143.PENDING_RECONFIGURE">
            <summary>Pending Table Activated</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_128_143.EVENT_TAMPER_CLEARED">
            <summary>Event Tamper Cleared - Index 141</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_144_159">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_144_159.LAN_HAN_LOG_RESET">
            <summary>HAN/LAN Log Reset - Index 148</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_144_159.DISP_DWLD_INITIATED">
            <summary>Display Firmware Download Initiated - Index 151</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.PENDING_TABLE_ACTIVATE_FAIL">
            <summary>Pending Table Activate Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_DEVICE_STATUS_CHANGE">
            <summary>HAN Device Status Change</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_LOAD_CONTROL_EVENT_SENT">
            <summary>HAN Load Control Event Sent</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_LOAD_CONTROL_EVENT_STATUS">
            <summary>HAN Load Control Event Status</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_LOAD_CONTROL_EVENT_OPT_OUT">
            <summary>HAN Load Control Event Opt Out</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_MESSAGING_EVENT">
            <summary>HAN Messaging Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.HAN_DEVICE_ADDED_OR_REMOVED">
            <summary>HAN Device Added or Removed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.DISP_DWLD_INITIATION_FAILED">
            <summary>Display Firmware Download Initiation Failed - Index 168</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.REG_DWLD_INITIATED">
            <summary>Register Firmware Download Initiated - Index 169</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.RFLAN_DWLD_INITIATED">
            <summary>RFLAN Firmware Download Initiated - Index 170</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.ZIGBEE_DWLD_INITIATED">
            <summary>ZigBee Firmware Download Initiated - Index 171</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.REG_DWLD_INITIATION_FAILED">
            <summary>Register Firmware Download Initiation Failed - Index 172</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.RFLAN_DWLD_INITIATION_FAILED">
            <summary>RFLAN Firmware Download Initiation Failed - Index 173</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.ZIGBEE_DWLD_INITIATION_FAILED">
            <summary>ZigBee Firmware Download Initiation Failed - Index 174</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_160_175.REG_FW_DWLD_STATUS">
            <summary>Register Firmware Download Status - Index 175</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.RFLAN_FW_DWLD_STATUS">
            <summary>RFLAN Firmawre Download Status - Index 176</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.ZIGBEE_FW_DWLD_STATUS">
            <summary>ZigBee Firmware Download Status - Index 177</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REG_DWLD_ALREADY_ACTIVE">
            <summary>Register Firmware Download Alreaday Active - Index 178</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.RFLAN_DWLD_ALREADY_ACTIVE">
            <summary>RFLAN Firmware Download Already Active - Index 179</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.THIRD_PARTY_HAN_FW_DWLD_STATUS">
            <summary>Third Party HAN Device Firmware Download Status - Index 181</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.FW_DWLD_ABORT">
            <summary>Firmware Download Abort - Index 184</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REMOTE_CONNECT_FAILED">
            <summary>Remote Connect Failed - Index 185</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REMOTE_DISCONNECT_FAILED">
            <summary>Remote Disconnected Failed - Index 196</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REMOTE_DISCONNECT_RELAY_ACTIVATED">
            <summary>Remote Disconnect Relay Activated - Index 187</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REMOTE_CONNECT_RELAY_ACTIVATED">
            <summary>Remote Connect Relay Activated - Index 188</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_176_191.REMOTE_CONNECT_RELAY_INITIATED">
            <summary>Remote Connect Relay Initiated - Index 189/// </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_192_207">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_192_207.CRITICAL_PEAK_PRICING">
            <summary>Critical Peak Pricing - Index 192</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_208_223">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_208_223.BILLING_SCHEDULE_CHANGE">
            <summary>Billing Schedule Change - Index 213</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.NETWORK_HUSH_STARTED">
            <summary>Network Hush Started</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.LOAD_VOLT_PRESENT">
            <summary>Load Voltage Preset - Index 230</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.PENDING_TABLE_CLEAR_FAIL">
            <summary>Firmware Download Aborted - Index 231</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.PENDING_TABLE_FULL">
            <summary>Pending Table Full - Index 232</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.PENDING_TABLE_SWAP">
            <summary>Pending Table Swap - Index 233</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.EVENT_SCHEDULING_REJECTED">
            <summary>Event Scheduling Rejected - Index 234</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.C12_22_REGISTRATION_ATTEMPT">
            <summary>C12.22 Registration Attempt - Index 235</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.C12_22_REGISTERED">
            <summary>C12.22 Registered - Index 236</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.C12_22_DEREGISTRATION_ATTEMPT">
            <summary>C12.22 Deregistration Attempt - Index 237</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.C12_22_DEREGISTERED">
            <summary>C12.22 Deregistered - Index 238</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_224_239.C12_22_RFLAN_CELL_ID_CHANGE">
            <summary>C12.22 RFLAN Cell ID Change - Index 239/// </summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.TIME_ADJUSTMENT_FAILED">
            <summary>Time Adjustment Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.EVENT_CACHE_OVERFLOW">
            <summary>Event Cache Overflow - Index 241</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.RMS_VOLTAGE_BELOW_LOW_THRESHOLD">
            <summary>RMS Voltage Bleow Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.VOLT_RMS_ABOVE_THRESHOLD">
            <summary>Volt(RMS) Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.VOLT_HOUR_BELOW_LOW_THRESHOLD">
            <summary>Volt Hour Below Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.VOLT_HOUR_ABOVE_THRESHOLD">
            <summary>VOlt Hour Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.PENDING_TABLE_ERROR">
            <summary>Pending Table Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.SECURITY_EVENT">
            <summary>Security Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.KEY_ROLLOVER_PASS">
            <summary>Key Rollover Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.SIGN_KEY_REPLACE_PROCESSING_PASS">
            <summary>Sign Key Rpelace Processing Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_240_255.SYMMETRIC_KEY_REPLACE_PROCESSING_PASS">
            <summary>Symmetric Key Replace Processing Pass</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_256_271">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event. This range is
            for the M2 Gateway only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_256_271.GW_CONFIGURATION_DOWNLOAD">
            <summary>Gateway Configuration Download</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_272_287">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event.  This range is
            for the M2 Gateway only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Event_272_287.GW_PLACEHOLDER_EVENT">
            <summary>placeholder for future events</summary>
        </member>
        <member name="T:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID">
            <summary>
            The IDs associated with each event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.POWER_OUTAGE">
            <summary>Power Outage - Index 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.POWER_RESTORED">
            <summary>Power Restored - Index 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.CLEAR_BILLING_DATA">
            <summary>Clear Billing Data - Index 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.BILLING_SCHED_EXPIRED">
            <summary>Billing Schedule Expirted - Index 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DST_TIME_CHANGE">
            <summary>DST Time Change - Index 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.CLOCK_RESET">
            <summary>Clock Reset - Index 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DEMAND_THRESHOLD_EXCEEDED">
            <summary>Demand Threshold Exceeded - Index 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DEMAND_THRESHOLD_RESTORED">
            <summary>Demand Threshold Restored - Index 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOGON_SUCCESSFUL">
            <summary>Logon Successful - Index 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SECURITY_SUCCESSFUL">
            <summary>Security Successful - Index 12</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SECURITY_FAILED">
            <summary>Security Failed - Index 13</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOAD_PROFILE_RESET">
            <summary>Load Profile Reset - Index 14</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HIST_LOG_CLEARED">
            <summary>History Log Cleared - Index 16</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HIST_PTRS_UPDATED">
            <summary>History Pointers Updated - Index 17</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EVENT_LOG_CLEARED">
            <summary>Event Log Cleared - Index 18</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EVENT_LOG_PTRS_UPDATED">
            <summary>Event Log Pointers Updated - Index 19</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DEMAND_RESET">
            <summary>Demand Reset - Index 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SELF_READ_OCCURRED">
            <summary>Self Read Occurred - Index 21</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.INPUT_CHANNEL_HI">
            <summary>Input Channel Hi - Index 22</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.INPUT_CHANNEL_LO">
            <summary>Input Channel Low - Index 23</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.TOU_SEASON_CHANGED">
            <summary>TOU Season Changed - Index 24</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RATE_CHANGE">
            <summary>TOU Rate Change - Index 25</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EXTERNAL_EVENT">
            <summary>External Event - Index 26</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SITESCAN_OR_CUSTOM_SCHED_ERROR">
            <summary>SiteScan for AMI; Custom Schedule Changed - V and I and C12.19 - Index 27</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_ACTIVATION">
            <summary>Pending table Activation - Index 28</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SITESCAN_OR_PENDING_TABLE_CLEAR">
            <summary>SiteScan for Non-AMI; Pending Table Clear for AMI - Index 29</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VQ_LOG_PTRS_UPDATED">
            <summary>VQ Log Pointers Updated - Index 30</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VQ_LOG_NEARLY_FULL">
            <summary>VQ Log Nearly Full - Index 31</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ENTER_TEST_MODE">
            <summary>Enter Test Mode - Index 32</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EXIT_TEST_MODE">
            <summary>Exit Test Mode - Index 33</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ABC_PH_ROTATION_ACTIVE">
            <summary>ABC Phase Rotation Active - Index 34</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.CBA_PH_ROTATION_ACTIVE">
            <summary>CBA Phase Rotation Active - Index 35</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.METER_REPROGRAMMED">
            <summary>Meter Reprogrammed - Index 36</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ILLEGAL_CONFIG_ERROR">
            <summary>Illegal Configuration Error - Index 37</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.CPC_COMM_ERROR">
            <summary>CPC Communication Error - Index 38</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REVERSE_ROTATION_RESTORE">
            <summary>Reverse Rotation Restored - Index 39</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VQ_LOG_CLEARED">
            <summary>VQ Log Cleared - Index 40</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.TOU_SCHEDULE_ERROR">
            <summary>TOU Schedule Error - Index 41</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.MASS_MEMORY_ERROR">
            <summary>Mass Memory Error - Index 42</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOSS_OF_PHASE_RESTORE">
            <summary>Loss of Phase Restore - Index 43</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOW_BATTERY">
            <summary>Low Battery - Index 44</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOSS_VOLTAGE_A_OR_LOSS_OF_PHASE">
            <summary>Loss of Voltage phase A or Loss of Phase for OpenWay- Index 45</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REGISTER_FULL_SCALE">
            <summary>Register Full Scale - Index 46</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REVERSE_POWER_FLOW_RESTORE">
            <summary>Reverse Power Flow Restore - Index 47</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REVERSE_POWER_FLOW">
            <summary>Reverse Power Flow - Index 48</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG1_ACTIVE">
            <summary>Site Scan Diagnostic 1 Active - Index 49</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG2_ACTIVE">
            <summary>Site Scan Diagnostic 2 Active - Index 50</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG3_ACTIVE">
            <summary>Site Scan Diagnostic 3 Active - Index 51</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG4_ACTIVE">
            <summary>Site Scan Diagnostic 4 Active - Index 52</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG5_ACTIVE">
            <summary>Site Scan Diagnostic 5 Active - Index 53</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG1_INACTIVE">
            <summary>Site Scan Diagnostic 1 Inactive - Index 54</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG2_INACTIVE">
            <summary>Site Scan Diagnostic 2 Inactive - Index 55</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG3_INACTIVE">
            <summary>Site Scan Diagnostic 3 Inactive - Index 56</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG4_INACTIVE">
            <summary>Site Scan Diagnostic 4 Inactive - Index 57</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG5_INACTIVE">
            <summary>Site Scan Diagnostic 5 Inactive - Index 58</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG6_ACTIVE">
            <summary>Site Scan Diagnostic 6 Active - Index 59</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SS_DIAG6_INACTIVE">
            <summary>Site Scan Diagnostic 6 Inactive - Index 60</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SELF_READ_CLEARED">
            <summary>Self Read Cleared - Index 61</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.INVERSION_TAMPER">
            <summary>Inversion Tamper - Index 62</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOVAL_TAMPER">
            <summary>Removal tamper - Index 63</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_DWLD_FAILED">
            <summary>Register Firmware Download Failed - Index 66</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_DWLD_SUCCEEDED">
            <summary>Register Firmware Download Succeeded - Index 67</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_DWLD_SUCCEEDED">
            <summary>RFLAN Firmware Download Succeeded - Index 68</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ZIGBEE_DWLD_SUCCEEDED">
            <summary>ZigBee Firmware Download Succeeded - Index 69</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DISP_DWLD_SUCCEEDED">
            <summary>Display Firmware Download Succeeded - Index 72</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DISP_DWLD_FAILED">
            <summary>Display Firmware Download Failed - Index 73</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ZIGBEE_DWLD_FAILED">
            <summary>ZigBee Firmware Download Failed - Inxed 81</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_DWLD_FAILED">
            <summary>RFLAN Firmware Download Failed - Index 82</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SITESCAN_ERROR_CLEAR">
            <summary>SiteScan Error Cleared - Index 84</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOAD_FIRMWARE">
            <summary>Load Firmare - Index 85</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RESET_COUNTERS">
            <summary>Reset Counter - Index 101</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.FATAL_ERROR">
            <summary>Fatal Error - Index 121</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SERVICE_LIMITING_ACTIVE_TIER_CHANGED">
            <summary>Service Limiting Active Tier Changed - Index 126</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.TABLE_WRITTEN">
            <summary>Table Written</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.BASE_MODE_ERROR">
            <summary>Base Mode Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_RECONFIGURE">
            <summary>Pending Table Activated</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EVENT_TAMPER_CLEARED">
            <summary>Event Tamper Cleared - Index 141</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LAN_HAN_LOG_RESET">
            <summary>HAN/LAN Log Reset - Index 148</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DISP_DWLD_INITIATED">
            <summary>Display Firmware Download Initiated - Index 151</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_ACTIVATE_FAILED">
            <summary>Pending Table Activate Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_DEVICE_STATUS_CHANGE">
            <summary>HAN Device Status Change</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_SENT">
            <summary>HAN Load Control Event Sent</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_STATUS">
            <summary>HAN Load Control Event Status</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_OPT_OUT">
            <summary>HAN Load Control Event Opt Out</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_MESSAGING_EVENT">
            <summary>HAN Messaging Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.HAN_DEVICE_ADDED_OR_REMOVED">
            <summary>HAN Device Added or Removed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.DISP_DWLD_INITIATION_FAILED">
            <summary>Display Firmware Download Initiation Failed - Index 168</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_DWLD_INITIATED">
            <summary>Register Firmware Download Initiated - Index 169</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_DWLD_INITIATED">
            <summary>RFLAN Firmware Download Initiated - Index 170</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ZIGBEE_DWLD_INITIATED">
            <summary>ZigBee Firmware Download Initiated - Index 171</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_DWLD_INITIATION_FAILED">
            <summary>Register Firmware Download Initiation Failed - Index 172</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_DWLD_INITIATION_FAILED">
            <summary>RFLAN Firmware Download Initiation Failed - Index 173</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ZIGBEE_DWLD_INITIATION_FAILED">
            <summary>ZigBee Firmware Download Initiation Failed - Index 174</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_FW_DWLD_STATUS">
            <summary>Register Firmware Download Status - Index 175</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_FW_DWLD_STATUS">
            <summary>RFLAN Firmawre Download Status - Index 176</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.ZIGBEE_FW_DWLD_STATUS">
            <summary>ZigBee Firmware Download Status - Index 177</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REG_DWLD_ALREADY_ACTIVE">
            <summary>Register Firmware Download Alreaday Active - Index 178</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RFLAN_DWLD_ALREADY_ACTIVE">
            <summary>RFLAN Firmware Download Already Active - Index 179</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.THIRD_PARTY_HAN_FW_DWLD_STATUS">
            <summary>Third Party HAN Device Firmware Download Status - Index 181</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.FW_DWLD_ABORT">
            <summary>Firmware Download Abort - Index 184</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOTE_CONNECT_FAILED">
            <summary>Remote Connect Failed - Index 185</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOTE_DISCONNECT_FAILED">
            <summary>Remote Disconnected Failed - Index 186</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOTE_DISCONNECT_RELAY_ACTIVATED">
            <summary>Remote Disconnect Relay Activated - Index 187</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOTE_CONNECT_RELAY_ACTIVATED">
            <summary>Remote Connect Relay Activated - Index 188</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.REMOTE_CONNECT_RELAY_INITIATED">
            <summary>Remote Connect Relay Initiated - Index 189/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.CRITICAL_PEAK_PRICING">
            <summary>Critical Peak Pricing - Index 192/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.BILLING_SCHEDULE_CHANGE">
            <summary>Billing Schedule Change - Index 213</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.NETWORK_HUSH_STARTED">
            <summary>Network Hush Started</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.LOAD_VOLT_PRESENT">
            <summary>Load Voltage Preset - Index 230</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_CLEAR_FAILED">
            <summary>Firmware Download Aborted - Index 231</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_FULL">
            <summary>Pending Table Full - Index 232</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_SWAP">
            <summary>Pending Table Swap - Index 233</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EVENT_SCHEDULING_REJECTED">
            <summary>Event Scheduling Rejected - Index 234</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.C12_22_REGISTRATION_ATTEMPT">
            <summary>C12.22 Registration Attempt - Index 235</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.C12_22_REGISTERED">
            <summary>C12.22 Registered - Index 236</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.C12_22_DEREGISTRATION_ATTEMPT">
            <summary>C12.22 Deregistration Attempt - Index 237</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.C12_22_DEREGISTERED">
            <summary>C12.22 Deregistered - Index 238</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.C12_22_RFLAN_CELL_ID_CHANGE">
            <summary>C12.22 RFLAN Cell ID Change - Index 239/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.TIME_ADJUSTMENT_FAILED">
            <summary>Time Adjustment Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.EVENT_CACHE_OVERFLOW">
            <summary>Event Cache Overflow - Index 241</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.RMS_VOLTAGE_BELOW_LOW_THRESHOLD">
            <summary>RMS Voltage Bleow Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VOLT_RMS_ABOVE_THRESHOLD">
            <summary>Volt(RMS) Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VOLT_HOUR_BELOW_LOW_THRESHOLD">
            <summary>Volt Hour Below Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.VOLT_HOUR_ABOVE_THRESHOLD">
            <summary>VOlt Hour Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.PENDING_TABLE_ERROR">
            <summary>Pending Table Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SECURITY_EVENT">
            <summary>Security Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.KEY_ROLLOVER_PASS">
            <summary>Key Rollover Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SIGN_KEY_REPLACE_PROCESSING_PASS">
            <summary>Sign Key Rpelace Processing Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.SYMMETRIC_KEY_REPLACE_PROCESSING_PASS">
            <summary>Symmetric Key Replace Processing Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.EventID.GW_CONFIGURATION_DOWNLOAD">
            <summary>M2 Gateway only event - configuration download</summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for M2 Gateway History Log Config class
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The offset of this config block</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.Read">
            <summary>
            Reads the HistoryLogConfig component and populates its fields
            </summary>
            <returns>PSEMResponse</returns>
        </member>
        <member name="P:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.HistoryConfiguration">
            <summary>
            History Configuration - Only lists items that are in the Configuration 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.AddEventConfigItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Adds an event item to the Configuration list.
            </summary>
            <param name="strResourceString">The description of the event</param>
            <param name="usEventField">The raw data from the meter</param>
            <param name="usEventMask">The mask to apply to determine whether or not
            the event is enabled</param>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.GetEventItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Gets the Event Item
            </summary>
            <param name="strResourceString"> The Description of the Event</param>
            <param name="usEventField">The raw data from the device</param>
            <param name="usEventMask">The mast to apply to determ if the event is enabled</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.ParseData">
            <summary>
            Get the data out of the PSEMBinaryRead and into the member variables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent0_15">
            <summary>Events 0-15</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent16_31">
            <summary>Events 16-31</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent32_47">
            <summary>Events 32-47</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent48_63">
            <summary>Events 48-63</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent64_79">
            <summary>Events 64-79</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent80_95">
            <summary>Events 80-95</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent96_111">
            <summary>Events 96-111</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent112_127">
            <summary>Events 112-127</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent128_143">
            <summary>Events 128-143</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent144_159">
            <summary>Events 144-159</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent160_175">
            <summary>Events 160-175</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent176_191">
            <summary>Events 176-191</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent192_207">
            <summary>Events 192-207</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent208_223">
            <summary>Events 208-223</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent224_239">
            <summary>Events 224- 239</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent240_255">
            <summary>Events 240-255</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent256_271">
            <summary>Events 256-271</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_usEvent272_279">
            <summary>Events 272-279</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_rmStrings">
            <summary>The Resource Manager</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.RESOURCE_FILE_PROJECT_STRINGS">
            <summary>The Resource Project strings</summary>
        </member>
        <member name="F:Itron.Metering.Device.M2_Gateway_HistoryLogConfig.m_lstEventConfiguration">
            <summary>Event Configuration list</summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2389">
            <summary>
            MFG Table 341 (2389) - MFG Actual Sources Limiting Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2389.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2389.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor
            </summary>
            <param name="reader">The binary reader containing the table data</param>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2392">
            <summary>
            MFG Table 344 (2392) - MFG Data Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2392.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2389)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2389">The table 2389 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2392.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2389)">
            <summary>
            Constructor
            </summary>
            <param name="reader">The binary reader containing the table data</param>
            <param name="table2389">The table 2389 object for the current device</param>
        </member>
        <member name="T:Itron.Metering.Device.IPPhases">
            <summary>
            Phases used by Meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPPhases.Invalid">
            <summary>
            Invalid Phase
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPPhases.PHASE_A">
            <summary>
            Phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPPhases.PHASE_AC">
            <summary>
            Phases A and C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPPhases.PHASE_ABC">
            <summary>
            Phase A, B, and C
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGLPDataSet">
            <summary>
            Tables used for each load profile data set.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MFGLPDataSet.Set1">
            <summary>
            Table for set 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MFGLPDataSet.Set2">
            <summary>
            Table for set 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MFGLPDataSet.Set3">
            <summary>
            Table for set 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MFGLPDataSet.Set4">
            <summary>
            Table for set 4
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2409">
            <summary>
            MFG Table 361 (2409) - Actual MFG Load Profile Limit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2409.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="table0">The Table 0 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2409.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The PSEM result from the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2409.MapLPSetToTable(Itron.Metering.Device.LPDataSet)">
            <summary>
            Maps the specified table set to the corresponding table number
            </summary>
            <param name="set">The table set to map</param>
            <returns>The table number that maps to the set</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2409.DetermineTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Returns the size of table 2408 based on the values in table 0
            </summary>
            <param name="Table0">The Table 0 object.</param>
            <returns>The size of table 2408.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2410">
            <summary>
            MFG Table 362 (2410) - Load Profile Control Table 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2410.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2392)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="table2409">The Table 2408 object for the current device</param>
            <param name="Table2392">The Table 2392 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2410.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="table0">The Table 0 object for the current device.</param>
            <param name="table2409">The Table 61 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2411">
            <summary>
            MFG Table 363 (2411) - Load Profile Status Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2411.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="table0">The Table 0 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2411.MapLPSetToTable(Itron.Metering.Device.LPDataSet)">
            <summary>
            Maps the specified table set to the corresponding table number
            </summary>
            <param name="set">The table set to map</param>
            <returns>The table number that maps to the set</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2411.DetermineTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Returns the size of table 2408 based on the values in table 0
            </summary>
            <param name="Table0">The Table 0 object.</param>
            <returns>The size of table 2408.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2412">
            <summary>
            MFG Table 364 (2412) - Load Profile Data Set 1
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2412.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table0">The table 0 object for the current device.</param>
            <param name="table2409">The table 61 object for the current device.</param>
            <param name="table2410">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2412.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="table2409">The Table 61 object for the current device.</param>
            <param name="table2410"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2413">
            <summary>
            MFG Table 365 (2413) - Load Profile Data Set 2
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2413.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table0">The table 0 object for the current device.</param>
            <param name="table2409">The table 61 object for the current device.</param>
            <param name="table2410">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2413.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="table2409">The Table 61 object for the current device.</param>
            <param name="table2410"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2414">
            <summary>
            MFG Table 366 (2414) - Load Profile Data Set 3
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2414.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table0">The table 0 object for the current device.</param>
            <param name="table2409">The table 61 object for the current device.</param>
            <param name="table2410">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2414.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="table2409">The Table 61 object for the current device.</param>
            <param name="table2410"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2415">
            <summary>
            MFG Table 367 (2415) - Load Profile Data Set 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2415.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table0">The table 0 object for the current device.</param>
            <param name="table2409">The table 61 object for the current device.</param>
            <param name="table2410">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2415.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2409,Itron.Metering.Device.OpenWayMFGTable2410)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="table2409">The Table 61 object for the current device.</param>
            <param name="table2410"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2417">
            <summary>
            MFG Table 369 (2417) - Instrumentation Profile Channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2417.TABLESIZE">
            <summary>
            Size of Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2417.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table0">The table 0 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2417.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The PSEM result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2417.ChannelsUsed">
            <summary>
            Channels Used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2417.NumberOfChannels">
            <summary>
            Number of Channels Used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2417.PhasesUsed">
            <summary>
            Which Phases are being recorded
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2053">
            <summary>
            MFG Table 2053 - Previous Demand Reset Data - 2ND TO LAST
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2053.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2053.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table0">The table 0 object</param>
            <param name="table21">The table 21 object</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2053.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2053.DemandResetDate">
            <summary>
            Gets the end date and time of the last demand reset.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2053.DemandResetSeasonIndex">
            <summary>
            Gets the season index for the last demand reset.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2053.DemandResetRegisterData">
            <summary>
            Gets the register data for the last demand reset.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2053.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable21)">
            <summary>
            Determines that size of the table.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table21">The table 21 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2053.ParseData">
            <summary>
            Parse that data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FWDownloadLogEvent">
            <summary>
            FW Download Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID">
            <summary>
            The event number that identifies a particular firmware Download log event.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.RegisterFirmwareActivated">
            <summary>
            Register Firmware Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.CommFirmwareActivated">
            <summary>
            RFLAN Firmware Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.ThirdPartyFirmwareActivated">
            <summary>
            Third Party Firmware Activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.AutoSealMeter">
            <summary>
            Auto Seal Meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.SealMeter">
            <summary>
            Seal Meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.FWDownloadLogEventID.UnsealMeter">
            <summary>
            Unseal Meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.Create(System.UInt16)">
            <summary>
            Creates the Firmware Download event object based on the event ID
            </summary>
            <param name="eventID">The event ID for the event to create</param>
            <returns>The new Upstream HAN event object</returns>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.Equals(Itron.Metering.Device.FWDownloadLogEvent)">
            <summary>
            Determines if the Firmware download events are equal
            </summary>
            <param name="other">The Upstream event to compare to</param>
            <returns>True if the event numbers are the same. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to a readable string
            </summary>
            <returns>The argument data as a readable string</returns>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.Description">
            <summary>
            Gets the Description of the event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.EventID">
            <summary>
            Gets the Event Number of the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.TimeOccurred">
            <summary>
            Gets the Date and Time the event occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.EventNumber">
            <summary>
            Gets the event number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.SequenceNumber">
            <summary>
            Gets the sequence number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.UserID">
            <summary>
            Gets the User ID of the user that caused the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.ImageCRC">
            <summary>
            Gets the Image CRC for the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.ImageHash">
            <summary>
            Gets the Image Hash
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.ImageVersionCurrent">
            <summary>
            Gets the Image Version Current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.ImageVersionPrevious">
            <summary>
            Gets the Image Version Previous
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.Argument">
            <summary>
            Gets the event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="eventID">The event number</param>
        </member>
        <member name="P:Itron.Metering.Device.FWDownloadLogEvent.TimeFormat">
            <summary>
            Gets or sets the time format to use
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.GetEntrySize(Itron.Metering.Device.OpenWayMFGTable2379,System.UInt32)">
            <summary>
            Gets the size of an individual FW Download event log entry
            </summary>
            <param name="table2379">The Table 2379 object for the current device</param>
            <param name="ltimeSize">The size of an LTIME data type</param>
            <returns>The size of the entry in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FWDownloadLogEvent.DetermineDescription">
            <summary>
            Determines the description for the event.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_TimeFormat">
            <summary>
            Time Format
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_EventID">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_strDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_TimeOccurred">
            <summary>
            Time the event occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_EventNumber">
            <summary>
            The event number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_SequenceNumber">
            <summary>
            The sequence number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_UserID">
            <summary>
            The user ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_ImageCRC">
            <summary>
            The Image CRC
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_ImageHash">
            <summary>
            The Image Hash
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_ImageVersionCurrent">
            <summary>
            The Image Version Current
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_ImageVersionPrevious">
            <summary>
            The Image Version Previous
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadLogEvent.m_Argument">
            <summary>
            The event arguments
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2379">
            <summary>
            MFG Table 331 (2379) - Actual FW Download Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2379.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2379.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2379.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.IsLoggingEventNumber">
            <summary>
            Gets whether or not the FW download Event log is logging the event number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.IsLoggingDateAndTime">
            <summary>
            Gets whether or not the FW download Event is logging the date and time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.IsLoggingSequenceNumber">
            <summary>
            Gets whether or not the FW download Event is logging the sequence number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.IsFWDownloadLogInhibitingOverflow">
            <summary>
            Gets whether or not the FW download log Inhibits Overflow
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.FWDownloadArgumentDataLength">
            <summary>
            Gets the argument data length of an FW download Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2379.FWDownloadEntryCount">
            <summary>
            Gets the count of FW download events.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2379.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2382">
            <summary>
            MFG Table 334 (2382) - FW Download Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2382.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2379,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2379">The Table 2379 object for the current meter</param>
            <param name="table0">That Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2382.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2379,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
             <param name="table2379">The Table 2379 object for the current meter</param>
            <param name="table0">That Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2382.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2382.NumberOfValidEntries">
            <summary>
            Gets the number of valid log entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2382.LastEntryIndex">
            <summary>
            Gets the index of the last event entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2382.Events">
            <summary>
            Gets the list of events 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2382.GetTableSize(Itron.Metering.Device.OpenWayMFGTable2379,Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table2379">The Actual FW Download Log Table for the current meter.</param>
            <param name="table0">That Table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2382.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2383">
            <summary>
            MFG Table 335 (2383) - FW Download CRC Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2383.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2383.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL file.
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2383.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2383.ApplicationCRC">
            <summary>
            Gets the application CRC
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2383.RegisterBootLoaderCRC">
            <summary>
            Gets the register bootloader CRC
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2383.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TierLabel">
            <summary>
            Enumeration of the rate tiers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_NONE">
            <summary>
            No tier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_A">
            <summary>
            Rate A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_B">
            <summary>
            Rate B
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_C">
            <summary>
            Rate C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_D">
            <summary>
            Rate D
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_E">
            <summary>
            Rate E
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_F">
            <summary>
            Rate F
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TierLabel.RATE_G">
            <summary>
            Rate G
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.UpstreamHANLogEvent">
            <summary>
            Upstream HAN Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID">
            <summary>
            The event number that identifies a particular upstream HAN log event.
            </summary>
            <remarks>
            If you add a new value here please add a new value to the
            UpstreamHANEvents enum of the EndpointServerMeterEvents class
            in the ServiceResponseData.cs file of the
            Itron.Metering.MeterServer project and also update the
            CENTRON_AMI_UpstreamHANEventDictionary.
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.MessageConfirmation">
            <summary>
            Message Confirmation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.PriceAcknowledgement">
            <summary>
            Price Acknowledgement
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.LoadControlOptOut">
            <summary>
            Load Control Opt Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.LoadControlStatus">
            <summary>
            Load Control Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceStateChange">
            <summary>
            Device State Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceAdded">
            <summary>
            Device Added
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceDropped">
            <summary>
            Device Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceNotHeard">
            <summary>
            Device Not Heard
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DevicePinged">
            <summary>
            Device Pinged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.MessageDeliveryFailed">
            <summary>
            Message Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.PriceDeliveryFailed">
            <summary>
            Price Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DRLCDeliveryFailed">
            <summary>
            DRLC Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.SubmeteringBubbleUpDataMissing">
            <summary>
            Submetering Bubble-up Data Missing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceUEGChanged">
            <summary>
            Device UEG Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.DeviceJoined">
            <summary>
            Device Joined
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.JoinedFlagDisabledWithUnjoinedDevice">
            <summary>
            Join Flag Disabled with Unjoined Device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.UpstreamHANLogEventID.EventCacheOverflow">
            <summary>
            Event Cache Overflowed
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus">
            <summary>
            The status associated with the load control status event.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.LoadControlEventReceived">
            <summary>
            Load Control Event Received
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.EventStarted">
            <summary>
            Event Started
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.EventCompleted">
            <summary>
            Event Completed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.UserOptedOut">
            <summary>
            User Opt-Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.UserOptedIn">
            <summary>
            User Opt-In
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.EventCancelled">
            <summary>
            Event Cancelled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.EventSuperseded">
            <summary>
            Event Superseded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.PartiallyCompletedOptOut">
            <summary>
            Partially Complete - User Opt-Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.PartiallyCompletedOptIn">
            <summary>
            Partially Complete - User Opt-In
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.EventCompletedNoUser">
            <summary>
            Event Complete - No User Participation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.RejectedInvalidCancelCommand">
            <summary>
            Rejected - Invalid Cancel Command
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.RejectedInvalidEffectiveTime">
            <summary>
            Rejected - Invalid Effective Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.RejectedEventExpired">
            <summary>
            Rejected - Event Expired
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.RejectedUndefinedEvent">
            <summary>
            Rejected - Undefined Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.LoadControlEventStatus.LoadControlEventRejected">
            <summary>
            Load Control Event Rejected
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.UpstreamHANLogEvent.PingResult">
            <summary>
            The result of pinging the device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.Timeout">
            <summary>
            Failed - Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.InvalidStatus">
            <summary>
            Failed - Invalid Status in Response
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.InvalidMACAddress">
            <summary>
            Failed - Invalid MAC Address
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.DeviceNotRegistered">
            <summary>
            Failed - Device Not Registered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.IPPDevice">
            <summary>
            Failed - IPP Device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.PingResult.InProgress">
            <summary>
            In Progress
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.Create(System.UInt16)">
            <summary>
            Creates the Upstream HAN event object based on the event ID
            </summary>
            <param name="eventID">The event ID for the event to create</param>
            <returns>The new Upstream HAN event object</returns>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.Equals(Itron.Metering.Device.UpstreamHANLogEvent)">
            <summary>
            Determines if the Upstream events are equal
            </summary>
            <param name="other">The Upstream event to compare to</param>
            <returns>True if the event numbers are the same. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to a readable string
            </summary>
            <returns>The argument data as a readable string</returns>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.Description">
            <summary>
            Gets the Description of the event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.EventID">
            <summary>
            Gets the Event Number of the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.TimeOccurred">
            <summary>
            Gets the Date and Time the event occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.EventNumber">
            <summary>
            Gets the event number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.SequenceNumber">
            <summary>
            Gets the sequence number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.UserID">
            <summary>
            Gets the User ID of the user that caused the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.HANEventID">
            <summary>
            Gets the HAN's Event ID for the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.MACAddress">
            <summary>
            Gets the Mac Address of the HAN device in the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.Argument">
            <summary>
            Gets the event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="eventID">The event number</param>
        </member>
        <member name="P:Itron.Metering.Device.UpstreamHANLogEvent.TimeFormat">
            <summary>
            Gets or sets the time format to use
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.GetEntrySize(Itron.Metering.Device.OpenWayMFGTable2239,System.UInt32)">
            <summary>
            Gets the size of an individual Upstream event log entry
            </summary>
            <param name="table2239">The Table 2239 object for the current device</param>
            <param name="ltimeSize">The size of an LTIME data type</param>
            <returns>The size of the entry in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.UpstreamHANLogEvent.DetermineDescription">
            <summary>
            Determines the description for the event.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_TimeFormat">
            <summary>
            Time Format
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_EventID">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_strDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_TimeOccurred">
            <summary>
            Time the event occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_EventNumber">
            <summary>
            The event number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_SequenceNumber">
            <summary>
            The sequence number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_UserID">
            <summary>
            The user ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_HANEventID">
            <summary>
            The HAN Event ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_MACAddress">
            <summary>
            The MAC address of the device that caused the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpstreamHANLogEvent.m_Argument">
            <summary>
            The event arguments
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DeviceStateChangeHANLogEvent">
            <summary>
            Device State Change HAN Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus">
            <summary>
            The status indicating the state of the network.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.NotRegistered">
            <summary>
            Not Registered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.RegistrationFailed">
            <summary>
            Registration Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.RegistrationSuccess">
            <summary>
            Registration Success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.InvalidCertificate">
            <summary>
            Invalid Certificate
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.NetworkUp">
            <summary>
            Network Up
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.NetworkDown">
            <summary>
            Network Down
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.NetworkForming">
            <summary>
            Network Forming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.NetworkJoining">
            <summary>
            Network Joining
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.PrivateProfile">
            <summary>
            Private Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.ViaBinding">
            <summary>
            Via Binding
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.FatalError">
            <summary>
            Register Fatal Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.ViaKeyEstablishment">
            <summary>
            Via Key Establishment
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NetworkStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode">
            <summary>
            Failure Reason Code
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.Success">
            <summary>
            Success/Reserved
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.UnknownIssuer">
            <summary>
            Unknown Issuer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.BadKeyConfirm">
            <summary>
            Bad Key Confirm
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.BadMessage">
            <summary>
            Bad Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.NoResources">
            <summary>
            No Resources
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.UnsupportedSuite">
            <summary>
            Unsupported Suite
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.InvalidParameters">
            <summary>
            Invalid Parameters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.Timeout">
            <summary>
            Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode.TXFailure">
            <summary>
            TX Failure
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceStateChangeHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to a readable string
            </summary>
            <returns>The argument data as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DeviceStateChangeHANLogEvent.RegistrationFailed(Itron.Metering.Device.DeviceStateChangeHANLogEvent.FailureReasonCode)">
            <summary>
            Translates the Reason Code data to a readable string
            </summary>
            <param name="Reason">Reason Code of Failure</param>
            <returns>The Reason Code data as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DeviceStateChangeHANLogEvent.Equals(Itron.Metering.Device.UpstreamHANLogEvent)">
            <summary>
            Determines whether or not the Device State Changed events are equal
            </summary>
            <param name="other">The event to compare against</param>
            <returns>True if the two events are equal. False otherwise</returns>
        </member>
        <member name="P:Itron.Metering.Device.DeviceStateChangeHANLogEvent.PreviousState">
            <summary>
            Gets the Previous Device State
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DeviceStateChangeHANLogEvent.NewState">
            <summary>
            Gets the New Device State
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceStateChangeHANLogEvent.#ctor">
            <summary>
            Constructor that should only be used by the UpstreamHANLogEvent.Create method
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceStateChangeHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data for the event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DeviceUEGChangedHANLogEvent">
            <summary>
            Device Utility Enrollment Group Changed event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceUEGChangedHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to a readable string
            </summary>
            <returns>The argument data as a string</returns>
        </member>
        <member name="P:Itron.Metering.Device.DeviceUEGChangedHANLogEvent.NewUtilityEnrollmentGroup">
            <summary>
            Gets the new Utility Enrollment Group
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceUEGChangedHANLogEvent.#ctor">
            <summary>
            Constructor that should only be used by the UpstreamHANLogEvent.Create method
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DeviceUEGChangedHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data for the event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent">
            <summary>
            Downstream HAN Log Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.UTC_REFERENCE_TIME">
            <summary>
            UTC reference time
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID">
            <summary>
            Downstream Event IDs
            </summary>
            /// <remarks>
            If you add a new value here please add a new value to the
            DownstreamHANEvents enum of the EndpointServerMeterEvents class
            in the ServiceResponseData.cs file of the
            Itron.Metering.MeterServer project and also update the
            CENTRON_AMI_DownstreamHANEventDictionary.
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.MessagePublished">
            <summary>
            Message Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.PricingDataPublished">
            <summary>
            Pricing Data Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.DRLCDataPublished">
            <summary>
            DRLC Data Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.PriceTierChanged">
            <summary>
            Price Tier Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.NewDRLCEventDropped">
            <summary>
            New DRLC Event Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.ExistingDRLCEventDropped">
            <summary>
            Existing DRLC Event Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.AttributeWrite">
            <summary>
            Attribute Write
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.MeterNetworkChange">
            <summary>
            Network Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.SecurityProfileUpdateNotification">
            <summary>
            Security Profile Update Notification
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.DiagnosticSystemEvent">
            <summary>
            Diagnostic System Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.MoveOut">
            <summary>
            Move Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.RIBMeterEvent">
            <summary>
            RIB Meter Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.RIBCEEvent">
            <summary>
            Next Block Price Schedule Unsealed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.RIBErrorEvent">
            <summary>
            RIB Error Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.NextBlockPriceCommitTimeout">
            <summary>
            RIB Next Block Price Commit Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.PriceDisabled">
            <summary>
            Price Disable occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DownstreamHANLogEventID.EventCacheOverflow">
            <summary>
            Event Cache Overflow
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID">
            <summary>
            Diagnostic System Event IDs
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.ChannelChange">
            <summary>
            Channel Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.PanIDChange">
            <summary>
            PAN ID Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.ZigBeeHaltResetLimiting">
            <summary>
            ZigBee Halted Due To Reset Limiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.ConfigChange">
            <summary>
            Configuration Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.GasModuleLeaveRequest">
            <summary>
            Gas Module Told To Leave
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.ManagementLeaveRequest">
            <summary>
            Management Leave Requested
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.MeterColdStart">
            <summary>
            Meter Cold Started
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.DiagnosticSystemEventID.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.RIBCEEventID">
            <summary>
            Event types for the RIB CE HAN Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.RIBErrorEventID">
            <summary>
            Event types for the RIB Error HAN Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.PreviousPriceMode">
            <summary>
            The price mode in use before it was cancelled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags">
            <summary>
            Items changed in the configuration.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.ChannelMask">
            <summary>
            Channel Mask
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.PowerLevel">
            <summary>
            Power Level
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.SecurityMode">
            <summary>
            Security Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.CBKEMode">
            <summary>
            CBKE Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.DeviceAuthMode">
            <summary>
            Device Authorization Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.LinkKeyAuthMode">
            <summary>
            Link Key Authorization Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.PricingOptions">
            <summary>
            Pricing Options
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.InterPANAllowed">
            <summary>
            Inter PAN Allowed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.SimpleMeteringMultiplier">
            <summary>
            Simple Metering Multiplier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.SimpleMeteringDivisor">
            <summary>
            Simple Metering Divisor
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.ConfigChangeFlags.NetworkFormationOption">
            <summary>
            Network Formation Option
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.Create(System.UInt16)">
            <summary>
            Creates the Downstream HAN event object based on the event ID
            </summary>
            <param name="eventID">The event ID for the event to create</param>
            <returns>The new Downstream HAN event object</returns>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.Equals(Itron.Metering.Device.DownstreamHANLogEvent)">
            <summary>
            Determines if the Upstream events are equal
            </summary>
            <param name="other">The Upstream event to compare to</param>
            <returns>True if the event numbers are the same. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to a readable string
            </summary>
            <returns>The argument data as a readable string</returns>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.Description">
            <summary>
            Gets the Description of the event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.EventID">
            <summary>
            Gets the Event Number of the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.TimeOccurred">
            <summary>
            Gets the Date and Time the event occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.EventNumber">
            <summary>
            Gets the event number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.SequenceNumber">
            <summary>
            Gets the sequence number in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.UserID">
            <summary>
            Gets the User ID of the user that caused the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.HANEventID">
            <summary>
            Gets the HAN's Event ID for the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DownstreamHANLogEvent.Argument">
            <summary>
            Gets the event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="eventID">The event number</param>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.GetEntrySize(Itron.Metering.Device.OpenWayMFGTable2239,System.UInt32)">
            <summary>
            Gets the size of an individual Upstream event log entry
            </summary>
            <param name="table2239">The Table 2239 object for the current device</param>
            <param name="ltimeSize">The size of an LTIME data type</param>
            <returns>The size of the entry in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DownstreamHANLogEvent.DetermineDescription">
            <summary>
            Determines the description for the event.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_EventID">
            <summary>
            Event ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_strDescription">
            <summary>
            Description
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_TimeOccurred">
            <summary>
            Time the event occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_EventNumber">
            <summary>
            The event number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_SequenceNumber">
            <summary>
            The sequence number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_UserID">
            <summary>
            The user ID 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_HANEventID">
            <summary>
            The HAN Event number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DownstreamHANLogEvent.m_Argument">
            <summary>
            The event arguments
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MessagePublishedHANLogEvent">
            <summary>
            Message Published HAN Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageTypes">
            <summary>
            The type of message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageTypes.Normal">
            <summary>Normal Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageTypes.Cancel">
            <summary>Cancel Message</summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageTypes.Invalid">
            <summary>*Invalid</summary>
        </member>
        <member name="T:Itron.Metering.Device.MessagePublishedHANLogEvent.StartTypes">
            <summary>
            The message start types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.StartTypes.ImmediateStart">
            <summary>Starts immediately</summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.StartTypes.ScheduledStart">
            <summary>The start of the message was scheduled</summary>
        </member>
        <member name="F:Itron.Metering.Device.MessagePublishedHANLogEvent.StartTypes.Invalid">
            <summary>Invalid</summary>
        </member>
        <member name="M:Itron.Metering.Device.MessagePublishedHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to readable text
            </summary>
            <returns>The argument data as readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.MessagePublishedHANLogEvent.#ctor">
            <summary>
            Constructor that should only be used by DownstreamHANEventLog.Create()
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MessagePublishedHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageID">
            <summary>
            Gets the message ID of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MessagePublishedHANLogEvent.MessageType">
            <summary>
            Gets the type of message
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MessagePublishedHANLogEvent.StartType">
            <summary>
            Gets the start type of the message
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DRLCDataPublishedHANLogEvent">
            <summary>
            DRLC Data Published HAN Log Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.NIBBLE_MASK">
            <summary>
            Mask to check last four bits
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.INVALID">
            <summary>
            Invalid (Hydrogen and Post Hydrogen builds)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageTypes">
            <summary>
            The type of DRLC message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageTypes.Normal">
            <summary>DRLC Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageTypes.Cancel">
            <summary>Cancel DRLC Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageTypes.CancelAll">
            <summary>Cancel All DRLC Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageTypes.Invalid">
            <summary>*Invalid</summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to readable text
            </summary>
            <returns>The argument data as readable text</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.#ctor">
            <summary>
            Constructor that should only be used by DownstreamHANEventLog.Create()
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageID">
            <summary>
            Gets the message ID of the message
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCDataPublishedHANLogEvent.MessageType">
            <summary>
            Gets the type of message
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PriceTierChangedHANLogEvent">
            <summary>
            Price Tier Change HAN Log Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PriceTierChangedHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to readable text
            </summary>
            <returns>The argument data as a string</returns>
        </member>
        <member name="P:Itron.Metering.Device.PriceTierChangedHANLogEvent.NewTier">
            <summary>
            Gets the new price tier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PriceTierChangedHANLogEvent.OldTier">
            <summary>
            Gets the old price tier
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PriceTierChangedHANLogEvent.#ctor">
            <summary>
            Constructor that should only be used by DownstreamHANLogEvent.Create
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PriceTierChangedHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PriceTierChangedHANLogEvent.DetermineTier(System.Byte)">
            <summary>
            Translates the tier into a string
            </summary>
            <param name="byTier">the tier as read from the event argument</param>
            <returns>a string representation of the tier</returns>
        </member>
        <member name="T:Itron.Metering.Device.MeterNetworkChangedHANLogEvent">
            <summary>
            Meter Network Changed HAN Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NetworkStatus">
            <summary>
            The network status for the Meter Network Changed event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NetworkStatus.NetworkUp">
            <summary>
            The Network is Up
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NetworkStatus.NetworkDown">
            <summary>
            The Network is Down
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NetworkStatus.NetworkForming">
            <summary>
            The Network is forming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NetworkStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent">
            <summary>
            The cause for Diagnostic System event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.ChannelChange">
            <summary>
            Channel Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.PanIDChange">
            <summary>
            Pan ID Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.ZigBeeHaltedResetLimiting">
            <summary>
            ZigBee halted due to Reset Limiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.ConfigChange">
            <summary>
            Config Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.GasModuleLeaving">
            <summary>
            Gas Module told to leave
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.ManagementLeaveRequested">
            <summary>
            Management Leave Requested
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.MeterColdStart">
            <summary>
            Meter has been cold started
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.ConfigValidationFailed">
            <summary>
            Config file validation failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.NetworkKeyGenerationMethod">
            <summary>
            Network Key Generation Method
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.NetworkFormConfigError">
            <summary>
            Network Form Config Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeDiagnosticEvent.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause">
            <summary>
            The cause for Network Change event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.NetworkRestart">
            <summary>
            Network Restart
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.NetworkHalted">
            <summary>
            Shut Down Network for 10 Minutes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANDisableViaTable145">
            <summary>
            Disable HAN via table 145
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANEnableViaTable145">
            <summary>
            Enable HAN via table 145
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANDisableViaProcedure">
            <summary>
            Disable HAN via Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANEnableViaProcedure">
            <summary>
            Enable HAN via Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.ColdStart">
            <summary>
            Network Change due to Cold Start
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.FirmwareDownload">
            <summary>
            Network Change due to Firmware Download
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.PowerCycle">
            <summary>
            Network Change due to Power Cycle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.SecurityUpdated">
            <summary>
            Network Restart due to Security Update
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANResetException">
            <summary>
            HAN Reset Non-routine
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.HANResetRoutine">
            <summary>
            Periodic HAN Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause.None">
            <summary>
            None
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to readable text
            </summary>
            <returns>The argument data as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetReason(Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ZigBeeResetCause)">
            <summary>
            Translates the ZigBee Reset Reason Code
            </summary>
            <param name="Reason">Reason Code to be translated</param>
            <returns>The translated ZigBee Reset data as a string</returns>
        </member>
        <member name="P:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.PreviousState">
            <summary>
            Get the previous state of the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.NewState">
            <summary>
            Gets the new state of the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MeterNetworkChangedHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RIBMeterEventHANLogEvent">
            <summary>
            RIB Meter Event HAN Log Event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID">
            <summary>
            Event types for the RIB Meter HAN Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID.NewBillingPeriod">
            <summary>New Billing Period</summary>
        </member>
        <member name="F:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID.NewBlockPeriod">
            <summary>New Block Period</summary>
        </member>
        <member name="F:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID.NewBlockPriceInEffect">
            <summary>Block Threshold Crossed</summary>
        </member>
        <member name="F:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID.EndOfActiveBlockPriceSchedule">
            <summary>End of Active Block Price Schedule</summary>
        </member>
        <member name="F:Itron.Metering.Device.RIBMeterEventHANLogEvent.RIBMeterEventID.Invalid">
            <summary>Invalid</summary>
        </member>
        <member name="M:Itron.Metering.Device.RIBMeterEventHANLogEvent.TranslateArgumentData">
            <summary>
            Translates the argument data to readable text
            </summary>
            <returns>The argument data as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.RIBMeterEventHANLogEvent.Equals(Itron.Metering.Device.DownstreamHANLogEvent)">
            <summary>
            Determines whether or not the RIB Meter Events are equal
            </summary>
            <param name="other">The event to compare against</param>
            <returns>True if the events are of the same type. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RIBMeterEventHANLogEvent.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RIBMeterEventHANLogEvent.SubEventType">
            <summary>
            Gets or sets the RIM Meter Event Type
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RIBMeterEventHANLogEvent.ParseArgumentData">
            <summary>
            Parses the argument data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2239">
            <summary>
            MFG Table 191 (2239) - Actual HAN Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2239.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2239.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2239.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsLoggingEventNumber">
            <summary>
            Gets whether or not the HAN Event log is logging the event number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsLoggingDateAndTime">
            <summary>
            Gets whether or not the HAN Event log is logging the date and time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsLoggingSequenceNumber">
            <summary>
            Gets whether or not the HAN Event log is logging the sequence number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsUpstreamLogInhibitingOverflow">
            <summary>
            Gets whether or not the Upstream log Inhibits Overflow
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsDownstreamLogInhibitingOverflow">
            <summary>
            Gets whether or not the Downstream Log inhibits overflow
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.IsSignatureSupported">
            <summary>
            Gets whether or not the signature is supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.NumberOfUpstreamEvents">
            <summary>
            Gets the number of Upstream Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.UpstreamDataLength">
            <summary>
            Gets the data length of an Upstream Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.NumberOfUpstreamLogEntries">
            <summary>
            Gets the number of entries in the Upstream Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.NumberOfDownstreamEvents">
            <summary>
            Gets the number of Downstream events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.DownstreamDataLength">
            <summary>
            Gets the data length of a downstream event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.NumberOfDownstreamLogEntries">
            <summary>
            Gets the number of entries in the Downstream Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.NumberOfProgramTables">
            <summary>
            Gets the number of Program Tables
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2239.SignatureLength">
            <summary>
            Gets the length of the signature.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2239.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2240">
            <summary>
            MFG Table 192 (2240) - HAN Events Identification Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2240.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2239">The Actual HAN Log table for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2240.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
            <param name="table2239">The Actual HAN Log table for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2240.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2240.SupportedUpstreamEvents">
            <summary>
            Gets the list of supported Upstream Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2240.SupportedDownstreamEvents">
            <summary>
            Gets the list of supported Downstream Events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2240.GetTableSize(Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table2239">The Actual HAN Log Table for the current meter.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2240.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2241">
            <summary>
            MFG Table 193 (2241) - HAN Events Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2241.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2241.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2241.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2241.EnabledUpstreamEvents">
            <summary>
            Gets the list of supported Upstream Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2241.EnabledDownstreamEvents">
            <summary>
            Gets the list of supported Downstream Events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2241.GetTableSize(Itron.Metering.Device.OpenWayMFGTable2239)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table2239">The Actual HAN Log Table for the current meter.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2241.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2242">
            <summary>
            MFG Table 194 (2242) - HAN Upstream Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2242.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
            <param name="table0">That Table 0 object for the current meter</param>
            <param name="maxOffsetReadSize">The maximum amount of data that can be read during an offset read.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2242.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
            <param name="table0">That Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2242.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2242.NumberOfValidEntries">
            <summary>
            Gets the number of valid log entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2242.LastEntryIndex">
            <summary>
            Gets the index of the last event entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2242.LastSequenceNumber">
            <summary>
            Gets the sequence number of the last event entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2242.Events">
            <summary>
            Gets the list of events 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2242.GetTableSize(Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table2239">The Actual HAN Log Table for the current meter.</param>
            <param name="table0">That Table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2242.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2243">
            <summary>
            MFG Table 195 (2243) - HAN Downstream Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2243.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
            <param name="table0">The Table 0 object for the current meter</param>
            <param name="maxOffsetReadSize">The maximum amount of data that can be read during an offset read.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2243.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
            <param name="table2239">The Table 2239 object for the current meter</param>
            <param name="table0">The Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2243.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2243.NumberOfValidEntries">
            <summary>
            Gets the number of valid log entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2243.LastEntryIndex">
            <summary>
            Gets the index of the last event entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2243.LastSequenceNumber">
            <summary>
            Gets the sequence number of the last event entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2243.Events">
            <summary>
            Gets the list of events 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2243.GetTableSize(Itron.Metering.Device.OpenWayMFGTable2239,Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table2239">The Actual HAN Log Table for the current meter.</param>
            <param name="table0">The Table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2243.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2291">
            <summary>
            MFG Table 243 (2291) - HAN Event CE Log Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2291.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2291.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2291.CurrentEntry">
            <summary>
            Gets the number of current entries in the table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventSystemLogRcd">
            <summary>
            Class that represents a single HAN Event System Log record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType">
            <summary>
            Event Code Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.Unknown">
            <summary>
            Unknown Event Code Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.RoutineReset">
            <summary>
            Routine Reset Performed Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.ResetException">
            <summary>
            Reset Exception Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.FormDynamicNetwork">
            <summary>
            Form Dynamic Network Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.NetworkFormFreshStart">
            <summary>
            Network Form Fresh Start Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventSystemLogRcd.EventCodeType.NetworkRestartAfterFWDL">
            <summary>
            Network Restart After Firmware Download Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANEventSystemLogRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventSystemLogRcd.TimeInMs">
            <summary>
            Gets or sets the Time in Ms
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventSystemLogRcd.EventCode">
            <summary>
            Gets or sets the Event Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventSystemLogRcd.Param16">
            <summary>
            Gets or sets the Param16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventSystemLogRcd.Param32">
            <summary>
            Gets or sets the Param32
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2282">
            <summary>
            HAN Mfg Table 234 (2282) - Contains the HAN Event System Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2282.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2282.Read">
            <summary>
            Full read of table 2282
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2282.CurrentEntry">
            <summary>
            Gets the current entry in the table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2282.HANEventSystemLogs">
            <summary>
            Gets the list of HAN Event System Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2282.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventErrorLogRcd">
            <summary>
            Class that represents a single HAN Event System Log record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventErrorLogRcd.EventCodeType">
            <summary>
            Event Code Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventErrorLogRcd.EventCodeType.Unknown">
            <summary>
            Unknown Event Code Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventErrorLogRcd.EventCodeType.DRLCGenericError">
            <summary>
            Routine Reset Performed Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANEventErrorLogRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventErrorLogRcd.TimeStamp">
            <summary>
            Gets or sets the Time in Ms
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventErrorLogRcd.EventCode">
            <summary>
            Gets or sets the Event Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventErrorLogRcd.Param16">
            <summary>
            Gets or sets the Param16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventErrorLogRcd.Param32">
            <summary>
            Gets or sets the Param32
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2283">
            <summary>
            HAN Mfg Table 235 (2285) - Contains the HAN Event error Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2283.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2283.Read">
            <summary>
            Full read of table 2282
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2283.CurrentEntry">
            <summary>
            Gets the current entry in the table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2283.HANEventErrorLogs">
            <summary>
            Gets the list of HAN Event System Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2283.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventAppLogRcd">
            <summary>
            Class that represents a single HAN Event App Log record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEventAppLogRcd.EventCodes">
            <summary>
            Event Code Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Unknown">
            <summary>
            Unknown Event Code Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Cancel_Queued_Event">
            <summary>
            DRLC cancel queued Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Cancel_Event">
            <summary>
            DRLC cancel Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Cancel_Queued_All">
            <summary>
            DRLC Cancel all Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Cancel_All">
            <summary>
            DRLC Cancel all queued Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANEventAppLogRcd.EventCodes.Schedule_New">
            <summary>
            DRLC Schedule new Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANEventAppLogRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventAppLogRcd.TimeInMs">
            <summary>
            Gets or sets the Time in Ms
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventAppLogRcd.EventCode">
            <summary>
            Gets or sets the Event Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventAppLogRcd.Param16">
            <summary>
            Gets or sets the Param16
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEventAppLogRcd.Param32">
            <summary>
            Gets or sets the Param32
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2292">
            <summary>
            HAN Mfg Table 244 (2292) - Contains the HAN Event App Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2292.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2292.Read">
            <summary>
            Full read of table 2282
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2292.CurrentEntry">
            <summary>
            Gets the current entry in the table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2292.HANEventAppLogs">
            <summary>
            Gets the list of HAN Event System Logs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2292.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2419">
            <summary>
            MFG Table 371 (2419) - Actual MFG Extended Self Read Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2419.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2419.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2419.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2419.NumberConfiguredExtendedEnergies">
            <summary>
            The number of extended energy values that have been configured for extended self reads.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2419.NumberConfiguredInstantaneousValues">
            <summary>
            The number of instantaneous values that have been configured for extended Self reads.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2419.NumberExtendedSelfReadEntries">
            <summary>
            The number of extended self read entries stored in the extended self read data table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2419.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2421">
            <summary>
            MFG Table 373 (2421) - Extended Self Read Status Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2421.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2421.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2421.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2421.MonitoringPhases">
            <summary>
            The number of phases being monitored.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2421.MeterForm">
            <summary>
            For poly meters, it is the actual meter form.  For mono meters, the value 12 is for a 12S and the value 255 is for a non-12S form (1S, 2S, 3S, 4S).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2421.FirstEntrySequenceNumber">
            <summary>
            The sequence number of the first entry in the extended self read data table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2421.LastEntrySequenceNumber">
            <summary>
            The sequence number of the last entry in the extended self read data table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2421.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2422">
            <summary>
            MFG Table 374 (2422) - Extended Energy and Instantaneous Self Read Current Data Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2422.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2419)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="Table2419">Extended self read actual table.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2422.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2419)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="Table2419">Extended self read actual table.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2422.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2422.MonitoringPhases">
            <summary>
            The number of phases being monitored.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2422.CurrentExtEnergyData">
            <summary>
            The current extended energy data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2422.CurrentExtInstantaneousData">
            <summary>
            The current extended instantaneous data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2422.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2422.DetermineTableSize(Itron.Metering.Device.OpenWayMFGTable2419)">
            <summary>
            This method determines the size of the table.
            </summary>
            <param name="Table2419">Extended self read actual table.</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2423">
            <summary>
            MFG Table 375 (2423) - Extended Self Read Data Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2423.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2419)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="Table2419">Extended self read actual table.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2423.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.OpenWayMFGTable2419,System.Int32)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
            <param name="Table2419">Extended self read actual table.</param>
            <param name="iTimeFormat">The time format used in the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2423.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2423.ExtendedSelfReadData">
            <summary>
            The extended self read data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2423.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2423.DetermineTableSize(Itron.Metering.Device.OpenWayMFGTable2419)">
            <summary>
            This method determines the size of the table.
            </summary>
            <param name="Table2419">Extended self read actual table.</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedCurrentEntryRecord">
            <summary>
            Record used to store current extended energy and instantaneous values.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExtendedCurrentEntryRecord.#ctor(System.UInt32,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="uiLID">The LID of measure.</param>
            <param name="dblValue">The value measured.</param>
        </member>
        <member name="P:Itron.Metering.Device.ExtendedCurrentEntryRecord.QuantityID">
            <summary>
            The LID of the quantity being measured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExtendedCurrentEntryRecord.Measurement">
            <summary>
            The value of the quantity being measured.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedSelfReadRecord">
            <summary>
            Record used to store extended self read entries.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExtendedSelfReadRecord.#ctor(System.DateTime,System.UInt32,System.Double)">
            <summary>
            Constructor
            </summary>
            <param name="dtTOO">The time of occurence of the self read.</param>
            <param name="uiLID">The LID of measure.</param>
            <param name="dblValue">The value measured.</param>
        </member>
        <member name="P:Itron.Metering.Device.ExtendedSelfReadRecord.TimeOfOccurence">
            <summary>
            The self read entry's time of occurence.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedSelfReadQualifier">
            <summary>
            Extended Self Read Configuration Qualifier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedSelfReadQualifier.AlwaysListed">
            <summary>
            The Quantity is always included in the Extended Self Read data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedSelfReadQualifier.OnlyListedWhenPresent">
            <summary>
            The Quantity is only included when the corresponding phase is present in the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedSelfReadConfigRecord">
            <summary>
            Extended Self Read Configuration Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExtendedSelfReadConfigRecord.#ctor(Itron.Metering.Device.LID,Itron.Metering.Device.ExtendedSelfReadQualifier)">
            <summary>
            Constructor
            </summary>
            <param name="quantity">The configure quantity</param>
            <param name="qualifier">The qualifier used to determine if the quantity should be listed</param>
        </member>
        <member name="P:Itron.Metering.Device.ExtendedSelfReadConfigRecord.Quantity">
            <summary>
            Gets the LID for the Quantity
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExtendedSelfReadConfigRecord.Qualifier">
            <summary>
            Gets the qualifier for the quantity
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Phases">
            <summary>
            Used to enumerate the phases of the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Phases.A">
            <summary>
            Phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Phases.B">
            <summary>
            Phase B
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Phases.C">
            <summary>
            Phase C
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2368">
            <summary>
            MFG Table 2368 (Itron 320)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2368.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2368.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2368.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2368.PowerMonitorRecordsUsed">
            <summary>
            The number of power monitor records in use.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2368.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2369">
            <summary>
            MFG Table 2369 (Itron 321)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2369.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2369.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2369.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2369.PowerMonitoringEnabled">
            <summary>
            Whether or not power monitoring is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2369.ColdLoadTime">
            <summary>
            The amount of time after startup before power monitoring starts processing in seconds.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2369.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2370">
            <summary>
            MFG Table 2370 (Itron 322)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2370.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2368)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
            <param name="Table0"></param>
            <param name="Table2368"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2370.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2368)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader"></param>
            <param name="Table0"></param>
            <param name="Table2368"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2370.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2370.InstantaneousWattsDelivered">
            <summary>
            The Instantaneous Watts Delivered values.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2370.InstantaneousWattsReceived">
            <summary>
            The Instantaneous Watts Received values.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2370.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2370.GetTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2368)">
            <summary>
            Gets the size of the table in bytes.
            </summary>
            <param name="Table0">The table 0 object for the current device</param>
            <param name="Table2368">The table 2368 object for the current device</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2079">
            <summary>
            MFG Table 2079 (Itron 31) 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2079.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2079.Read">
            <summary>
            Reads the table from the meter.  Only partially reading part of table that contains 
            magnetic tamper counts.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2079.MagneticTamperDetectCount">
            <summary>
            Gets the number of magnetic tampers that have been detected.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2079.MagneticTamperClearedCount">
            <summary>
            Gets the number of magnetic tampers that have been cleared.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2079.ParseData">
            <summary>
            Parses the data read by the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2082">
            <summary>
            MFG Table 2082 (Itron 34) 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2082.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2082.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2082.Key">
            <summary>
            Gets or sets the Comm Module Table ID to read in table 2195
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2082.ParseData">
            <summary>
            Parses the data read by the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2159">
            <summary>
            This class represents MFG Table 2159, which is the
            Communications Actual Log Limiting Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2159.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor for Tabel 2159 Object
            </summary>
            <param name="BinaryReader">A binary Reader contain the stream for 2159</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2159.Read">
            <summary>
            Reads table 2159 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.EventNumberFlag">
            <summary>
            Returns the Event Number Flag
            </summary>
            <returns>bool</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.NumberMFGEvents">
            <summary>
            Returns the Number of MFG Events
            </summary>
            <returns>byte</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.NumberSTDEvents">
            <summary>
            Returns the Number of Standard Events
            </summary>
            <returns>byte</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.LANDataLength">
            <summary>
            Returns the LAN Data Length
            </summary>
            <returns>uint</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.HANDataLength">
            <summary>
            Returns the HAN Data Length
            </summary>
            <returns>uint</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.NumberLANEntries">
            <summary>
            Returns the Number of LAN Entries
            </summary>
            <returns>short</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.NumberHANEntries">
            <summary>
            Returns the Number of Standard Events
            </summary>
            <returns>short</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.SizeOfLANLogRecord">
            <summary>
            This property calculates the size of the LAN Log Record to help us when contructing Table 2162
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.SizeOfHANLogRecord">
            <summary>
            This property calculates the size of the HAN Log Record to help us when contructing Table 2164
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2159.SizeofControlTable">
            <summary>
            Calculate the size of the LAN Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2159.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2160">
            <summary>
            This class represents MFG Table 2160, which is the
            Communications Events Identifcation Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2160.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.MFGTable2159)">
            <summary>
            Constructor for the 2160 - Communications Events Identification Table
            </summary>
            <param name="BinaryReader">Binary Reader containing Data Stream for table 2161</param>
            <param name="tbl2159">Table 2159 Object</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2160.Read">
            <summary>
            Reads table 2161 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2160.StdEventSupported">
            <summary>
            Property that tells us which standard Events the meter supports
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2160.MfgEventSupported">
            <summary>
            Property that tells us which standard Events the meter supports
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2161">
            <summary>
            This class represetns MFG Table 2161, which is the 
            LAN Communications Log Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2161.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.MFGTable2159)">
            <summary>
            Constructor for the 2161 - LAN Communications Log Control table
            </summary>
            <param name="BinaryReader">Binary Reader containing Data Stream for table 2161</param>
            <param name="tbl2159">Table 2159 Object</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2161.Read">
            <summary>
            Reads table 2161 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2161.StdEventsMonitored">
            <summary>
            Property that returns the list of Monitored LAN MFG Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2161.MfgEventsMonitored">
            <summary>
            Property that returns the list of Monitored LAN MFG Events
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2162">
            <summary>
            This class represents MFG Table 2162, which is the 
            LAN Log Data Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2162.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.MFGTable2159)">
            <summary>
            Constructor for Tabel 2162 Object
            </summary>
            <param name="BinaryReader">A binary Reader contain the stream for 2162</param>
            <param name="tbl2159">The Actual Limiting Table for HAN/LAN logging</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2162.Read">
            <summary>
            Reads table 2162 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2162.NumberValidLANEntries">
            <summary>
            Returns the Number of Valid LAN Entries in the list
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2162.LastEntrySequenceNumber">
            <summary>
            Returns the Sequence number of the last valid entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2162.LANEntries">
            <summary>
            Returns the list of LAN Entries
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2162.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2163">
            <summary>
            This class represents MFG Table 2163, which is the
            HAN Communications Log Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2163.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.MFGTable2159)">
            <summary>
            Constructor for the 2163 - HAN Communications Log Control table
            </summary>
            <param name="BinaryReader">Binary Reader containing Data Stream for table 2161</param>
            <param name="tbl2159">Table 2159 Object</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2163.Read">
            <summary>
            Reads table 2161 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2163.StdEventsMonitored">
            <summary>
            Property that returns the list of Monitored LAN MFG Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2163.MfgEventsMonitored">
            <summary>
            Property that returns the list of Monitored HAN MFG Events
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2164">
            <summary>
            This class represents MFG Table 2164, which is the
            HAN Log Data Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2164.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.MFGTable2159)">
            <summary>
            Constructor for Tabel 2164 Object
            </summary>
            <param name="BinaryReader">A binary Reader contain the stream for 2164</param>
            <param name="tbl2159">The Actual Limiting Table for HAN/LAN logging</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2164.Read">
            <summary>
            Reads table 2162 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2164.NumberValidHANEntries">
            <summary>
            Returns the Number of Valid HAN Entries in the list
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2164.LastEntrySequenceNumber">
            <summary>
            Returns the Sequence number of the last valid entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2164.HANEntries">
            <summary>
            Returns the list of HAN Entries
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2164.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CommLogEvent">
            <summary>
            Base class for our Communication Events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CommLogEvent.#ctor(System.Int32)">
            <summary>
            Constructor for Communication Event
            </summary>
            <param name="iEventCode"></param>
        </member>
        <member name="P:Itron.Metering.Device.CommLogEvent.CommEventCode">
            <summary>
            Property that returns the Event Code for a Communication Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CommLogEvent.CommEventDescription">
            <summary>
            Property to return the Description of the LAN Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CommLogEvent.Equals(Itron.Metering.Device.CommLogEvent)">
            <summary>
            Determines if the CommLogEvent object is equal to the current object
            </summary>
            <param name="other">The ZigBeeDevice object to compare</param>
            <returns>True if the objects are equal false otherwise.</returns>
        </member>
        <member name="T:Itron.Metering.Device.LANEntry">
            <summary>
            Class that contains the contents of a LAN Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LANEntry.#ctor">
            <summary>
            Constructor for a LAN Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LANEntry.TranslatedEventData(System.UInt16)">
            <summary>
            Adds information to the event description based on the value of the
            history argument.  Initially, only loss of potential will be supported.
            </summary>
            <param name="uiLANEventCode">
            event code for the LAN Comm Event in question
            </param>
            <returns>
            Additional description based
            </returns>
            
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANEntryTime">
            <summary>
            Get/Set the Time of the LAN Entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANEntryNumber">
            <summary>
            Get/Set the Event Number (Common to both LAN and HAN Logs)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANUserID">
            <summary>
            Get/Set the User ID associated with this LAN Log entry.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANCode">
            <summary>
            Get/Set the LAN Event Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANEventDescription">
            <summary>
            Get the Text Description of the LAN Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LANEntry.LANArgument">
            <summary>
            Returns the Argument Data for the LAN Entry
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANEntry">
            <summary>
            Class Representing a HAN Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANEntry.#ctor">
            <summary>
            Constructor for a HAN Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANEntry.TranslatedEventData(System.UInt16)">
            <summary>
            Adds information to the event description based on the value of the
            history argument.  Initially, only loss of potential will be supported.
            </summary>
            <param name="uiHANEventCode">
            event code for the HAN Comm Event in question
            </param>
            <returns>
            Additional description based
            </returns>
            
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANEntryTime">
            <summary>
            Get/Set the Time of the HAN Entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANEntryNumber">
            <summary>
            Get/Set the Event Number (Common to both LAN and HAN Logs)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANUserID">
            <summary>
            Get/Set the User ID associated with this HAN Log entry.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANCode">
            <summary>
            Get/Set the HAN Event Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANEventDescription">
            <summary>
            Get the Text Description of the HAN Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANEntry.HANArgument">
            <summary>
            Returns the Argument Data for the HAN Entry
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayCommModule_2064">
            <summary>
            Class that represents ITRN 16 (Mirror of Comm Module table 0)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayCommModule_2064.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor for the Comm Module Limiting Table (Table 2064)
                This is a mirror of Table 0 from the Comm Module
            </summary>
            <param name="psem"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayCommModule_2064.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            Constructor for use in the EDL File for the Comm Module Limiting Table (Table 2064)
            This is a mirror of Table 0 from the Comm Module
            </summary>
            <param name="reader">PSEM Binary Reader contain the part of the table we are interested in</param>
            <param name="length">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayCommModule_2064.Read">
            <summary>
            Reads table 2064 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayCommModule_2064.DeviceClass">
            <summary>
            Retrieves the Comm Module Device Class of the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StatusFormat">
            <summary>
            The Fatal Error Recovery Status flags
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StatusFormat.MissingBlocks">
            <summary>
            Blocks are missing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StatusFormat.Bitfield">
            <summary>
            Bitfield.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StatusFormat.NotInDownloadMode">
            <summary>
            Not in firmware download mode.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CRC_STATE">
            <summary>
            Current CRC State
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.Waiting">
            <summary>
            Waiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.Downloading">
            <summary>
            Downloading
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.Calculating">
            <summary>
            Calculating
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.CRCPass">
            <summary>
            CRC Pass
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.CRCFail">
            <summary>
            CRC Fail
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.AllBlocksReceived">
            <summary>
            All Blocks Received
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CRC_STATE.CalculatingHash">
            <summary>
            Calculating Hash
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ACTIVATION_STATE">
            <summary>
            Activation State
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ACTIVATION_STATE.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ACTIVATION_STATE.Waiting">
            <summary>
            Waiting
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ACTIVATION_STATE.Scheduled">
            <summary>
            Scheduled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ACTIVATION_STATE.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2179">
            <summary>
            Actual Firmware Download Status Table.  Mfg. Table 131.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2179.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2179.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads some fwdl info.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2179.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2179.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2179.FormatOfStatus">
            <summary>
            This property gets 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2179.Size">
            <summary>
            This property gets 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2180">
            <summary>
            Firmware Status Table.  Mfg. Table 132.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2180.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StatusFormat,System.Byte)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="bytSize"></param>
            <param name="enumStatusFormat"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2180.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2180.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2180.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2180.FormatOfStatus">
            <summary>
            This property gets the format of the status information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2180.BlocksReceived">
            <summary>
            This property gets the number of firmware download blocks received.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2180.GetTableSize(Itron.Metering.Device.StatusFormat,System.Byte)">
            <summary>
            Determines the size of the table
            </summary>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2182">
             <summary>
            Table 2182: Extended FW DL Status Table
            
            A read-only MFG table for storing the CRC and activation status of the
            downloaded FW after running the table 7 procedures 176 (Cancel Scheduled
            Firmware Activation).
             </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2182.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="Table0">The Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2182.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table in bytes
            </summary>
            <param name="Table0">The table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2182.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2182.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2182.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.CurrentCRCState">
            <summary>
            Gets the current CRC state
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.SuppliedCRCValue">
            <summary>
            Gets the supplied CRC value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.CalculatedCRCValue">
            <summary>
            Gets the calculated CRC value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.ActivationState">
            <summary>
            Gets the pending table activation state
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.ActivationTime">
            <summary>
            Gets the pending table activation time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2182.CalculatedHashCode">
            <summary>
            Gets the calculated hash code
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMfgTable2108">
            <summary>
            The CHANMfgTable2108 class handles the reading of MFG Table 2108 (MCU status).
            From register f/w build 115 and later, this table also contains the 
            register version, revision, and build and the display version and revision
            as well as the RFLAN and Zigbee information.
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2108.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, initializes the table
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2108 Table2108 = new CHANMfgTable2108(m_PSEM, FirmwareBuild); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2108.Read">
            <summary>
            Full read of table 2108 (MCU Status) out of the
            meter.
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2108.TranslateCommModuleType(System.Byte)">
            <summary>
            Tranlate the Comm Module Type to a string
            </summary>
            <param name="byCommModType">The Byte value from the device</param>
            <returns>string - Comm Module Type</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2108.TranslationHanModType(System.Byte)">
            <summary>
            Translate the Han Module Type
            </summary>
            <param name="byHanModType">byte value from the device</param>
            <returns>string - HAN Module Type</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommModuleType">
            <summary>
            Returns the type - RFLAN or IP
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommModuleTypeByte">
            <summary>
            Gets Comm Module type as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommModuleVersion">
            <summary>
            Gets the Zigbee firmware version from the status 
            table
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommModuleBuild">
            <summary>
            Gets the Zigbee firmware build number from the status 
            table
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HanModuleType">
            <summary>
            Gets the Han type from the status table
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANModuleTypeByte">
            <summary>
            Gets HAN Module type as a byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HanModuleVersion">
            <summary>
            Gets the f/w version of the Zigbee micro
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HanModuleBuild">
            <summary>
            Gets the f/w version of the Zigbee micro
            </summary>
             <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.RegModuleVersion">
            <summary>
            Gets the f/w version of the Register micro
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.RegModuleBuild">
            <summary>
            Gets the f/w version build number of the Register micro
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.DisplayModuleVersion">
            <summary>
            Gets the display version and revision from table 2108
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.DisplayModuleBuild">
            <summary>
            Property to retrieve the Display Firmware build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.RegVersionOnly">
            <summary>
            Gets the Version of the register firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.RegRevisionOnly">
            <summary>
            Gets the Revision of the register firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.RegBuildOnly">
            <summary>
            Gets the Build of the register firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommVersionOnly">
            <summary>
            Gets the Version of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommRevisionOnly">
            <summary>
            Gets the Revision of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.CommBuildOnly">
            <summary>
            Gets the Build of the Comm Module firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANVersionOnly">
            <summary>
            Gets the Version of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANRevisionOnly">
            <summary>
            Gets the Revision of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANBuildOnly">
            <summary>
            Gets the Build of the HAN firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.DisplayVersionOnly">
            <summary>
            Gets the Version of the display firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.DisplayRevisionOnly">
            <summary>
            Gets the Revision of the display firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.DisplayBuildOnly">
            <summary>
            Gets the Build of the display firmware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANAppVersionOnly">
            <summary>
            Gets the version of the HAN App
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANAppRevisionOnly">
            <summary>
            Gets the revision of the HAN App 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.HANAppBuildOnly">
            <summary>
            Gets the build of the HAN App
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.FWLoaderVersionOnly">
            <summary>
            Gets the firmware loader version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.FWLoaderRevisionOnly">
            <summary>
            Gets the firmware loader revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2108.FWLoaderBuildOnly">
            <summary>
            Gets the firmware loader build
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2108.InitializeVariables">
            <summary>
            Initialize Variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BlurtMode">
            <summary>
            An indication of what type of blurts are being returned.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlurtMode.Default">
            <summary>
            Default Blurt
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlurtMode.Enhanced">
            <summary>
            Enhanced Blurt
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlurtMode.Illegal">
            <summary>
            Illegal Value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlurtMode.Advanced">
            <summary>
            Advanced Blurt
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BlurtMode.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.BaseEnergies">
            <summary>
            An indication of what type of energy is returned by the base.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.Wh">
            <summary>
            Wh
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.VAhArithmetic">
            <summary>
            VAh (using VA Arithmetic)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.VAhVectorial">
            <summary>
            VAh (using VA Vectorial)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.VAhLag">
            <summary>
            VAh (using VA Lag)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.VarhArithmetic">
            <summary>
            Varh (using VA Arithmetic)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.VarhVectorial">
            <summary>
            Varh (using VA Vectorial)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyWhDel">
            <summary>
            Wh Delivered for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyWhRec">
            <summary>
            Wh Received for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVAhArithDel">
            <summary>
            VAh Arith Delivered for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVAhArithRec">
            <summary>
            VAh Arith Received for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVAhVectDel">
            <summary>
            VAh Vect Delivered for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVAhVectRec">
            <summary>
            VAh Vect Received for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVarhDel">
            <summary>
            varh Delivered for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVarhRec">
            <summary>
            varh Received for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVAhLag">
            <summary>
            VAh Lag for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVarhQ1">
            <summary>
            varh Q1 for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.PolyVarhQ4">
            <summary>
            varh Q2 for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BaseEnergies.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics">
            <summary>
            MFG Table 64 (2112) - Metrology (Blurt) Statistics Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="fltRegFWVersion">The register FW version for the current meter</param>
            <param name="blnIsPolyPhase">Determines whether the Meter being used is a PolyPhase or SinglePhase</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.Single,System.Boolean)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
            <param name="fltRegFWVersion">The register FW version for the current meter</param>
            <param name="blnIsPolyPhase">Determines whether the Meter being used is a PolyPhase or not</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.Refresh">
            <summary>
            Changes the table state to expired so that a full read will occur on 
            next access
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.MetrologyMode">
            <summary>
            Gets the type of blurt packets the meter supports.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ACKReceived">
            <summary>
            Gets if an ACK was received from blurt request.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.MessageReceived">
            <summary>
            Gets if a blurt message was received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.WaitResponse">
            <summary>
            Gets if the blurt message is a wait for save response.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.WaitRetryTimeOut">
            <summary>
            Gets if the blurt message indicates if it is waiting for a retry timeout.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.RetryTimeOutFlag">
            <summary>
            Gets if the blurt message indicates if a retry timeout has occured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.SkipNextBlurt">
            <summary>
            Gets if the next blurt message should be skipped.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IsBasedBackedValue">
            <summary>
            Gets whether or not the meter uses base backed values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ClearMetBusy">
            <summary>
            Gets if the blurt message indicates that clear met busy.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.BlurtReady">
            <summary>
            Gets if the blurt message is ready.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IDCountReady">
            <summary>
            Gets if the blurt message's ID count is ready.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.WDEPulseCount">
            <summary>
            Gets if the blurt message contains a WDE pulse count.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.EndNextInterval">
            <summary>
            Gets if the blurt message is the last in an interval.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.NextIntervalReceived">
            <summary>
            Gets if the blurt message is recieving the next interval.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ConfiguredEnergiesSupported">
            <summary>
            Gets if the energy values configured are supported by the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.SuppliedEnergy1">
            <summary>
            Gets if 1st type of energy supplied by the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.SuppliedEnergy2">
            <summary>
            Gets if 2nd type of energy supplied by the base.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.GoodCount">
            <summary>
            Gets the number of good blurt messages.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.SaveAttempts">
            <summary>
            Gets the number of save attempts.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ACKReceivedCount">
            <summary>
            Gets the number of ACKs received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ResponseReceivedCount">
            <summary>
            Gets the number of responses received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.FailedSaves">
            <summary>
            Gets the number of failed saves.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.RetryCount">
            <summary>
            Gets the number of retries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.NoTimeCount">
            <summary>
            Gets the number of no times.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.KillRetries">
            <summary>
            Gets the number of kill retries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.MinimumTimeRemaining">
            <summary>
            Gets the minimum time remaining.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.FalseTemperature">
            <summary>
            Gets the number of false temperature readings.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.FalseEnergy">
            <summary>
            Gets the number of false energy readings.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ChecksumFailed">
            <summary>
            Gets the number of times the checksum failed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.HeaderFailed">
            <summary>
            Gets the number of times the header failed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ReceivedOverruns">
            <summary>
            Gets the number of overruns were received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IsrRxReceived">
            <summary>
            Gets the number of Isr Rx messages that were received.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IsrRxErrorCount">
            <summary>
            Gets the number of Isr Rx messages that had errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IsrErrorTypeF">
            <summary>
            Gets the number of Isr Type F errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.IsrErrorTypeO">
            <summary>
            Gets the number of Isr Type O errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ParityErrors">
            <summary>
            Gets the number of parity errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ABTErrors">
            <summary>
            Gets the number of ABT errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.TimeOfLastUpdate">
            <summary>
            Gets the time of the last update.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.MetrologyData">
            <summary>
            Gets the metrology data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.GetTableSize(System.Single,System.Boolean)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="fltRegFWRevision">The register firmware version for the current meter.</param>
            <param name="blnIsPolyPhase">Determines whether the device is PolyPhase or not</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ReadBlurtFlags">
            <summary>
            Reads the Blurt Flags bitfield from the meter
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown if an error occurs while reading the table.</exception>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetrologyStatistics.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2112MetData">
            <summary>
            Class to encapsulate the metrology data present in Mfg table 64
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2112MetData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.Header">
            <summary>
            Gets/sets the header for the metrology data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.SecondarySavedQuantityDelivered">
            <summary>
            Gets/sets the secondary saved quantity delivered - either Var or VA
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.SecondarySavedQuantityReceived">
            <summary>
            Gets/sets the secondary saved quantity received - either VA or Var
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.SavedTotalSecondaryWattHoursDelivered">
            <summary>
            Gets/sets the saved total secondary watt hours delivered - Wh d
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.SavedTotalSecondaryWattHoursReceived">
            <summary>
            Gets/sets the saved total secondary Watt hours received - Wh r
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseA_RMSVoltage">
            <summary>
            Gets/sets the phase A rms voltage
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseB_RMSVoltage">
            <summary>
            Gets/sets the phase B rms voltage
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseC_RMSVoltage">
            <summary>
            Gets/sets the phase C rms voltage
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseA_RMSCurrent">
            <summary>
            Gets/sets the phase A rms current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseB_RMSCurrent">
            <summary>
            Gets/sets the phase B rms current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseC_RMSCurrent">
            <summary>
            Gets/sets the phase C rms current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.InstantaneousVA">
            <summary>
            Gets/sets the instantaneous VA
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.InstantaneousWatts">
            <summary>
            Gets/sets the instantaneous watts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.InstantaneousVAR">
            <summary>
            Gets/sets the instantaneous Vars
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseB_Angle">
            <summary>
            Gets/sets the phase B angle
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseC_Angle">
            <summary>
            Gets/sets the phase C angle
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseA_WattHoursDelivered">
            <summary>
            Gets/sets the phase A Watt hours delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseA_WattHoursReceived">
            <summary>
            Gets/sets the phase A watt hours received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseB_WattHoursDelivered">
            <summary>
            Gets/sets the phase B watt hours delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseB_WattHoursReceived">
            <summary>
            Gets/sets the phase B watt hours received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseC_WattHoursDelivered">
            <summary>
            Gets/sets the phase C watt hours delivered
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.PhaseC_WattHoursReceived">
            <summary>
            Gets/sets the phase C watt hours received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.InternalTemperatureCentigrade">
            <summary>
            Gets/sets the internal temperature in Centigrade
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2112MetData.Status">
            <summary>
            Gets/sets the status field.  It is up to the calling method to parse out the
            statuses
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2123.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table0">The table 0 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2123.Read">
            <summary>
            Reads the data from the meter
            </summary>
            <returns>The PSEM Response from the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2123.ScheduledEvents">
            <summary>
            Gets the list of scheduled events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2123.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table in bytes
            </summary>
            <param name="table0">The table 0 object for the current device</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2123.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ScheduledEventTypes">
            <summary>
            Enumeration for the scheduled events type
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ScheduledEvent">
            <summary>
            A Scheduled Event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ScheduledEvent.#ctor(Itron.Metering.Device.ScheduledEventTypes,System.DateTime)">
            <summary>
            Constructor
            </summary>
            <param name="type">The event type of the event</param>
            <param name="date">The date and time the event is scheduled</param>
        </member>
        <member name="P:Itron.Metering.Device.ScheduledEvent.Event">
            <summary>
            Gets the event that is scheduled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ScheduledEvent.ScheduledDate">
            <summary>
            Gets the date and time the event is scheduled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2127EnhancedSecurityKeys">
            <summary>
            Class used for reading and validating the Enhanced Security Public Keys.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2127EnhancedSecurityKeys.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2127EnhancedSecurityKeys.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2127EnhancedSecurityKeys.ValidateKeys(System.String)">
            <summary>
            Validates the security keys in the meter against the keys that are specified in the file.
            </summary>
            <param name="EnhancedSecurityFile">The file that contains the public keys for the meters.</param>
            <returns>True of the keys are valid. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2127EnhancedSecurityKeys.CheckKeysEqual(System.Byte[],System.Byte[])">
            <summary>
            Checks to see if the two keys are equal.
            </summary>
            <param name="firstKey">The first key to check</param>
            <param name="secondKey">The second key to check</param>
            <returns>True if the keys are equal. False otherwise.</returns>
        </member>
        <member name="T:Itron.Metering.Device.DataFlashBlockRecord">
            <summary>
            Class that represents a single block of the Data Flash table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DataFlashBlockRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DataFlashBlockRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parse the Data Flash block from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data for the block</param>
        </member>
        <member name="P:Itron.Metering.Device.DataFlashBlockRecord.Data">
            <summary>
            Gets the data that is contained in the Data Flash Block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataFlashBlockRecord.WriteCount">
            <summary>
            Gets the number of times this block has been written to.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DataFlashBlockRecord.CRC">
            <summary>
            Gets the CRC for the data in the block
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FailsafeReasons">
            <summary>
            Fail safe reasons
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.NotInFailsafe">
            <summary>
            The meter is not in failsafe mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.ProcedureWithDuration">
            <summary>
            Procedure 80 was called and a duration was specified.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.FirmwareActivated">
            <summary>
            Firmware was activated.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.MeterInitialized">
            <summary>
            The meter was initialized.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.ServiceLimitingConfigured">
            <summary>
            Service Limiting was reconfigured.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.DemandConfigured">
            <summary>
            The Demands were reconfigured.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.ProcedureNoDuration">
            <summary>
            Procedure 80 was called with 65535 duration meaning it will never leave failsafe mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FailsafeReasons.NotSupported">
            <summary>
            Failsafe mode is not supported.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DisconnectThreshold">
            <summary>
            Threshold object for remote service limiting.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisconnectThreshold.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisconnectThreshold.#ctor(System.Byte,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="byQuantity">The demand quantity index for the threshold.</param>
            <param name="fThreshold">The value of the threshold.</param>
        </member>
        <member name="P:Itron.Metering.Device.DisconnectThreshold.DemandQuantityIndex">
            <summary>
            Gets or sets the index of the demand quantity for this threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisconnectThreshold.Threshold">
            <summary>
            Gets or sets the threshold value.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2139">
            <summary>
            MFG Table 2139 - Actual Limiting Disconnect Switch Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2139.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2139.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2139.DoesHardwareExist">
            <summary>
            Gets whether or not the Disconnect hardware exists in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2139.NumberOfThresholds">
            <summary>
            Gets the number of thresholds used by the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2140">
            <summary>
            MFG Table 2140 - Disconnect Switch Status Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table00">Table 0 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt32)">
            <summary> 
            protected Constructor used by OpenWayMFGTable2140_2009
            </summary>
            <param name="psem">PSEM Protocol</param>
            <param name="Size">The calculated size of the table</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table00">Table 0 object for the current device.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.IsConnected">
            <summary>
            Gets whether or not the meter is currently connected
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.IsFunctioning">
            <summary>
            Gets whether or not the hardware is currently functioning
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.IsLoadVoltagePresent">
            <summary>
            Gets whether or not Load Voltage is currently present
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.LastAttemptFailed">
            <summary>
            Gets whether or not the last attempt failed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.IsMeterArmed">
            <summary>
            Gets whether or not the meter is currently armed for connection
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.RemainingDailySwitches">
            <summary>
            Gets the remaing number of daily switched.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.ActiveThreshold">
            <summary>
            Gets the currently active threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.RemainingTimeForActiveTier">
            <summary>
            Gets the amount of time remaining for the current threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140.RemainingTimeForSwitchOpen">
            <summary>
            Gets the amount of time remaining for siwtch open
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2140.m_bySwitchStatus">
            <summary>
            Switch Status byte
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2140.m_byRemainingDailySwitches">
            <summary>
            Number of remaining daily switches
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2140.m_byActiveThreshold">
            <summary>
            The active threshold
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2140.m_tsRemainingTimeInTier">
            <summary>
            The amount of time remaining in the tier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2140.m_tsRemainingTimeForSwitchOpen">
            <summary>
            The amount of time before the switch will close
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2140SP5">
            <summary>
             Table 2140 - This is the 2140 Table as finally balloted in 2009 for SP5 release.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140SP5.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor implemented for new data size
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table00">Table 0 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140SP5.GetTableSizeSP5(Itron.Metering.Device.CTable00)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table00">Table 0 object for the current device.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140SP5.FailsafeReason">
            <summary>
            Gets the Failsafe Reason
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140SP5.WasLastDisconnectDueToSL">
            <summary>
            Gets whether or not the last disconnect was due to Service Limiting
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140SP5.RemainingTimeForFailsafe">
            <summary>
            Gets the amount of time remaining for the FailSafe 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2140SP5.IsInFailsafeMode">
            <summary>
            Gets whether or not the meter is currently in failsafe mode
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2140SP5.ParseData">
            <summary>
            Parses the data for the table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2141">
            <summary>
            MFG Table 2141 - Disconnect Switch Config Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2141.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2139)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table00">Table 0 object for the current device</param>
            <param name="Table2139">Table 2139 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2141.GetTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.OpenWayMFGTable2139)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table00">Table 0 object for the current device.</param>
            <param name="Table2139">Table 2139 object for the current device</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2141.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns> The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.ConnectsUsingUserIntervention">
            <summary>
            Gets whether or not the meter is configured to use User Intervention on connect.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.MaxSwitches">
            <summary>
            Gets the maximum number of disconnect switches that will occur within the switch period.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.MaxSwitchPeriod">
            <summary>
            Gets the max period of time for switches to occur
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.RandomizationAlarmPeriod">
            <summary>
            Gets the period of time where an alarm will be raised.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.RestorationStartDelay">
            <summary>
            Gets the period of time to wait until connection will start to be restored
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.RestorationRandomDelay">
            <summary>
            Gets the period of time that the restoration will randomly occur in.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.OpenTime">
            <summary>
            Gets the length of time to keep the switch open.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2141.Thresholds">
            <summary>
            Gets the number of times to reattempt to connect or disconnect
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2142">
            <summary>
            MFG Table 2142 - Disconnect Override Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2142.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2142.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2142.IsServiceLimitingOverriden">
            <summary>
            Gets/Sets whether or not Service Limiting disconnects have been disabled in the meter.
            If service limiting has been overriden in the meter the this means the 
            remote disconnect switch has been disabled.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061HANSecurityKeys">
            <summary>
            Sub table into the 2061 factory data table that is used to validate the HAN link keys.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061HANSecurityKeys.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061HANSecurityKeys.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061HANSecurityKeys.ValidateKey(Itron.Metering.Device.HANKeyRcd)">
            <summary>
            Validates the specified key against the key in the meter.
            </summary>
            <param name="Key">The key to validate.</param>
            <returns>True if the keys match. False otherwise.</returns>
        </member>
        <member name="T:Itron.Metering.Device.Table2061RFLANOptOut">
            <summary>
            Sub table into the 2061 factory data table that is used to validate the RFLAN Opt Out.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.Table2061RFLANOptOut.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.Table2061RFLANOptOut.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Opt Out Byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.Table2061RFLANOptOut.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.Table2061RFLANOptOut.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.Table2061RFLANOptOut.RFLANOptOutByte">
            <summary>
            Gets the RFLAN Opt Out Byte from Factory Data: 0 = enabled, 1 = disabled. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061RFLANConfig">
            <summary>
            Sub table into the 2061 factory data table that is used to validate the RFLAN Configuration.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RFLANConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RFLANConfig.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the utility ID.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RFLANConfig.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RFLANConfig.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061RFLANConfig.UtilityID">
            <summary>
            This property gets/sets the Utility ID.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061RFLANConfig.RFLANMacAddress">
            <summary>
            Gets the RFLAN MAC address from factory data.  Most
            functions should use Mfg Table 20 for this but this was
            needed for the Boron Upgrade Tool
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061CanadianConfig">
            <summary>
            Sub table into the 2061 factory data table to read/write Canadian Meter Values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CanadianConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CanadianConfig.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the utility ID.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CanadianConfig.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CanadianConfig.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061CanadianConfig.CanadianMeter">
            <summary>
            This property gets/sets the Canadian Meter.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            This changes a meter into a Canadian Meter.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061CanadianConfig.CanadianSealed">
            <summary>
            This property gets/sets the Canadian Seal.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            Once a meter is converted to Canadian, then it is sealed to stop changes
            to various tables as outlined OpenWay Centron Candian Firmware Design
            by Dan Fasalino
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061MiscFactoryData">
            <summary>
            Sub table into the 2061 factory data table to read/write Misc Meter Values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscFactoryData.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscFactoryData.Read">
            <summary>
            Reads the table from the meter.  
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscFactoryData.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscFactoryData.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061MiscFactoryData.FactoryTestingComplete">
            <summary>
            This property gets/sets the Canadian Meter.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            This changes a meter into a Canadian Meter.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061MiscFactoryData.ManufacturedAsMSM">
            <summary>
            This property gets the Manufactured as MSM value. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061LineFrequency">
            <summary>
            Sub table into the 2061 factory data table to read/write Line Frequency
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LineFrequency.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LineFrequency.Read">
            <summary>
            Reads the table from the meter.  
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LineFrequency.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LineFrequency.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061LineFrequency.Frequency">
            <summary>
            This property gets/sets the Canadian Meter.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            This changes a meter into a Canadian Meter.  
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061RCDThreshold">
            <summary>
            Sub table into the 2061 factory data table to read/write RCD Threshold Value
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RCDThreshold.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RCDThreshold.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the RCD ThresholdValue
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RCDThreshold.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061RCDThreshold.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061RCDThreshold.RCDThreshold">
            <summary>
            This property gets/sets the RCD Threshold Value.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig">
            <summary>
            Sub table into the 2061 factory data table to read/write Extended Power Outage Values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the extended outage config byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061ExtendedOutageConfig.ExtendedOutage">
            <summary>
            This property enables/disabled extended outages.  Setting this property will 
            write the value to the table and cause the meter to 3 button reset 
            after logging off.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061Energy1MeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Energy 1 Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy1MeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy1MeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Energy 1 Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy1MeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy1MeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061Energy1MeterKey.Energy1MeterKey">
            <summary>
            This property gets and sets the energy 1 meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061DemandMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Demand Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061DemandMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061DemandMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Demand Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061DemandMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061DemandMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061DemandMeterKey.DemandMeterKey">
            <summary>
            This property gets and sets the demand meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061TOUMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read TOU Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061TOUMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061TOUMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the TOU Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061TOUMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061TOUMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061TOUMeterKey.TOUMeterKey">
            <summary>
            This property gets and sets the TOU meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Load Profile Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Load Profile Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061LoadProfileMeterKey.LoadProfileMeterKey">
            <summary>
            This property gets and sets the Load Profile meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Power Quality Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Power Quality Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061PowerQualityMeterKey.PowerQualityMeterKey">
            <summary>
            This property gets and sets the Power Quality meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061MiscMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read/write Misc Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Misc Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061MiscMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061MiscMeterKey.MiscMeterKey">
            <summary>
            This property gets and sets the Misc meter key bit for injecting keys
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061IOMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read IO Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061IOMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061IOMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the IO Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061IOMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061IOMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061IOMeterKey.IOMeterKey">
            <summary>
            This property gets and sets the IO meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Option Board Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Option Board Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061OptionBoardMeterKey.OptionBoardMeterKey">
            <summary>
            This property gets and sets the Option Board meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Instantaneous Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Instantaneous Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061InstantaneousMeterKey.InstantaneousMeterKey">
            <summary>
            This property gets and sets the Instantaneous meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061SelfReadMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Self Read Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061SelfReadMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061SelfReadMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Self Read Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061SelfReadMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061SelfReadMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061SelfReadMeterKey.SelfReadMeterKey">
            <summary>
            This property gets and sets the Self Read meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061CalendarMeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Calendar Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CalendarMeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CalendarMeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Calendar Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CalendarMeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061CalendarMeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061CalendarMeterKey.CalendarMeterKey">
            <summary>
            This property gets and sets the Calendar meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFGTable2061Energy2MeterKey">
            <summary>
            Sub table into the 2061 factory data table to read Energy 2 Meter key Bit
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy2MeterKey.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy2MeterKey.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the Energy 2 Meter key byte.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy2MeterKey.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFGTable2061Energy2MeterKey.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.MFGTable2061Energy2MeterKey.Energy2MeterKey">
            <summary>
            This property gets and sets the energy 1 meter key bit.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMfgTable2061">
            <summary>
            Full table read/write 2061 factory data table
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2061.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2061.Read">
            <summary>
            Reads the data from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2061.Write">
            <summary>
            Writes the data to the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.SerialNumber">
            <summary>
            Gets the Serial Number of the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.ESN">
            <summary>
            Gets the Electronic Serial Number of the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.MacAddress">
            <summary>
            Gets the RFLAN Mac Address of the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.UID">
            <summary>
            Gets the RFLAN Utility ID 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.HW_Version">
            <summary>
            Gets the HW Version 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.HW_Revision">
            <summary>
            Gets the HW Revision 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.MeterKeyIO">
            <summary>
            Gets the IO Meter Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.MeterKeyMisc">
            <summary>
            Gets the Miscellanous Meter Key
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.CanadianMeter">
            <summary>
            Gets the Canadian Meter Value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.HanMAC">
            <summary>
            Gets the Zigbee MAC ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2061.Bridge">
            <summary>
            Gets the Bridge Identifcation (MSM Meter)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2061.InitializeVariables">
            <summary>
            Initialize Variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2061.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMfgTable2078">
            <summary>
            The CRFLANMfgTable2078 class handles the reading of the RFLAN Neighbor
            table.
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMfgTable2078.ACT_RFLAN_NEIGHBOR_LIST_TBL_LENGTH">
            <summary>
            Length of the neighbor table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.Read">
            <summary>
            Full read of table 2078 (RFLAN Neighbor Table) out of the meter.
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMfgTable2078.Neighbors">
            <summary>
            Returns an array of RFLAN Neighbor records.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="uiSize">The size of the Neighbor Table</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            Constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
            <param name="uiSize">The size of the Neighbor Table</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078.ParseData">
            <summary>
            Method to get data out of the Binary Reader and into member variables.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMfgTable2078.m_RFLANNeighbors">
            <summary>
            Neighbors
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMfgTable2078HDR">
            <summary>
            The 2078 class that handles the reading of the RFLAN Neighbor Table for
            High Data Rate RFLAN Modules.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMfgTable2078HDR.HDR_TABLE_LENGTH">
            <summary>
            The length of the HDR Neighbor table in bytes
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078HDR.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078HDR.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMfgTable2078HDR.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANNeighborEntryRcd">
            <summary>
            Class that represents a single RFLAN neighbor entry record.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANNeighborEntryRcd.NO_SYNCH_MERIT">
            <summary>Constant indicate the value used to represent No Synch Merit, meaning the device is not Synchronzized</summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANNeighborEntryRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryRcd.MACAddress">
            <summary>
            The MAC address of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryRcd.SynchMerit">
            <summary>
            The SynchMerit of the neighbor.  A complex calculation taking into 
            account the level of the neighbor and relative position to the current
            meter.  The lower the number the better.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryRcd.RSSI">
            <summary>
            Signed byte containing the RSSI.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANNeighborEntryHDRRecord">
            <summary>
            Class that represents a single RFLAN neighbor entry for High Dat Rate
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANNeighborEntryHDRRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryHDRRecord.LPD">
            <summary>
            Gets or sets the LPD value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryHDRRecord.Level">
            <summary>
            Gets or sets the Level
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryHDRRecord.TransmitWindow">
            <summary>
            Gets or sets the Transmit Window
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANNeighborEntryHDRRecord.ReceiveRate">
            <summary>
            Gets or sets the Receive Rate
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2168.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The Table 0 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2168.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">Table 0 object for the current device.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2168.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2168.MeterSerialNumber">
            <summary>
            Gets the meter swap out Meter Serial Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2168.CustomerSerialNumber">
            <summary>
            Gets the meter swap out Customer Serial Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2168.WattHours">
            <summary>
            Gets the value of the meter swap out Wh energy value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2168.WattDemand">
            <summary>
            Gets the meter swap out W demand value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2168.SwapOutTime">
            <summary>
            Gets the date and time the meter was swapped out.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PowerCalculationType">
            <summary>
            Power Calculation Method
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PowerCalculationType.Arithmatic">
            <summary>
            Arithmatic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PowerCalculationType.Vectorial">
            <summary>
            Vectorial
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2170.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The Table 0 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2170.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">Table 0 object for the current device.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2170.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2170.PulseQuantityTestID">
            <summary>
            Gets the meter Test Quantity ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2170.PulseQuantityTest">
            <summary>
            Gets the meter Test Quantity 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2170.PulseWeightTest">
            <summary>
            Gets the meter Test Kh
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2170.PulseWeightNormal">
            <summary>
            Gets the meter Normal Kh
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2170.PowerCalculationMethod">
            <summary>
            Gets the current power calculation method
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2175">
            <summary>
            MFG Table 2175 (Itron 127)
            12 Max Demands Log Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2175.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The Table 0 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2175.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2175.GetTableSize">
            <summary>
            Determines the size of the table.
            </summary>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2175.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2175.AMIMDERCDs">
            <summary>
            Retrieves the 12 Max Demand records.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2175.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIMDERCD">
            <summary>
            Class that represents a single AMI Max Demand Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIMDERCD.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIMDERCD.MaxWattsReceived">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIMDERCD.DateOfDemandReset">
            <summary>
            
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2428">
            <summary>
            MFG Table 2428 (Itron 380) class
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode">
            <summary>
            ChoiceConnect Comm.s Operational Modes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode.UnknownOperationalMode">
            <summary>
            Unknown, Unrecognized, or Unsupported Operational Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode.OpenWayOperationalMode">
            <summary>
            OpenWay Operational Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode.ChoiceConnectOperationalMode">
            <summary>
            ChoiceConnect Operational Mode
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommMfgMode">
            <summary>
            ChoiceConnect Comm.s Manufacturing Modes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommMfgMode.UnknownManufacturingMode">
            <summary>
            Unknown, Unrecognized, or Unsupported Manufacturing Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommMfgMode.ChoiceConnectManufacturingModeRFLAN">
            <summary>
            ChoiceConnect Manufacturing Mode for RF LAN migration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommMfgMode.ChoiceConnectManufacturingModeRFMesh">
            <summary>
            ChoiceConnect Manufacturing Mode for RF Mesh migration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.GetChoiceConnectCommOpModeString(Itron.Metering.Device.OpenWayMFGTable2428.ChoiceConnectCommOpMode)">
            <summary>
            Gets the text string for the specified ChoiceConnect Comm.s Operational Mode
            </summary>
            <param name="mode">The communications mode to get the string for.</param>
            <returns>The string for the communications mode.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.Write">
            <summary>
            Overrides the base class and returns an exception. 
            Not supporting full writes. This table's data is read from Comm. Module.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  
            Not supporting offset writes. This table's data is read from Comm. Module.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.Refresh">
            <summary>
            Provides a method for requesting that the table be refreshed the next  
            time the table data is accessed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.ManufacturedMode">
            <summary>
            Gets the original ChoiceConnect Comm. Mode at manufacture time.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.RequestedMode">
            <summary>
            Gets the last requested ChoiceConnect Comm. Mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CurrentRegisterMode">
            <summary>
            Gets the Register's Current ChoiceConnect Comm. Mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CurrentCommModuleMode">
            <summary>
            Gets the Comm. Module's Current ChoiceConnect Comm. Mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.ErrorVal">
            <summary>
            Gets the ChoiceConnect Communicaitons Error value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCOpenWayCommFwVer">
            <summary>
            Gets the OpenWay Comm. FW Version saved in the ChoiceConnect table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCOpenWayCommFwRev">
            <summary>
            Gets the OpenWay Comm. FW Revision saved in the ChoiceConnect table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCOpenWayCommFwBuild">
            <summary>
            Gets the OpenWay Comm. FW Build number saved in the ChoiceConnect table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCOpenWayCommFwVerRev">
            <summary>
            Gets the OpenWay Comm. FW Version and revision, saved in the
            ChoiceConnect table, as a formatted string xxx.xxx
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCOpenWayCommFwBuildString">
            <summary>
            Gets the OpenWay Comm. FW Build, saved in the ChoiceConnect table,
            as a 3 digit formatted string 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCChoiceConnectCommFwVer">
            <summary>
            Gets the ChoiceConnect Comm. FW Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCChoiceConnectCommFwRev">
            <summary>
            Gets the ChoiceConnect Comm. FW Revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCChoiceConnectCommFwBuild">
            <summary>
            Gets the ChoiceConnect Comm. FW Build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCChoiceConnectCommFwVerRev">
            <summary>
            Gets the ChoiceConnect Comm. FW Version and revision
            as a formatted string xxx.xxx
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2428.CCChoiceConnectCommFwBuildString">
            <summary>
            Gets the ChoiceConnect Comm. FW Build
            as a 3 digit formatted string 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2428.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2429">
            <summary>
            MFG Table 2429 (Itron 381) class
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.BUP_LID_WATT_HOUR_DELIVERED">
            <summary>
            Constant describing Bubble-up LID for Watt Hours Delivered
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.BUP_LID_WATT_HOUR_NET">
            <summary>
            Constant describing Bubble-up LID for Watt Hours Net
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.BUP_LID_WATT_HOUR_UNIDIR">
            <summary>
            Constant describing Bubble-up LID for Watt Hours Unidirectional
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.CC_SECURITY_STATE_UNSECURED">
            <summary>
            Constant describing ChoiceConnect Security State of Unsecured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.CC_SECURITY_STATE_COMMAND">
            <summary>
            Constant describing ChoiceConnect Security State of Command Security
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2429.CC_SECURITY_STATE_READ">
            <summary>
            Constant describing ChoiceConnect Security State of Read Security
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.GetBubbleUpLIDString(System.UInt32)">
            <summary>
            Gets the text string for the specified Bubble Up LID
            </summary>
            <param name="uiLID">The bubble-up LID to get the string for.</param>
            <returns>The string associated with the LID value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.GetChoiceConnectSecurityTranslation(System.Byte)">
            <summary>
            Gets the text string for the specified CHoiceConnect Security State
            </summary>
            <param name="SecurityState">The security state to translate into a string.</param>
            <returns>The string associated with the security state value.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.Write">
            <summary>
            Overrides the base class and returns an exception. 
            Not supporting full writes. This table's data is read from Comm. Module.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  
            Not supporting offset writes. This table's data is read from Comm. Module.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.ChoiceConnectCommType">
            <summary>
            Gets the Comm Type from ChoiceConnect Comm. Module data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.ErtIdNumber">
            <summary>
            Gets the ChoiceConnect Comm. Ert Id Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.BubbleUpLIDValue">
            <summary>
            Gets the ChoiceConnect Comm. Bubble Up LID value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.CCSecurityStateValue">
            <summary>
            Gets the ChoiceConnect Comm. Security State value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.ErtIdString">
            <summary>
            Gets the ChoiceConnect Comm. ERT ID
            as a formatted string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2429.CCSecurityStateString">
            <summary>
            Gets the ChoiceConnect Comm. Security State as a translated string value
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2429.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2193">
            <summary>
            MFG Table 2193 (Itron 145) class
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2193.SecurityFormat">
            <summary>
            Security formats
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.GetSecurityFormatString(Itron.Metering.Device.OpenWayMFGTable2193.SecurityFormat)">
            <summary>
            Gets the text string for the specified Security format
            </summary>
            <param name="format">The format to get the string for.</param>
            <returns>The string for the format.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.EnableDisableZigBeePermanently(System.Boolean)">
            <summary>
            This method will either take down the ZigBee network permanently or reenable permanently
            depending on the bool parameter passed in.  Pass true to enable; false, to disable.
            </summary>
            <param name="Enable"></param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2193.ExceptionModel">
            <summary>
            Gets the exception model to use for enhanced security
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2193.IsEnhancedSecurityRequired">
            <summary>
            Gets whether or not the enhanced security is required.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2193.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2193.IsZigBeePrivateProfileDisabled">
            <summary>
            Gets whether or not ZigBee Private Profile enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2193.IsZigBeeDisabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2193.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2194">
            <summary>
            MFG Table 2194 (Itron 146) - Comm Module Table ID
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2194.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2194.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2194.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The result of the write</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2194.CommTableID">
            <summary>
            Gets or sets the Comm Module Table ID to read in table 2195
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2194.ParseData">
            <summary>
            Parses the data read by the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2195">
            <summary>
            MFG Table 2195 (Itron 147) - Comm Module Table Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2195.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt32,System.Int32,System.UInt16,Itron.Metering.Device.OpenWayMFGTable2194)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="tableSize">The size of the Comm Module table</param>
            <param name="tableTimeout">The table timeout</param>
            <param name="commTableID">The Communication Module table to read.</param>
            <param name="table2194">The table 2194 object for the current meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2195.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2195.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2195.m_usCommTableID">
            <summary>
            The table ID for the Comm Module table to read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2195.m_Table2194">
            <summary>
            The Table 2194 object for the current meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2198.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="Table0">The Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2198.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table in bytes
            </summary>
            <param name="Table0">The table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2198.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2198.DisplayTime">
            <summary>
            Gets the time stored in the display
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2220">
            <summary>
            MFG Table 72 (2220) - Factory Data Information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2220.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2220.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL file.
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2220.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2220.IsCanadian">
            <summary>
            Gets whether or not the meter is Canadian
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2220.IsSealedCanadian">
            <summary>
            Gets whether or not the meter is sealed for Canada
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2220.IsSealedCanadianFromOffsetRead">
            <summary>
            Gets whether or not the meter is sealed for Canada directly.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2220.IsLEDPulsingVar">
            <summary>
            Gets whether or not the meter is currently pulsing Var on the LED
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2220.IsLEDPulsingVA">
            <summary>
            Gets whether or not the meter is currently pulsing VA on the LED
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2220.ParseData">
            <summary>
            Parses the data that has just been read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2270">
            <summary>
             OpenWay MFG Table 2270 is a read only table which holds HW 3.0 Task execution Times
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2270.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="fltRegFWVer">register firmware version</param>
            <param name="uiRegFWBuild">register firmware build</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2270.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2270.FreeRunningTime">
            <summary>
            Gets free running time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2270.AMIHW3TASKRCD">
            <summary>
            This is essentially a dump of table 2270.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2270.ParseData">
            <summary>
            Parses the data that has just been read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2270.GetTableSize(System.Single,System.UInt32)">
            <summary>
            Determines the size of the table based on the firmware version running in the meter
            </summary>
            <param name="fltRegFWRevision">The version.revision of register f/w expressed as a floating point number</param>
            <param name="uiRegFWBuild">The build of the register f/w expressed as a uint</param>
            <returns>The size of the table</returns>
        </member>
        <member name="T:Itron.Metering.Device.AMIHW3TASKRCD">
            <summary>
            Class that represents a single Task Information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHW3TASKRCD.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHW3TASKRCD.TaskName">
            <summary>
            Task Name
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHW3TASKRCD.LastSwitchInTime">
            <summary>
            Last Switch In Time in milli seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHW3TASKRCD.LastSwitchOutTime">
            <summary>
            Last Switch Out Time in milli seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHW3TASKRCD.LastExecutionTime">
            <summary>
            LastExecutionTime
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHW3TASKRCD.MaxExecutionTime">
            <summary>
            Max Execution Time
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar">
            <summary>
            Sub Table class for the DST Configuration in MFG Table 212 (2260)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.Read">
            <summary>
            Reads the sub table from the meter.
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.DSTHour">
            <summary>
            Gets the configured DST change hour
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.DSTMinute">
            <summary>
            Gets the configured DST change minute
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.DSTOffset">
            <summary>
            Gets the configured DST change offset
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.DSTDates">
            <summary>
            Gets the list of configured DST dates
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260DSTCalendar.ParseData">
            <summary>
            Parses the sub table from the data that was just read.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260SR30Config">
            <summary>
            MFG Table 2260 (Itron 212)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.FatalErrorRecoveryEnabled">
            <summary>
            Whether or not fatal error recovery is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.TapEnabled">
            <summary>
            Whether or not tap is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.InversionThreshold">
            <summary>
            An event is triggered if the acceleration value along the X axis of the accelerometer
            is greater than or equal to this threshold
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.RemovalThreshold">
            <summary>
            An event is triggered if average acceleration value on X and Z axes of the accelerometer
            is above this threshold.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.TapThreshold">
            <summary>
            A tap is detected if average acceleration value on the Y axis of the accelerometer
            is above this threshold and falls below it within 400 milliseconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.WakeupDurationSecond">
            <summary>
            The number of seconds to pull data from the accelerometer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.AssetSyncEnabled">
            <summary>
            Gets whether or not the Asset Sync feature is enabled in the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.ParseData">
            <summary>
            Parse the data read from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.UseTapDefault">
            <summary>
            Gets whether or not the Tap config default values should be used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.UseFatalErrorRecoveryDefault">
            <summary>
            Gets whether or not the Fatal Error Recovery defaults should be used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260SR30Config.UseAssetSyncDefault">
            <summary>
            Gets whether or not the Asset Sync defaults should be used.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig">
            <summary>
            MFG Table 2260 (Itron 212)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum">
            <summary>
            Definition of outage lengths recognized for extended outages
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_OFF">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_3_MIN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_10_MIN">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_1_HR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_12_HR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_1_DAY">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_7_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_14_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_30_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_91_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_182_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_365_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_776_DAYS">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedPowerOutageDurationEnum.EXTENDED_POWER_OUTAGE_DISABLED">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.ExtendedOutageDuration">
            <summary>
            Whether or not fatal error recovery is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.LoadVoltageDetectionDelay">
            <summary>
            Whether or not fatal error recovery is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260ExtendedConfig.PowerUpThreshold">
            <summary>
            Gets the value of the power up threshold.  If disabled, the value will be 0.
            If not supported, the value will be 0xFF.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260HANEvents">
            <summary>
            Sub Table class for the HAN Events Configuration in MFG Table 212 (2260)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.LogType">
            <summary>
            How the log is structured.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.LogType.Linear">
            <summary>
            Linear Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.LogType.Circular">
            <summary>
            Circular Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.LogType.CircularNoOver">
            <summary>
            Circular No Over Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.LogType.NotConfigured">
            <summary>
            Not Configured
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents">
            <summary>
            Enum of HAN 2 log event ids to be used with EDL files
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.MessagePublished">
            <summary>
            Message Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.PricingDataPublished">
            <summary>
            Pricing Data Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DRLCDataPublished">
            <summary>
            DRLC Data Published
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.PriceTierChanged">
            <summary>
            Price Tier Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.NewDRLCEventDropped">
            <summary>
            New DRLC Event Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.ExistingDRLCEventDropped">
            <summary>
            Existing DRLC Event Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.AttributeWrite">
            <summary>
            Attribute Write
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.MeterNetworkChange">
            <summary>
            Network Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.SecurityProfileUpdateNotification">
            <summary>
            Security Profile Update Notification
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DiagnosticSystemEvent">
            <summary>
            Diagnostic System Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.MoveOut">
            <summary>
            Move Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.RIBMeterEvent">
            <summary>
            RIB Meter Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.RIBCEEvent">
            <summary>
            RIB CE Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.RIBErrorEvent">
            <summary>
            RIB Error Event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.NextBlockPriceCommitTimeout">
            <summary>
            RIB Next Block Price Commit Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.PriceDisabled">
            <summary>
            Price Disable occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.EventCacheOverflowDownstream">
            <summary>
            Event Cache Overflow
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.MessageConfirmation">
            <summary>
            Message Confirmation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.PriceAcknowledgement">
            <summary>
            Price Acknowledgement
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.LoadControlOptOut">
            <summary>
            Load Control Opt Out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.LoadControlStatus">
            <summary>
            Load Control Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceStateChange">
            <summary>
            Device State Change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceAdded">
            <summary>
            Device Added
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceDropped">
            <summary>
            Device Dropped
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceNotHeard">
            <summary>
            Device Not Heard
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DevicePinged">
            <summary>
            Device Pinged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.MessageDeliveryFailed">
            <summary>
            Message Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.PriceDeliveryFailed">
            <summary>
            Price Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DRLCDeliveryFailed">
            <summary>
            DRLC Delivery Failed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.SubmeteringBubbleUpDataMissing">
            <summary>
            Submetering Bubble-up Data Missing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceUEGChanged">
            <summary>
            Device UEG Changed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.DeviceJoined">
            <summary>
            Device Added
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.JoinFlagDisabledWithUnjoinedDevice">
            <summary>
            Device Not Joined at End of Join Period
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2LogEvents.EventCacheOverflowUpstream">
            <summary>
            Event Cache Overflowed
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Event Data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.Read">
            <summary>
            Reads the sub table from the meter.
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HANLogType">
            <summary>
            How the HAN log is configured in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HANEventsConfigured">
            <summary>
            Each bit position in the byte array returned represents a HAN event.
            If the event is configured, the bit value is 1; otherwise, 0.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.HAN2EventConfiguration">
            <summary>
            Gets the HAN 2 event configuration from Mfg table 212
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.ParseData">
            <summary>
            Parses the sub table from the data that was just read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.ParseEventData">
            <summary>
            Parses the sub table from the data that was just read from an EDL file
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.AddHANEventConfigItem(System.String,System.Boolean,System.Byte)">
            <summary>
            Constructs a new MFG2260HANEventItem
            </summary>
            <param name="Description">A description of the event</param>
            <param name="Enabled">Whether or not the event is enabled</param>
            <param name="EventID">An identifier for the event</param>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2260HANEvents.m_lstHANEventConfiguration">
            <summary>
            List of Mfg table 212 HAN events
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFG2260HANEventItem">
            <summary>
            Simple class to represent an MFG table 2260 event item as a description
            and a boolean, which tells whether or not the event is enabled in
            the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="Description"></param>
            <param name="Enabled"></param>
            <param name="ID"></param>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.Equals(Itron.Metering.Device.MFG2260HANEventItem)">
            <summary>
            Determines whether the two Events are equal
            </summary>
            <param name="other">The event to compare to</param>
            <returns>True if the evenst are equal. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.Equals(System.Object)">
            <summary>
            Determines whether the values are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if they are equal. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.GetHashCode">
            <summary>
            Gets the hash code for the event.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2260HANEventItem.CompareTo(Itron.Metering.Device.MFG2260HANEventItem)">
            <summary>
            Compares the two events.
            </summary>
            <param name="other">The event to compare to.</param>
            <returns>0 if the values are equal. A negative number if less than or a positve number if greater than.</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFG2260HANEventItem.Description">
            <summary>
            Gets or sets the event's description
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFG2260HANEventItem.Enabled">
            <summary>
            Gets or sets whether or not the event has been enabled
            in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFG2260HANEventItem.ID">
            <summary>
            Gets or sets the event's ID code.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FatalErrorRecoveryStatus">
            <summary>
            The Fatal Error Recovery Status flags
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrorRecoveryStatus.None">
            <summary>
            No status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrorRecoveryStatus.ActiveConfig">
            <summary>
            The meter is configured to use Fatal Recovery
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrorRecoveryStatus.CurrentlyEnabled">
            <summary>
            The meter is currently in Recovery mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrorRecoveryStatus.CoreDumpAvailable">
            <summary>
            A Core Dump is available
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrorRecoveryStatus.InProgress">
            <summary>
            Recovery is in process
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FatalErrors">
            <summary>
            Fatal Error bitfield
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.None">
            <summary>
            No Errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError1">
            <summary>
            Fatal Error 1 - MCU Flash
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError2">
            <summary>
            Fatal Error 2 - RAM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError3">
            <summary>
            Fatal Error 3 - Data Flash
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError4">
            <summary>
            Fatal Error 4 - CPC
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError5">
            <summary>
            Fatal Error 5 - Bad EPF Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError6">
            <summary>
            Fatal Error 6 - File System
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.FatalError7">
            <summary>
            Fatal Error 7 - Operating System
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FatalErrors.ErrorPresent">
            <summary>
            Fatal Error Present
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FatalErrorHistoryData">
            <summary>
            Historical information for a Fatal Error
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FatalErrorHistoryData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.FatalErrorHistoryData.ParseData(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data read from the meter.
            </summary>
            <param name="reader">The PSEM Binary Reader that contains the Fatal Error data.</param>
        </member>
        <member name="P:Itron.Metering.Device.FatalErrorHistoryData.TimeOfOccurance">
            <summary>
            Gets the Date and Time that the Fatal Error occurred.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FatalErrorHistoryData.Error">
            <summary>
            Gets the Errors that occurred for this Recovery Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FatalErrorHistoryData.RecoveryStatus">
            <summary>
            Gets the Recovery Status for the error.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.FatalErrorHistoryData.Reason">
            <summary>
            Gets the reason the Fatal Error occurred.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2261">
            <summary>
            MFG Table 2261 (Itron 213)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2261.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2261.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used by EDL file.
            </summary>
            <param name="binaryReader">The binary reader containing the table data.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2261.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2261.CurrentRecoveryStatus">
            <summary>
            Gets the current recovery status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2261.FatalErrorRecoveryCount">
            <summary>
            Gets the number of times the meter has entered Fatal Error Recovery mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2261.FatalErrorHistory">
            <summary>
            Gets the list of Fatal Errors that have occurred in the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2261.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FeatureState">
            <summary>
            Enum used for the state of ZigBee and Signed Authorization
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FeatureState.Enabled">
            <summary>
            The feature is currently enabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FeatureState.Disabled">
            <summary>
            The feature is permanently disabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FeatureState.DisabledForPeriod">
            <summary>
            The feature has been temporarily disabled for an amount of time
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2219">
            <summary>
            MFG Table 2219 (Itron 171) 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2219.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2219.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.ZigBeeState">
            <summary>
            Gets the current state of ZigBee
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.SignedAuthorizationState">
            <summary>
            Gets the current state of Signed Authorization in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.ZigBeeDisabledTimeRemaining">
            <summary>
            Gets the amount of time remaining for ZigBee to be disabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.SignedAuthorizationDisabledTimeRemaining">
            <summary>
            Gets the amount of time remaining for Signed Authorization to be disabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.AreC1218PasswordsHashed">
            <summary>
            Gets whether or not the C12.18 Passwords are hashed in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.IsJTAGSecurityEnabled">
            <summary>
            Gets whether or not the JTAG Security bit has been enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.EnhancedSecurityKeysInjected">
            <summary>
            Gets whether or not the Enhanced Security Keys has been injected.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2219.IsHANPricingEnabled">
            <summary>
            Gets whether or not the HAN Pricing bit has been enabled.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2219.ParseData">
            <summary>
            Parses the data that was just read. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2264">
            <summary>
            MFG Table 2264 (Itron 216)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2264.ConfigSource">
            <summary>
            Enumeration of the possible sources for configuring the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2264.ConfigSource.INTERNAL">
            <summary>
            Source was internal to the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2264.ConfigSource.OPTICAL">
            <summary>
            Source was from the optical port.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2264.ConfigSource.EXCEPTION_HOST">
            <summary>
            Source was an OTA exception host.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OpenWayMFGTable2264.ConfigSource.NON_EXCEPTION_HOST">
            <summary>
            Source was an OTA non-exception host.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2264.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2264.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2264.ProgramCount">
            <summary>
            This property retrieves the current configuration count.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2264.LastConfigurationTime">
            <summary>
            This property retrieves the date and time of the last configuration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2264.LastConfigurationSource">
            <summary>
            This property retrieves the date and time of the last configuration.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2264.ParseData">
            <summary>
            Parse the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2281">
            <summary>
            MFG Table 2281 - ZigBee Link Key - This is a HW 3.0 only table that can only be read if the Misc Meterkey value is set correctly
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2281.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2098)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2098">The table 2098 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2281.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2281.ZigBeeKeys">
            <summary>
            Gets the set of ZigBee Keys
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            When reading this table a PSEMException may occur with PSEMResponse.Isc response if the appropriate
            meterkey bit is not set when trying to read this meter.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2281.ParseData">
            <summary>
            Parses the data that was just read from the meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2281.GetTableSize(System.Byte)">
            <summary>
            Gets the size of the table in bytes
            </summary>
            <param name="numberOfClients">The number of HAN clients supported by the meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.ZigBeeSecurityKeyPair">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeSecurityKeyPair.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeSecurityKeyPair.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the key pair from the binary reader
            </summary>
            <param name="reader">The binary reader containing the key data</param>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.DeviceAddress">
            <summary>
            Gets the Device Address for the device the key is assigned to
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.ReadableDeviceAddress">
            <summary>
            Gets the Device Address as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.LinkKey">
            <summary>
            Gets the link key for the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.ReadableLinkKey">
            <summary>
            Gets the Link Key as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.OutFrameCounter">
            <summary>
            Gets the number of frames sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ZigBeeSecurityKeyPair.InFrameCounter">
            <summary>
            Gets the number of frames received
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANResetMethod">
            <summary>
            HAN reset methods
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.PerformReset">
            <summary>
            User reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestOneJoinedDevice">
            <summary>
            Test 1 - At least one HAN device joined
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestCodeDetectedReset">
            <summary>
            Test 2 - Code detected reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestZigBeeStackTaskWatchdog">
            <summary>
            Test 3 - Reset from ZigBee Stack Task watchdog
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestZigBeeTaskWatchdog">
            <summary>
            Test 4 - Reset from ZigBee Task watchdog
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestProcessorFault">
            <summary>
            Test 5 - Processor Fault reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestPeriodicReset">
            <summary>
            Test 6 - Periodic Reset using Test 5 method
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.TestFirstUseReset">
            <summary>
            Test 7 - First Use Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.DisableTest">
            <summary>
            Disable Tests
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.ClearResetLimitingHaltCondition">
            <summary>
            Clear Reset Limiting Halt Condition
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetMethod.ClearResetLog">
            <summary>
            Clears the Reset Log
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANResetType">
            <summary>
            HAN Reset Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.NormalReset">
            <summary>
            Normal Reset - By User
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.DetectedFatalError">
            <summary>
            Detected a Fatal Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.Watchdog">
            <summary>
            Watchdog Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.CoreFault">
            <summary>
            Processor Core Fault
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.StackLockup">
            <summary>
            ZigBee Stack Lockup
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.FirstUsedReset">
            <summary>
            First Used Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.PeriodicReset">
            <summary>
            Periodic Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.DisableZigbee">
            <summary>
            Caused whenever the HAN is disabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.EmptyPeroidicReset">
            <summary>
            
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.DiagnosticStop">
            <summary>
            Used to halt on a critical bug where we want the HAN to halt even if not at reset limiting, but we don't want it to fatal error.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.NetworkRestart">
            <summary>
            Used to restart the task for facilitating network restart (mostly for debug)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANResetType.HAN_RESET_TYPE_CODE_INVALID">
            <summary>
            Catch all
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2290">
            <summary>
            MFG Table 2290 (242) - HAN Reset Log
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="firmwareVersion">The firmware version of the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.ToString">
            <summary>
            Formats the contents of the table into a string
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalHANResets">
            <summary>
            Gets the total number of HAN Resets
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.LastResetTime">
            <summary>
            Gets the date and time of the last reset
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalCodeFatalErrors">
            <summary>
            Gets the total number of code detectable errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalWatchdogErrors">
            <summary>
            Gets the total number of watchdog errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalCoreFaults">
            <summary>
            Gets the total number of processor faults
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalStackLockups">
            <summary>
            Gets the total number of stack lockups
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.TotalFirstUseResets">
            <summary>
            Gets the total number of First Use Resets
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.HighWaterMark">
            <summary>
            Gets the High Mark For Reset Limiting
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.CurrentResetLimitPeriod">
            <summary>
            Gets the Current Reset Limit Period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.CurrentResetLimitCount">
            <summary>
            Gets the Current Reset Limit Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.OverResetLimit">
            <summary>
            Gets the Current Reset Limit Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.isHaltedDueToOverResetLimit">
            <summary>
            Gets the Current Reset Limit Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.isHaltedDueToDiagnosticStop">
            <summary>
            Gets the Current value of Diagnostic Stop byte
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.ValidEntrySequenceNumbers">
            <summary>
            Gets the entry sequence numbers
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2290.ResetLogEntries">
            <summary>
            Gets the list of HAN Reset log entries
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.GetTableSize(System.Single)">
            <summary>
            Gets the size of the 
            </summary>
            <param name="version">The firmware version of the meter.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.ReadBasicInformation">
            <summary>
            Reads just the basic information from the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.ParseData">
            <summary>
            Parses the data that was just read
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2290.ParseBasicInformation">
            <summary>
            Parses the Basic Information from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANResetLogEntry">
            <summary>
            HAN Reset Log Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANResetLogEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANResetLogEntry.ToString">
            <summary>
            Formats the contents of the Entry as a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="P:Itron.Metering.Device.HANResetLogEntry.ResetType">
            <summary>
            Gets the HAN Reset Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANResetLogEntry.SubCode">
            <summary>
            Gets the error sub code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANResetLogEntry.ResetTime">
            <summary>
            Gets the reset time
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANResetLogEntry.ParseEntry(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Communications.PSEM.PSEMBinaryReader.TM_FORMAT)">
            <summary>
            Parses the Reset Log Entry
            </summary>
            <param name="reader">The binary reader that contains the data</param>
            <param name="timeFormat">The time format of the meter</param>
        </member>
        <member name="T:Itron.Metering.Device.ZigBeeMiniCoreDump">
            <summary>
            Mini Core Dump for ZigBee
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeMiniCoreDump.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeMiniCoreDump.ToString">
            <summary>
            Formats the contents of the Entry as a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeMiniCoreDump.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the Mini Core dump from the table
            </summary>
            <param name="reader">The binary reader containing the table data</param>
        </member>
        <member name="T:Itron.Metering.Device.CPUFrame">
            <summary>
            ZigBee CPU Frame
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CPUFrame.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CPUFrame.ToString">
            <summary>
            Formats the contents of the Entry as a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.CPUFrame.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the CPU Frame
            </summary>
            <param name="reader">The binary reader containing the table data</param>
        </member>
        <member name="T:Itron.Metering.Device.ZigBeeErrorLogEntry">
            <summary>
            ZigBee Error Log Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeErrorLogEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeErrorLogEntry.ToString">
            <summary>
            Formats the contents of the Entry as a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeErrorLogEntry.ParseEntry(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Communications.PSEM.PSEMBinaryReader.TM_FORMAT)">
            <summary>
            Parses the Error Log entry
            </summary>
            <param name="reader">The binary reader containing the table data</param>
            <param name="timeFormat">The time format of the meter</param>
        </member>
        <member name="T:Itron.Metering.Device.ZigBeeEventLogEntry">
            <summary>
            ZigBee Event Log Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeEventLogEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeEventLogEntry.ToString">
            <summary>
            Formats the contents of the Entry as a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.ZigBeeEventLogEntry.ParseEntry(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the entry from the table data
            </summary>
            <param name="reader">The binary reader containing the table data</param>
        </member>
        <member name="T:Itron.Metering.Device.CondensedRegistrationTableEntry">
            <summary>
            Condensed Registration Table Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CondensedRegistrationTableEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CondensedRegistrationTableEntry.ToString">
            <summary>
            Formats the content of the Entry into a string
            </summary>
            <returns>The entry as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.CondensedRegistrationTableEntry.ParseEntry(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the entry from the table data
            </summary>
            <param name="reader">The binary reader containg the table data</param>
        </member>
        <member name="T:Itron.Metering.Device.CppStatus">
            <summary>
            Cpp Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_Zero_Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_Configured">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_WaitingForEoiSync">
            <summary>
            Waiting for EOI Sync
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_Active">
            <summary>
            Active
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_DoneOnEoi">
            <summary>
            Done on EOI
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_Done">
            <summary>
            Done
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CppStatus.Cpp_NotConfigured">
            <summary>
            Not Configured
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2360">
            <summary>
            MFG Table 2360
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2360.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM Communications object for the current session</param>
            <param name="Table0">The Table 0 object for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2360.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table in bytes
            </summary>
            <param name="Table0">The table 0 object for the current meter</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2360.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2360.Status">
            <summary>
            Gets the CPP Status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2360.StartTimeGmt">
            <summary>
            Gets the CPP Start time (GMT)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2360.Duration">
            <summary>
            Gets the CPP duration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2360.Rate">
            <summary>
            Gets the CPP Rate
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2612.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2612.Read">
            <summary>
            Reads Mfg table 564 out of the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2612.TLVID">
            <summary>
            Reads the TLV ID field that stores which TLV was requested
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2612.TLVData">
            <summary>
            Reads the TLV data stored in table 2612 for the requested TLV ID.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2760">
            <summary>
            MFG Table 712 - Tamper Summary Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2760.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">Protocol instance being used by the device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2760.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.Int32)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object</param>
            <param name="timeFormat">he time format used in the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2760.Read">
            <summary>
            Full read of 2760 from the meter
            </summary>
            <returns>The PSEM response code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.InversionTamperCount">
            <summary>
            The number of inversion tampers that have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.LastInversionDateTime">
            <summary>
            The timestamp of the latest inversion tamper
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.RemovalTamperCount">
            <summary>
            The number of removal tampers that have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.LastRemovalDateTime">
            <summary>
            The timestamp of the latest removal tamper
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.MagneticTamperCount">
            <summary>
            The number of magnetic tampers that have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.LastMagneticTamperDateTime">
            <summary>
            The timestamp of the latest magnetic tamper
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.MagneticTamperClearedCount">
            <summary>
            The number of magnetic tamper cleared events that have occurred
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2760.LastMagneticTamperClearedDateTime">
            <summary>
            The timestamp of the latest magnetic tamper cleared
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2760.ParseData">
            <summary>
            Parses the data from the binary reader.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable3043Header">
            <summary>
            Sub table used for reading the Core Dump Header information.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Header.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Header.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Header.IsValidCoreDump">
            <summary>
            Gets whether or not 3043 contains a valid core dump.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Header.FWVersion">
            <summary>
            Gets the FW Version at the time of core dump
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Header.FWRevision">
            <summary>
            Gets the FW Revision at the time of core dump
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Header.FWBuild">
            <summary>
            Gets the FW Build at the time of core dump
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Header.CoreDumpTime">
            <summary>
            Gets the date and time of the core dump in GMT
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Header.ParseData">
            <summary>
            Parses the data read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable3043Info">
            <summary>
            Sub table used for reading the Core Dump Info block
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Info.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Info.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Info.NumberOfMapItems">
            <summary>
            Gets the number of map items in the Core Dump
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Info.ParseData">
            <summary>
            Parses the data read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable3043Map">
            <summary>
            Sub table used for reading the Core Dump Map block
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Map.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable3043Info)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object</param>
            <param name="table3043Info">The 3043 Core Dump Info sub table</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Map.Read">
            <summary>
            Reads the sub table from the meter
            </summary>
            <returns>The response of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable3043Map.MapItems">
            <summary>
            Gets the list of Map items
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Map.GetTableSize(Itron.Metering.Device.OpenWayMFGTable3043Info)">
            <summary>
            Gets the size of the table.
            </summary>
            <param name="table3043Info">The 3043 Core Dump Info sub table for the current device</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable3043Map.ParseData">
            <summary>
            Parses the data read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CoreDumpMapItem">
            <summary>
            Class the represents a Map Item stored in the core dump.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CoreDumpMapItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CoreDumpMapItem.ParseItem(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parse a map item from the specified binary reader
            </summary>
            <param name="binaryReader">The binary reader to parse from</param>
        </member>
        <member name="P:Itron.Metering.Device.CoreDumpMapItem.ItemID">
            <summary>
            Gets the Item ID for the Map item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CoreDumpMapItem.Offset">
            <summary>
            Gets the offset for the map item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CoreDumpMapItem.Length">
            <summary>
            Gets the length of the map item in bytes
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2262">
            <summary>
            MFG Table 2262 (Itron 214)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2262.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2262.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.AccelerometerConfigError">
            <summary>
            If true, there are errors in accelerometer configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.WakeUpStatus">
            <summary>
            If false, tap and tamper detections are not running
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.RemovalPDNCheck">
            <summary>
            If true, a removal tamper has been detected and the meter is checking the power down for 10 seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.TapCheck">
            <summary>
            Represents the internal state machine status.  If non-zero, a tap has been detected.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.Scalar">
            <summary>
            The multiplier to apply to the angles in table 2263
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2262.Divisor">
            <summary>
            The divisor to apply to the angles in table 2263
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2262.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2263">
            <summary>
            MFG Table 2263 (Itron 215)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2263.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2263.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.AccelerometerSupported">
            <summary>
            Whether or not the accelerometer is supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.ReferenceAngleX">
            <summary>
            The reference angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.ReferenceAngleY">
            <summary>
            The reference angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.ReferenceAngleZ">
            <summary>
            The reference angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.CurrentAngleX">
            <summary>
            Current angle of installation of the X axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.CurrentAngleY">
            <summary>
            Current angle of installation of the Y axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.CurrentAngleZ">
            <summary>
            Current angle of installation of the Z axis. Note that the scalar
            and divisor from table 2262 have been applied.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.MaxDeltaX">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along X axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.MaxDeltaY">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Y axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.MaxDeltaZ">
            <summary>
            The maximum absolute difference between acceleration value and reference
            value along Z axis since powerup
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.MaxAvgDeltaTap">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2263.MaxAvgDeltaTamper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2263.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MonitorPhases">
            <summary>
            Used to enumerate the monitored phases of the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MonitorPhases.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MonitorPhases.A">
            <summary>
            Phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MonitorPhases.AC">
            <summary>
            Phases A and C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MonitorPhases.ABC">
            <summary>
            Phases A, B and C
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterServiceType">
            <summary>
            Used to enumerate service types supported by the polyphase meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.ThreeElFourWY">
            <summary>
            WYE_3ELEMENT_3PHASE_4WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoHalfFourWY">
            <summary>
            WYE_2_5ELEMENT_3PHASE_4WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoElNet">
            <summary>
            NETWORK_2ELEMENT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.ThreeElFourWD">
            <summary>
            DELTA_3ELEMENT_3PHASE_4WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoElFourWY">
            <summary>
            WYE_2ELEMENT_3PHASE_4WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoElThreeWD">
            <summary>
            DELTA_2ELEMENT_3PHASE_3WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoElFourWD">
            <summary>
            DELTA_2ELEMENT_3PHASE_4WIRE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoElSingle">
            <summary>
            SINGLEPHASE_2ELEMENT
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.OneElThreeWire">
            <summary>
            Single Phase 3-wire - 2S/4S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.OneElTwoWire">
            <summary>
            Single Phase 2-wire - 3S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.TwoHalfFourWY_9S">
            <summary>
            9S doing 46S metering
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterServiceType.NoValidService">
            <summary>
            Invalid Service type
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterForm">
            <summary>
            Used to enumerate meter forms supported by the polyphase meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form1S">
            <summary>
            1S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form2S">
            <summary>
            2S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form3S">
            <summary>
            3S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form4S">
            <summary>
            4S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form5S">
            <summary>
            5S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form9S">
            <summary>
            9S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form10S">
            <summary>
            10S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form12S">
            <summary>
            12S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form13S">
            <summary>
            13S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form16S">
            <summary>
            16S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form22">
            <summary>
            22 Weco COSEM
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form25S">
            <summary>
            25S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form26S">
            <summary>
            26S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form29S">
            <summary>
            29S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form36S">
            <summary>
            36S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form45S">
            <summary>
            45S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form46S">
            <summary>
            46S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form48S">
            <summary>
            48S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form56S">
            <summary>
            56S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form66S">
            <summary>
            66S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form96S">
            <summary>
            96S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.Form1J">
            <summary>
            1J
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForm.NON_FM12S">
            <summary>
            Non-12S
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2153">
            <summary>
            MFG Table 2153 (Itron 105)
            Enhanced Voltage Monitoring Actual Dimension Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2153.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2153.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2153.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2153.NumberBlockIntervals">
            <summary>
            Maximum number of intervals per block which can be contained in the data table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2153.IntervalLength">
            <summary>
            Maximum time in minutes for Voltage Monitoring interval duration.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2153.VRMSAlarmMinSeconds">
            <summary>
            The number of seconds to confirm that the instantaneous voltage is 
            above/below the threshold before a corresponding alarm is reported. 
            The value 0 means immediate reporting.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2153.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2154">
            <summary>
            MFG Table 2154 (Itron 106)
            Enhanced Voltage Monitoring Control Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2154.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2154.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The current PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2154.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2154.VoltageMonitoringEnabled">
            <summary>
            Voltage Monitoring is enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2154.VhLowThreshold">
            <summary>
            An integer value representing the low threshold percentage related to the 
            nominal Volt hour in an interval. An event is triggered if the volt hour value 
            for Voltage Monitoring interval duration is below this threshold x nominal Vh.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2154.VhHighThreshold">
            <summary>
            An integer value representing the high threshold percentage related to the 
            nominal Volt hour in an interval. An event is triggered if the volt hour value 
            for Voltage Monitoring interval duration is above this threshold x nominal Vh.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2154.RMSVoltLowThreshold">
            <summary>
            An integer value [0, 100] representing the low threshold percentage related 
            to the nominal voltage. An event is triggered if minimum instantaneous 
            RMS voltage during Voltage Monitoring interval duration is below this 
            threshold x nominal voltage for a configurable number of seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2154.RMSVoltHighThreshold">
            <summary>
            An integer value [0, 100] representing the high threshold percentage related 
            to the nominal voltage. An event is triggered if minimum instantaneous 
            RMS voltage during Voltage Monitoring interval duration is above this 
            threshold x nominal voltage for a configurable number of seconds.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2154.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2155">
            <summary>
            MFG Table 2155 (Itron 107)
            Enhanced Voltage Monitoring Status Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2155.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2155.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file
            </summary>
            <param name="reader">The PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2155.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.Scalar">
            <summary>
            The scalar applied to all phases for Vh data item intervals and end readings.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.Divisor">
            <summary>
            The divisor applied to all phases for Vh data item intervals and end readings.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.NumberOfBlocks">
            <summary>
            The maximum number of blocks that can be contained in the data table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.NumberValidBlocks">
            <summary>
            The number of valid voltage monitoring data blocks in the data table.
            The range is zero (meaning no blocks in the VM data table) to the actual 
            dimension of the number of VM data blocks.  The block is considered valid 
            when at least one interval is written.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.LastBlock">
            <summary>
            Array element of the newest valid data block in the Voltage Monitoring data array. 
            This field is valid only if the number of valid blocks is greater than zero.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.LastBlockSequenceNumber">
            <summary>
            Sequence number of the last block. It continues to increment even if it 
            exceeds the maximum number of blocks available in storage memory.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2155.NumberValidIntervals">
            <summary>
            Number of valid intervals stored in the last Voltage Monitoring block array. 
            The range is zero (meaning no interval in the array) to the actual dimension 
            of the number of intervals per block.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2155.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2156">
            <summary>
            MFG Table 2156 (Itron 108)
            Enhanced Voltage Monitoring Extended Status Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2156.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2156.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Data from the EDL file.
            </summary>
            <param name="reader">The PSEM binary reader object.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2156.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.NominalVoltage">
            <summary>
            The nominal voltage for each phase.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.PhasesMonitored">
            <summary>
            The phases that are being monitored by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.NumberOfPhases">
            <summary>
            The number of phases that are being monitored by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.Form">
            <summary>
            The form of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.ServiceType">
            <summary>
            The service type of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2156.NumberPhaseChangeActionNeeded">
            <summary>
            The number of phases change action needed flag. This field is valid for mono meters only. 
            It is always 0 for poly meters.  True indicates action is requested to change the number of 
            phases in the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2156.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2157">
            <summary>
            MFG Table 2157 (Itron 109)
            Enhanced Voltage Monitoring Data Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2157.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt32,System.Int32,System.UInt16,System.Byte,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="uiSTIMESize">the size of an STIME type depending on the time format specified
            in the meter from Table 0.</param>
            <param name="iTimeFormat">the Time Format for this meter from Table 0.</param>
            <param name="uiNumberBlocks">The maximum number of valid blocks possible from Table 2155.</param>
            <param name="byPhasesMonitored">The number of phases being monitored in the meter from Table 2156.</param>
            <param name="uiNumberBlockIntervals">The maximum number of intervals per block from Table 2153.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2157.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2157.ReadBlock(System.UInt16,System.UInt16,Itron.Metering.Device.VMBlockDataRecord@)">
            <summary>
            Reads a single block of voltage monitoring data from the meter.
            </summary>
            <param name="uiBlockToRead">The index of the block that should be read.</param>
            <param name="uiValidIntervals">The number of valid intervals in the block.</param>
            <param name="BlockData">The block read from the meter.</param>
            <returns>The result of the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2157.DetermineTableSize(System.UInt32,System.UInt16,System.Byte,System.UInt16)">
            <summary>
            This method determines the size of the table.
            </summary>
            <param name="uiSTIMESize">the size of an STIME type depending on the time format specified
            in the meter from Table 0.</param>
            <param name="uiNumberBlocks">The maximum number of blocks from Table 2155.</param>
            <param name="byPhasesMonitored">The number of phases being monitored in the meter from Table 2156.</param>
            <param name="uiNumberBlockIntervals">The maximum number of intervals per block from Table 2153.</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.VMBlockDataRecord">
            <summary>
            The voltage monitoring enhanced data block object.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.VMBlockDataRecord.#ctor(System.Byte,System.UInt16,System.UInt16,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="byPhasesMonitored">The number of phases being monitored in the meter from Table 2156.</param>
            <param name="uiMaxIntervalsPerBlock">The maximum number of intervals possible in the block.</param>
            <param name="uiValidIntervalsPerBlock">The number of valid intervals in the block.</param>
            <param name="iTimeFormat">the Time Format for this meter from Table 0.</param>
        </member>
        <member name="M:Itron.Metering.Device.VMBlockDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.VMBlockDataRecord.Size(System.UInt32,System.Byte,System.UInt16)">
            <summary>
            Gets the size of a data block.
            </summary>
            <param name="uiSTIMESize">the size of an STIME type depending on the time format specified
            in the meter from Table 0.</param>
            <param name="byPhasesMonitored">The number of phases being monitored in the meter.</param>
            <param name="uiIntervalsPerBlock">The number of intervals in this block.</param>
            <returns>The size of the data block.</returns>
        </member>
        <member name="P:Itron.Metering.Device.VMBlockDataRecord.BlockEndTime">
            <summary>
            Gets the end time of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMBlockDataRecord.BlockEndReadings">
            <summary>
            Gets the end readings for the block per phase.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMBlockDataRecord.NumberOfValidIntervals">
            <summary>
            Gets the number of valid intervals for the block.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMBlockDataRecord.SimpleIntervalStatuses">
            <summary>
            Gets the simple interval statuses.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMBlockDataRecord.Intervals">
            <summary>
            Gets the intervals stored in the block.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.VMIntervalDataRecord">
            <summary>
            Interval object for an enhanced voltage monitoring interval.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.VMIntervalDataRecord.#ctor(System.Byte)">
            <summary>
            Constructor.
            </summary>
            <param name="byNumberOfPhases">The number of phases being monitored in the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.VMIntervalDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the interval data from the binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data.</param>
        </member>
        <member name="M:Itron.Metering.Device.VMIntervalDataRecord.Size(System.Byte)">
            <summary>
            Gets the size of an enhanced voltage monitoring interval.
            </summary>
            <param name="byNumberOfPhases">The number of phases being monitored in the meter.</param>
            <returns>The size of an interval.</returns>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRecord.IntervalStatus">
            <summary>
            Gets the interval statuses.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRecord.VhData">
            <summary>
            Gets the Vh interval data for each phase.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRecord.VminData">
            <summary>
            Gets the Vmin interval data for each phase.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.VMIntervalDataRecord.VmaxData">
            <summary>
            Gets the Vmax interval data for each phase.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterForms">
            <summary>
            Available Meter Forms
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form1">
            <summary>
            Form 1S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form2">
            <summary>
            Form 2S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form3">
            <summary>
            Form 3S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form4">
            <summary>
            Form 4S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form9">
            <summary>
            Form 9S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form10">
            <summary>
            Form 10S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form12">
            <summary>
            Form 12S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form13">
            <summary>
            Form 13S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form16">
            <summary>
            Form 16S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form25">
            <summary>
            Form 25S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form29">
            <summary>
            Form 29S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form36">
            <summary>
            Form 36S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form45">
            <summary>
            Form 45S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form46">
            <summary>
            Form 46S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form48">
            <summary>
            Form 48S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form56">
            <summary>
            Form 56S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form66">
            <summary>
            Form 66S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Form96">
            <summary>
            Form 96S
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterForms.Unknown">
            <summary>
            Uknown Form
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayPolyMFGTable2091">
            <summary>
            SiteScan ToolBox Table for OpenWay Poly meters.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyMFGTable2091.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
            <param name="fltRegFWVersion">The register FW version for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyMFGTable2091.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.Single)">
            <summary>
            Constructor used by EDL file.
            </summary>
            <param name="BinaryReader">The binary reader that contains the table data.</param>
            <param name="fltRegFWVersion">The register FW version for the current meter</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyMFGTable2091.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.MeterForm">
            <summary>
            Gets the form number of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.ServiceType">
            <summary>
            Gets the current Service Type of the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsVoltsPhaseA">
            <summary>
            Gets the Instantaneous Volts on Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsVoltsPhaseB">
            <summary>
            Gets the Instantaneous Volts on Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsVoltsPhaseC">
            <summary>
            Gets the Instantaneous Volts on Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsAmpsPhaseA">
            <summary>
            Gets the Instantaneous Amps on Phase A
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsAmpsPhaseB">
            <summary>
            Gets the Instantaneous Amps on Phase B
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsAmpsPhaseC">
            <summary>
            Gets the Instantaneous Amps on Phase C
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.VoltsPhaseBAngle">
            <summary>
            Gets the Phase B angle for Volts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.VoltsPhaseCAngle">
            <summary>
            Gets the Phase C angle for Volts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.AmpsPhaseAAngle">
            <summary>
            Gets the Phase A angle for Amps
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.AmpsPhaseBAngle">
            <summary>
            Gets the Phase B angle for Amps
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.AmpsPhaseCAngle">
            <summary>
            Gets the Phase C angle for Amps
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsW">
            <summary>
            Gets the Instantaneous W
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsVar">
            <summary>
            Gets the Instantaneous Var
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsVA">
            <summary>
            Gets the Instantaneous VA
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.InsPF">
            <summary>
            Gets the Instantaneous PF
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag1Active">
            <summary>
            Gets whether or not Diagnostic 1 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag2Active">
            <summary>
            Gets whether or not Diagnostic 2 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag3Active">
            <summary>
            Gets whether or not Diagnostic 3 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag4Active">
            <summary>
            Gets whether or not Diagnostic 4 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag5Active">
            <summary>
            Gets whether or not Diagnostic 5 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsDiag6Active">
            <summary>
            Gets whether or not Diagnostic 6 is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag1Count">
            <summary>
            Gets the count for Diagnostic 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag2Count">
            <summary>
            Gets the count for Diagnostic 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag3Count">
            <summary>
            Gets the count for Diagnostic 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag4Count">
            <summary>
            Gets the count for Diagnostic 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag5TotalCount">
            <summary>
            Gets the total count for Diagnostic 5 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag5ACount">
            <summary>
            Gets the phase A count for Diagnostic 5
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag5BCount">
            <summary>
            Gets the phase B count for Diagnostic 5
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag5CCount">
            <summary>
            Gets the phase C count for Diagnostic 5
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.Diag6Count">
            <summary>
            Gets the count for Diagnostic 6
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsSiteScanDisabledDoToSerialService">
            <summary>
            Gets whether or not SiteScan has been disabled due to the meter being in
            a serial service configuration (all phase angles at 0 degrees)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayPolyMFGTable2091.IsSiteScanDisabledDoToTestMode">
            <summary>
            Gets whether or not SiteScan has been disabled due to the meter being in
            test mode.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyMFGTable2091.ParseData">
            <summary>
            Parse the data from the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayPolyMFGTable2091.GetTableSize(System.Single)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="fltRegFWRevision">The register firmware version for the current meter.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.PLANTxGain">
            <summary>
            The Tx Gain values for the PLAN Comm Module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dB0">
            <summary>
            0 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg3">
            <summary>
            -3 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg6">
            <summary>
            -6 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg9">
            <summary>
            -9 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg12">
            <summary>
            -12 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg15">
            <summary>
            -15 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg18">
            <summary>
            -18 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANTxGain.dBNeg21">
            <summary>
            -21 dB
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANGain">
            <summary>
            The Gain values for the PLAN Comm Module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB0">
            <summary>
            0 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB6">
            <summary>
            6 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB12">
            <summary>
            12 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB18">
            <summary>
            18 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB24">
            <summary>
            24 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB30">
            <summary>
            30 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB36">
            <summary>
            36 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.dB42">
            <summary>
            42 dB
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANGain.NoLimit">
            <summary>
            No Limit
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANRepeaterModes">
            <summary>
            The various Repeater Modes for the PLAN Comm Module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANRepeaterModes.NotRepeater">
            <summary>
            Module is not a Repeater
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANRepeaterModes.AlwayRepeater">
            <summary>
            Module is Always a Repeater
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANRepeaterModes.NotRepeaterRepeaterCall">
            <summary>
            Module is not a Repeater (Repeater Call mode)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANRepeaterModes.RepeaterRepeaterCall">
            <summary>
            Module is a Repeater (Repeater Call mode)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANElectricalPhase">
            <summary>
            The Electrical Phase Delta for the PLAN Comm Module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.Unknown">
            <summary>
            Delta is Unknown
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.Degrees0">
            <summary>
            0 Degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.Degrees60">
            <summary>
            60 Degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.Degrees120">
            <summary>
            120 Degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.Degrees180">
            <summary>
            180 Degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.DegreesNeg120">
            <summary>
            -120 Degrees
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANElectricalPhase.DegreesNeg60">
            <summary>
            -60 Degrees
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANDemodMethod">
            <summary>
            The Demodulation Methods used in the PLAN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANDemodMethod.NoMethod">
            <summary>
            No Method
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANDemodMethod.ASK0">
            <summary>
            ASK0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANDemodMethod.ASK1">
            <summary>
            ASK1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANDemodMethod.FSK">
            <summary>
            FSK
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANCommModuleMode">
            <summary>
            Gets the Comm Module Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANCommModuleMode.C1222">
            <summary>
            C12.22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANCommModuleMode.RFLAN">
            <summary>
            RFLAN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PLANCommModuleMode.C12122Off">
            <summary>
            C12.22 Off
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANMFGTable2210">
            <summary>
            PLAN Table 2210 (ITRP 162) - PLAN Firmware Version
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2210.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2194)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2194">The Table 2194 object for the current device.</param>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.ARM7BootLoaderVersion">
            <summary>
            Gets the Boot Loader version for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.ARM7BootLoaderRevision">
            <summary>
            Gets the Boot Loader revision for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.ARM7FWVersion">
            <summary>
            Gets the firmware version for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.ARM7FWRevision">
            <summary>
            Gets the firmware revision for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.DSPFWVersion">
            <summary>
            Gets the stack version for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.DSPFWRevision">
            <summary>
            Gets the stack revision for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.DSPEEPROMVersion">
            <summary>
            Gets the EEPROM version for the PLAN board
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2210.DSPEEPROMRevision">
            <summary>
            Gets the EEPROM revision for the PLAN board
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2210.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANMFGTable2211">
            <summary>
            PLAN Table 2211 (ITRP 163) - PLAN Factory Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2211.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2194)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2194">The Table 2194 object for the current device.</param>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.MaxTxGain">
            <summary>
            Gets the Max Transmitting Gain
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.MaxRxGain">
            <summary>
            Gets the Max Recieving Gain
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.SearchInitiatorGain">
            <summary>
            Gets the Search Initiator Gain
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.RepeaterMode">
            <summary>
            Gets the Repeater Mode of the comm module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.SyncConfirmTimeout">
            <summary>
            Gets the Sync Confirm Timeout in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.FrameNotOkTimeout">
            <summary>
            Gets the Frame Not Ok Timeout in seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.NotAddressedTimeout">
            <summary>
            Gets the Not Addressed Timeout in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.SearchInitiatorTimeout">
            <summary>
            Gets the Search Initiator Timeout in minutes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.LocalMACAddress">
            <summary>
            Gets the Local MAC Address of the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.LocalSystemTitle">
            <summary>
            Gets the Local System Title of the Comm Module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.InitiatorMACAddress">
            <summary>
            Gets the Initiator MAC Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2211.InitiatorSystemTitle">
            <summary>
            Gets the Inititator System Title
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2211.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANMFGTable2212">
            <summary>
            PLAN Table 2212 (ITRP 164) - Electrical Status
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2212.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2194)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2194">The Table 2194 object for the current device.</param>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.DeltaPhase">
            <summary>
            Gets the Electrical Phase Delta
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.Channel0LinkAttenuation">
            <summary>
            Gets the Link attenutation for Channel 0 in dB
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.Channel0Noise">
            <summary>
            Gets the Noise level for Channel 0 in dBuV
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.Channel1LinkAttenuation">
            <summary>
            Gets the Link attenutation for Channel 1 in dB
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.Channel1Noise">
            <summary>
            Gets the Noise level for Channel 1 in dBuV
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2212.CreditLevel">
            <summary>
            Gets the Credit Level
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2212.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PLANMFGTable2215">
            <summary>
            PLAN Table 2215 (ITRP 167) - Comm Module Information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2215.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.OpenWayMFGTable2194,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2194">The Table 2194 object for the current device.</param>
            <param name="table0">The Table 0 object for the current device</param>
        </member>
        <member name="P:Itron.Metering.Device.PLANMFGTable2215.CellID">
            <summary>
            Gets the CellID of the Comm Module
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2215.ParseData">
            <summary>
            Parses the data that was just read from the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PLANMFGTable2215.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table0">The Table 0 object for the current device</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.RFLANMfgTable2065">
            <summary>
            
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMfgTable2065.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            RFLANMfgTable2065 Table2065 = new RFLANMfgTable2065(m_PSEM);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMfgTable2065.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The PSEM result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2065.RFLANIdentification">
            <summary>
            
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANMfgTable2068">
            <summary>
            The RFLANMfgTable2068 class handles the reading of the RFLAN Information
            table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMfgTable2068.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="strRFLANVersion">The firmware version of the RFLAN module including the build</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            RFLANMfgTable2068 Table2068 = new RFLANMfgTable2068(m_PSEM, strRFLANVersion);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMfgTable2068.Read">
            <summary>
            Reads the table from the meter.  
            </summary>
            <returns>The PSEM result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.RFLANMACAddress">
            <summary>
            Retrieves the RFLAN MAC Address from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.RFLANMACAddressFromFullRead">
            <summary>
            Retrieves the RFLAN MAC Address from the meter from a full table read rather than
            an offset read.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.RFLANMACAddressNoRead">
            <summary>
            Retrieves the previously read RFLAN MAC address previously read.  This property
            relies on Read() being called to retrieve this value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.RFLANLevelFromOffsetRead">
            <summary>
            Retrieves the RFLAN level directly.  This property 
            should not used unless a conscience decision is made to use 
            this value instead of the level returned from the vendor field.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.RFLANLevelNoRead">
            <summary>
            Retrieves the previously read RFLAN level previously read.  This property
            relies on Read() being called to retrieve this value.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.ITP">
            <summary>
            Retrieves the ITP time via an offset read of the table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.ITPFromFullRead">
            <summary>
            Returns the ITP from a full read of 2068
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.IsNetRegistered">
            <summary>
            Determines if the meter is net registered. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMfgTable2068.NetRoutingCount">
            <summary>
            Gets the # of endpoints connected to Cell-Relay
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMfgTable2068.GetTableSize(System.String)">
            <summary>
            Returns the size of the 2068 table
            </summary>
            <param name="strRFLANVersion">The RFLAN f/w version including the build number</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.RFLANMFGTable2113">
            <summary>
            The RFLANMfgTable2113 class handles the reading of the Reg Copy RFLAN Factory Config
            table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2113.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2113.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the utility ID.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2113.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2113.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2113.UtilityID">
            <summary>
            This property gets/sets the Utility ID.  Setting this property will 
            write the value to the table.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2113.MacAddress">
            <summary>
            This property gets/sets the MAC Address.  Setting this property will 
            write the value to the table.  
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.C1222DebugInfoTable2114">
            <summary>
            The C1222DebugInfoTable2114 class handles the reading of the C1222 Debug Info
            table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.C1222DebugInfoTable2114.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="fltFWRev">The register f/w version running in the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.C1222DebugInfoTable2114.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads some fwdl info.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.C1222DebugInfoTable2114.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.C1222DebugInfoTable2114.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.C1222DebugInfoTable2114.FWDLBlockCount">
            <summary>
            This property gets the current firmware download block count.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1222DebugInfoTable2114.TotalFWDLBlockCount">
            <summary>
            This property gets the total firmware download block count.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1222DebugInfoTable2114.IsActivateInProgress">
            <summary>
            This property gets whether or not activation is occurring.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1222DebugInfoTable2114.FWDLEnabled">
            <summary>
            This property gets whether or not firmware download is enabled. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.C1222DebugInfoTable2114.NumberOfCurrentExceptions">
            <summary>
            This property gets the number of exceptions currently queued up to be sent.  
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANMFGTable2119">
            <summary>
            RFLAN Information II table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2119.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2119.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2119.RFLANFWLoaderRevision">
            <summary>
            Gets the RFLAN FW Boot Loader Revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2119.RFLANFWLoaderBuild">
            <summary>
            Gets the RFLAN FW Boot Loader Build
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2119.GetTableSize(System.Int32)">
            <summary>
            Determines the size of the table
            </summary>
            <param name="timeFormat">The time format of the meter.</param>
            <returns>The size of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2119.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANMFGTable2121">
            <summary>
            The RFLANMfgTable2121 class handles the reading of the RFLAN Factory Config
            table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Byte)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The current PSEM communications object.</param>
            <param name="bytRFLANRev">The RFLAN firmware revision of the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.Read">
            <summary>
            Reads the table from the meter.  Right now it just reads the utility ID.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.Write">
            <summary>
            Overrides the base class and returns an exception.  Not supporting full writes until 
            this table is fully implemented.
            </summary>
            <returns>protocol response</returns>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Not supporting offset writes until 
            this table is fully implemented.
            </summary>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2121.UtilityID">
            <summary>
            This property gets/sets the Utility ID.  Setting this property will 
            write the value to the table.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2121.MacAddress">
            <summary>
            This property gets/sets the MAC Address.  Setting this property will 
            write the value to the table.  
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2121.ExpansionControlBits">
            <summary>
            This property gets/sets the Expansion Control Bits, which includes the Cell Switch Parameter Selection.
            The Cell Switch Parameter Selection can be used to get/set the RFLAN level.
            Setting this property will write the value to the table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RFLANMFGTable2121.SCMERTID">
            <summary>
            This property gets/sets the Utility ID.  Setting this property will 
            write the value to the table.  
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RFLANMFGTable2121.GetTableLength(System.Byte)">
            <summary>
            Determines the length of table 2121 based on the firmware version
            in the meter
            </summary>
            <param name="bytRFLANRev">the firmware revision of the RFLAN f/w</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.MeterBase">
            <summary>
            Used to enumerate the meter base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.S_base">
            <summary>
            S-base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.A_base">
            <summary>
            A-base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.K_base">
            <summary>
            K-base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.IEC_Asymmetric">
            <summary>
            IEC Asymmetric
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.Switchboard">
            <summary>
            Switchboard
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.Rackmount">
            <summary>
            Rackmount
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.B_base">
            <summary>
            B-base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.P_base">
            <summary>
            P-base
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterBase.IEC_Symmetric">
            <summary>
            IEC Symmetric
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterFrequency">
            <summary>
             Meter Frequency
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterFrequency.FiftyHz">
            <summary>
            50 Hz
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterFrequency.SixtyHz">
            <summary>
            60 Hz
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2425">
            <summary>
            Class that describes OpenWay MFG table 2425 - Temperature Configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2425.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2425.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2425.Read">
            <summary>
            Reads the Temperature Configuration out of Mfg table 2425
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2425.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2425.TemperatureConfigRcd">
            <summary>
            Gets the Temperature Configuration Record from table 2425
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2425.ParseData">
            <summary>
            Parses the Temperature Configuration Record out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TemperatureConfigRcd">
            <summary>
            Class that represents a Temperature Configuration Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TemperatureConfigRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.Enable">
            <summary>
             Enable
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.HighTemperatureThreshold1">
            <summary>
            High Temperature Threshold 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.HighTemperatureThreshold2">
            <summary>
            High Temperature Threshold 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.Hysteresis">
            <summary>
            Hysteresis
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.RandomizationPeriodSeconds">
            <summary>
            Randomization Period Seconds
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.DailyCaptureTime1">
            <summary>
            Daily Capture Time 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.DailyCaptureTime2">
            <summary>
            Daily Capture Time 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.DailyCaptureTime3">
            <summary>
            Daily Capture Time 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureConfigRcd.DailyCaptureTime4">
            <summary>
            Daily Capture Time 4
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2426">
            <summary>
            Class that describes OpenWay MFG table 2426 - Temperature Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2426.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2426.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2426.Read">
            <summary>
            Reads the Temperature Data out of Mfg table 2426
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2426.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2426.TemperatureDataRcd">
            <summary>
            Gets the Temperature Data Record from table 2426
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2426.ParseData">
            <summary>
            Parses the Temperature Data Record out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TemperatureDataRcd">
            <summary>
            Class that represents a Temperature Data Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TemperatureDataRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.Temperature">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.AverageAggregateCurrent">
            <summary>
            Average Aggregate Current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.BaseType">
            <summary>
            Base Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.MeterForm">
            <summary>
            Meter Form
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.Frequency">
            <summary>
            Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.NumElements">
            <summary>
            Number of elements
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.PowerSupplyType">
            <summary>
            Power Supply Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.MeterClass">
            <summary>
            Meter Class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.ServiceType">
            <summary>
            Service Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.DeviceClass">
            <summary>
            Device Class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureDataRcd.MeterTypeBits">
            <summary>
            Meter Type Bits
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2427">
            <summary>
            Class that describes OpenWay MFG table 2427 - Temperature Log
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2427.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2427.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get data from the EDL file
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2427.Read">
            <summary>
            Reads the Temperature Log out of Mfg table 2427
            </summary>
            <returns>PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2427.Dump">
            <summary>
             Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2427.TemperatureLog">
            <summary>
            Gets the Temperature Log from table 2427
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2427.UncachedTemperatureLog">
            <summary>
            Gets the Temperature Log from table 2427. Does a fresh read to get the uncached values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2427.ParseData">
            <summary>
            Parses the Temperature Log out of the stream.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TemperatureLogEntry">
            <summary>
            Class that represents a Temperature Log Entry
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TemperatureLogEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureLogEntry.Temperature">
            <summary>
            Temperature
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureLogEntry.AverageAggregateCurrent">
            <summary>
            Average Aggregate Current
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureLogEntry.CaptureDateTime">
            <summary>
            Capture DateTime
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TemperatureLogRcd">
            <summary>
            Class that represents a Temperature Log Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TemperatureLogRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureLogRcd.NextLogIndex">
            <summary>
            Next Log Index
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TemperatureLogRcd.TemperatureLogEntries">
            <summary>
            Temperature Log
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DisplayItem">
            <summary>
            Display Item class - Provides access to properties associated with meter display items.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayItem.Description">
            <summary>
            Provides access to the Description of the Display Item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayItem.Value">
            <summary>
            Provides access to the value of the Display Item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayItem.DisplayID">
            <summary>
            Provides access to the Display ID of the Display Item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayItem.Editable">
            <summary>
            Provides access to the Editable property of the Display Item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayItem.NegativeAllowed">
            <summary>
            Provides access to the Negative Allowed property of the Display Item
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayItem.MoveDecimalToTheLeft(System.String,System.Int32,System.Int32)">
             <summary>
             MoveDecimal3ToTheLeft - This method effectively divides the number in the string passed in by 10^nShift
              This is used so we do not have to convert to double and encounter the problems when doing double math
             </summary>
             <param name="strValue">string that contains a double that needs to have the decimal places shifted</param>
             <param name="nShift">number of place to shift by</param>
             <param name="nNumDecimalDigits">The number of deciamal digits to have in the value returned</param>
             <returns>The new string value with the decimal shifted nShift place to the left</returns>
             <remarks>
             Revision History
              MM/DD/YY Who Version Issue# Description
              -------- --- ------- ------ ---------------------------------------------
              01/22/07 KRC 8.00.08 N/A    Added to support Edit Registers
            
            </remarks>		
        </member>
        <member name="M:Itron.Metering.Device.DisplayItem.MoveDecimalToTheRight(System.String,System.Int32,System.Int32)">
             <summary>
             MoveDecimalToTheRight - This method effectively multiplies the number in the string passed in by 10^nShift
              This is used so we do not have to convert to double and encounter the problems when doing double math
             </summary>
             <param name="strValue">string that contains a double that needs to have the decimal places shifted</param>
             <param name="nShift">number of place to shift by</param>
             <param name="nNumDecimalDigits">The number of deciamal digits to have in the value returned</param>
             <returns>The new string value with the decimal shifted nShift place to the right</returns>
             <remarks>
             Revision History
              MM/DD/YY Who Version Issue# Description
              -------- --- ------- ------ ---------------------------------------------
              01/22/07 KRC 8.00.08 N/A    Added to support Edit Registers
            
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.DisplayItem.FormatDecimalDigits(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="strValue"></param>
            <param name="nNumDecimalDigitsDesired"></param>
            <returns></returns>
        </member>
        <member name="F:Itron.Metering.Device.DisplayItem.m_strDescription">
            <summary>
            Description of Display Item
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayItem.m_strValue">
            <summary>
            Meter Value associated with Display Item
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayItem.m_strDisplayID">
            <summary>
            Display ID of Display Item
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayItem.m_blnEditable">
            <summary>
            Is this value editable
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayItem.m_blnNegativeAllowed">
            <summary>
            Is the value allowed to be negative
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IHANInformation">
            <summary>
            Interface which needs to be implemented by devices that retrieve HAN information.
            Examples are Retreive events, DRLC Msgs, Module Config, Client Info, and Pricing.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.AddHANDevice(System.UInt64,System.Byte[],System.Int32@)">
            <summary>
            Add a HAN Device to the meter and return the Procedure Result with an out offset parameter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.PublishFullHANPricing(System.Collections.Generic.List{Itron.Metering.Device.AMIHANPriceEntryRcd},System.Collections.Generic.List{Itron.Metering.Device.AMITierLabelEntryRcd})">
            <summary>
            Writes all of the prices and tiers at one time
            </summary>
            <param name="prices">The list of prices to write to the meter.</param>
            <param name="tiers">The list of tiers to write to the meter.</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.ConfigCppWithHANPricing(System.UInt32,System.Byte,System.String,System.UInt32,System.Byte,System.Int16,System.Byte,System.DateTime,System.UInt16,System.UInt32)">
            <summary>
            Configure CPP with HAN Pricing Data
            </summary>
            <param name="uiProviderID">The ID of the provider</param>
            <param name="byRateLabelLength">The length of the rate label + 1</param>
            <param name="strRateLabel">The label for the rate</param>
            <param name="uiIssuerEventID">The issuer event ID</param>
            <param name="byUnitOfMeasure">The unit of measure of the rate</param>
            <param name="uiCurrency">The currency for the rate</param>
            <param name="byPriceTrailingDigit">The trailing digit for the price</param>
            <param name="startTime">Start Time</param>
            <param name="duration">Duration in minute.  The length must be at least a demand sub-interval length.</param>
            <param name="uiPrice">The price being charged</param>
            <returns>The CPP configuration result.</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.ScheduleHANDRLCEvent(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Schedules the DR/LC event at the specified time and duration
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="startTime">The time the event should start</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.HANCancelDRLCEvent(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="EffectiveTime">The time the event should start</param>
            <param name="deviceClass">The devices that the event should apply to</param>
            <param name="eventID">The event ID for the DRLC event</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.HANCancelAllDRLCEvent(System.UInt64,System.Byte)">
            <summary>
            Cancels the DR/LC event at the specified time
            </summary>
            <param name="clientAddress">The Address of the client the message is intended for</param>
            <param name="cancelControl">Enter 0 to cancel at EffectiveTime, 1 to cancel randomly</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.ReconfigureHANChannels(Itron.Metering.Device.HANChannels)">
            <summary>
            Reconfigures the meter to use the specified HAN channels
            </summary>
            <param name="channels">The channels that should be used by the meter.</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.PublishHANMessage(System.UInt32,System.DateTime,System.UInt16,System.Byte,Itron.Metering.DeviceDataTypes.AMIHANMsgRcd.MessagePriority,System.Boolean,System.String)">
            <summary>
            Publishes a HAN message to any devices bound to the Messaging cluster
            </summary>
            <param name="MessageID">Number to identify the message (duplicate Message IDs may be ignored by the end devices)</param>
            <param name="StartTime">When the message will become active</param>
            <param name="DurationInMinutes">How long from the start time the message will be able to be retrieved by an end device</param>
            <param name="Destination">Message Transmission values as defined in the ZigBee Smart Energy 
            profile spec. Bits 0 and 1 of MSG_CTRL</param>
            <param name="Priority"> Message Priority values as defined in the ZigBee Smart Energy 
            profile spec. Bits 2 and 3 of MSG_CTRL</param>
            <param name="ConfirmationRequired">Whether confirmation is required from end devices upon receipt of this message</param>
            <param name="MessageText">The actual text to send to the end device</param>
            <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.PublishSingleHANPrice(Itron.Metering.Device.AMIHANPriceEntryRcd,System.Int32)">
             <summary>
             Publishes a HAN pricing table to any devices bound to the Pricing cluster by doing a full write
             to the Pricing table after a full read and overwriting the price at index - PriceIndex
             </summary>
            <param name="PriceInfo">An instance of an AMIHANPriceEntryRcd which contains the pricing data to send</param>
            <param name="PriceIndex">Index of which price to write over in the HAN pricing table</param>
             <returns>PSEM Response from the Table write. (This table write is caught by the Zigbee tick and is not a Procedure)</returns>
            Revision History
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.SetUtilityEnrollmentGroup(System.UInt64,System.Byte)">
            <summary>
            Sets the Utility Enrollment Group for a HAN device registered to the meter.
            </summary>
            <param name="clientAddress">The address of the client the message is intended for</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group for the device</param>
            <returns>The result of the operation</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.CancelHANMessage(System.UInt32)">
            <summary>
            Cancels the message with the specified message ID
            </summary>
            <param name="messageID">The ID of the message to cancel</param>
            <returns>The response from the cancel message</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.SetHANSecurityMode(System.Byte)">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="securityMode">The Security Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.SetHanDeviceAuthMode(System.Byte)">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.IHANInformation.SetHanCbkeMode(System.Byte)">
            <summary>
            Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte to set.</param>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.ActualNumberOfHANDevicesJoined">
            <summary>
            Retrieves the number of HAN devices that are currently
            joined to the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.AMIHANDevRecords">
            <summary>
            Gets all the AMI HAN Device Records from table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.AMIHANDiagnosticReadRecord">
            <summary>
            Gets a dump of the entire Mfg Table 2244.  Table 2244 contains the HAN Diagnostic Status 
            Read Information.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.AMIHANMfgInfoRecords">
            <summary>
            Gets all the AMI HAN Manufacturer Info records from table 2137
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.AMIHANRspLogRecords">
            <summary>
            Gets all the AMI HAN Response Log records from table 2131
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.BindingEntries">
            <summary>
            The current HAN (Zigbee) binding entries
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.DownstreamHANEventDataLength">
            <summary>
            Gets the length of HAN downstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.DownstreamHANLogEvents">
            <summary>
            Gets the list of Downstream HAN Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.DownstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Downstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.DRLCMessagesWithExpired">
            <summary>
            Gets the list of DRLC Messages in the meter includeing the expired ones.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.EnabledDownstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.EnabledUpstreamHANLogEvents">
            <summary>
            Gets the list of Enabled Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANChannel">
            <summary>
            The current HAN (Zigbee) channel number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANChannelNbr">
            <summary>
            The current HAN (Zigbee) channel number in text format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANChannelsUsed">
            <summary>
            Gets the HAN Channels used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANConfigVersion">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANDivisor">
            <summary>
            The HAN divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANMACAddress">
            <summary>
            The MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanModBuild">
            <summary>
            Gets the Han module build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANModFirmwareBuild">
            <summary>
            Gets the HAN module build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.SupportedUpstreamHANLogEvents">
            <summary>
            Gets the list of supported Upstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.SupportedDownstreamHANLogEvents">
            <summary>
            Gets the list of supported Downstream HAN log events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.UpstreamHANLogEvents">
            <summary>
            Gets the list of Upstream HAN events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.UpstreamHANEventDataLength">
            <summary>
            Gets the length of HAN upstream event data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.MaxUpstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN upstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.MaxDownstreamHANEventEntries">
            <summary>
            Gets the maximum number of HAN downstream event entries.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.UpstreamHANLogLastSequenceNumber">
            <summary>
            Gets the Sequence Number for the Last event in the Upstream HAN Log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.NumberOfSupportDRLCEvents">
            <summary>
            Gets the Number of Valid DRLC Entries in the Meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.NumOfValidEntries">
            <summary>
            Gets the number of supported DRLC Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANTiers">
            <summary>
            The HAN tier records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANPrices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANStartupOptions">
            <summary>
            Reads the startup options out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.SimpleMeteringMultiplier">
            <summary>
            Gets the Simple Metering Multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.SimpleMeteringDivisor">
            <summary>
            Gets the Simple Metering Divisor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANSecurityProfile">
            <summary>
            Reads the HANSecurityProfile out of Mfg table 2106
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANSecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANSecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanDeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanDeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanCbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanCbkeModeDescription">
            <summary>
            Gets the HAN CBKE Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.ZigBeePowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.ZigBeeKeyPairs">
            <summary>
            Gets the ZigBee key pair. The value will be null if not supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanModVer">
            <summary>
            Gets the Han module version.revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanModType">
            <summary>
            Gets the Han module type (Zigbee)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HanModFirmwareVersion">
            <summary>
            Gets the HAN module version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANServerMACAddr">
            <summary>
            String version of the MAC address (in Hex) of the HAN (Zigbee) Server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANNetworkID">
            <summary>
            Personal area network identifier (in Hex) for the HAN (Zigbee) network
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANPANID">
            <summary>
            PAN Id for the HAN network. This is the same as the HANNetworkID but is numerical
            instead of a string representation.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANSupported">
            <summary>
            Gets whether the meter supports HAN.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.IsZigBeeFirmwareCompatible">
            <summary>
            Gets whether or not the current ZigBee firmware is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.MinZigBeeVersion">
            <summary>
            Gets the Minimum required ZigBee FW version for the current register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANMultiplier">
            <summary>
            The HAN multiplier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANEventsSupported">
            <summary>
            Gets whether the meter supports HAN event logs.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.CurrentNetworkStatus">
            <summary>
            Gets the current network status: 0 => Network up; 1 => Network down; 2 => Network forming; 3 => invalid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.IsC1218OverZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee Private Profile is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.IsZigBeePrivateProfileEnabled">
            <summary>
            Gets whether or not C12.18 over ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.IsZigBeeEnabled">
            <summary>
            Gets whether or not ZigBee is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANAppVersion">
            <summary>
            Gets the HAN App version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANAppRevision">
            <summary>
            Gets the HAN App revision
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANAppBuild">
            <summary>
            Gets the HAN App build
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IHANInformation.HANRadioOff">
            <summary>
             Gets whether or not HAN radio is off
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IValidateProgram">
            <summary>
            Interface for devices that are able to validate with a program.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IValidateProgram.ValidateProgram(System.String)">
            <summary>
            Returns a list of items that are not consistent between the configuration
            of the program and the device.
            </summary>
            <param name="strProgramName">The name of the program to validate against.</param>
            <returns>
            A list of items that failed the validation. Returns an empty list if
            all items match.
            </returns>
        </member>
        <member name="T:Itron.Metering.Device.LIDRetriever">
             <summary>
             This class is used to get a value from a meter using a LID, via
             tables 2049 and 2050.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             05/24/06 mrj 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for communication with the meter.</param>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/23/06 mrj 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveLID(Itron.Metering.Device.LID,System.Object@)">
            <summary>
            Retrieve LID
            </summary>
            <param name="lid">The Lid to Retrieve</param>
            <param name="objValue">an object containing the data associated with the LID</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveLID(Itron.Metering.Device.LID,Itron.Metering.Device.LIDRetriever.RequestMode,System.Object@)">
            <summary>
            Retrieve LID
            </summary>
            <param name="lid">The LID to retrieve</param>
            <param name="eMode">The request mode</param>
            <param name="objValue">an object containing the data associated with the LID</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveMulitpleLIDs(Itron.Metering.Device.LID[],System.Collections.Generic.List{System.Object}@)">
            <summary>
            Retrieve Multiple LIDs
            </summary>
            <param name="lids">Array of LIDs to retrieve</param>
            <param name="objValues">A List of objects containing the data associated with the LIDs</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveMulitpleLIDs(Itron.Metering.Device.LID[],Itron.Metering.Device.LIDRetriever.RequestMode,System.Collections.Generic.List{System.Object}@)">
            <summary>
            Retrieve Multiple LIDs
            </summary>
            <param name="lids">Array of LIDs to retrieve</param>
            <param name="eMode">The Request Mode</param>
            <param name="objValues">A List of objects containing the data associated with the LIDs</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveLID(Itron.Metering.Device.LID,System.Byte[]@)">
            <summary>
            This method does the work of writing a lid to table 2049 and reading
            the results from table 2050.
            </summary>
            <remarks>
            It is up to the calling method to translate the data.  This method
            always sets the mode to DataOnly.
            
            Also, it is up to the calling method to perform the PSEM wait.
            </remarks>
            <param name="lid">The requested LID</param>
            <param name="data">The data returned from the device</param>
            <returns>PSEMResponse returned from the device</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/23/06 mrj 7.30.00 N/A	Created
            09/27/06 KRC 7.35.00 N/A    Add RequestMode
            
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveLID(Itron.Metering.Device.LID,Itron.Metering.Device.LIDRetriever.RequestMode,System.Byte[]@)">
            <summary>
            This method does the work of writing a lid to table 2049 and reading
            the results from table 2050.
            </summary>
            <remarks>
            It is up to the calling method to translate the data.  This method
            always sets the mode to DataOnly.
            
            Also, it is up to the calling method to perform the PSEM wait.
            </remarks>
            <param name="lid">The requested LID</param>
            <param name="eMode">Request Mode</param>
            <param name="data">The data returned from the device</param>
            <returns>PSEMResponse returned from the device</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/23/06 mrj 7.30.00 N/A	Created
            09/27/06 KRC 7.35.00 N/A    Add RequestMode
            
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveMulitpleLIDs(Itron.Metering.Device.LID[],System.Byte[]@)">
            <summary>
            This method does the work of writing multiple lids to table 2049 and
            reading the results from table 2050.  It can handle up to 8 lids.
            </summary>
            <remarks>
            It is up to the calling method to translate the data.  This method
            always sets the mode to DataOnly.
            
            Also, it is up to the calling method to perform the PSEM wait.
            </remarks>
            <param name="lids">The requested LIDs, up to 8</param>
            <param name="data">The data returned from the device</param>
            <returns>PSEMResponse returned from the device</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/23/06 mrj 7.30.00 N/A	Created
            09/27/06 KRC 7.35.00 N/A    Add RequestMode
            
        </member>
        <member name="M:Itron.Metering.Device.LIDRetriever.RetrieveMulitpleLIDs(Itron.Metering.Device.LID[],Itron.Metering.Device.LIDRetriever.RequestMode,System.Byte[]@)">
            <summary>
            This method does the work of writing multiple lids to table 2049 and
            reading the results from table 2050.  It can handle up to 8 lids.
            </summary>
            <remarks>
            It is up to the calling method to translate the data.  This method
            always sets the mode to DataOnly.
            
            Also, it is up to the calling method to perform the PSEM wait.
            </remarks>
            <param name="lids">The requested LIDs, up to 8</param>
            <param name="eMode">Request Mode</param>
            <param name="data">The data returned from the device</param>
            <returns>PSEMResponse returned from the device</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/23/06 mrj 7.30.00 N/A	Created
            09/27/06 KRC 7.35.00 N/A    Add RequestMode
            10/04/06 RCG 7.40.00 N/A    Added check to see if the data is null before
                                        creating the BinaryReader to avoid an exception
            
        </member>
        <member name="P:Itron.Metering.Device.LIDRetriever.DataReader">
            <summary>
            Provides access to the BinaryReader
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LIDRetriever.m_PSEM">
            <summary>
            PSEM object for communication with the meter. 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DefinedLIDs">
            <summary>
            This class describes the LID supported by the ANSI meter.  It is the
            base class for all LIDs.  The Sentinel and Centron meters overrides this
            class to add support for LIDs which are different between meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CT_RATIO">
            <summary>
            Gets the LID for the CT ratio
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VT_RATIO">
            <summary>
            Gets the LID for the VT Ratio
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.REGISTER_MULTIPLIER">
            <summary>
            Gets the LID for the Register Multiplier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_MULTIPLIER">
            <summary>
            Gets the LID for the Meter Multiplier
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.TRANSFORMER_RATIO">
            <summary>
            Gets the LID for the Transformer Ratio
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CLOCK_RUNNING">
            <summary>
            LID to get the clock running flag
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUM_TOU_RATES">
            <summary>
            LID to get the number of TOU Rates being used
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CURRENT_DATE">
            <summary>
            LID to get the current date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CURRENT_TIME">
            <summary>
            LID to get the current time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.MINUTES_ON_BATTERY">
            <summary>
            LID to get the minutes on battery.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DAYS_ON_BATTERY">
            <summary>
            LID to get the Days on battery.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DAY_OF_WEEK">
            <summary>
            LID to get the Day of the Week.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DST_CONFIGURED">
            <summary>
            LID to get if DST is Configured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_IN_DST">
            <summary>
            LID to get if the meter is in DST
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.TOU_EXPIRATION_DATE">
            <summary>
            LID to get the TOU Expiration Date.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PROGRAM_ID">
            <summary>
            LID to get the program ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.USER_DATA_1">
            <summary>
            LID to get the User Data 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.USER_DATA_2">
            <summary>
            LID to get the User Data 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.USER_DATA_3">
            <summary>
            LID to get the User Data 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_ID">
            <summary>
            LID to get the meter ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_ID_2">
            <summary>
            LID to get the meter ID 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_NUM_SUBINTERVALS">
            <summary>
            LID to get the number of demand sub intervals
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_NUM_TEST_SUBINTERVAL">
            <summary>
            LID to get the number of demand test sub intervals
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_REGISTER_FULLSCALE">
            <summary>
            LID to get the register fullscale
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CLPU_OUTAGE_TIME">
            <summary>
            LID to get the Cold Load Pick-up time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_NOT_PROGRAMMED">
            <summary>
            not programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_W_DEL">
            <summary>
            max W d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_W_REC">
            <summary>
            max W r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_W_NET">
            <summary>
            max W Net
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_W_UNI">
            <summary>
            max W Uni-Directional
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_DEL">
            <summary>
            max VA d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_REC">
            <summary>
            max VA r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_DEL_ARITH">
            <summary>
            max VA d Arithmetic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_REC_ARITH">
            <summary>
            max VA r Arithmetic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_DEL_VECT">
            <summary>
            max VA d Vectorial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_REC_VECT">
            <summary>
            max VA r Vectorial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VA_LAG">
            <summary>
            max VA Lagging
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_DEL">
            <summary>
            max Var d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_REC">
            <summary>
            max Var r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_NET">
            <summary>
            max Var Net
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_NET_DEL">
            <summary>
            max Var Net d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_NET_REC">
            <summary>
            max Var Net r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_Q1">
            <summary>
            max Var Q1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_Q2">
            <summary>
            max Var Q2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_Q3">
            <summary>
            max Var Q3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_VAR_Q4">
            <summary>
            max Var Q4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_A_PHA">
            <summary>
            max A(a)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_A_PHB">
            <summary>
            max A(b)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_A_PHC">
            <summary>
            max A(c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_A_NEUTRAL">
            <summary>
            max NA
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_I2_AGG">
            <summary>
            max A^2 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_V_PHA">
            <summary>
            max V(a)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_V_PHB">
            <summary>
            max V(b)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_V_PHC">
            <summary>
            max V(c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_V_AVG">
            <summary>
            max V avg
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_V2_AGG">
            <summary>
            max V^2 agg
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MIN_PF_INTERVAL_ARITH">
            <summary>
            min PF Arithmetic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MIN_PF_INTERVAL_VECT">
            <summary>
            min PF Vectorial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_Q_DEL">
            <summary>
            max Q d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_Q_REC">
            <summary>
            max Q r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_PULSE_INPUT_1">
            <summary>
            max Pulse Input 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_PULSE_INPUT_2">
            <summary>
            max Pulse Input 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.TIME_REMAINING_DEMAND_SUBINTERVAL">
            <summary>
            LID to get the Time Remaining in the Demand Sub Interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LAST_DEMAND_RESET_DATE">
            <summary>
            LID to get the last demand reset date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_SUBINT_LENGTH">
            <summary>
            LID to get the test mode sub interval length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_TEST_SUBINT_LENGTH">
            <summary>
            LID to get the test mode sub interval length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_DEMAND_RESETS">
            <summary>
            LID to get the number of demand resets
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DAYS_SINCE_DR">
            <summary>
            LID to get the number of days since the last demand reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_DEMANDS">
            <summary>
            Number of Demands in meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PREVIOUS_MAX_DEMAND_QTY_1">
            <summary>
            Previous max demand quantity 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PREVIOUS_MAX_DEMAND_QTY_2">
            <summary>
            Previous max demand quantity 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PREVIOUS_MAX_DEMAND_QTY_3">
            <summary>
            Previous max demand quantity 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISPLAY_TIME">
            <summary>
            The number of seconds the display will show a display item.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_ENERGIES">
            <summary>
            Number of Energies in meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_NOT_PROGRAMMED">
            <summary>
            not programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_WH_DEL">
            <summary>
            Wh d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_WH_REC">
            <summary>
            Wh r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_WH_NET">
            <summary>
            Wh Net
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_WH_UNI">
            <summary>
            Wh Uni-Directional
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_DEL">
            <summary>
            VAh d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_REC">
            <summary>
            VAh r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_DEL_ARITH">
            <summary>
            VAh d Arithmetic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_REC_ARITH">
            <summary>
            VAh r Arithmetic
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_DEL_VECT">
            <summary>
            VAh d Vectorial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_REC_VECT">
            <summary>
            VAh r Vectorial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VAH_LAG">
            <summary>
            VAh lagging
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_DEL">
            <summary>
            Varh d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_REC">
            <summary>
            Varh r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_NET">
            <summary>
            Varh Net
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_NET_DEL">
            <summary>
            Varh Net d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_NET_REC">
            <summary>
            Varh Net r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_Q1">
            <summary>
            Varh Q1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_Q2">
            <summary>
            Varh Q2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_Q3">
            <summary>
            Varh Q3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VARH_Q4">
            <summary>
            Varh Q4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_AH_PHA">
            <summary>
            Ah(a)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_AH_PHB">
            <summary>
            Ah(b)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_AH_PHC">
            <summary>
            Ah(c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_AH_NEUTRAL">
            <summary>
            Ah Neutral
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_I2H_AGG">
            <summary>
            A^2h
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VH_PHA">
            <summary>
            Vh(a)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VH_PHB">
            <summary>
            Vh(b)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VH_PHC">
            <summary>
            Vh(c)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_VH_AVG">
            <summary>
            Vh Average
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_V2H_AGG">
            <summary>
            V^2h
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_QH_DEL">
            <summary>
            Qh d
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_QH_REC">
            <summary>
            Qh r
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_PULSE_INPUT_1">
            <summary>
            Pulse Input 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_PULSE_INPUT_2">
            <summary>
            Pulse Input 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_INTERVAL_LENGTH">
            <summary>
            LID to get the load profile interval length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_1_QUANTITY">
            <summary>
            LID to get the channel 1 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_2_QUANTITY">
            <summary>
            LID to get the channel 2 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_3_QUANTITY">
            <summary>
            LID to get the channel 3 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_4_QUANTITY">
            <summary>
            LID to get the channel 4 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_5_QUANTITY">
            <summary>
            LID to get the channel 5 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_6_QUANTITY">
            <summary>
            LID to get the channel 6 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_7_QUANTITY">
            <summary>
            LID to get the channel 7 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_8_QUANTITY">
            <summary>
            LID to get the channel 8 quantity's LID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_1_INT_PULSE_WT">
            <summary>
            LID to get the channel 1 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_2_INT_PULSE_WT">
            <summary>
            LID to get the channel 2 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_3_INT_PULSE_WT">
            <summary>
            LID to get the channel 3 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_4_INT_PULSE_WT">
            <summary>
            LID to get the channel 4 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_5_INT_PULSE_WT">
            <summary>
            LID to get the channel 5 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_6_INT_PULSE_WT">
            <summary>
            LID to get the channel 6 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_7_INT_PULSE_WT">
            <summary>
            LID to get the channel 7 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_8_INT_PULSE_WT">
            <summary>
            LID to get the channel 8 pulse weight (Configuration Item)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_1_REAL_PULSE_WT">
            <summary>
            LID to get the channel 1 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_2_REAL_PULSE_WT">
            <summary>
            LID to get the channel 2 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_3_REAL_PULSE_WT">
            <summary>
            LID to get the channel 3 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_4_REAL_PULSE_WT">
            <summary>
            LID to get the channel 4 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_5_REAL_PULSE_W">
            <summary>
            LID to get the channel 5 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_6_REAL_PULSE_WT">
            <summary>
            LID to get the channel 6 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_7_REAL_PULSE_WT">
            <summary>
            LID to get the channel 7 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_CHAN_8_REAL_PULSE_WT">
            <summary>
            LID to get the channel 8 pulse weight (Real Value - Not supported pre-SATURN)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_RUNNING">
            <summary>
            LID to get whether or not Load Profile is running
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.EXT_LP_RUNNING">
            <summary>
            LID to get whether or not Extended Load Profile is running
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.IP_RUNNING">
            <summary>
            LID to get whether or not Instrumentation Profile is running
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LP_NUM_CHANNELS">
            <summary>
            LID to get the number of Load Profile channels in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.COEFF_KH">
            <summary>
            LID to get the Normal Pulse Weight
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.COEFF_KT">
            <summary>
            LID to get the test Pulse Weight
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.COEFF_ALT_KH">
            <summary>
            LID to get the Pulse Weight for the Alt values
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.COEFF_ALT_KT">
            <summary>
            LID to get the test Pulse Weight for the Alt values
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VA_CALC_METHOD">
            <summary>
            LID to get the VA calculation method
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.REAL_COEFF_KH">
            <summary>
            LID to get the Pulse Weight as a real value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.REAL_COEFF_KT">
            <summary>
            LID to get the test Pulse Weight as a real value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.REAL_COEFF_ALT_KH">
            <summary>
            LID to get the Alt pulse weight as a real value 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.REAL_COEFF_ALT_KT">
            <summary>
             LID to get the test Alt Pulse Weight as a real value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SERVICE_VOLTAGE">
            <summary>
            LID to get the instantaneous secondary volts RMS, phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.FIRMWARE_REVISION">
            <summary>
            LID to get the firmware revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.FIRMWARE_BUILD">
            <summary>
            LID to get the Firmware Build
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ATMEL_FIRMWARE_VER_REV">
            <summary>
            LID to get the Atmega firmware version and revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SOFTWARE_REVISION">
            <summary>
            LID to get the software revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.OUTAGE_TIME">
            <summary>
            LID to get the last outage time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CONFIG_TIME">
            <summary>
            LID to get the last time meter was configured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INTERROGATION_TIME">
            <summary>
            LID to get the last time meter was interrogated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SEALED_CANADIAN">
            <summary>
            LID to get the status of the sealed Canadian flag
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.CANADIAN">
            <summary>
            LID to get the status of the Canadian flag
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.LAST_TEST_TIME">
            <summary>
            Date and time of the last test mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.FIRMWARE_LOADER_VERSION">
            <summary>Version of the Firmware Loader</summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.FIRMWARE_LOADER_REVISION">
            <summary>Revision of the Firmware Loader</summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.FIRMWARE_LOADER_VER_REV">
            <summary>Version.Revsion of the Firmware Loader</summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SEGMENT_TEST">
            <summary>Segment Test</summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.TIME_REMAINING_TEST_MODE">
            <summary>
            LID to get the Time Remaining in Test Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISP_MODE_TIMEOUT">
            <summary>
            LID to get the configured Display Mode Timeout
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISP_MODE">
            <summary>
            Meter Display Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.OPT_BRD_ID">
            <summary>
            LID to get the option board ID
            </summary>		
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISP_VENDOR_FIELD_1">
            <summary>
            LID to get the vendor field 1, ERT ID for R300
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISP_VENDOR_FIELD_2">
            <summary>
            LID to get the vendor field 2, ERT ID for R300
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DISP_VENDOR_FIELD_3">
            <summary>
            LID to get the vendor field 3, ERT ID for R300
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SR1_FREEZE_DATE">
            <summary>
            LID to get the last self read date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_WH_DEL">
            <summary>
            Wh d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_WH_REC">
            <summary>
            Wh r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_WH_NET">
            <summary>
            Wh Net (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_WH_UNI">
            <summary>
            Wh Uni-Directional (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_DEL">
            <summary>
            VAh d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_REC">
            <summary>
            VAh r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_DEL_ARITH">
            <summary>
            VAh d Arithmetic (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_REC_ARITH">
            <summary>
            VAh r Arithmetic (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_DEL_VECT">
            <summary>
            VAh d Vectorial (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_REC_VECT">
            <summary>
            VAh r Vectorial (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VAH_LAG">
            <summary>
            VAh lagging (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_DEL">
            <summary>
            Varh d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_REC">
            <summary>
            Varh r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_NET">
            <summary>
            Varh Net (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_NET_DEL">
            <summary>
            Varh Net d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_NET_REC">
            <summary>
            Varh Net r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_Q1">
            <summary>
            Varh Q1 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_Q2">
            <summary>
            Varh Q2 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_Q3">
            <summary>
            Varh Q3 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VARH_Q4">
            <summary>
            Varh Q4 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_AH_PHA">
            <summary>
            Ah(a) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_AH_PHB">
            <summary>
            Ah(b) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_AH_PHC">
            <summary>
            Ah(c) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_AH_NEUTRAL">
            <summary>
            Ah Neutral (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_I2H_AGG">
            <summary>
            A^2h (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VH_PHA">
            <summary>
            Vh(a) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VH_PHB">
            <summary>
            Vh(b) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VH_PHC">
            <summary>
            Vh(c) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_VH_AVG">
            <summary>
            Vh Average (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_V2H_AGG">
            <summary>
            V^2h (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_QH_DEL">
            <summary>
            Qh d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_SR_QH_REC">
            <summary>
            Qh r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_W_DEL">
            <summary>
            max W d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_W_REC">
            <summary>
            max W r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_W_NET">
            <summary>
            max W Net (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_W_UNI">
            <summary>
            max W Uni-Directional (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_DEL">
            <summary>
            max VA d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_REC">
            <summary>
            max VA r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_DEL_ARITH">
            <summary>
            max VA d Arithmetic (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_REC_ARITH">
            <summary>
            max VA r Arithmetic (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_DEL_VECT">
            <summary>
            max VA d Vectorial (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_REC_VECT">
            <summary>
            max VA r Vectorial (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VA_LAG">
            <summary>
            max VA Lagging (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_DEL">
            <summary>
            max Var d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_REC">
            <summary>
            max Var r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_NET">
            <summary>
            max Var Net (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_NET_DEL">
            <summary>
            max Var Net d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_NET_REC">
            <summary>
            max Var Net r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_Q1">
            <summary>
            max Var Q1 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_Q2">
            <summary>
            max Var Q2 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_Q3">
            <summary>
            max Var Q3 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_VAR_Q4">
            <summary>
            max Var Q4 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_A_PHA">
            <summary>
            max A(a) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_A_PHB">
            <summary>
            max A(b) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_A_PHC">
            <summary>
            max A(c) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_A_NEUTRAL">
            <summary>
            max NA (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_I2_AGG">
            <summary>
            max A^2 (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_V_PHA">
            <summary>
            max V(a) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_V_PHB">
            <summary>
            max V(b) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_V_PHC">
            <summary>
            max V(c) (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_V_AVG">
            <summary>
            max V avg (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_V2_AGG">
            <summary>
            max V^2 agg (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MIN_SR_PF_INTERVAL_ARITH">
            <summary>
            min PF Arithmetic (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MIN_SR_PF_INTERVAL_VECT">
            <summary>
            min PF Vectorial (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_Q_DEL">
            <summary>
            max Q d (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_SR_Q_REC">
            <summary>
            max Q r (SR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_WH_DEL">
            <summary>
            Wh d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_WH_REC">
            <summary>
            Wh r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_WH_NET">
            <summary>
            Wh Net (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_WH_UNI">
            <summary>
            Wh Uni-Directional (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VAH_DEL">
            <summary>
            VAh d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VH_PH_A">
            <summary>
            VoltHour (a) (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VAH_REC">
            <summary>
            VAh r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_DEL">
            <summary>
            Varh d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_REC">
            <summary>
            Varh r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_NET">
            <summary>
            Varh Net (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_NET_DEL">
            <summary>
            Varh Net d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_NET_REC">
            <summary>
            Varh Net r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_Q1">
            <summary>
            Varh Q1 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_Q2">
            <summary>
            Varh Q2 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_Q3">
            <summary>
            Varh Q3 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ENERGY_DR_VARH_Q4">
            <summary>
            Varh Q4 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_W_DEL">
            <summary>
            max W d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_W_REC">
            <summary>
            max W r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_W_NET">
            <summary>
            max W Net (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_W_UNI">
            <summary>
            max W Uni-Directional (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_V_PH_A">
            <summary>
            max Volts (a) (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VA_DEL">
            <summary>
            max VA d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VA_REC">
            <summary>
            max VA r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_DEL">
            <summary>
            max Var d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_REC">
            <summary>
            max Var r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_NET">
            <summary>
            max Var Net (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_NET_DEL">
            <summary>
            max Var Net d (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_NET_REC">
            <summary>
            max Var Net r (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_Q1">
            <summary>
            max Var Q1 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_Q2">
            <summary>
            max Var Q2 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_Q3">
            <summary>
            max Var Q3 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.DEMAND_MAX_DR_VAR_Q4">
            <summary>
            max Var Q4 (DR)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.BASE_TIME_DATE_OF_PERIODIC_READ">
            <summary>
            Base LID for Time and Date of Last DR and SR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.BASE_VALID_DATA_IN_PERIODIC_READ">
            <summary>
            Base LID to determine if there is valid data in last DR or SR
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_OF_VALID_SELF_READS">
            <summary>
            Number of Valid Self Reads stored in the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_A_VOLTAGE">
            <summary>
            LID to get the phase a voltage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_A_CURRENT">
            <summary>
            LID to get the phase a current
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_A_CUR_ANGLE">
            <summary>
            LID to get the phase a current angle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_B_VOLTAGE">
            <summary>
            LID to get the phase b voltage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_B_VOLT_ANGLE">
            <summary>
            LID to get the phase b voltage angle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_B_CURRENT">
            <summary>
            LID to get the phase a current
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_B_CUR_ANGLE">
            <summary>
            LID to get the phase b current angle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_C_VOLTAGE">
            <summary>
            LID to get the phase b voltage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_C_VOLT_ANGLE">
            <summary>
            LID to get the phase c voltage angle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_C_CURRENT">
            <summary>
            LID to get the phase c current
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.PH_C_CUR_ANGLE">
            <summary>
            LID to get the phase c current angle
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_SERVICE_TYPE">
            <summary>
            LID to get the serivce type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SS_SNAPSHOT_COUNT">
            <summary>
             LID to get the snapshot count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ALL_SITESCAN">
            <summary>
            LID to get all the sitescan data at once
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SS_SERVICE_TYPE_DISP">
            <summary>
            LID to get the displayed service type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.RMS_BELOW_THRESHOLD_COUNT">
            <summary>
            LID to get the RMS Below Threshold Count.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.RMS_HIGH_THRESHOLD_COUNT">
            <summary>
            LID to get the RMS High Threshold Count.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VH_BELOW_THRESHOLD_COUNT">
            <summary>
            LID to get the Vh Below Threshold Count.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VH_HIGH_THRESHOLD_COUNT">
            <summary>
            LID to get the Vh High Threshold Count.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_THD_V_PHASE_A">
            <summary>
            LID to get the instantaneous THD phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_THD_V_PHASE_B">
            <summary>
            LID to get the instantaneous THD phase B
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_THD_V_PHASE_C">
            <summary>
            LID to get the instantaneous THD phase C
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_TDD_I_PHASE_A">
            <summary>
            LID to get the instantaneous TDD phase A
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_TDD_I_PHASE_B">
            <summary>
            LID to get the instantaneous TDD phase B
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.INS_TDD_I_PHASE_C">
            <summary>
            LID to get the instantaneous TDD phase B
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_INVERSION_TAMPERS">
            <summary>
            The Number of Inversion tampers in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_REMOVAL_TAMPERS">
            <summary>
            Number of Removal tampers in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.OPTICAL_PORT_LOGON_COUNT">
            <summary>
            Optical port logon count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METERKEY_NUMBER_TOU_RATES_SUPPORTED">
            <summary>
            The Number of Rates that the meter is capable of supporting.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ALL_SEC_ENERGIES_TOTAL">
            <summary>
            Will provide the LIDs of all programmed Energies
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.ALL_SEC_DEMANDS_TOTAL">
            <summary>
            Will provide the LIDs of all programmed Demands
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.STATEMON_NON_FATAL_ERRORS">
            <summary>
            LID to get the non-fatal errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.STATEMON_NON_FATAL_ERRORS2">
            <summary>
            LID to get the second byte of non-fatal errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.STATEMON_FATAL_ERRORS">
            <summary>
            LID to get the fatal errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_1_COUNT">
            <summary>
            LID to get the Diag 1 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_2_COUNT">
            <summary>
            LID to get the Diag 2 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_3_COUNT">
            <summary>
            LID to get the Diag 3 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_4_COUNT">
            <summary>
            LID to get the Diag 4 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_5_COUNT">
            <summary>
            LID to get the Diag 5 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_5_COUNT_A">
            <summary>
            LID to get the Diag 5a count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_5_COUNT_B">
            <summary>
            LID to get the Diag 5b count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_5_COUNT_C">
            <summary>
            LID to get the Diag 5c count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.SITESCAN_DIAG_6_COUNT">
            <summary>
            LID to get the Diag 6 count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.STATEMON_DIAG_ERRORS">
            <summary>
            LID to get the active diagnostics 1-6
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_POWER_OUTAGES">
            <summary>
            LID to get the number of Power Outages
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.NUMBER_TIMES_PROGRAMMED">
            <summary>
            LID to get the number of Times Programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_FORM_FACTOR">
            <summary>
            LID to get the meter form factor
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_BASE_TYPE">
            <summary>
            LID to get the meter base type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_HARDWARE_VER_REV">
            <summary>
            LID to get the Hardware version 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.METER_CALIBRATION_DATE">
            <summary>
            LID to get the Calibration date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.BILLING_SCHEDULE_NAME">
            <summary>
             Billing Schedule 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_PERCENT_LOG_FULL">
            <summary>
            Percentage of VQ space currently used
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_SAG_COUNT">
            <summary>
            Number of VQ Sag currently logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_SWELL_COUNT">
            <summary>
            Number of VQ swell events currently logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_VOLTAGE_IMBALANCE_COUNT">
            <summary>
            Number of VQ voltage imbalance events currently logged
            </summary>  
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_CURRENT_IMBALANCE_COUNT">
            <summary>
            Number of VQ current imbalance events currently logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.VQ_INTERRUPTION_COUNT">
            <summary>
            Number of VQ Interruption events currently logged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DefinedLIDs.IO_BOARD_CAPABILITES">
            <summary>
            Numerical indication of the IO board's capabilities.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DefinedLIDs.BaseLIDs">
            <summary>
            Enumerations based on the LIDS.h file for the Centron Image. This enumeration is
            only used when building the LIDs that we will use.
            </summary>
            <remarks>
            These enumerations do not contain the entire list of LIDs.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.DefinedLIDs.#ctor">
            <summary>
            LIDs contructor
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SentinelDefinedLIDs">
            <summary>
            This class is used to define the LID values for the SENTINEL meter.
            The LID objects from this class can then be used by the LIDRetriever
            class to retrieve the data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SentinelDefinedLIDs.#ctor">
            <summary>
            Constructor.  Overrides the LIDs which differ from the Centron
            meters.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CentronMonoDefinedLIDs">
            <summary>
            This class is used to define the LID values for the Centron (C12.19) meter.
            The LID objects from this class can then be used by the LIDRetriever
            class to retrieve the data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoDefinedLIDs.#ctor">
            <summary>
            Constructor.  Overrides the LIDs which differ from the Sentinel
            meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CentronPolyDefinedLIDs">
            <summary>
            This class is used to define the LID values for the Centron Poly meter.
            The LID objects from this class can then be used by the LIDRetriever
            class to retrieve the data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyDefinedLIDs.#ctor">
            <summary>
            Constructor. Adds LIDs specific to the Centron Poly
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LID">
            <summary>
            LID object that contains all information necessary for retrieving
            data from the meter using a LID value.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LID.MeasurementUnit">
            <summary>
            The unit of measure a quantity is stored in.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.MeasurementUnit.UNIT">
            <summary>
            UNIT = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.MeasurementUnit.KILO">
            <summary>
            KILO = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.MeasurementUnit.MEGA">
            <summary>
            MEGA = 2
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32)">
            <summary>
            LID constructor
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
             LID Constructor that sets the unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32,System.TypeCode)">
            <summary>
            LID Constructor that takes a type.
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32,System.TypeCode,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type and unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32,System.TypeCode,System.UInt32)">
            <summary>
            LID Constructor that takes a type and the length (Used for Strings)
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.#ctor(System.UInt32,System.TypeCode,System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type, length, and unit type
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.LID.MakeSecondary">
            <summary>
            MakeSecondary - Changes the current LID to type Secondary and repopulates the Info
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LID.Equals(Itron.Metering.Device.LID)">
            <summary>
            This method determines if one LID value is equal to the current.
            </summary>
            <param name="other">The LID value to compare against the current.</param>
            <returns>Whether the given LID is equal to the current.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.Equals(System.Object)">
            <summary>
            This method determines if one object is equal to the current LID value.
            </summary>
            <param name="obj">The object value to compare against the current LID.</param>
            <returns>Whether the given object is equal to the current LID.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.GetHashCode">
            <summary>
            This method returns a hash code for this instance.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.op_Equality(Itron.Metering.Device.LID,Itron.Metering.Device.LID)">
            <summary>
            This method determines if two LID values are equal.
            </summary>
            <param name="LID1">First LID</param>
            <param name="LID2">Second LID</param>
            <returns>Whether the two LIDs are equal.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.op_Inequality(Itron.Metering.Device.LID,Itron.Metering.Device.LID)">
            <summary>
            This method determines if two LID values are not equal.
            </summary>
            <param name="LID1">First LID</param>
            <param name="LID2">Second LID</param>
            <returns>Whether the two LIDs are not equal.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.ToString">
            <summary>
            This method converts the LID to a string representation.
            </summary>
            <returns>The string description of the LID.</returns>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidValue">
            <summary>
            Provides Get and Set access to the value of the LID
            </summary>
            <Returns>uint</Returns>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidType">
            <summary>
            Provides Get and Set access to the LID Type.
            </summary>
            <returns>TypeCode</returns>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidLength">
            <summary>
            Provides Get and Set access to the LID Length (Only needed for String types).
            </summary>
            <returns>uint</returns>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidMeasurementUnit">
            <summary>
            Gets or sets the Unit type for the LID and changes
            the description to reflect the unit change.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidDescription">
            <summary>
            Gets and sets the description of the current LID. This field
            is populated when the lid value or measurement unit is changed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidQuantity">
            <summary>
            Gets the type of quantity of the current LID. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.lidCoincidentTriggerQuantity">
            <summary>
            Gets the type of quantity that triggers a coincident demand quantity. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsEnergy">
            <summary>
            Gets the Is Energy Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsMaxDemand">
            <summary>
            Gets the Is Max Demand Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsMinDemand">
            <summary>
            Gets the Is Min Demand Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsPeakDemand">
            <summary>
            Gets the Is Peak Demand Property (Peak 2 - 5)
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsCumDemand">
            <summary>
            Gets the Is Cum Demand Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsCCumDemand">
            <summary>
            Gets the Is CCum Demand Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsNonRegisterItem">
            <summary>
            Gets the Is NonRegister Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsTOO">
            <summary>
            Gets the Is TOO Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsTOURate">
            <summary>
            Gets the Is TOU Rate Item Property (Indicates if it is Rate A-G 
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsCoincident">
            <summary>
            Gets the Is Coincident Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsPresentDemand">
            <summary>
            Gets the Is Present Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsProjectedDemand">
            <summary>
            Gets the Is Projected Demand Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsPreviousDemand">
            <summary>
            Gets the Is Previous Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsPrimary">
            <summary>
            Gets the Is Primary Item Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsSelfRead">
            <summary>
            Gets the Is Self Read Property.  This tells us if is is a Self Read Register.
            This value is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsSnapshot">
            <summary>
            Gets the Is Snapshot Property.  This tells us if is is a Snapshot Register.
            This value is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsLastSeason">
            <summary>
            Gets the Is Last Season Property.  This tells us if is is a Last Season Register.
            This value is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsNegativeAllowed">
            <summary>
            Gets the Is Negative Allowed Property.
            This value is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsQuantity">
            <summary>
            Gets the Is Quantity Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LID.IsInstantaneous">
            <summary>
            Gets the Is Instantaneous Property
            is populated during DetermineLIDInformation
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineLIDInformation">
            <summary>
            Determine the LID Type if it is not provided in the constructor.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineThresholds">
            <summary>
            Determines the LID information for the Demand Threshold LIDs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineCoinc">
            <summary>
            This method determines the Coincident Demand Quantities
            </summary>
            <returns>Quantity description</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineSRQuantity">
            <summary>
            This method determines the information for self read quantities
            </summary>
            <returns>Quantity description</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineTOUQuantity">
            <summary>
            This method determines the information for TOU quantities
            </summary>
            <returns>Quantity description</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.GetTOURate(System.Boolean@)">
            <summary>
            This method determines the TOU rate
            </summary>
            <returns>TOU rate descriptor</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineEnergy">
            <summary>
            This method determines the information for energy quantities
            </summary>
            <returns>Demand quantity descriptor</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineDemand">
            <summary>
            This method determines the information for demand quantities
            </summary>
            <returns>Demand quantity descriptor</returns>
        </member>
        <member name="M:Itron.Metering.Device.LID.GetBaseMeasurement(System.Boolean)">
            <summary>
            This method determines the information for the base energy or demand quantity.
            </summary>
            <param name="bEnergy">Flag indicating that this is an energy 
            LID</param>
            <returns>The base quantity descriptor (energy or demand)</returns>		
        </member>
        <member name="M:Itron.Metering.Device.LID.DetermineMetrology">
            <summary>
            DetermineMetrology - Handle the Metrology Quantities
            </summary>
            <returns></returns>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_lidValue">
            <summary>
            The value of the LID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_lidType">
            <summary>
            The type of LID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_requestedTypeCode">
            <summary>
            The Type that was requested
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_lidLength">
            <summary>
            The length of the LID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_lidMeasUnit">
            <summary>
            The unit of measure used by the LID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_lidDescription">
            <summary>
            The description of the LID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsEnergy">
            <summary>
            Bool indicating whether or not the LID is an energy value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsMaxDemand">
            <summary>
            Bool indicating whether or not the LID is a maximum demand value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsMinDemand">
            <summary>
            Bool indicating whether or not the LID is a minimum demand value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsPeakDemand">
            <summary>
            Bool indicating whether or not the LID is a peak demand value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsCumDemand">
            <summary>
            Bool indicating whether or not the LID is a cumulative demand value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsCCumDemand">
            <summary>
            Bool indicating whether or not the LID is a continuous cumulative demand value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsNonRegisterItem">
            <summary>
            Bool indicating whether or not the LID is a non-register item.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsTOO">
            <summary>
            Bool indicating whether or not the LID is a time of occurence value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsCoincident">
            <summary>
            Bool indicating whether or not the LID is a coincident value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsPresent">
            <summary>
            Bool indicating whether or not the LID is a present value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsPrevious">
            <summary>
            Bool indicating whether or not the LID is a previous value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsProjected">
            <summary>
            Bool indicating whether or not the LID is a projected value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsTOURate">
            <summary>
            Bool indicating whether or not the LID is a TOU rate.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsPrimary">
            <summary>
            Bool indicating whether or not the LID is a primary value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsSelfRead">
            <summary>
            Bool indicating whether or not the LID is a self read value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsSnapShot">
            <summary>
            Bool indicating whether or not the LID is a snapshot value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsLastSeason">
            <summary>
            Bool indicating whether or not the LID is a last season value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsNegativeAllowed">
            <summary>
            Bool indicating whether or not the LID is a negative allowed value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsQuantity">
            <summary>
            Bool indicating whether or not the LID is an energy or demand quantity.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_bIsInstantaneous">
            <summary>
            Bool indicating whether or not the LID is an instantaneous value.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LID.m_rmStrings">
            <summary>
            A resource manager to retrieve strings.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SentinelLID">
            <summary>
            LID object for the Sentinel device.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32)">
            <summary>
            LID constructor
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
             LID Constructor that sets the unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32,System.TypeCode)">
            <summary>
            LID Constructor that takes a type.
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32,System.TypeCode,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type and unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32,System.TypeCode,System.UInt32)">
            <summary>
            LID Constructor that takes a type and the length (Used for Strings)
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.#ctor(System.UInt32,System.TypeCode,System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type, length, and unit type
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.SentinelLID.DetermineLIDInformation">
            <summary>
            Determines the LID description and type for Sentinel specific LIDs
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CentronMonoLID">
            <summary>
            LID object for the Centron Mono device.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32)">
            <summary>
            LID constructor
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
             LID Constructor that sets the unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32,System.TypeCode)">
            <summary>
            LID Constructor that takes a type.
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32,System.TypeCode,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type and unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32,System.TypeCode,System.UInt32)">
            <summary>
            LID Constructor that takes a type and the length (Used for Strings)
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.#ctor(System.UInt32,System.TypeCode,System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type, length, and unit type
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronMonoLID.DetermineLIDInformation">
            <summary>
            Determines the LID description and type for Centron Mono specific LIDs
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CentronPolyLID">
            <summary>
            LID object for the Centron Poly device.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32)">
            <summary>
            LID constructor
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
             LID Constructor that sets the unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32,System.TypeCode)">
            <summary>
            LID Constructor that takes a type.
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32,System.TypeCode,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type and unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32,System.TypeCode,System.UInt32)">
            <summary>
            LID Constructor that takes a type and the length (Used for Strings)
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.#ctor(System.UInt32,System.TypeCode,System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type, length, and unit type
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronPolyLID.DetermineLIDInformation">
            <summary>
            Determines the LID description and type for Centron Mono specific LIDs
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CentronAMILID">
            <summary>
            LID object for the Centron AMI device.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32)">
            <summary>
            LID constructor
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
             LID Constructor that sets the unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32,System.TypeCode)">
            <summary>
            LID Constructor that takes a type.
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32,System.TypeCode,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type and unit type
            </summary>
            <param name="lid">32-bit integer value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32,System.TypeCode,System.UInt32)">
            <summary>
            LID Constructor that takes a type and the length (Used for Strings)
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.#ctor(System.UInt32,System.TypeCode,System.UInt32,Itron.Metering.Device.LID.MeasurementUnit)">
            <summary>
            LID Constructor that takes the data type, length, and unit type
            </summary>
            <param name="lid">32-bit number value of the LID</param>
            <param name="type">The type of the data represented by the LID</param>
            <param name="uiLength">The length of the data</param>
            <param name="measUnit">The unit type of the LID</param>
        </member>
        <member name="M:Itron.Metering.Device.CentronAMILID.DetermineLIDInformation">
            <summary>
            Determines the LID description and type for Centron Mono specific LIDs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LIDWriter.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for communication with the meter.</param>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            02/23/07 KRC 8.00.14 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.LIDWriter.WriteLID(Itron.Metering.Device.LID,System.Double)">
            <summary>
            Write LID
            </summary>
            <param name="lid">The Lid to Write</param>
            <param name="dblValue">The double value to write to the meter</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDWriter.WriteLID(Itron.Metering.Device.LID,System.Single)">
            <summary>
            Write LID
            </summary>
            <param name="lid">The Lid to Write</param>
            <param name="fltValue">The float value to write to the meter</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="M:Itron.Metering.Device.LIDWriter.WriteLID(Itron.Metering.Device.LID,System.UInt32)">
            <summary>
            Write LID
            </summary>
            <param name="lid">The Lid to Write</param>
            <param name="uiValue">The uint value to write to the meter</param>
            <returns>PSEMResponse</returns>
        </member>
        <member name="T:Itron.Metering.Device.LoadProfileStatusLIDS">
            <summary>
            This class retrieves Load Profile information using LIDs
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LoadProfileStatusLIDS.#ctor(Itron.Metering.Device.LIDRetriever,System.Single)">
            <summary>
            Constructor for the Load Profile Status LID object
            </summary>
            <param name="retriever">The LIDRetriever for the device.</param>
            <param name="fltLPPulseWeightMultiplier">The multiplier used to convert from meter value to real value</param>
        </member>
        <member name="M:Itron.Metering.Device.LoadProfileStatusLIDS.GetChannel(System.Int32)">
            <summary>
            Gets the channel object with the selected channel number
            </summary>
            <param name="ChannelNumber">The number of the channel to get</param>
            <returns>
            The ANSILoadProfileChannel object of the selected channel if it is in use, or null 
            if the channel is not in use.
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.LoadProfileStatusLIDS.IsRunning">
            <summary>
            Gets a boolean that represents whether or not Load Profile is running.
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown when a communication error occurs.</exception>
        </member>
        <member name="P:Itron.Metering.Device.LoadProfileStatusLIDS.IntervalLength">
            <summary>
            Gets the interval length in minutes
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown when a communication error occurs.</exception>
        </member>
        <member name="P:Itron.Metering.Device.LoadProfileStatusLIDS.NumberOfChannels">
            <summary>
            Gets the total number of Load Profile channels in the meter
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown when a communication error occurs.</exception>
        </member>
        <member name="P:Itron.Metering.Device.LoadProfileStatusLIDS.Channels">
            <summary>
            Gets an array of Channel objects
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LoadProfileStatusLIDS.ReadChannelStatus">
            <summary>
            Reads the status LIDs from the meter and creates the channel objects
            </summary>
            <returns>The PSEM response code.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ANSILoadProfileChannel">
            <summary>
            Stores information on a single channel of Load Profile
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSILoadProfileChannel.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSILoadProfileChannel.ChannelNumber">
            <summary>
            Gets the channel number for this status object.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSILoadProfileChannel.QuantityLID">
            <summary>
            Gets the LID object for the quantity this channel is measuring
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSILoadProfileChannel.QuantityName">
            <summary>
            Gets the name of the Quantity for the channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSILoadProfileChannel.PulseWeight">
            <summary>
            Property for the pulse weight for the channel.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Procedures">
            <summary>
            Supported C12.19 standard and MFG procedures
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.UNKNOWN">
            <summary>
            A value for an unknown procedure.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.COLD_START">
            <summary>
            Std Procedure 0, performs a Cold Start that resets the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SAVE_CONFIGURATION">
            <summary>
            Std Procedure 2, saves the active configuration, no parameters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_DATA">
            <summary>
            Std procedure 3, clears billing data, no parameters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_LIST_PTRS">
            <summary>
            Std procedure 4, parameter is one byte specifying
            1 => clear event log
            2 => clear self read data table
            8 => clear history log
            255 => clear self read, LP, and history log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.UPDATE_LAST_READ_ENTRY">
            <summary>
            Std procedure 5
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_STD_STATUS">
            <summary>
            Std procedure 7, clears table 3 status bits
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_MFG_STATUS">
            <summary>
            Std procedure 8, clears table 3 status bits
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.REMOTE_RESET">
            <summary>
            Std procedure 9, demand reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SET_DATE_TIME">
            <summary>
            Std procedure 10, set date/time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ACTIVATE_ALL_PENDING_TABLES">
            <summary>
            Std procedure 12, activate all pending tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ACTIVATE_PENDING_TABLE">
            <summary>
            Std procedure 13, activate specific pending table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_ALL_PENDING_TABLES">
            <summary>
            Std procedure 14, clear all pending tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_SPECIFIC_PENDING_TABLE">
            <summary>
            Std procedure 15, clear specific pending table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.REGISTER">
            <summary>
            Std procedure 23, typically used on the local port, is used to 
            initiate the registration service.  The Registration service is used
            to add and maintain (“keep-alive”) routing information of C12.22 Relays. 
            To be part of C12.22 Network, a node shall send a registration service
            to one of the C12.22 Relays. 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.DEREGISTER">
            <summary>
            Std procedure 24, deregister the node on the network.
            The deregistration service is used to remove routing information in
            C12.22 Relays. This procedure, typically used on the local port 
            (ANSI C12.18), is used to initiate this process
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.OPEN_CONFIG_FILE">
            <summary>
            MFG01 OPEN_CONFIG_FILE	= 2049 - Opens 2048 for writing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLOSE_CONFIG_FILE">
            <summary>
            MFG02 CLOSE_CONFIG_FILE	= 2050 - Closes 2048 and reconfigures
            the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CHANGE_DISPLAY_MODE">
            <summary>
            MFG03 - Change the display to Normal or test mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_PASSWORDS">
            <summary>
            MFG05 RESET_PASSWORDS = 2053 - Resets all passwords to null 
            preceding a password reconfigure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_COUNTERS">
            <summary>
            MFG06 RESET_COUNTERS = 2054 - Resets various MFG device counters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.BORN_AGAIN">
            <summary>
            MFG13 BORN_AGAIN = 2061 - Born Again
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SEAL_CANADIAN">
            <summary>
            MFG14 RESET_COUNTERS = 2062 - Seal Canadian
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.GATEWAY_PROC_CALL">
            <summary>
            MFG17 GATEWAY_PROC_CALL = 2065 - Procedure for any Gateway specific procedures
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_OPT_BOARD_EVENTS">
            <summary>
            MFG procedure 21
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.GET_LP_START_BLOCK">
            <summary>
            MFG procedure 22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.MEMORY_READER">
            <summary>
            MFG procedure 23 - Memory Reader
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SET_NEXT_CALL_TIME">
            <summary>
            MFG procedure 24
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.GET_SECURITY_LEVEL">
            <summary>
            MFG procedure 26 - Gets the current security level
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.TURBO_TEST">
            <summary>
            MFG Procedure 27 - Turbo Test
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_VQ_LOG">
            <summary>
            MFG procedure 28
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_SITESCAN_SNAPSHOTS">
            <summary>
            MFG procedure 29
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.INITIATE_FW_LOADER_SETUP">
            <summary>
            MFG procedure 37, Initiate firmware loader setup
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.REMOTE_CONNECT_DISCONNECT">
            <summary>
            MFG procedure 38, Connect/Disconnect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.PERFORM_PERIODIC_READ">
            <summary>
            MFG Procedure 39 - Perform Periodic Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_RF_LAN">
            <summary>
            MFG procedure 43, Reset RFLAN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_PROCEDURE">
            <summary>
            MFG procedure 45, HAN Procedure.
            The request type can be:
                Decommission and Halt,
                Decommission and Commission, 
                Drop Node, 
                Register Node, 
                Activate AlternateKey, 
                Join Control,
                Reset FW Download Client to Pending,
                Activate FW on HAN Clients, and
                Cancel FW Download and Activation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.GET_FIRST_20_MISSING_BLOCKS">
            <summary>
            MFG procedure 46, Get 1st 20 missing blocks
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RFLAN_PROCEDURE">
            <summary>
            MFG procedure 47, Performs RFLAN functions
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_BASE">
            <summary>
            MFG procedure 50 - Clears the base data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_PENDING_TABLE_BY_ID">
            <summary>
            MFG procedure 52 - Clears the pending firmware download table by ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RFLAN_DEBUG_PROCEDURE">
            <summary>
            MFG procedure 55, Performs RFLAN debug functions
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.LOAD_SIDE_VOLTAGE_DETECTION">
            <summary>
            MFG procedure 56 - Determines if Load Side Voltage is present - Takes 15 seconds to execute
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.FACTORY_REMOTE_SWITCH_TEST">
            <summary>
            MFG Procedure 57 - Factory Remote Disconnect Switch test
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RECONFIGURE_LED_QUANTITY">
            <summary>
            MFG procedure 60 - Reconfigures the active LED quantity
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SWITCH_ACTIVE_THRESHOLD">
            <summary>
            MFG procedure 61 - Switches the active Service Limiting threshold.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ADD_AMI_HAN_DEVICE">
            <summary>
            MFG procedure 63 - Preloads the register with the information it
            needs to allow a new device to join the HAN.  The 2 parameters are:
                Device EUI - UINT64, EUI of the device added
                Preconfigured Key - BINARY(16), the initial link key for this device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_LAN_HAN_COMM_LOGS">
            <summary>
            MFG procedure 65 - Clears the LAN and HAN communication logs.  This will reset
            both the HAN2 upstream and downstream logs if they exist.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ACTIVATE_FWDL_PENDING_TABLE">
            <summary>
            MFG procedure 69 - Activate a firmware download pending table.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.KEY_INJECTION_PROCEDURE">
            <summary>
            Mfg procedure 75 - Key injection procedure. This should be used for automated 
            testing ONLY.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.UPDATE_TEMPERATURE_OFFSET">
            <summary>
            MFG procedure 76 - Update temperature offset. Allows us to write the offset to factory data
            without causing a cold start
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_CERTIFICATE_UPDATE">
            <summary>
            MFG procedure 77 - This procedure saves a new set of ECC certificate and 
            keys into dataflash.  It is used to load the Zigbee MCU and the Register 
            with information it needs to perform a Certificate Based Key Establishment 
            with Smart Energy devices supporting it.  The 4 parameters are: 
                Device Certificate - UINT8[48], ECC certificate (meter specific).
                CA Public Key - UINT8[22], ECC public key (not meter specific).
                Device Private Key = UINT8[21], ECC private key (meter specific).
                Flags = UINT8, Not used but set to 0x00.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.FORCE_TIME_SYNC">
            <summary>
            MFG procedure 78 - Forces the meter to synchronize its time with the RFLAN
            if the meter's time is out of sync by a value greater than hysteresis.  The 
            parameter is:
                Hysteresis - UINT16, the value, in seconds, that the meter's time must 
                             be out of sync more than for the time sync to succeed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SERVICE_LIMITING_FAIL_SAFE">
            <summary>
            MFG procedure 80 - This function allows the user to start, extend, or cancel 
            a service limiting failsafe period.  The parameter is the two byte unsigned 
            number of minutes for the failsafe period to continue.  
            The specified duration starts when the message is received.
                timeInFailSafe - UINT16, the value, in minutes, that the meter must be in failsafe.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ENTER_EXIT_TEST_MODE">
            <summary>
            MFG procedure 81 - This function allows the user to enter or exit test mode
            This method takes 4 parameters, test mode type, duration in test mode, 
            test mode quantity and test mode kh value based on the meter form 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.VALIDATE_SECURITY_DATA">
            <summary>
            MFG procedure 83 - Allows the user to validate security keys
            This procedure takes 3 parameters, security type, key id, and the hash 
            of the specified key.  The meter responds with a PROC_COMPLETE if the 
            validation passes.  Otherwise the meter responds with a PROC_INV_PARM 
            if the validation fails
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ENCRYPT_C1218_PASSWORDS">
            <summary>
            MFG procedure 84 - Allows the user to encrypt the C12.18 passwords 
            stored in the meter.  This procedure takes no parameters.  The meter responds
            with a PROC_COMPLETE if the encryption procedure is successful.  If any
            of the encyrption functions fail it responds with ERR_CNST.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.AUTHENTICATE">
            <summary>
            MFG procedure 85 - Issue Signed Authorization. Takes the authorization key
            as a paramter. Returns PROC_COMPLETE if successful, PROC_NO_AUTH if it can not
            be processed, PROC_INV_PARM if the key is not valid, PROC_CONFLICT if the meter
            is not set up to use Signed Authorization, or PROC_IN_PROCESS if the command is
            still processing.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.DISABLE_SIGNED_AUTHORIZATION">
            <summary>
            MFG Procedure 87 - Disables Signed Authorization for a specified amount of time.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.FATAL_ERROR_RECOVERY">
            <summary>
            MFG Procedure 91 - Modifies the operation of Fatal Error Recovery and can be used to clear
            the status bits.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_TAMPER_TAP_MAX_STATS">
            <summary>
            MFG Procedure 93 - Clears the max difference in accelerometer angles since power up
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_EVENT_INJECTION">
            <summary>
            MFG Procedure 94 - Injects HAN events into the HAN2 event logs.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.PERIODIC_READ_REMOVAL">
            <summary>
            MFG Procedure 95 - Removes optional fields from the periodic read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CONFIG_CPP">
            <summary>
            MFG Procedure 101 - Config Critical Peak Pricing
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.PING_HAN_DEVICE">
            <summary>
            MFG Procedure 103 - Ping HAN Device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CONFIG_CPP_WITH_HAN_DATA">
            <summary>
            MFG Procedure 104 - Config Critical Peak Pricing with HAN Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.REMOTE_CONNECT_DISCONNECT_RETRY">
            <summary>
            MFG procedure 105, AUTOMATION_TEST_COMMAND for Retry
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.EVENT_INJECTION">
            <summary>
            MFG procedure 106, Event Injection Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CONFIGURE_BASE_ENERGIES">
            <summary>
            MFG procedure 107 - Configure Base Energies
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.VALIDATE_BASE_ENERGIES">
            <summary>
            MFG procedure 108 - Validate Base Energies
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.POLY_LED_RECONFIGURE">
            <summary>
            MFG procedure 109 - Reconfigure LED Quantity for Poly meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_RESET">
            <summary>
            MFG Procedure 111 - HAN Reset for HW 3.0 or later meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RESET_TASK_EXECUTION_TIME">
            <summary>
            MFG Procedure 113 - Reset task execution times
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.FIRMWARE_DOWNLOAD_EVENT_INJECTION">
            <summary>
            MFG Procedure 115 - Firmware Download Event Injection
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_FWDL_EVENT_LOG">
            <summary>
            MFG Procedure 116 - Clear the firmware download event log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.OPTICAL_FWDL_AUTHENTICATION">
            <summary>
            MFG Procedure 117 - Authenticate the optical firmware download by sending 
            32-byte hash code to the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.RFLAN_OPT_OUT">
            <summary>
            MFG Procedure 119 - Disables RFLAN.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.MONO_PHASE_AUTO_DETECTION">
            <summary>
            MFG Procedure 141 - Causes the meter to detect which phases to monitor 
            in a single phase meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.IP_DIAGNOSTICS">
            <summary>
            MFG Procedure 150 - IP Stack Diagnostic and Test Procedure 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SET_PPP_KEY">
            <summary>
            Mfg Procedure 151 - Set PPP Key Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CLEAR_PPP_KEY">
            <summary>
            Mfg Procedure 152 - Clear PPP Key Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SEND_PPP_KEY">
            <summary>
            Mfg Procedure 153 - Send PPP Key Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.IP_DIAGNOSTICS_159">
            <summary>
            MFG Procedure 159 - IP Diagnotics Procedure 159
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ENABLE_FATAL_ERROR_CHECKING">
            <summary>
            MFG Procedure 161 - Enable Full Fatal Error Checking
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.SWITCH_CHOICE_CONNECT_OPENWAY_COMM_MODE">
            <summary>
            MFG Procedure 164 - Switch between ChoiceConnect and OpenWay Communications Operational Modes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_DISABLE_PRICING">
            <summary>
            MFG Procedure 165 - HAN Disable Pricing
            This procedure is used to disable the current pricing mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_MOVE_OUT">
            <summary>
            MFG Procedure 166 - HAN Move Out command
            This procedure is used to clear the current HAN prices, messages, and DRLC events and to prevent 
            access to historical Load Profile and Block Period Consumption data.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_COMMIT_NEXT_BLOCK_PRICE_SCHEDULE">
            <summary>
            MFG Procedure 167 - HAN Commit Next Block Price Schedule
            This procedure is used to commit the changes to Table 2441- Next Bock Price Schedule Table.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_UPDATE_CURRENT_BLOCK_PERIOD_CONSUMPTION_DELIVERED">
            <summary>
            MFG Procedure 168 - HAN Update CurrentBlockPeriodConsumptionDelivered.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_GET_CURRENT_BLOCK_PRICE_DATA">
            <summary>
            MFG Procedure 169 - HAN Get Current Block Price Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.READ_STACK_DEPTH">
            <summary>
            MFG Procedure 170 - Read stack depth
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.EXIT_FACTORY_TEST_MODE">
            <summary>
            MFG Procedure 171 - Exit factory test mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.TOGGLE_ZIGBEE_CERTIFICATION_MODE">
            <summary>
            MFG Procedure 174 - Enable/Disable Cert Mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.CANCEL_SCHEDULED_FIRMWARE_ACTIVATION">
            <summary>
            MFG Procedure 176 - Cancel Scheduled Firmware Activation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ENABLE_DISABLE_OPTICAL_PORT">
            <summary>
            MFG Procedure 177 - Enable or Disable Optical Port
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.ICS_MODULE_PROCEDURE">
            <summary>
            MFG Procedure 200 - ICS Module Procedure
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Procedures.HAN_OTA_Certification">
            <summary>
            MFG Procedure 205 - HAN OTA Certification
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PeriodicReadActions">
            <summary>
            Data Structure for calling Periodic Read
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PeriodicReadActions.#ctor(System.Boolean)">
            <summary>
            Constructor For Period read Actions Struct
            </summary>
            <param name="bDefault"></param>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportZigBee">
            <summary>
            Report ZigBee
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportDRSnapshot">
            <summary>
            Report Demand reset Snapshot
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportPerformSR">
            <summary>
            Report Perform Self Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportLoadProfile">
            <summary>
            Report Load Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportHistoryLog">
            <summary>
            Report History Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportTable28">
            <summary>
            Report Table 28
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportNetworkStatus">
            <summary>
            Report Network status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bPerformDRAtEndTime">
            <summary>
            Perform Demand Reset at End Time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportMostRecentSR">
            <summary>
            Report Most Recent Self read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportVoltageMonitoring">
            <summary>
            Report Voltage Monitoring
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportFWDLStatusBlock">
            <summary>
            Report Firmware Download Status Block
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bOnDemandPeriodicRead">
            <summary>
            On Demand Periodic read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PeriodicReadActions.bReportTable6">
            <summary>
            Report Table 06
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Periodic_Read_Action_Types">
            <summary>
            The bit defintions for the various Period Read Actions
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Reset_Counter_Types">
            <summary>
            The bits indicating which item to reset via MFG procedure 6
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Reset_Counter_Types.RESET_NUM_TIMES_PROGRAMMED">
            <summary>
            Reset # times programmed
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Reset_Counter_Types.RESET_NUM_DEMAND_RESETS">
            <summary>
            Reset # demand resets
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Reset_Counter_Types.RESET_NUM_POWER_OUTAGES">
            <summary>
            Reset # power outages
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.Reset_Counter_Types.RESET_NUM_DIAG_COUNTERS">
            <summary>
            Reset diagnostic counters
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ResetListPointerTypes">
            <summary>
            Parameters for STD Procedure 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.EventLogger">
            <summary>
            Resets the Event Logger pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.SelfReads">
            <summary>
            Resets the Self Read pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.LPDataSet1">
            <summary>
            Reset the Load Profile Data Set 1 pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.LPDataSet2">
            <summary>
            Reset the Load Profile Data Set 2 pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.LPDataSet3">
            <summary>
            Reset the Load Profile Data Set 3 pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.LPDataSet4">
            <summary>
            Reset the Load Profile Data Set 4 pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.AllLPData">
            <summary>
            Reset all Load Profile pointers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.HistoryLogger">
            <summary>
            Reset the History Logger pointer
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ResetListPointerTypes.AllButHistoryLogger">
            <summary>
            Reset all but the History Logger pointer
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ProcedureResultCodes">
            <summary>
            Result codes that are returned in table 08 after a procedure has
            been written to table 07
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.COMPLETED">
            <summary>
            COMPLETED - Procedure success
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.NOT_FULLY_COMPLETED">
            <summary>
            NOT_FULLY_COMPLETED - Procedure in-progress
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.INVALID_PARAM">
            <summary>
            INVALID_PARAM - Procedure ignored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.DEVICE_SETUP_CONFLICT">
            <summary>
            DEVICE_SETUP_CONFLICT - Procedure ignored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.TIMING_CONSTRAINT">
            <summary>
            TIMING_CONSTRAINT - Procedure ignored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.NO_AUTHORIZATION">
            <summary>
            NO_AUTHORIZATION - Procedure ignored
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ProcedureResultCodes.UNRECOGNIZED_PROC">
            <summary>
            UNRECOGNIZED_PROC - Procedure ignored
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RemoteResetProcedureFlags">
            <summary>
            Flag values to be used in any combination with std procedure 09
            to perform remote resets
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteResetProcedureFlags.DEMAND_RESET">
            <summary>
            Demand Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteResetProcedureFlags.SELF_READ">
            <summary>
            Perform self read 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RemoteResetProcedureFlags.SEASON_CHANGE">
            <summary>
            Change to season indicated by bits (3..6)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.UpdateLastReadEntryListIDs">
            <summary>
            List pointers that can be updated with std procedure 05
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.UpdateLastReadEntryListIDs.CANADIAN_EVENT_LOG">
            <summary>
            Clears the Canadian event log 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANDebugProcedures">
            <summary>
            RFLAN debug procedures that can be called with mfg procedure 55.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.RSSI_PDF_START">
            <summary>
            RSSI PDF start
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.RSSI_PDF_END">
            <summary>
            RSSI PDF end
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.RSSI_AUTOCOR_START">
            <summary>
            RSSI autocor start
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.RSSI_AUTOCOR_END">
            <summary>
            RSSI autocor end
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.LOCK_RF_CHANNEL">
            <summary>
            Locks the RF channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.RESUME_RF_HOPPING_SEQUENCE">
            <summary>
            Resumes RF hopping sequence/unlocks RF channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.HALT_STACK_EXECUTION">
            <summary>
            Halts stack execution
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.ENABLE_STACK_EXECUTION">
            <summary>
            Enables stack execution
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.FORCED_CELL_OUT">
            <summary>
            Forced cell out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.SET_READ_ROUTING_TABLE_BASE_INDEX">
            <summary>
            Sets the read routing table's base index
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.SET_ITP_TIME">
            <summary>
            Sets the ITP time
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.BEGIN_OUTAGE">
            <summary>
            Begins an outage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.END_OUTAGE">
            <summary>
            Ends an outage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.SET_PREFERRED_CELL">
            <summary>
            Sets the preferred cell ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.SET_ENDPOINT_TYPE">
            <summary>
            Sets the endpoint type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.MEMORY_POKE">
            <summary>
            Pokes the memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.FORCE_OUTAGE">
            <summary>
            Forces an outage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.FORCE_SOFT_NET_REGISTRATION">
            <summary>
            Forces a soft net registration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANDebugProcedures.C1222_STACK_RESET">
            <summary>
            Resets the C12.22 stack
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RFLANProcedure">
            <summary>
            RFLAN procedures that can be called with mfg procedure 47.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.JUMP_TO_BOOTLOADER">
            <summary>
            Jumps to bootloader mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RF_MSG_TX_LOW_CHANNEL">
            <summary>
            Transmits RF message on low channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RF_MSG_TX_HIGH_CHANNEL">
            <summary>
            Transmits RF message on high channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RF_MSG_RX_LOW_CHANNEL">
            <summary>
            Recieves RF message on low channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RF_MSG_RX_HIGH_CHANNEL">
            <summary>
            Recieves RF message on high channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RF_MSG_TX_LOW_THEN_HIGH_CHANNEL">
            <summary>
            Transmits RF message on low channel and then on high channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RESET_DEBUG_EVENTS">
            <summary>
            Resets debug events
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.RESET_RFLAN_MCU">
            <summary>
            Resets RFLAN MCU
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.MAC_RESET">
            <summary>
            Resets MAC
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.CORE_DUMP">
            <summary>
            Causes a core dump
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.CLEAR_CORE_DUMP">
            <summary>
            Clears a core dump
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.FACTORY_CONFIG_CHANGE_NOTIFY">
            <summary>
            Sends notification of a factory config change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.FORCE_NET_REGISTER">
            <summary>
            Forces a NET registration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.CLEAR_STATISTICS">
            <summary>
            Clears all statistics
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.REAUTHORIZE_ALL_CELLS">
            <summary>
            Reauthorizes all cells
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.FORCE_ITP_SYNCHRONIZATION">
            <summary>
            Forces ITP synchronization
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.FORCE_CELL_LEAVING">
            <summary>
            Forces cell leaving
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RFLANProcedure.CLEAR_FLASH_LOCK_BITS">
            <summary>
            Clears flash lock bits
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPDiagnosticsFunction150ID">
            <summary>
            Function codes for MFG proc 150
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction150ID.SET_DIAGNOSTICS_DISPLAYS_ACTIVATION">
            <summary>
            This function id puts diagnostic messages on the meter's display
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction150ID.SET_DIAGNOSTICS_TABLES_ACTIVATION">
            <summary>
            This function id enables or disables the visibility of the 500 and 600 tables.
            This function id is obsolete but must be kept for register f/w 5.0 meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction150ID.SEND_RAW_CSMP">
            <summary>
            Send Direct COAP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction150ID.GET_LIST_OF_REG_SUPPORTED_TLVS">
            <summary>
            Get List of TLVs supported by the register
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction150ID.INITIATE_SECURE_PPP">
            <summary>
            Initiate Secure PPP Connection
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.SET_DIAGNOSTICS_TABLES_ACTIVATION">
            <summary>
            This function id enables or disables the visibility of the 500 and 600 tables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.SET_TLV_TO_MODULE">
            <summary>
            Set TLV to module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.TRIGGER_MODULE_TLV_READ">
            <summary>
            Trigger Module TLV Read
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.IP_AND_COMM_RESET_TEST_FUNCTION">
            <summary>
            IP and COMM Reset Test Function
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.ENABLE_DISABLE_QOS">
            <summary>
            Enable/Disable QoS
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.GENERATE_PPP_PSK">
            <summary>
            Generate PPP PSK
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.UNLOCK_REGISTER_SECURE_PPP">
            <summary>
            Unlock Register Secure PPP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.UNLOCK_COMM_MODULE_SECURE_PPP">
            <summary>
            Unlock COMM Module Secure PPP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPDiagnosticsFunction159ID.SET_STACK_TYPE">
            <summary>
            Set the stack type
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IPResetActionaID">
            <summary>
            Action codes for Mfg procedure 159, subfunction 11
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPResetActionaID.IP_RESET_COUNTS">
            <summary>
            IP Reset counts
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPResetActionaID.IP_RESET_START_STOP_UIP">
            <summary>
            IP Reset start/stop UIP
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPResetActionaID.IP_RESET_UIP_TASK_RESTART">
            <summary>
            IP Reset UIP task restart
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPResetActionaID.IP_RESET_COMM_MODULE_RESTART">
            <summary>
            IP Reset comm module restart
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IPResetActionaID.IP_RESET_UIP_STACK_FROZEN">
            <summary>
            IP Reset UIP stack frozen
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSProcedure">
            <summary>
            ICS procedures that can be called with mfg procedure 200.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.EXECUTE_CLI_COMMAND">
            <summary>
            Execute a diagnostic command for the ICS module
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.UPDATE_ERT_DATA_TABLES">
            <summary>
            Update the ERT data tables (460, 462 and 463)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.VERIFY_METER_PASSWORDS">
            <summary>
            Verifies the passwords in the comm module.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.COMMIT_CONFIGURATION">
            <summary>
            Commits the cellular configuration values to flash.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.RESET_EVENT_LOG">
            <summary>
            Clears the ICS event log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.UPDATE_EVENT_TABLES">
            <summary>
            Freezes the comm module event tables for the specified date range.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.ICM_SELECT_EVENT_FILTER">
            <summary>
            Filters the ICS Events by either Customer or Diagnostic events
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.CLEAR_CONFIGURATION_STATUS_BITS">
            <summary>
            Clear configuration status bits
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.ERT_242_COMMAND_DATA">
            <summary>
            ERT 242 Command Data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.ERT_ADD_REMOVE_METER">
            <summary>
            ERT Add/Remove Meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.SET_ZIGBEE_NETWORK_KEY">
            <summary>
            Set ZigBee Network Key (I-210/kV2c only)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.GET_ZIGBEE_NETWORK_KEY">
            <summary>
            Get ZigBee Network Key (I-210/kV2c only)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.SET_METER_PASSWORD">
            <summary>
            Set Meter Password
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.INITIATE_FILE_RETRIEVAL">
            <summary>
            Initiate retrieval of debug logs
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSProcedure.CONTINUE_FILE_RETRIEVAL">
            <summary>
            Continue retrieval of debug logs
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ICSFilterSelection">
            <summary>
            ICS Filter Selection used for Procedure 200. This is the second parameter passed in when using
            MFG Procedure 200 sub-function 9.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSFilterSelection.NO_FILTER">
            <summary>
            Does not filter the ICS Events.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSFilterSelection.CUSTOMER_FILTER">
            <summary>
            Filters events to only allow Customer Events.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ICSFilterSelection.DIAGNOSTIC_FILTER">
            <summary>
            Filters events to only allow Diagnostic Events.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANPriceModes">
            <summary>
            Bitfield for method HANChangePriceMode()
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANPriceModes.SIMPLE_TOU_PRICING">
            <summary>Time Of Use</summary>
        </member>
        <member name="F:Itron.Metering.Device.HANPriceModes.BLOCK_PRICING">
            <summary>RIB - Block</summary>
        </member>
        <member name="F:Itron.Metering.Device.HANPriceModes.RECURRING_PRICING">
            <summary>Recurring Pricing</summary>
        </member>
        <member name="T:Itron.Metering.Device.PSEMException">
            <summary>
            Class which handles PSEM exceptions.
            </summary>
            <example>
            <code>
            try{...}
            catch(PSEMException e){...}
            </code>
            </example>
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/11/06 KRC 7.35.00 N/A	Created
            12/05/06 MAH 8.00.00 Moved from Itron.Metering namespace to Itron.Metering.Device
            
        </member>
        <member name="T:Itron.Metering.Device.PSEMException.PSEMCommands">
            <summary>
            PSEMCommand Enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PSEMException.PSEMCommands.PSEM_READ">
            <summary>
            A PSEM Read of some sort was done
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PSEMException.PSEMCommands.PSEM_WRITE">
            <summary>
            a PSEN Write of some sort was done.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PSEMException.#ctor(Itron.Metering.Device.PSEMException.PSEMCommands,Itron.Metering.Communications.PSEM.PSEMResponse,System.String)">
            <summary>
            Constructor to create a SCSException.
            </summary>
            <param name="Command"></param>
            <param name="ProtocolResponse"></param>
            <param name="strItemName"></param>
            <example>
            <code>
            PSEMException e = new PSEMException(    
            	SCSCommands.SCS_D, 
            	PSEMProtocolResponse.NoResponse,    
            	0x2156, 
            	"Unit ID");
            </code>
            </example>
            Revision History
            MM/DD/YY who Version Issue# Description
            09/11/06 KRC 7.30.00 N/A	Created
        </member>
        <member name="P:Itron.Metering.Device.PSEMException.FieldName">
            <summary>This property gets or sets the field name of the item which 
            caused the exception.</summary>
            <returns>
            An string representing the field name.
            </returns>
            <example>
            <code>
            try{...} catch(PSEMException e) {
            	string strFieldName = e.FieldName;
            }
            </code>
            </example>
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/11/06 KRC 7.30.00 N/A	Created
            
        </member>
        <member name="P:Itron.Metering.Device.PSEMException.PSEMResponse">
            <summary>This property gets or sets the PSEM protocol response 
            where the exception occured.</summary>
            <returns>
            An PSEMResponse object representing the PSEM protocol 
            response.
            </returns>
            <example>
            <code>
            try{...}
            catch(PSEMException e)
            {
            	PSEMResponse objPSEMResponse = e.PSEMResponse;
            }
            </code>
            </example>
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/11/06 KRC 7.30.00 N/A	Created
            
        </member>
        <member name="P:Itron.Metering.Device.PSEMException.CommandType">
            <summary>This property gets or sets the PSEM command where the 
            exception occured.</summary>
            <returns>
            An SCSCommands object representing the PSEM command.
            </returns>
            <example>
            <code>
            try{...}
            catch(SCSException e)
            {
            	PSEMCommands objPSEMCommand = e.CommandType;
            }
            </code>
            </example>
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/11/06 KRC 7.30.00 N/A	Created
            
        </member>
        <member name="P:Itron.Metering.Device.PSEMException.Description">
            <summary>This property gets or sets a description 
            of the exception.</summary>
            <returns>
            A string representing the description.
            </returns>
            <example>
            <code>
            try{...}
            catch(PSEMException e)
            {
            	string strDescription = e.Description;
            }
            </code>
            </example>
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/11/06 KRC 7.30.00 N/A	Created
            
        </member>
        <member name="T:Itron.Metering.Device.ANSIQuantity">
            <summary>
            Class represents ANSI Quantities.  Contains all information needed to 
            	/retrieve meansurements associated with a given quantity.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TotalEnergy">
            <summary>
            Provides read access to the Energy Data
            </summary>
            <exception cref="T:System.Exception">Thrown if Read fails</exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TotalMaxDemand">
            <summary>
            Provides read access to the Max Demand data.
            </summary>
            <exception cref="T:System.Exception">Thrown if Read fails</exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TOUEnergy">
            <summary>
            Provides read access to the TOU Energy Data
            </summary>
            <exception cref="T:System.Exception">Thrown if Read fails</exception>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TOUMaxDemand">
            <summary>
            Provides read access to the TOU Max Demand data.
            </summary>
            <exception cref="T:System.Exception">Thrown if Read fails</exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.#ctor(System.String,Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.ANSIMeter)">
            <summary>
            ANSI Quantity Constructor - Base Class for all ANSI Quantities
            </summary>
            <param name="strDescription"> A user displayable description of the quantity instance</param>
            <param name="psem">PSEM Object</param>
            <param name="ANSIDevice">ANSIDevice Object</param>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TotalEnergyLID">
            <summary>
            This property provides access to the LID used to
            	retrieve Total Energy.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TotalMaxDemandLID">
            <summary>
            This property provies access to the LID used to 
            	retrieve Total Max Demand.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TOUBaseEnergyLID">
            <summary>
            This property provides access to the Base LID used to
            	retrieve TOU Energy.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIQuantity.TOUBaseMaxDemandLID">
            <summary>
            This property provies access to the Base LID used to 
            	retrieve TOU Max Demand.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTotalEnergy">
            <summary>
            Reads the Energy LID and set the value into the Energy Measurement
            </summary>
            <returns>bool - True if it succeeds; False if it fails</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTotalMaxDemand">
            <summary>
            Reads the Max Demand LID and set the value into the Demand Measurement
            </summary>
            <returns>bool - True if it succeeds; False if it fails</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTOOTotalMaxDemand">
            <summary>
            Reads the Max Demand LID and set the value into the Demand Measurement
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Exception on read</exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTOUEnergy">
            <summary>
            Reads the TOU Energy LIDs and set the value into the Measurement List
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Exception on read</exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTOUMaxDemand">
            <summary>
            Reads the Max Demand LID and set the value into the Demand Measurement
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Exception on read</exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.ReadTOOTOUMaxDemand">
            <summary>
            Reads the TOO for the TOU Demand LIDs and set the value into the Demand Measurement
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Exception on read</exception>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.BuildEnergyTOULIDArray(Itron.Metering.Device.LID)">
            <summary>
            Builds the TOU Energy LID Array to be retrieved
            </summary>
            <param name="BaseTOULID">Base LID to append Rates to</param>
            <returns>LID[] - Array of TOU LIDs to retrieve</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.BuildDemandTOULIDArray(Itron.Metering.Device.LID)">
            <summary>
            Builds the TOU Demand LID Array to be retrieved
            </summary>
            <param name="BaseTOULID">Base LID to append Rates to</param>
            <returns>LID[] - Array of TOU LIDs to retrieve</returns>
        </member>
        <member name="M:Itron.Metering.Device.ANSIQuantity.BuildTOOTOULIDArray(Itron.Metering.Device.LID)">
            <summary>
            Builds the TOU TOO LID Array to be retrieved
            </summary>
            <param name="BaseTOULID">Base LID to append Rates to</param>
            <returns>LID[] - Array of TOU LIDs to retrieve</returns>
        </member>
        <member name="F:Itron.Metering.Device.ANSIQuantity.m_uiTOURates">
            <summary>
            Number of TOU Rates supported by current device (size of TOU List)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIQuantity.m_ANSIDevice">
            <summary>
            ANSIDevice Object
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSIInstantaneousQuantity">
            <summary>
            This object represents an ANSI instantaneous quantity.  It contains
            all information to retrieve the quantity.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIInstantaneousQuantity.#ctor(Itron.Metering.Device.CANSIDevice)">
            <summary>
            Constructor
            </summary>                
            <param name="ANSIDevice">ANSIDevice Object</param>
        </member>
        <member name="M:Itron.Metering.Device.ANSIInstantaneousQuantity.ReadQuantity">
            <summary>
            Reads the LIDs and fills in the measurements for the instantaneous
            quantity.
            </summary>
            <exception cref="T:System.Exception">Thrown if Read fails</exception>\
            <remarks>
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.ANSIInstantaneousQuantity.PhaseALID">
            <summary>
            This property provides access to the LID used to retrieve
            the phase A instantaneous quantity.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIInstantaneousQuantity.PhaseBLID">
            <summary>
            This property provides access to the LID used to retrieve
            the phase B instantaneous quantity.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIInstantaneousQuantity.PhaseCLID">
            <summary>
            This property provides access to the LID used to retrieve
            the phase C instantaneous quantity.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIInstantaneousQuantity.AggregateLID">
            <summary>
            This property provides access to the LID used to retrieve
            the aggregate instantaneous quantity.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ANSIInstantaneousQuantity.m_ANSIDevice">
            <summary>
            ANSIDevice Object
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINELDisplayItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINELDisplayItem.#ctor(Itron.Metering.Device.LID,System.String,System.UInt16,System.Byte,System.Single)">
            <summary>
            Constructor for Display Item that can be called while reading Table 2048
            </summary>
            <param name="Lid">The LID for the given Display Item</param>
            <param name="strDisplayID">The Display ID for the given Display Item</param>
            <param name="usFormat">The Format Code for the given display item</param>
            <param name="byDim">The Dimension of the given display item</param>
            <param name="FWVersion">The Firmware Version of the meter we are talking to</param>
        </member>
        <member name="P:Itron.Metering.Device.SENTINELDisplayItem.Editable">
            <summary>
            Gets whether or not the display item can be edited.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048_Sentinel">
             <summary>
             This CTable2048_Sentinel class manages the header and config blocks of 2048.
             This class is specific to the Sentinel meter.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             07/13/05 mrj 7.13.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_Sentinel.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
             <summary>
             Constructor, create the config blocks specific to the Sentinel.
             </summary>
             <param name="psem">The protocol instance to use</param>
             <param name="FW_Rev">Firmware rev of this meter</param>
             <example><code>
             Communication comm = new Communication();
             comm.OpenPort("COM4:");
             CPSEM PSEM = new CPSEM(comm);
             PSEM.Logon("");
             PSEM.Security"("");
             CTable2048_Sentinel Table2048 = new CTable2048_Sentinel( PSEM ); 
             </code></example>
             
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             05/22/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="T:Itron.Metering.Device.SENTINEL_HistoryLogConfig">
            <summary>
            Class that represents the history log configuration data stored in table 2048
            for the SENTINEL meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINEL_HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for SENTINEL History Log Config class
            </summary>
            <param name="psem"></param>
            <param name="Offset"></param>
        </member>
        <member name="P:Itron.Metering.Device.SENTINEL_HistoryLogConfig.HistoryLogEventList">
            <summary>
            Returns the list of History Log event specfic to the SENTIENL
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SENTINEL_DisplayConfig">
            <summary>
            Class that represents the display configuration data stored in table 2048
            for the SENTINEL meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINEL_DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINEL_DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.SENTINEL_DisplayConfig.Read">
            <summary>
            Reads the sub table and builds the list of display items
            </summary>
            <returns>The response code for the read.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ANSIDisplayData">
            <summary>
            ANSIDisplayData - struct to hold Display info
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSIDisplayData.#ctor(System.UInt32,System.String,System.UInt16,System.Byte)">
            <summary>
            ANISDisplayData - Data read from the Display Configuration Table to be used to create the Display Item
            </summary>
            <param name="uiLID">Numerical value of the LID</param>
            <param name="strDispID">The Display ID in string format</param>
            <param name="usFormat">The format information packaged in meter format</param>
            <param name="byDim">The dimension information packaged in meter format</param>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayData.NumericLID">
            <summary>
            Returns the Numeric LID value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayData.DisplayID">
            <summary>
            Returns the Display ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayData.DisplayFormat">
            <summary>
            Returns the Display Format packaged in meter format
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ANSIDisplayData.DisplayDimension">
            <summary>
            Returns the Display Dimension Field packaged in Meter Format
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable71">
            <summary>
            Standard Table 71
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable71.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.String)">
            <summary>
            Table 71 - Actual Log Dimensions Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="strRevsion">Standard Revision</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable71.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.String)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="strRevision">The ANSI Standard revison</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable71.Read">
             <summary>
             Reads table 71 out of the meter.
             </summary>
             <returns>A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors)</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/15/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.StdTable71.ParseData">
            <summary>
            Get the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable71.GetTableLength(System.String)">
            <summary>
            Returns the size of Table 71
            </summary>
            <param name="revision"></param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.HistoryDateTimeFlag">
            <summary>
            Exposes the History Date Time Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.EventNumberFlag">
            <summary>
            Exposes the Event Number Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.HistorySequenceNumberFlag">
            <summary>
            Exposes the History Sequence Number Flag
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.HistoryDataLength">
            <summary>
            Exposes the History Data Length
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.EventDataLength">
            <summary>
            Exposes the Event Data Length
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/11/10 jrf 2.41.01		Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.NumberHistoryEntries">
            <summary>
            Exposes the History Data Length
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.NumberEventEntries">
            <summary>
            Exposes the Event Data Length
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/11/10 jrf 2.41.01		Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.SizeOfTable74">
            <summary>
            Property that will return the size of 74 based off the values in 71
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            09/18/06 KRC   7.35			Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.SizeOfTable76">
            <summary>
            Property that will return the size of 76 based off the values in 71
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/11/10 jrf 2.41.01		Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.SizeOfEventEntry">
            <summary>
            Property that will return the size of 76 based off the values in 71
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            05/11/10 jrf 2.41.01		Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.NumberStandardEvents">
            <summary>
            The number of bytes needed for a bitfield of std events supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable71.NumberManufacturerEvents">
            <summary>
            The number of bytes needed for a bitfield of mfg events supported
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable72">
            <summary>
            Standard Table 72
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable72.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable71)">
            <summary>
            Standard Table 72 - Event Identification table constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table71">Std table 71 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable72.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable71)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table71">Standard Table 71 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable72.Read">
            <summary>
            Reads Standard Table 72 out of the meter
            </summary>
            <returns>The result code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable72.StdEventsSupported">
            <summary>
            Each bit position in the byte array returned represents a std event.
            If the event is supported, the bit value is 1; otherwise, 0.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable72.MfgEventsSupported">
            <summary>
            Each bit position in the byte array returned represents an mfg event.
            If the event is supported, the bit value is 1; otherwise, 0.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable72.GetTableLength(Itron.Metering.Device.StdTable71)">
            <summary>
            Helper method to determine the length of the table.
            </summary>
            <param name="table71">std table 71</param>
            <returns>length in bytes of table 72</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable72.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable73">
            <summary>
            Standard Table 73
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable73.RESOURCE_FILE_PROJECT_STRINGS">
            <summary>The Resource Project strings</summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable72,Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Standard Table 73 - History Log Control table constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table72">Std table 72 object</param>
            <param name="table71">Std table 71 object</param>
            <param name="table00">Std table 00 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable72,Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table72">Std table 72 object</param>
            <param name="table71">Std table 71 objec</param>
            <param name="table00">Std table 00 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.Read">
            <summary>
            Reads Standard Table 73 out of the meter
            </summary>
            <returns>The PSEM result code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable73.HistoryLogEventList">
            <summary>
            Returns a list of supported events with their descriptions and whether 
            or not they are monitored.  Designed to provide the same information as 
            MFGTable2048.HistoryLogConfig.HistoryLogEventList
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable73.HistoryLogMonitoredEventList">
            <summary>
            Returns a list of monitored events with their descriptions.  Designed to provide
            the same type of information as MFGTable2048.HistoryLogConfig.HistoryLogEventList
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.GetTableLength(Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Helper method to determine the length of the table.
            </summary>
            <param name="table71">std table 71</param>
            <param name="table00">std table 00</param>
            <returns>length in bytes of table 73</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.AddSupportedEvents(System.Collections.Generic.List{Itron.Metering.Device.EventEntry}@,System.Byte[],System.Byte[],System.Boolean)">
            <summary>
            Produces a list of supported events from the information read from standard
            tables 72 and 73
            </summary>
            <param name="SupportedEvents">The list being constructed</param>
            <param name="StdOrMfgEventsSupported">
            Byte array, each bit of which represents a standard or manufacturers event.
            The value of the bit is 1 if the event is supported; 0, if not.
            </param>
            <param name="StdOrMfgEventsMonitored">
            Byte array, each bit of which represents a std or mfg event.
            The value of the bit is 1 if the event is monitored; 0, if not.
            </param>
            <param name="bIsMfgEvent">
            Flag to let us know to add 2048 to the event id.
            </param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.AddMonitoredEvents(System.Collections.Generic.List{Itron.Metering.Device.EventEntry}@,System.Byte[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="MonitoredEvents"></param>
            <param name="StdOrMfgEventsMonitored"></param>
            <param name="bIsMfgEvent"></param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable73.AddEventItem(Itron.Metering.Device.EventEntry)">
            <summary>
            Takes an event entry item, translates the event id into a text description 
            and adds it to the MFG2048EventItem list
            </summary>
            <param name="entry"></param>
        </member>
        <member name="F:Itron.Metering.Device.StdTable73.m_rmStrings">
            <summary>The Resource Manager</summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable74">
            <summary>
            History Log Class - Table 74
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable74.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable71,Itron.Metering.Device.ANSIEventDictionary)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table71">Table 71 object</param>	
            <param name="eventDictionary">Dictionary containing the event descriptions</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable121 Table121 = new CStdTable127( PSEM ); 
            </code>
            </example>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            08/16/06 KRC 7.35.00 N/A    Created
            05/14/13 MSC 2.80.29 TQ7640 Added Support for Comm Module Events
            05/22/13 MSC 2.80.31 TQ7640 Removed previous changes
            
        </member>
        <member name="M:Itron.Metering.Device.StdTable74.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable71,Itron.Metering.Device.ANSIEventDictionary,System.Int32)">
            <summary>
            Constructor that reads the table from a binary reader
            </summary>
            <param name="reader">The binary reader that contains the table contents.</param>
            <param name="table71">The Table 71 object for the device</param>
            <param name="eventDictionary">The event dictionary for the device</param>
            <param name="timeFormat">The time format used in the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable74.Read">
             <summary>
             Reads table 74 out of the meter.
             </summary>
             <returns>A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors)</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.StdTable74.Refresh">
            <summary>
            Provide a way to have us reread the Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable74.HistoryLogEntries">
             <summary>
             Access to the History Log Event Collection
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable74.NumberValidEntries">
             <summary>
             Access to the Number of valid Entries count
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable74.LastEntryElement">
             <summary>
             Access to the Last Entry Element
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable74.LastEntrySequenceNumber">
             <summary>
             Access to the Last Entry Sequence Number
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.StdTable74.NumberUnreadEntries">
             <summary>
             Access to the Number of Unread Entries
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.StdTable74.ParseFromReader">
            <summary>
            Parses the data from the binary reader. This should not be used when reading data from an actual meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable75">
            <summary>
            Standard Table 75
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable75.RESOURCE_FILE_PROJECT_STRINGS">
            <summary>The Resource Project strings</summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable72,Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Standard Table 75 - History Log Control table constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table72">Std table 72 object</param>
            <param name="table71">Std table 71 object</param>
            <param name="table00">Std table 00 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable72,Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="table72">Std table 72 object</param>
            <param name="table71">Std table 71 objec</param>
            <param name="table00">Std table 00 object</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.Read">
            <summary>
            Reads Standard Table 73 out of the meter
            </summary>
            <returns>The PSEM result code for the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable75.EventLogMonitoredEventList">
            <summary>
            Returns a list of monitored events with their descriptions.  Designed to provide
            the same type of information as MFGTable2048.HistoryLogConfig.HistoryLogEventList
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.GetTableLength(Itron.Metering.Device.StdTable71,Itron.Metering.Device.CTable00)">
            <summary>
            Helper method to determine the length of the table.
            </summary>
            <param name="table71">std table 71</param>
            <param name="table00">std table 00</param>
            <returns>length in bytes of table 73</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.ParseData">
            <summary>
            Gets the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.AddMonitoredEvents(System.Collections.Generic.List{Itron.Metering.Device.EventEntry}@,System.Byte[],System.Boolean)">
            <summary>
            
            </summary>
            <param name="MonitoredEvents"></param>
            <param name="StdOrMfgEventsMonitored"></param>
            <param name="bIsMfgEvent"></param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable75.AddEventItem(Itron.Metering.Device.EventEntry)">
            <summary>
            Takes an event entry item, translates the event id into a text description 
            and adds it to the MFG2048EventItem list
            </summary>
            <param name="entry"></param>
        </member>
        <member name="F:Itron.Metering.Device.StdTable75.m_rmStrings">
            <summary>The Resource Manager</summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable76">
            <summary>
            Event Log Class - Table 76
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.StdTable71,Itron.Metering.Device.ANSIEventDictionary)">
             <summary>
             Constructor
             </summary>
             <param name="psem">PSEM object for this current session</param>
             <param name="table71">Table 71 object</param>	
             <param name="eventDictionary">Dictionary containing the event descriptions</param>
             <example>
             <code>
             Communication comm = new Communication();
             comm.OpenPort("COM4:");
             CPSEM PSEM = new CPSEM(comm);
             PSEM.Logon("");
             PSEM.Security"("");
             CStdTable121 Table121 = new CStdTable127( PSEM ); 
             </code>
             </example>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             05/11/10 jrf 2.41.01 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.StdTable71,Itron.Metering.Device.ANSIEventDictionary,System.Int32)">
            <summary>
            Constructor that reads the table from a binary reader
            </summary>
            <param name="reader">The binary reader that contains the table contents.</param>
            <param name="table71">The Table 71 object for the device</param>
            <param name="eventDictionary">The event dictionary for the device</param>
            <param name="timeFormat">The time format used in the meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.Read">
            <summary>
            Reads table 76 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.Refresh">
            <summary>
            Provide a way to have us reread the Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable76.EventLogEntries">
            <summary>
            Access to the Event Log Event Collection
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable76.NumberValidEntries">
            <summary>
            Access to the Number of valid Entries count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable76.LastEntryElement">
            <summary>
            Access to the Last Entry Element
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable76.LastEntrySequenceNumber">
            <summary>
            Access to the Last Entry Sequence Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable76.NumberUnreadEntries">
            <summary>
            Access to the Number of Unread Entries
            </summary>
            Revision History	
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.ParseFromReader">
            <summary>
            Parses the data from the binary reader. This should not be used when reading data from an actual meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.ParseHeaderData">
            <summary>
            Parses the header data from the binary reader. 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable76.ParseEventData">
            <summary>
            Parses the event data from the binary reader.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryEntry">
             <summary>
             This class represents the individual History Entries
             </summary>
             Revision History
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             09/18/06 KRC 7.35.00        Created for AMI
            
        </member>
        <member name="M:Itron.Metering.Device.HistoryEntry.#ctor(System.Boolean,System.Boolean,System.Boolean,System.UInt32,Itron.Metering.Device.ANSIEventDictionary)">
            <summary>
            Constructor for the History Entry
            </summary>
            <param name="bHistDateTimeFlag"></param>
            <param name="bEventNbrFlag"></param>
            <param name="bHistSeqNbrFlag"></param>
            <param name="uiHistDataLength"></param>
            <param name="dicEventDescriptions"></param>
        </member>
        <member name="M:Itron.Metering.Device.HistoryEntry.TranslatedEventData">
            <summary>
            Adds information to the event description based on the value of the
            history argument.  Initially, only loss of potential will be supported.
            </summary>
            <returns>
            Additional description based on the event's history argument
            </returns>
            
        </member>
        <member name="M:Itron.Metering.Device.HistoryEntry.Equals(Itron.Metering.Device.HistoryEntry)">
            <summary>
            Determines whether the specified HistoryEntry is equal to the current entry.
            </summary>
            <param name="other">The HistoryEntry object to check.</param>
            <returns>True if the the entries are equal. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.HistoryEntry.TranslateEventCodeForMDM">
            <summary>
            Translates the meter's event code into the string that would be reported
            by the Collection Engine to the MDM
            </summary>
            <returns>A string representation of the event</returns>
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.HistoryTime">
             <summary>
             Date and Time of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.EventNumber">
             <summary>
             Event Number of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.EventDescription">
            <summary>
            Event Description of the History Event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.HistorySequenceNumber">
             <summary>
             Sequence number of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.UserID">
             <summary>
             User ID of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.HistoryCode">
             <summary>
             History Code of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.HistoryArgument">
             <summary>
             History Argument of the History Event
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.TableProcedureNumber">
             <summary>
             The event number that is logged.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/10/08 jrf 10.00.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.StdVsMfgFlag">
             <summary>
             Whether the event number is standard or manufacturer defined.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/10/08 jrf 10.00.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.HistoryEntry.Selector">
             <summary>
             The selector.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/10/08 jrf 10.00.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.HistoryEntry.InterceptEventDescription(System.String@)">
            <summary>
            Intercept event descriptions for events that change description based on sub-event ID
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.EventEntry">
            <summary>
            Class representing a single entry in standard table 73 - History Logger Control
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.EventEntry.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EventEntry.HistoryCode">
            <summary>
            Gets or sets the event id of the event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.EventEntry.Monitored">
            <summary>
            Gets or sets whether or not the event is configured in the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPDataFormats">
            <summary>
            Supported load profile formats.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.UINT8">
            <summary>
            The data format is UINT8 (byte)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.UINT16">
            <summary>
            The data format is UINT16 (ushort)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.UINT32">
            <summary>
            The data format is UINT32 (uint)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.INT8">
            <summary>
            The data format is INT8 (sbyte)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.INT16">
            <summary>
            The data format is INT16 (short)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.INT32">
            <summary>
            The data format is INT32 (int)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.NI_FMAT1">
            <summary>
            The data format is NI_FMAT1 (double)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.NI_FMAT2">
            <summary>
            The data format is NI_FMAT2 (float)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.UINT24">
            <summary>
            The data format is UINT24
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataFormats.INT24">
            <summary>
            The data format is INT24
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPDataSet">
            <summary>
            Tables used for each load profile data set.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataSet.Set1">
            <summary>
            Table for set 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataSet.Set2">
            <summary>
            Table for set 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataSet.Set3">
            <summary>
            Table for set 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPDataSet.Set4">
            <summary>
            Table for set 4
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedIntervalStatus">
            <summary>
            The statuses for the extended interval status.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedIntervalStatus.DSTChange">
            <summary>
            A DST change occurred during this interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedIntervalStatus.PowerFailure">
            <summary>
            A power failure occurred during this interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedIntervalStatus.ClockAdjustForward">
            <summary>
            The clock was adjusted forward during this interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedIntervalStatus.ClockAdjustBackward">
            <summary>
            The clock was adjusted backwards during this interval
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ExtendedChannelStatus">
            <summary>
            The statuses for the extended channel status.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.None">
            <summary>
            No channel status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.Overflow">
            <summary>
            An overflow occurred on this channel
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.Partial">
            <summary>
            The interval was too short.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.Long">
            <summary>
            The interval was too long.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.Skipped">
            <summary>
            The interval was skipped.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.Test">
            <summary>
            This was a test interval.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.ConfigurationChanged">
            <summary>
            The configuration changed during this interval
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.LPStopped">
            <summary>
            Load Profile stopped recording during this interval.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ExtendedChannelStatus.PowerRestoration">
            <summary>
            Power was restored during this interval
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable61">
            <summary>
            Table 61 - Actual Load Profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.TABLE_61_HEADER_SIZE">
            <summary>
            The size in bytes of the header information for table 61
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.TABLE_61_SET_INFO_SIZE">
            <summary>
            The size in bytes for the information stored for each set
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Table 61 - Actual Load Profile Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The Table 0 object for this meter.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The PSEM result from the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.GetSetLimits(Itron.Metering.Device.LPDataSet)">
            <summary>
            Gets the set limits for the selected data set.
            </summary>
            <param name="DataSet">The data set to get.</param>
            <returns>The set limits for the selected data set.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.MemoryLength">
            <summary>
            Gets the size of the Load Profile memory in bytes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.UsedFormats">
            <summary>
            Gets the formats that are being used by load profile.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeBlockEndRead">
            <summary>
            Gets whether or not block-end register reading information is included in a block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeBlockEndPulse">
            <summary>
            Gets whether or not block-end pulse data is included in a block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeExtendedIntervalStatus">
            <summary>
            Gets whether or not the extended interval status is included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeSimpleIntervalStatus">
            <summary>
            Gets whether or not the simple interval status is included in the data.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeClosureStatus">
            <summary>
            Gets whether or not the block end readings are cumulative.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.Set1ActualLimits">
            <summary>
            Gets the limits for Set 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.Set2ActualLimits">
            <summary>
            Gets the limits for Set 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.Set3ActualLimits">
            <summary>
            Gets the limits for Set 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.Set4ActualLimits">
            <summary>
            Gets the limits for Set 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,System.UInt16,System.UInt32)">
            <summary>
            Table 61 - Constructor that should be used by tables that inherit from this table
            </summary>
            <param name="psem">The PSEM Communications object</param>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="tableID">The table number used to read that data</param>
            <param name="tableSize">The size of the table</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.MapLPSetToTable(Itron.Metering.Device.LPDataSet)">
            <summary>
            Maps the Load Profile Data Set to the table number
            </summary>
            <param name="set">The data set to map</param>
            <returns>The table number for the specified data set</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeSet1ScalarDivisor">
            <summary>
            Gets whether or not scalars and devisors are included with set 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeSet2ScalarDivisor">
            <summary>
            Gets whether or not scalars and devisors are included with set 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeSet3ScalarDivisor">
            <summary>
            Gets whether or not scalars and devisors are included with set 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.IncludeSet4ScalarDivisor">
            <summary>
            Gets whether or not scalars and devisors are included with set 4
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.InhibitSet1Overflow">
            <summary>
            Gets whether or not set 1 is inhibiting on an overflow.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.InhibitSet2Overflow">
            <summary>
            Gets whether or not set 2 is inhibiting on an overflow.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.InhibitSet3Overflow">
            <summary>
            Gets whether or not set 3 is inhibiting on an overflow.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable61.InhibitSet4Overflow">
            <summary>
            Gets whether or not set 4 is inhibiting on an overflow.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable61.DetermineTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Returns the size of table 61 based on the values in table 0
            </summary>
            <param name="Table0">The Table 0 object.</param>
            <returns>The size of table 61.</returns>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_Table0">
            <summary>Table 0 object</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_uiMemoryLength">
            <summary>Memory Length</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_usFlags">
            <summary>Flags</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_UsedFormats">
            <summary>Data formats</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_Set1ActualLimits">
            <summary>Data Set 1 Limits</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_Set2ActualLimits">
            <summary>Data Set 2 Limits</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_Set3ActualLimits">
            <summary>Data Set 3 Limits</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable61.m_Set4ActualLimits">
            <summary>Data Set 4 Limits</summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable62">
            <summary>
            Standard Table 62 - Load Profile Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable14)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <param name="Table14">The Table 14 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.Read">
            <summary>
            Reads the table from the device.
            </summary>
            <returns>The result of the read operation.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.GetDataSelection(Itron.Metering.Device.LPDataSet)">
            <summary>
            Gets the data slection object for the specified data set.
            </summary>
            <param name="dataSet">The data set to get.</param>
            <returns>The data selection object.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable62.Set1DataSelection">
            <summary>
            Gets the data selection object for Set 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable62.Set2DataSelection">
            <summary>
            Gets the data selection object for Set 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable62.Set3DataSelection">
            <summary>
            Gets the data selection object for Set 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable62.Set4DataSelection">
            <summary>
            Gets the data selection object for Set 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable14,System.UInt16,System.UInt32)">
            <summary>
            Table 62 - Constructor that should be used by tables that inherit from this table
            </summary>
            <param name="psem">The PSEM Communications object</param>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="table61">The Load Profile Actual Limiting table for the current device</param>
            <param name="table14">The Table 14 object for the current device</param>
            <param name="tableID">The table number used to read that data</param>
            <param name="tableSize">The size of the table</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.GetChannelLIDs(Itron.Metering.Device.LPDataSet)">
            <summary>
            Determines the source LID for each of the channels.
            </summary>
            <returns>The list of channel names.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable62.ParseData">
            <summary>
            Parses the data that was just read.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable62.m_Table14">
            <summary>
            Table 14 object for the current device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable62.m_UsesTwoByteFormat">
            <summary>
            Whether or not the table uses a two byte data format
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable63">
            <summary>
            Table 63 - Load Profile Status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable63.LP_SET_STATUS_RECORD_SIZE">
            <summary>
            The size of a Load Profile Set Status Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Table 63 - Load Profile Status Constructor
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The table 0 object.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.GetSetStatusRecord(Itron.Metering.Device.LPDataSet)">
            <summary>
            Gets the status record for the specified set.
            </summary>
            <param name="dataSet">The set to get the status for.</param>
            <returns>The requested sets status record.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable63.Set1StatusRecord">
            <summary>
            Gets the status record for set 1
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable63.Set2StatusRecord">
            <summary>
            Gets the status record for set 2
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable63.Set3StatusRecord">
            <summary>
            Gets the status record for set 3
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable63.Set4StatusRecord">
            <summary>
            Gets the status record for set 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,System.UInt16,System.UInt32)">
            <summary>
            Constructor that should only be used by classes that inherit from this table
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="tableID">The Table ID for the table to read</param>
            <param name="tableSize">The size of the table to read</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.MapLPSetToTable(Itron.Metering.Device.LPDataSet)">
            <summary>
            Maps the Load Profile Data Set to the table number
            </summary>
            <param name="set">The data set to map</param>
            <returns>The table number for the specified data set</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable63.DetermineTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of table 63
            </summary>
            <param name="Table0">The table 0 object.</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable64">
            <summary>
            Standard Table 64 - Load Profile Data Set 1
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable64.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable64.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable64.ReadBlock(System.UInt16,System.UInt16,Itron.Metering.Device.LPBlockDataRecord@)">
            <summary>
            Reads a single block from the meter.
            </summary>
            <param name="blockToRead">The block that should be read.</param>
            <param name="validIntervals">The number of valid intervals in the block</param>
            <param name="blockData">The block read from the meter.</param>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable64.DataSet">
            <summary>
            Gets the data set that applies to this table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable64.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt32,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62,Itron.Metering.Device.LPDataSet)">
            <summary>
            Protected constructor that will only be used by the Load Profile data sets that
            inherit from this class.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="usTableID">The table ID to use for reading.</param>
            <param name="size">The size of the table.</param>
            <param name="table0">The table 0 object for the current device.</param>
            <param name="table61">The table 61 object for the current device.</param>
            <param name="table62">The table 62 object for the current device.</param>
            <param name="dataSet">The data set that applies to this table</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable64.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="F:Itron.Metering.Device.StdTable64.m_Table0">
            <summary>
            Table 0 object for the current device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable64.m_Table61">
            <summary>
            Table 61 object for the current device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable64.m_Table62">
            <summary>
            Table 62 object for the current device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable64.m_DataSet">
            <summary>
            The Data set for the current table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable65">
            <summary>
            Standard Table 65 - Load Profile Data Set 2
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable65.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable65.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <param name="Table62"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable66">
            <summary>
            Standard Table 66 - Load Profile Data Set 3
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable66.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable66.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <param name="Table62"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable67">
            <summary>
            Standard Table 67 - Load Profile Data Set 4
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable67.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Public Constructor to be used when creating this table.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable67.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="Table0">The Table 0 object for the current device.</param>
            <param name="Table61">The Table 61 object for the current device.</param>
            <param name="Table62"> The Table 62 object for the current device</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.LPSetActualLimits">
            <summary>
            Represent the actual limits of a Load Profile set.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPSetActualLimits.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPSetActualLimits.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data.</param>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.NumberOfBlocks">
            <summary>
            Gets the maximum number of blocks in the set.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.IntervalsPerBlock">
            <summary>
            Gets the number of intervals per block in the set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.NumberOfChannels">
            <summary>
            Gets the number of channels in the set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.IntervalLength">
            <summary>
            Gets the interval length of the set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.InhibitOverflow">
            <summary>
            Gets or sets whether or not the set can inhibit overflow.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetActualLimits.IncludeScalarDivisor">
            <summary>
            Gets or sets whether or not the scalar and divisor is included.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetDataSelection">
            <summary>
            Load Profile Data Selection used in table 62
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPSetDataSelection.#ctor(System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="numberOfChannels">The number of channels in the set.</param>
            <param name="includeScalarDivisor">Whether or not the set includes the scalar and divisor information</param>
            <param name="usesTwoByteFormat">Whether or not that table uses a two byte data format</param>
        </member>
        <member name="M:Itron.Metering.Device.LPSetDataSelection.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="reader">The binary reader that contains the set's data.</param>
        </member>
        <member name="M:Itron.Metering.Device.LPSetDataSelection.Size(System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Determines the size of the data selection data for a single set.
            </summary>
            <param name="numberOfChannels">The number of channels for the set.</param>
            <param name="includeScalarDivisor">Whether or not scalar and divisor information is included.</param>
            <param name="usesTwoByteFormat">Whether or not the table uses a two byte data format</param>
            <returns>The size of the set's selection data.</returns>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.HasChannelEndReading">
            <summary>
            Gets whether or not each channel in the set has an end reading.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.SourceSelections">
            <summary>
            Gets the data source index for each channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.SourceLIDs">
            <summary>
            Gets the list of LIDs that apply to the sources for each channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.EndReadingSourceSelections">
            <summary>
            Gets the end reading data source index for each channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.DataFormat">
            <summary>
            Gets the data format used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.Scalars">
            <summary>
            Gets the scalar values for each channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetDataSelection.Divisors">
            <summary>
            Gets the divisor values for each channel
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetStatusRecord">
            <summary>
            Contains data that describes the current status of a Load Profile data set
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetStatusRecord.BlockOrder">
            <summary>
            Specifies the block order in memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.BlockOrder.Ascending">
            <summary>
            The blocks are in ascending order in memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.BlockOrder.Descending">
            <summary>
            The blocks are in descending order in memory
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetStatusRecord.IntervalOrder">
            <summary>
            Specifies the interval order in a block
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.IntervalOrder.Ascending">
            <summary>
            The intervals are in ascending order in a block
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.IntervalOrder.Descending">
            <summary>
            The intervals are in descending order in a block
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetStatusRecord.ListType">
            <summary>
            The list type for the data stored in memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.ListType.FIFO">
            <summary>
            The blocks are stored in first in first out order
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.ListType.Circular">
            <summary>
            The blocks are stored circularly
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPSetStatusRecord.Mode">
            <summary>
            The mode for the current data set
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.Mode.Normal">
            <summary>
            The meter is in Normal mode
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPSetStatusRecord.Mode.Test">
            <summary>
            The meter is in Test mode
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPSetStatusRecord.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPSetStatusRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parse the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data from the device.</param>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.DataBlockOrder">
            <summary>
            Gets the block order for the data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.HasOverflown">
            <summary>
            Gets whether or not the data set has overflown
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.DataListType">
            <summary>
            Gets the list type for the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.BlockInhibitOverflow">
            <summary>
            Gets whether or not the device is capable of inhibiting overflow for the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.DataIntervalOrder">
            <summary>
            Gets the interval order for the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.IsActive">
            <summary>
            Gets whether or not the current data set is collecting data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.DataMode">
            <summary>
            Gets the mode of the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.NumberOfValidBlocks">
            <summary>
            Gets the number of valid blocks
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.LastBlockElement">
            <summary>
            Gets the array element of the newest valid data block in the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.LastBlockSequenceNumber">
            <summary>
            Gets the sequence number of the last element in the data set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.NumberOfUnreadBlocks">
            <summary>
            Gets the number of unread blocks in the data set.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPSetStatusRecord.NumberOfValidIntervals">
            <summary>
            Gets the number of valid intervals in the last block
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPBlockDataRecord">
            <summary>
            The load profile data block object.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus">
            <summary>
            Block closure statuses.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.BlockNotClosed">
            <summary>
            The block has not been closed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.NormalClosure">
            <summary>
            The block closed normally.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.Unspecified">
            <summary>
            The block was closed for an unspecified reason.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.OverflowDetected">
            <summary>
            The block was closed due to an overflow.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.TestMode">
            <summary>
            The block was closed due to test mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.PowerFailure">
            <summary>
            The block was closed due to a power failure.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.ClockAdjustForward">
            <summary>
            The block was closed due to a forward clock adjustment
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.ClockAdjustBackward">
            <summary>
            The block was closed due to a backwards clock adjustment
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.RecorderStopped">
            <summary>
            The block was closed because it is no longer recording.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.LPBlockDataRecord.ClosureStatus.ConfigurationChanged">
            <summary>
            The block was closed because the configuration changed.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPBlockDataRecord.#ctor(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62,System.UInt16,Itron.Metering.Device.LPDataSet)">
            <summary>
            Constructor
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
            <param name="validIntervals">The number of valid intervals in the block.</param>
            <param name="DataSet">The data set the block belongs to.</param>
        </member>
        <member name="M:Itron.Metering.Device.LPBlockDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the data from the specified binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data to parse.</param>
        </member>
        <member name="M:Itron.Metering.Device.LPBlockDataRecord.Size(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable61,Itron.Metering.Device.StdTable62,Itron.Metering.Device.LPDataSet)">
            <summary>
            Gets the size of a Data block.
            </summary>
            <param name="Table0">The table 0 object for the current device.</param>
            <param name="Table61">The table 61 object for the current device.</param>
            <param name="Table62">The table 62 object for the current device.</param>
            <param name="DataSet">The data that the block is in.</param>
            <returns>The size of the data block</returns>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.BlockEndTime">
            <summary>
            Gets the end time of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.BlockEndReadings">
            <summary>
            Gets the end readings for each channel of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.BlockEndPulses">
            <summary>
            Gets the end pulse readings for each channel of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.ClosureStatuses">
            <summary>
            Gets the closure status for each channel of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.NumberOfValidIntervals">
            <summary>
            Gets the number of valid intervals for each channel of the block
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.SimpleIntervalStatuses">
            <summary>
            Gets the simple interval statuses.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPBlockDataRecord.Intervals">
            <summary>
            Gets the intervals stored in the block
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.LPIntervalDataRecord">
            <summary>
            Interval object for load profile.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.LPIntervalDataRecord.#ctor(System.Byte,System.Boolean,Itron.Metering.Device.LPDataFormats)">
            <summary>
            Constructor.
            </summary>
            <param name="NumberOfChannels">The number of channels used.</param>
            <param name="IncludeExtendedStatus">Wether or nor the Extended Interval status is included.</param>
            <param name="DataFormat">The data format used for the interval data.</param>
        </member>
        <member name="M:Itron.Metering.Device.LPIntervalDataRecord.Parse(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Parses the interval data from the binary reader.
            </summary>
            <param name="Reader">The binary reader that contains the data.</param>
        </member>
        <member name="M:Itron.Metering.Device.LPIntervalDataRecord.Size(System.Byte,System.Boolean,Itron.Metering.Device.LPDataFormats)">
            <summary>
            Gets the size of a Load Profile interval.
            </summary>
            <param name="NumberOfChannels">The number of channels in the interval.</param>
            <param name="IncludeExtendedStatus">Whether or not the Extended interval status is included.</param>
            <param name="DataFormat">The data format used for the interval data.</param>
            <returns>The size of an interval.</returns>
        </member>
        <member name="M:Itron.Metering.Device.LPIntervalDataRecord.DataSize(Itron.Metering.Device.LPDataFormats)">
            <summary>
            Gets the size of an individual piece of data.
            </summary>
            <param name="DataFormat">The data format used.</param>
            <returns>The size of the data in bytes.</returns>
        </member>
        <member name="P:Itron.Metering.Device.LPIntervalDataRecord.IntervalStatus">
            <summary>
            Gets the interval statuses.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPIntervalDataRecord.ChannelStatuses">
            <summary>
            Gets the channel statuses for each channel
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.LPIntervalDataRecord.IntervalData">
            <summary>
            Gets the interval data for each channel
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable91">
            <summary>
            Table 91 - Actual Telephone Limiting 
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable91.BitRateTypes">
            <summary>
            Enumeration for the options for changing the 
            bit rate
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable91.BitRateTypes.NotControlled">
            <summary>
            The bit rate can not be controlled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable91.BitRateTypes.GloballyControlled">
            <summary>
            The bit rate is controlled globally. The setting for this
            is stored in Standard Table 92
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable91.BitRateTypes.SeperatelyControlled">
            <summary>
            The bit rate can be controlled seperately. These settings are
            stored in Standard Table 93
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable91.BitRateTypes.Reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable91.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable91.Read">
            <summary>
            Reads the table from the meter and populates the data
            </summary>
            <returns>The PSEM response for the read of the table.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.NumberOfPhoneNumbers">
            <summary>
            Gets the number of originating phone numbers programmed
            into the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.PhoneNumberLength">
            <summary>
            Gets the length, in number of octets, of the phone numbers stored
            in Table 93
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.PrefixLength">
            <summary>
            Gets the length of the Prefix, in number of octets
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.BitRate">
            <summary>
            Gets the Bit Rate settings for the ANSI Modem
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.NumberOfOriginateWindows">
            <summary>
            Gets the number of Originate Windows for the modem configuration
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.AnswerCall">
            <summary>
            Gets whether or not the device is set up to answer phone calls
            through the modem.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.NoLockoutParameters">
            <summary>
            Returns true if the meter does not support lockout parameters, and false
            if the meter does support lockout parameters
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.NumberOfAnswerWindows">
            <summary>
            Gets the number of answer call windows stored in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.NumberOfCallerIDs">
            <summary>
            Gets the number of caller IDs stored in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable91.CallerIDLength">
            <summary>
            Gets the length in bytes of a caller ID
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable93">
            <summary>
            Standard Table 93 - Originate Communication Parameters
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable93.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable91)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM object for the current session.</param>
            <param name="table00">The Table 0 object for the current device.</param>
            <param name="table91">The Table 91 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable93.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The PSEM Reponse as a result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable93.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The PSEM response code for the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable93.WindowRcdSize(Itron.Metering.Device.CTable00)">
            <summary>
            Determines the size of a Window record field
            </summary>
            <param name="table00">The table 0 object for the current device.</param>
            <returns>The size in bytes of the Window record.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable93.Prefix">
            <summary>
            Gets or sets the Phone Number Prefix
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable93.PhoneNumbers">
            <summary>
            Gets the list of phone numbers from the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable93.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable91)">
            <summary>
            Determines the size of table 93
            </summary>
            <param name="table00">Standard Table 0 object for the current device.</param>
            <param name="table91">Standard Table 91 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable95">
            <summary>
            Standard Table 95 - Answer Communication Parameters
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable95.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable91)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="table00">The table 0 object for the current device.</param>
            <param name="table91">the table 91 object for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable95.Read">
            <summary>
            Reads the table from the meter and populates the data fields.
            </summary>
            <returns>The PSEM response code for the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.StdTable95.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The PSEM response code for the write request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable95.InsideWindowRings">
            <summary>
            Gets the number of rings to wait before answering when inside the call
            window.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable95.OutsideWindowRings">
            <summary>
            Gets the number of rings to wait before answering when outside of the 
            call window. This property is only valid if the number of call windows 
            is greater than 0.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable95.DetermineTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable91)">
            <summary>
            Calculates the size in bytes of standard table 95
            </summary>
            <param name="table00">The table 0 object for the current device.</param>
            <param name="table91">The table 91 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.CTable00">
            <summary>
            The CTable00 class handles the reading of ANSI Table 00.  The reading of
            this table in the meter will be implicit. (read-only)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable00.TABLE_00_HEADER_LENGTH">
            <summary>
            The length of the Table 0 header.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, initializes the table
            </summary>
            <param name="psem">PSEM object for the current session</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable00 Table0 = new CTable00( PSEM ); 
            </code>
            </example> 
        </member>
        <member name="M:Itron.Metering.Device.CTable00.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor to be used by Comm Module table 0 class
            </summary>
            <param name="psem">The PSEM object</param>
            <param name="TableID">The table ID</param>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt32)">
            <summary>
            Constructor used by EDL File
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
            <param name="length">The length of the table</param>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt32)">
            <summary>
            Constructor used by the Comm Module table 0 class for EDL files
            </summary>
            <param name="reader">The binary reader to use</param>
            <param name="TableID">The table ID</param>
            <param name="length">The length of the table</param>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.FullRead">
            <summary>
            Calls the base class method to perform a full read.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.Read">
            <summary>
            Reads table 00 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.IsTableUsed(System.UInt16)">
            <summary>
            Determines whether or not the specified table is supported by the meter.
            </summary>
            <param name="TableID">The table number to check.</param>
            <returns>True if the table is supported. False if it is not supported</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.IsTableWriteable(System.UInt16)">
            <summary>
            Determines whether or not the specified table supports write access
            </summary>
            <param name="TableID">The table number to check.</param>
            <returns>True if the table supports write access. False if it does not support write access</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.IsProcedureUsed(System.UInt16)">
            <summary>
            Determines whether or not the procedure table is supported by the meter.
            </summary>
            <param name="procedureID">The procedure number to check.</param>
            <returns>True if the procedure is supported. False if it is not supported</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.DetermineLTIMESize(System.Int32)">
            <summary>
            Determines the size of an LTIME
            </summary>
            <param name="timeFormat">The time format used in the meter.</param>
            <returns>The size of the LTIME in bytes</returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DeviceClass">
            <summary>
            Retrieves the Device Class of the meter (Used to be called Manufacturer)
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.StdVersion">
            <summary>
            Retrieves the version of the standard tables in use in the meter
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DimStdTablesUsed">
            <summary>
            The number of bytes needed for a bitfield of the standard tables
            supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DimMfgTablesUsed">
            <summary>
            The number of bytes needed for a bitfield of the manufacturers tables
            supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DimStdProceduresUsed">
            <summary>
            The number of bytes needed for a bitfield of the standard 
            procedures supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DimMfgProceduresUsed">
            <summary>
            The number of bytes needed for a bitfield of the manufacturers 
            procedures supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.DimMfgStatusesUsed">
            <summary>
            The number of bytes needed for a bitfield of the manufacturers 
            statuses supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.NumberPending">
            <summary>
            The number of pending tables supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.LTIMESize">
            <summary>
            Gets the size of an LTIME_DATE depending on the time format specified by the
            meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.TIMESize">
            <summary>
            Gets the size of a TIME type depending on the time format specified by the
            meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.STIMESize">
            <summary>
            Gets the size of an STIME type depending on the time format specified
            in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.TimeFormat">
            <summary>
            Gets the Time Format for this meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.StdProceduresUsed">
            <summary>
            Produces a boolean array - the index corresponds to the procedure id
            and the value tells whether or not it is supported
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable00.MfgProceduresUsed">
            <summary>
            Produces a boolean array - the index corresponds to the procedure id
            and the value tells whether or not it is supported
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.ParseHeaderInfo">
            <summary>
            Parses the header information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable00.ParseTableInfo">
            <summary>
            Parses the table information
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable01">
            <summary>
            The CTable1 class handles the reading of ANSI Table 1. The reading of 
            this table in the meter will be implicit.  (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable01.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.String)">
            <summary>
            Private constructor
            </summary>
            <param name="psem">PSEM object for the current session</param>
            <param name="revision">Revision of the standard in use in the meter</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable00 Table0 = new CTable00( PSEM );
            CTable01 Table1 = new CTable01( PSEM, Table0.StdVersion ); 
            </code>
            </example> 
        </member>
        <member name="M:Itron.Metering.Device.CTable01.Read">
            <summary>
            Reads table 01 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable01.GetTableLength(System.String)">
            <summary>
            Returns the size of Table 01 
            </summary>
            <param name="revision"></param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.Manufacturer">
            <summary>
            Gets the Manufacturer of the meter
            </summary>		
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable00 Table0 = new CTable00( PSEM );
            CTable01 Table1 = new CTable01( PSEM, Table0.StdVersion );
            string strManufacturer = Table1.Manufacturer;
            </code>
            </example> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.Model">
            <summary>
            Gets the model of the meter
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable00 Table0 = new CTable00( PSEM );
            CTable01 Table1 = new CTable01( PSEM, Table0.StdVersion );
            string strModel = Table1.Model;
            </code>
            </example>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.FW_Rev">
            <summary>
            Gets the firmware Revision of the meter
            </summary>
            <example>
            <code>
            </code>
            </example>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.FWVersionOnly">
            <summary>
            Gets the firmware version only
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.FWRevisionOnly">
            <summary>
            Gets the firmware revision only
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.HW_Rev">
            <summary>
            Gets the hardware Revision of the meter
            </summary>
            <example>
            <code>
            </code>
            </example>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.HWVersionOnly">
            <summary>
            Gets the Version of the hardware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.HWRevisionOnly">
            <summary>
            Gets the Revision of the hardware
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable01.SerialNumber">
            <summary>
            Gets the serial number of the meter
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable00 Table0 = new CTable00( PSEM );
            CTable01 Table1 = new CTable01( PSEM, Table0.StdVersion );
            string strSerialNumber = Table1.SerialNumber;
            </code>
            </example>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="T:Itron.Metering.Device.CTable03">
            <summary>
            The CTable3 class handles the reading of ANIS Table 03. The reading of
            this table in the meter will be implicit. (read-only)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDStdStatus1">
            <summary>
            Standard status bit field 1 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMFGStatus1">
            <summary>
            Manufacturing status bit field 1 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMFGStatus2">
            <summary>
            Manufacturing status bit field 2 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMFGStatus3">
            <summary>
            Manufacturing status bit field 3 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMFGStatus4">
            <summary>
            Manufacturing status bit field 4 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMFGStatus5">
            <summary>
            Manufacturing status bit field 5 values.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable03.EDMode">
            <summary>
            Mode bit field values.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table00">ANSI Table 0.</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable03 Table3 = new CTable03( PSEM ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CTable00)">
            <summary>
            Constructor used when parsing an EDL file
            </summary>
            <param name="BinaryReader">Binary Reader for this current session.</param>
            <param name="table00">ANSI Table 0.</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable03 Table3 = new CTable03( PSEM ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.Read">
            <summary>
            Reads table 03 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.ErrorsList">
            <summary>
            Gets the errors list.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.NonFatalErrorsList">
            <summary>
            Gets the list of non-fatal errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.FatalErrorsList">
            <summary>
            Gets the list of fatal errors
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.FatalErrorsSet">
            <summary>
            Gets an enumeration indicating fatal errors.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.InTestMode">
            <summary>
            Gets whether the meter is in test mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.IsFatalErrorRecoveryEnabled">
            <summary>
            Gets whether or not Fatal Error Recovery is enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.IsInFatalErrorRecoveryMode">
            <summary>
            Gets whether or not the meter is in Fatal Error Recovery Mode.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable03.IsFullCoreDumpAvailable">
            <summary>
            Gets whether or not the meter currently has a Full Core Dump available.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.InitMemberVariables(Itron.Metering.Device.CTable00)">
            <summary>
            Initalize all memeber variables.
            </summary>
            <param name="table00">ANSI Table 0.</param>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.GetErrors">
            <summary>
            Retrieves the fatal and non-fatal errors that were read from the table.
            </summary>
            <remarks>All non-fatal and fatal errros will be retrieved except
            fatal error 5.  It's status is not listed in this table.</remarks>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable03.GetTableLength(Itron.Metering.Device.CTable00)">
            <summary>
            Returns the size of Table 03 
            </summary>
            <param name="table00">ANSI table 0.</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.CTable04">
            <summary>
            The CTable04 class handles the reading of ANSI Table 04.  The reading of
            this table in the meter will be implicit. (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable04.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Byte,System.Byte,System.Byte)">
            <summary>
            Constructor, initializes the table
            </summary>
            <param name="psem">PSEM object for the current session</param>
            <param name="bytDimMfgTblsUsed"></param>
            <param name="bytDimStdTblsUsed"></param>
            <param name="bytNumPending"></param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable04 Table04 = new CTable04( PSEM ); 
            </code>
            </example> 
        </member>
        <member name="M:Itron.Metering.Device.CTable04.Read">
            <summary>
            Reads table 04 out of the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
            
        </member>
        <member name="P:Itron.Metering.Device.CTable04.LastActivationDate">
            <summary>
            Gets the date of the last pending table activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable04.NumberPendingTables">
            <summary>
            Gets the number of tables currently pending activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable04.NumberPendingSupported">
            <summary>
            Maximum number of pending tables supported in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable04.PendingTableEntries">
            <summary>
            Returns a collection object representing the raw table 04 activation record data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable04.GetTableLength(System.Byte,System.Byte,System.Byte)">
            <summary>
            Determines the size of Table 04 based on data read from Table 00
            </summary>
            <param name="bytDimStdTblsUsed">Number of bytes needed for a bit field
            designating all the supported standard tables</param>
            <param name="bytDimMfgTblsUsed">Number of bytes needed for a bit field
            designating all the supported manufacturers tables</param>
            <param name="bytNumPendingSupported">Number of pending tables supported</param>
            <returns>Length of table 04</returns>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_dtLastActivationDate">
            <summary>
            Date and time of the last pending table activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_bytNumberPendingActivation">
            <summary>
            Number of activation events that have yet to be activated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_EntryActivationRcds">
            <summary>
            List of pending tables and associated activation triggers
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_abytSetStdPending">
            <summary>
            Set which indicates which of the standard tables are capable of being
            written with a pending status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_abytSetMfgPending">
            <summary>
            Set which indicates which of the manufacturers tables are capable of
            being written with a pending status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable04.m_bytNumPendingSupported">
            <summary>
            Number of pending status sets supported
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable05">
            <summary>
            The CTable5 class handles the reading of ANIS Table 05. The reading of
            this table in the meter will be implicit. (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable05.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable05 Table5 = new CTable05( PSEM ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CTable05.Read">
            <summary>
            Reads table 05 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable05.MeterID">
            <summary>
            Gets the Meter ID of the meter
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security("");
            CTable05 Table5 = new CTable05( PSEM );
            
            string strMeterID = Table5.MeterID;
            </code>
            </example>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="T:Itron.Metering.Device.CTable06">
            <summary>
            The CTable06 class handles the reading of ANIS Table 06. The reading of
            this table in the meter will be implicit. (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable06.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this session.</param>
            <param name="revision">The revision number for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.CTable06.Read">
            <summary>
            Reads table 00 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CTable06.ConfigureMiscID(System.String)">
            <summary>
            This method will reconfigure the misc ID to a new value. Original intention is to 
            update the value so CE will flag change and update the meter's configuration.
            </summary>
            <param name="miscID">the misc id to set</param>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.OwnerName">
            <summary>
            Gets the Owner Name from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.UtilityDiv">
            <summary>
            Gets the Utility Division from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.ServicePointID">
            <summary>
            Gets the Service Point ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.ElectronicAddress">
            <summary>
            Gets the Electronic Address from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.MeterID">
            <summary>
            Gets the Meter ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.UtilitySerialNumber">
            <summary>
            Gets the Utility Serial Number from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.CustomerID">
            <summary>
            Gets the Customer ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.TarriffID">
            <summary>
            Gets the Tarrif ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.SWVendor">
            <summary>
            Gets the Software Vendor ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.SWVersion">
            <summary>
            Gets the Software Version number from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.ProgrammerName">
            <summary>
            Gets the Programmer Name from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.MiscID">
            <summary>
            Gets the Misc ID from Table 06
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable06.EDLURI">
            <summary>
            Gets the EDL URI from Table 06
            </summary>
            <exception cref="T:System.NotSupportedException">
            Thrown if the meter does not support the EDL URI field.
            </exception>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM error occurs during communications.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.CTable06.GetTableLength(System.String)">
            <summary>
            Determines the length of Table 06 based on the revision number of the device
            </summary>
            <param name="revision">The revision number for the device.</param>
            <returns>The size of the table in number of bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.CTable07">
            <summary>
            The CTable07 class handles the writing of procedures to ANSI table 07.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable07.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
             <summary>
             Constructor
             </summary>
             <param name="psem">PSEM object for this current session</param>
             <example>
             <code>
             Communication comm = new Communication();
             comm.OpenPort("COM4:");
             CPSEM PSEM = new CPSEM(comm);
             PSEM.Logon("");
             PSEM.Security"("");
             CTable07 Table7 = new CTable07( PSEM ); 
             </code>
             </example>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/02/05 mrj 7.13.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable07.Read">
             <summary>
             Overrides the base class read method and throws an exception
             </summary>
             <returns></returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable07.Read(System.Int32,System.UInt16)">
             <summary>
             Overrides the base class read method and throws an exception
             </summary>
             <param name="Offset">byte offset to start reading from</param>
             <param name="Count">number bytes to read</param>
             <returns></returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable07.Write">
            <summary>
            Overrides the base class write method to handle writing a procedure
            to table 07.
            </summary>		
            <returns>protocol response</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable07.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Table 7 does not
            allow offset writes.
            </summary>		
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable07.SequenceNumber">
             <summary>
             Property for the sequence number
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00		Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable07.Procedure">
             <summary>
             Property for the procedure
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00		Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable07.ParameterData">
             <summary>
             Property for the procedure
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00		Created
            
        </member>
        <member name="T:Itron.Metering.Device.CTable08">
            <summary>
            The CTable08 class handles the reading of procedure responses from ANSI 
            table 08.  This table should be created once for every procedure that is
            to be read.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable08.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
             <summary>
             Constructor
             </summary>
             <param name="psem">PSEM object for this current session</param>
             <example>
             <code>
             Communication comm = new Communication();
             comm.OpenPort("COM4:");
             CPSEM PSEM = new CPSEM(comm);
             PSEM.Logon("");
             PSEM.Security"("");
             CTable07 Table7 = new CTable07( PSEM ); 
             CTable08 Table8 = new CTable08( PSEM ); 
             </code>
             </example>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/02/05 mrj 7.13.00 N/A    Created
             10/07/05 mrj 7.20.20 1883	Added support for the result data
            
        </member>
        <member name="M:Itron.Metering.Device.CTable08.Read">
             <summary>
             This method reads the response in table 08 for a procedure
             that was executed by writing to the table 07.  It overrides the
             base class read method.
             </summary>
             <returns>
             A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors).  It will return OK if the read is a
             success and we get a response.  The client will need to interpret
             the response code and response data.
             </returns>	
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00 N/A    Created
             05/09/11 jrf 2.50.43        Adding debug info when table 8 read response does not return
                                         enough table data.
            
        </member>
        <member name="M:Itron.Metering.Device.CTable08.Read(System.Int32,System.UInt16)">
             <summary>
             Overrides the base class read method and throws an exception.
             </summary>
             <param name="Offset">byte offset to start reading from</param>
             <param name="Count">number bytes to read</param>
             <returns></returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable08.Write">
            <summary>
            Overrides the base class and returns an exception.  Table 8 does not
            allow writes.
            </summary>		
            <returns>protocol response</returns>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CTable08.Write(System.UInt16,System.UInt16)">
            <summary>
            Overrides the base class and returns an exception.  Table 8 does not
            allow writes.
            </summary>		
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            07/04/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable08.Sequencenumber">
             <summary>
             Gets the sequence number
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             08/02/05 mrj 7.13.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable08.ResultCode">
             <summary>
             Gets the result code from table 08 read.  This is only valid after a write
             to table 07 and a read from table 08 has been completed.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------------
             08/02/05 mrj 7.13.00 N/A    Created
             10/07/05 mrj 7.20.20 1883   The result code was not being returned
            
        </member>
        <member name="P:Itron.Metering.Device.CTable08.Procedure">
             <summary>
             Property for the procedure
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00		Created
            
        </member>
        <member name="P:Itron.Metering.Device.CTable08.ResultData">
             <summary>
             Property for the result data
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             07/04/06 mrj 7.30.00		Created
            
        </member>
        <member name="T:Itron.Metering.Device.PendingEventActivationRecord">
            <summary>
            A class to represent the pending table information for std table 04
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PendingEventActivationRecord.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventActivationRecord.TableID">
            <summary>
            Table bit field - contains the table id
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventActivationRecord.StillPending">
            <summary>
            Portion of table bit field that tells whether or not the table is still pending
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventActivationRecord.Event">
            <summary>
            Gets or sets the Event record for the pending event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventActivationRecord.Status">
            <summary>
            Gets or sets the status of the Pending Table.
            This should be set by the device.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventActivationRecord.TableName">
            <summary>
            Gets or sets the name of the Pending Table.
            This should be set by the device.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventActivationRecord.m_sTableID">
            <summary>
            Table ID of the pending table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventActivationRecord.m_blnPending">
            <summary>
            Taken from the table ida bitfield, it is a flag telling whether or not
            the table is still pending
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventActivationRecord.m_EventRecord">
            <summary>
            Event Record object that contains the event selector and event storage
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventActivationRecord.m_strStatus">
            <summary>
            The current status of the pending table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventActivationRecord.m_strTableName">
            <summary>
            The name of the pending table.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PendingEventRecord">
            <summary>
            Class that represents the Event Record for a Pending Table event.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PendingEventRecord.PendingEventCode">
            <summary>
            Event code enumeration used for determining how the event storage
            data should be interpreted.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventRecord.PendingEventCode.AbsoluteTimeTrigger">
            <summary>
            Pending event is activated by an absolute time. The event storage
            data is stored as an STIME_DATE.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventRecord.PendingEventCode.RelativeTimeTrigger">
            <summary>
            Pending event is activated by a relative time. The event storage
            data is stored as an STIME_DATE
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PendingEventRecord.PendingEventCode.NonTimeTrigger">
            <summary>
            Pending event is activated by a non time related trigger. The event
            storage data is stored as a 5 character string
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PendingEventRecord.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PendingEventRecord.#ctor(System.Byte,System.Byte[])">
            <summary>
            Constructor.
            </summary>
            <param name="byEventCode">The event code bitfield for the event.</param>
            <param name="byEventStorage">The event storage data for the event.</param>
        </member>
        <member name="M:Itron.Metering.Device.PendingEventRecord.#ctor(System.DateTime,Itron.Metering.Communications.PSEM.PSEMBinaryReader.TM_FORMAT,System.Boolean,System.Boolean)">
            <summary>
            Constructor used for creating a pending event record using an Absolute Time Trigger
            </summary>
            <param name="activationDate">The date and time that the event should activate.</param>
            <param name="timeFormat">Time Format used by the meter</param>
            <param name="performSelfRead">Whether or not a Self Read should be performed</param>
            <param name="performDemandReset">Whether or not a Demand Reset should be performed</param>
        </member>
        <member name="M:Itron.Metering.Device.PendingEventRecord.#ctor(System.TimeSpan,System.Boolean,System.Boolean)">
            <summary>
            Constructor used for creating a pending event record using a Relative Time Trigger
            </summary>
            <param name="activationTime">The amount of time to wait before activating the pending table</param>
            <param name="performSelfRead">Whether or not a Self Read should be performed</param>
            <param name="performDemandReset">Whether or not a Demand Reset should be performed</param>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.EventSelector">
            <summary>
            Gets or sets the event selector bitfield
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.EventStorage">
            <summary>
            Gets or sets the Event Storage data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.EventCode">
            <summary>
            Gets or sets the event code from the event selector bitfield
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.PerformSelfRead">
            <summary>
            Gets or sets whether or not a self read will be performed upon activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.PerformDemandReset">
            <summary>
            Gets or sets whether or not a demand reset will be performed upon activation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.EntireRecord">
            <summary>
            Gets a byte array of the entire record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.ActivationDate">
            <summary>
            Gets or set the Activate Date used for Absolute Time Trigger Pending Events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.PendingEventRecord.ActivationTime">
            <summary>
            Gets or sets the Activation Time used for Relative Time Trigger Pending Events
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable51">
            <summary>
            Actual Time and TOU Limiting Table - Table 51
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable51.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for this session.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable51.Read">
            <summary>
            Reads the data for this table out of the meter.
            </summary>
            <returns>The PSEMResponse code for the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsUsingTOUSelfReads">
            <summary>
            Returns true if the meter is using TOU triggered self reads.
            Otherwise returns false.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsUsingSeasonSelfReads">
            <summary>
            Returns true of the meter is using the ability to perform a self read
            on a season change. Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsUsingSeasonDemandReset">
            <summary>
            Returns true if the meter is using the ability to cause a demand reset
            on a season change. Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.RequiresNonRecurringDateSorting">
            <summary>
            Returns true if the meter requires that all non recurring dates to be 
            pre-sorted by date before being placed in the meter. Returns false otherwise
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.AcceptsAnchorDates">
            <summary>
            Returms true if the meter accepts an anchor date. Returns false otherwise
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.AutoHandleDSTChangeEnabled">
            <summary>
            Returns true if the meter handles DST changes independently of
            dates supplied in table 54. Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsUsingScheduleForEachWeekday">
            <summary>
            Returns true if the meter is using different schedules for each of the
            five weekdays. Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsSeperateSummationAndDemand">
            <summary>
            Returns true if the meter is switching summation and demands
            seperately. Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.RequiresTierSwitchSorting">
            <summary>
            Returns true if the meter requires that Tier switches be pre-sorted.
            Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.IsTimeZoneAvailable">
            <summary>
            Returns true if the time zone offset capability is available int the meter.
            Returns false otherwise.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.NumberOfSeason">
            <summary>
            Gets the number of seasons in use by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.NumberOfSpecialSchedules">
            <summary>
            Returns the number of special schedules in use by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.NumberOfNonRecurringDates">
            <summary>
            Gets the number of non recurring dates supported by the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.NumberOfRecurringDates">
            <summary>
            Gets the number of recurring dates supported by the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.NumberOfTierSwitches">
            <summary>
            Gets the number of tier switches supported by the calendar
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable51.CalendarTableSize">
            <summary>
            Gets the size of the calendar table (table 54) in bytes
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable51.TranslateIsTimeZoneAvailable(System.Byte)">
            <summary>
            Method to conver the Time Func Flag from Table 51 to the bool value
              that tells us if Time Zone is Available in the device
            </summary>
            <param name="byTimeFuncFlag2">Value from Table 51</param>
            <returns>bool - Does meter support Time Zone</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable52">
            <summary>
            Clock - Table 52
            <remarks>
            This table is not cached but some of the fields are.
            </remarks>
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable52.DayOfWeek">
            <summary>
            Enumeration for encapsulating the day of the week as represented
            in the TIME_DATE_QUAL bit field
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Sunday">
            <summary>Sunday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Monday">
            <summary>Monday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Tuesday">
            <summary>Tuesday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Wednesday">
            <summary>Wednesday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Thursday">
            <summary>Thursday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Friday">
            <summary>Friday</summary>
        </member>
        <member name="F:Itron.Metering.Device.StdTable52.DayOfWeek.Saturday">
            <summary>Saturday</summary>
        </member>
        <member name="T:Itron.Metering.Device.StdTable52.TimeDateQualMask">
            <summary>
            Contains the maks for the Time Date Qual bit field
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable52.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for this session</param>
            <param name="Table0">The table object for table 0.</param>
            <param name="usTableID">The C12.19 table ID.</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable52.Read">
            <summary>
            Reads the data for this table out of the meter.
            </summary>
            <returns>The PSEMResponse code for the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.CurrentTime">
            <summary>
            Gets the current time from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.Day">
            <summary>
            Gets the current day of the week
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.IsInDST">
            <summary>
            Returns true if the meter is currently in DST. Otherwise returns false.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.IsGMT">
            <summary>
            Returns true if the current time is reported in GMT. Otherwise
            return false.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.IsTimeZoneApplied">
            <summary>
            Returns true if the time zone has been applied to the current time.
            Otherwise returns false.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable52.IsDSTApplied">
            <summary>
            Returns true if DST has been applied to the current time.
            Otherwise returns false
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable52.GetTableSize(Itron.Metering.Device.CTable00)">
            <summary>
            Gets the size of the table.
            </summary>
            <param name="Table0">The table object for table 0.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.StdTable53">
            <summary>
            Time Offset - Table 53
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable53.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable51)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for this session</param>
            <param name="Table0">The Table 0 object for the current device</param>
            <param name="Table51">The Table 51 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.StdTable53.Read">
            <summary>
            Reads the table from the device
            </summary>
            <returns>A PSEM response code that represents the result of the read</returns>
        </member>
        <member name="P:Itron.Metering.Device.StdTable53.DSTTimeEffective">
            <summary>
            Gets the time of the day when a DST time change will occur
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable53.DSTAdjustAmount">
            <summary>
            Gets a TimeSpan that represents the amount of time to change the clock
            when a DST time change occurs
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.StdTable53.TimeZoneOffset">
            <summary>
            Gets the Time Zone Offset for the time zone the device is located in
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StdTable53.GetTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.StdTable51)">
            <summary>
            Gets the size of the table in bytes.
            </summary>
            <param name="Table0">The Table 0 object.</param>
            <param name="Table51">The Table 51 object.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.MfgActualPowerQuality">
            <summary>
            Mfg table 2069 - Actual Power Quality limiting table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MfgActualPowerQuality.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00)">
            <summary>
            Mfg Table 21 (2069) - This table defines the layout of the VQ
            tables in this meter.
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table0">The table 0 object.</param>
        </member>
        <member name="M:Itron.Metering.Device.MfgActualPowerQuality.Read">
            <summary>
            Reads the table if it hasn't been read or if it's been written
            since it was last read.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.MaxPQEvents">
            <summary>
            The maximum number of VQ events the meter stores. Reads the table
            if necessary.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrSagLevels">
            <summary>
            The number of VQ sag levels configured to be monitored. Reads the
            table if necessary.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrSwellLevels">
             <summary>
             The number of VQ swell levels configured to be monitored.
             </summary>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             02/12/07 mcm 8.0.11  N/A    Created
             03/12/07 MCM 8.00.18 2573   Returned wrong value which cause table 2070 read failure
            </remarks> 
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrInterruptionLevels">
             <summary>
             The number of VQ levels configured to be monitored.
             </summary>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             02/12/07 mcm 8.0.11  N/A    Created
             03/12/07 MCM 8.00.18 2573   Returned wrong value which cause table 2070 read failure
            </remarks> 
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrVoltageImbalanceLevels">
             <summary>
             The number of VQ Voltage Imbalance levels configured to be monitored.
             </summary>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             02/12/07 mcm 8.0.11  N/A    Created
             03/12/07 MCM 8.00.18 2573   Returned wrong value which cause table 2070 read failure
            </remarks> 
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrCurrentImbalanceLevels">
             <summary>
             The number of VQ Current Imbalance levels configured to be monitored.
             </summary>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             02/12/07 mcm 8.0.11  N/A    Created
             03/12/07 MCM 8.00.18 2573   Returned wrong value which cause table 2070 read failure
            </remarks> 
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.NbrExcursionLevels">
             <summary>
             The number of VQ Excursion levels configured to be monitored.
             </summary>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             02/12/07 mcm 8.0.11  N/A    Created
             03/12/07 MCM 8.00.18 2573   Returned wrong value which cause table 2070 read failure
            </remarks> 
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.UnderVoltageLimited">
            <summary>
            Does the device support under Voltage limit.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.OverVoltageLimited">
            <summary>
            Does the device support over Voltage limit.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.ThdVoltageExcessSupported">
            <summary>
            Does the device support the ability to determine voltage THD excess.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.ThdCurrentExcessSupported">
            <summary>
            Does the device support the ability to determine current THD excess.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.InstThdSupported">
            <summary>
            Does the device support the ability to to calculate instantaneous 
            %THD and %TDD quantities.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.ActualThresholdValues">
            <summary>
            Does the device represents all threshold values as actual values 
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.EventDurationSupported">
            <summary>
            Does the device support the ability to record the power 
            quality event duration.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.EventStartTimeSupported">
            <summary>
            Does the device support the ability to record the power 
            quality event start time.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.EventEndTimeSupported">
            <summary>
            Does the device support the ability to record the power quality 
            event end time.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgActualPowerQuality.InhibitOverflowSupported">
            <summary>
            Is the device capable of inhibiting overflow of the Power Quality Log.
            </summary>
            
        </member>
        <member name="T:Itron.Metering.Device.MfgPowerQualityParameters">
            <summary>
            Mfg table 2070. This table is only partially implemented. The meter's
            table shows all VQ configuration parameters.  This table only exposes
            the Log Near Full Threshold.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityParameters.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.MfgActualPowerQuality)">
            <summary>
            Mfg Table 22 (2070) - This table defines the layout of the VQ
            tables in this meter.
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table2069">The Actual Power Quality table that defines
            the struction of this table</param>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityParameters.GetTableSize(Itron.Metering.Device.MfgActualPowerQuality)">
            <summary>
            Gets the size of table 2070
            </summary>
            <param name="Table2069">The Actual Power Quality table that defines
            the struction of this table</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityParameters.Read">
            <summary>
            Reads the table if it hasn't been read or if it's been written
            since it was last read.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityParameters.LogNearFullThreshold">
            <summary>
            The configured threshold for triggering a VQ Log Nearly Full event.
            </summary>
            
        </member>
        <member name="T:Itron.Metering.Device.MfgPowerQualityStatus">
            <summary>
            Mfg table 2071. This table contains VQ Status data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityStatus.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.MfgActualPowerQuality)">
            <summary>
            Mfg Table 23 (2071) - This table defines the layout of the VQ
            tables in this meter.
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table2069">The Actual Power Quality table that defines
            the struction of this table</param>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityStatus.Read">
            <summary>
            Reads the table if it hasn't been read or if it's been written
            since it was last read.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.Overflowed">
            <summary>
            Has the log in an overflowed. If the log has overflowed, either new 
            events are not being logged because the meter is blocking them, or 
            old events that have not been read are being overwritten. Clearing 
            VQ Events clears this flag.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.InhibitOverflow">
            <summary>
            Is the meter configured to keep unread events from being overwritten
            when the log gets full?  This value is the same as the corresponding
            table 2069 value
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.PQRunning">
            <summary>
            Is PQ currently running.  PQ will stop runnign if the meter can
            not determine the service type and when the meter is in test mode.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.NbrEvents">
            <summary>
            Number of the events currently logged in table 2072
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.LastEntry">
            <summary>
            Index of the newest event in table 2072
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.LastSeqNbr">
            <summary>
            Sequence number of the newest event in table 2072
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.MfgPowerQualityStatus.NbrUnreadEntries">
            <summary>
            How many events in table 2072 are marked unread?
            </summary>
            
        </member>
        <member name="T:Itron.Metering.Device.MfgPowerQualityEvents">
            <summary>
            Mfg table 2072. This table contains an array of VQ events.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityEvents.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.MfgActualPowerQuality)">
            <summary>
            Mfg Table 24 (2069) - This table defines the layout of the VQ
            tables in this meter.
            </summary>
            <param name="psem">The PSEM communications object.</param>
            <param name="Table2069">The Actual Power Quality table that defines
            the struction of this table</param>
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityEvents.GetEvents(System.Int32,System.Int32)">
            <summary>
            Reads the first NbrEvents from table 2072 and returns them in a 
            list. 
            </summary>
            <param name="StartIndex">0 based event index</param>
            <param name="Count">Number of VQ events to read</param>
            <returns>A list of PQ events</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.MfgPowerQualityEvents.GetTableSize(Itron.Metering.Device.MfgActualPowerQuality)">
            <summary>
            Gets the size of table 2072
            </summary>
            <param name="Table2069">The Actual Power Quality table that defines
            the struction of this table</param>
            <returns>The size of the table.</returns>
        </member>
        <member name="T:Itron.Metering.Device.PQEventType">
            <summary>
            Power Quality Event type is a binary value defined as follows:
                 0		= Sag
                 1		= Swell
                 2		= Interruption
                 3		= Voltage Unbalance
                 4		= Current Unbalance
                 5		= Excursion
                 6..7	= Undefined
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.Sag">
            <summary>
            Sag event occurs when voltage drops below a configured value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.Swell">
            <summary>
            Swell event occurs when voltage rises above a configured value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.Interruption">
            <summary>
            Interruption event occurs when voltage drops below a configured 
            value for a configured duration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.VoltageUnbalance">
            <summary>
            Voltage Unbalance event occurs when a phase voltage drops below 
            a configured difference from the average voltage.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.CurrentUnbalance">
            <summary>
            Current Unbalance event occurs when a phase current drops below 
            a configured difference from the average current.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PQEventType.Excursion">
            <summary>
            An Excursion is when the entire family goes on holiday
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PowerQualityEvent">
            <summary>
            Structure representing a single Power Quality Event.  Note that this
            struct is set up to match the Sentinel Saturn's PQ events.  It does not
            currently support dynamic structuring based on the table 2069 parameters.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.PowerQualityEvent.#ctor(System.Byte,System.UInt32,System.Single,System.Single,System.DateTime)">
            <summary>
            Constructs a PowerQualityEvent
            </summary>
            <param name="EventType">EventType</param>
            <param name="Duration">Duration</param>
            <param name="EventData1">EventData1</param>
            <param name="EventData2">EventData2</param>
            <param name="EndTime">Event end time</param>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Duration">
            <summary>
            Event duration in miliseconds
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Data1">
            <summary>
            Event Data is particular to the event type. If EVENT_TYPE is a sag, 
            swell, interruption, or excursion then this field represents the
            minimum or maximum voltage amplitude during power quality event. 
            If EVENT_TYPE is a voltage unbalance then this field represents the 
            average voltage during the power quality event.
            
            Use the EventData1Description property to get a nicely formatted
            description of the data.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Data1Description">
            <summary>
            Event Data is particular to the event type. This property returns
            the Event Data formatted with the units and type of value.  For
            example, event data 1 for a Sag event would be "116.4 V min".
            </summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            02/13/07 mcm 8.0.11  N/A    Created
            03/12/07 mcm 8.00.18 2561   0 values are not formatted correctly
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Data2">
            <summary>
            Event Data is particular to the event type. If EVENT_TYPE is a sag,
            swell, interruption, or excursion then this field represents the 
            peak current during the power quality event. If EVENT_TYPE is a
            current unbalance or a voltage unbalance then this field represents
            the peak percent deviation during the power quality event.
            
            Use the EventData2Description property to get a nicely formatted
            description of the data.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Data2Description">
            <summary>
            Event Data is particular to the event type. This property returns
            the Event Data formatted with the units and type of value.  For
            example, event data 2 for a Sag event would be "14.378 A".
            </summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            02/13/07 mcm 8.0.11  N/A    Created
            03/12/07 mcm 8.00.18 2561   0 values are not formatted correctly
            </remarks>
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.EndTime">
            <summary>
            Event End Time
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.StartTime">
            <summary>
            Returns the calculated event start time based on the end time and
            the event duration.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Type">
            <summary>
            Event type is a binary value defined as follows:
                 0		= Sag
                 1		= Swell
                 2		= Interruption
                 3		= Voltage Unbalance
                 4		= Current Unbalance
                 5		= Excursion
                 6..7	= Undefined
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Description">
            <summary>
            Returns the PQEventType in string form
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Phase">
            <summary>
            Returns the phase the event is associated with
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Level">
            <summary>
            Returns the Level (or Class for Interruptions) that the event is 
            associated with.
            </summary>
            
        </member>
        <member name="P:Itron.Metering.Device.PowerQualityEvent.Saturation">
            <summary>
            Was there current saturation during the event?
            </summary>
            
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2093">
            <summary>
            The CHANMfgTable2093 class gives the OTA header
            format details
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2093.FieldControlBits">
            <summary>
            Available options for the Field Control bits.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FieldControlBits.None">
            <summary>
            No options selected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FieldControlBits.SecurityCredentialVersionPresent">
            <summary>
            Security Credentials Version Present
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FieldControlBits.DeviceSpecificFile">
            <summary>
            Device Specific File
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FieldControlBits.HardwareVersionsPresent">
            <summary>
            Hardware Versions Present
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersions">
            <summary>
            ZigBee Stack Version Values.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersions.ZigBee2006">
            <summary>
            ZigBee 2006
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersions.ZigBee2007">
            <summary>
            ZigBee 2007
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersions.ZigBeePro">
            <summary>
            ZigBee Pro
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersions.ZigBeeIP">
            <summary>
            ZigBee IP
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersions">
            <summary>
            Security Credential Version Values.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersions.SE1_0">
            <summary>
            SE 1.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersions.SE1_1">
            <summary>
            SE 1.1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersions.SE2_0">
            <summary>
            SE 2.0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersions.SE1_2">
            <summary>
            SE 1.2
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues">
            <summary>
            File Type Values.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues.ClientSecurityCredentials">
            <summary>
            Client Security Credentials
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues.ClientConfiguration">
            <summary>
            Client Configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues.ServerLog">
            <summary>
            Server Log
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues.Picture">
            <summary>
            Picture
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2093.FileTypeValues.WildCard">
            <summary>
            Wild Card
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2093.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2093.Read">
            <summary>
            Full read of table 2093 (HAN OTA Header Table) out of the meter
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.FieldID">
            <summary>
            Current HAN OTA Field ID's
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderVersion">
            <summary>
            Current HAN OTA Header Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.FormattedHeaderVersion">
            <summary>
            Formatted header version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderLength">
            <summary>
            Current HAN OTA Header Length
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderFieldControl">
            <summary>
            Current HAN OTA Header Field Control
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderFieldControlValues">
            <summary>
            Current HAN OTA Header Field Control
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderSecurityCredentialVersionPresent">
            <summary>
            Current HAN OTA Header Security Credential Version Present
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderDeviceSpecificFile">
            <summary>
            Current HAN OTA Header Device Specific File
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderHardwareVersionsPresent">
            <summary>
            Current HAN OTA Header Hardware Versions Present
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ManufacturerCode">
            <summary>
            Current HAN OTA Manufacturer Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ImageType">
            <summary>
            Current HAN OTA Image Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ImageTypeName">
            <summary>
            Current HAN OTA Image Type Name
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.FileVersion">
            <summary>
            Current HAN OTA File Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ApplicationReleaseVersion">
            <summary>
            Formatted application release version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ApplicationBuild">
            <summary>
            Formatted application build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.StackReleaseVersion">
            <summary>
            Formatted stack release version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.StackBuild">
            <summary>
            Formatted stack build number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersion">
            <summary>
            Current HAN OTA ZigBee Stack Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ZigBeeStackVersionName">
            <summary>
            Current HAN OTA ZigBee Stack Version Name
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.HeaderString">
            <summary>
            Current HAN OTA Header String
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.InterpretedHeaderString">
            <summary>
            Current HAN OTA Header String as a string
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.ImageSize">
            <summary>
            Current HAN OTA Image Size in bytes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.SecurityCredVerion">
            <summary>
            Current HAN OTA Security Cred Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.SecurityCredentialVersionName">
            <summary>
            Current HAN OTA Security Cred Version Name
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.IEEEAddress">
            <summary>
            Current HAN OTA IEEE Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.MinHardwareVersion">
            <summary>
            Current HAN OTA Min Hardware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.FormattedMinHardwareVersion">
            <summary>
            Formatted min hardware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.MaxHardwareVersion">
            <summary>
            Current HAN OTA Max Hardware Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.FormattedMaxHardwareVersion">
            <summary>
            Formatted max hardware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.IsImageValid">
            <summary>
            Is the image valid
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2093.IsGEMeter">
            <summary>
            Flag for if the meter is a GE meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2093.GetTableLength">
            <summary>
            Helper method to determine the length of the table
            </summary>
            <returns>length in bytes of table 2093</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2094">
            <summary>
            The CHANMfgTable2094 class gives the HAN OTA parameters details
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2094.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2094.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor that uses that data stored in a Binary Reader
            </summary>
            <param name="reader">The binary reader that contains the table data</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2094.Read">
            <summary>
            Full read of table 2094 (HAN OTA Parameters Table) out of the meter
            </summary>
            <returns>
            PSEMResponse of the outcome of the read.
            </returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2094.Write">
            <summary>
            Full write of table 2094 (HAN OTA Parameters Table) to the meter
            </summary>
            <returns>
            PSEMResponse of the outcome of the write.
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2094.QueryJitter">
            <summary>
            Query Jitter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2094.DataSize">
            <summary>
            Data Size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2094.CurrentTime">
            <summary>
            Current Time in UTC.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2094.UpgradeTime">
            <summary>
            Upgrade Time in UTC.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2094.ParseData">
            <summary>
            Get the data out of the binary reader and into the member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2095">
            <summary>
            The CHANMfgTable2095 class handles the reading of the OTA 
            Diagnostics Table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2095.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2095.Read">
            <summary>
            Full read of table 2095 (HAN OTA Poll Message Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.EndPointIDs">
            <summary>
            HAN Cluster Endpoint IDs
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.HAN_OTA_ActivateFlag">
            <summary>
            HAN OTA Activate Flag
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.HAN_OTA_Activate">
            <summary>
            HAN OTA Activate
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.ImageNotifyBitMask">
            <summary>
            Image Notify Bit Mask
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.ImageActivationBitMask">
            <summary>
            Image Activation Bit Mask
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.nDevices">
            <summary>
            Number of Poll Messages Currently Active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2095.rcdDiagElmt">
            <summary>
            Dump of the HAN OTA Poll Message table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2095.GetTableLength">
            <summary>
            Helper method to determine the length of the table
            </summary>
            <returns>length in bytes of table 2095</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2096">
            <summary>
            The CHANMfgTable2096 class handles the reading of the OTA 
            Poll Table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2096.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2096.Read">
            <summary>
            Full read of table 2096 (HAN OTA Poll Message Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2096.NumberOfPollMessages">
            <summary>
            Number of Poll Messages Currently Active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2096.HANOtaPollMsg">
            <summary>
            Dump of the HAN OTA Poll Message table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2096.GetTableLength">
            <summary>
            Helper method to determine the length of the table
            </summary>
            <returns>length in bytes of table 2096</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2097">
            <summary>
            HAN Mfg Table 2097 is a read only table that holds device registration
            information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2097.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2097.Read">
            <summary>
            Full read of table 2097
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2097.NumberOfDevicesInFWDLProgress">
            <summary>
            Number of Devices in FWDL progress
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2097.HanOtaPollRcd">
            <summary>
            This is essentially a dump of the entire Mfg Table 2097.  Table 2097
            contains the HAN OTA Statistics records
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2097.GetTableLength">
            <summary>
            Calculates the length of table 2097
            </summary>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2098">
            <summary>
            The CHANMfgTable2098 class handles the reading of the Dimension HAN Limiting
            table.  This table is used by CHANMfgTable2107
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2098.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2098 Table2098 = new CHANMfgTable2098(m_PSEM);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2098.Read">
            <summary>
            Full read of table 2098 (Dimension HAN Limiting Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.NumberHANClients">
            <summary>
            Returns the actual number of HAN clients this server is capable of
            supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.NumberHANConfigCmds">
            <summary>
            Returns the actual number of commands each HAN client configuration
            record is capable of supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.DataSize">
            <summary>
            Returns the actual size, in octets, each HAN client data record is
            capable of supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.TxDataSize">
            <summary>
            Gets the Transmit Data Size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.RxDataSize">
            <summary>
            Gets the Receive Data Size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2098.NumberSecurityKeys">
            <summary>
            Actual number of security keys the HAN Security table is capable of
            supporting
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2098.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2099">
            <summary>
            The CHANMfgTable2099 class handles the reading of the Actual HAN Limiting
            table.
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2099.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2099 Table2099 = new CHANMfgTable2099(m_PSEM);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2099.Read">
            <summary>
            Full read of table 2099 (Actual HAN Limiting Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2099.NumberHANClients">
            <summary>
            Returns the actual number of HAN clients this server is capable of
            supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2099.NumberHANConfigCmds">
            <summary>
            Returns the actual number of commands each HAN client configuration
            record is capable of supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2099.DataSize">
            <summary>
            Returns the actual size, in octets, each HAN client data record is
            capable of supporting.
            </summary>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2099.TxDataSize">
            <summary>
            Gets the Transmit Data Size
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2099.NumberSecurityKeys">
            <summary>
            Actual number of security keys the HAN Security table is capable of
            supporting
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2099.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2100">
            <summary>
            The CHANMfgTable2100 class handles the reading of the HAN Client
            Configuration table.
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2100.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table2099">Table 2099 object</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2099 Table2099 = new CHANMfgTable2099(m_PSEM);
            CHANMfgTable2100 Table2100 = new CHANMfgTable2100(m_PSEM, Table2099); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2100.Read">
            <summary>
            Full read of table 2100 (HAN Client Configuration Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2100.HANConfigData">
            <summary>
            Returns a list that is essentially a dump of table 2100
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2100.TableLength">
            <summary>
            Length in bytes of table 2100
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2100.GetTableLength(Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Helper method to determine the length of the table.  The length depends
            upon the number of HAN clients and the number of config commands as
            read from table 2099.
            </summary>
            <param name="table2099">Mfg Table 2099 object</param>
            <returns>the length in bytes of table 2100</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2101">
            <summary>
            The CHANMfgTable2101 class handles the reading of the HAN Client Data Table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2101.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2099">MFG Table 2099 object</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2099 Table2099 = new CHANMfgTable2099(m_PSEM);
            CHANMfgTable2101 Table2101 = new CHANMfgTable2101(m_PSEM, Table2099);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2101.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.Byte,System.UInt16)">
            <summary>
            Table 121 Constructor used when parsing a data file
            </summary>
            <param name="BinaryReader">A PSEM binary Reader contains the stream for table 2101</param>
            <param name="byNumberHANClients">The number of HAN clients</param>
            <param name="uiDataSize">The size of the client data record</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2101.Read">
            <summary>
            Full read of table 2101 (HAN Client Data Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2101.HANClientDataList">
            <summary>
            List that essentially contains a dump of table 2101
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2101.ParseData(System.Byte,System.UInt16,Itron.Metering.Communications.PSEM.PSEMBinaryReader.TM_FORMAT)">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2101.GetTableLength(System.Byte,System.UInt16)">
            <summary>
            Helper method to determine the length of the table depending on the 
            data size field of table 2099
            </summary>
            <param name="byNumberHANClients">The number of HAN clients</param>
            <param name="uiDataSize">The size of each HAN client data record</param>
            <returns>the length in bytes of table 2101</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2102">
            <summary>
            Handles the writing of the HAN Server Transmit Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2102.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2102.Read">
            <summary>
            Reads the table from the meter. This operation is not supported for this table.
            </summary>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2102.Read(System.Int32,System.UInt16)">
            <summary>
            Performs an offset read of the table. This operation is not supported for this table
            </summary>
            <param name="Offset">The offset to read.</param>
            <param name="Count">The number of bytes to read.</param>
            <returns>The result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2102.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The result of the write.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2102.Command">
            <summary>
            Sets the command to write to the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2104">
            <summary>
            The CHANMfgTable2104 class handles the reading of the HAN Network 
            Information Table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2104.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2099">Mfg Table 2099 object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2104.Read">
            <summary>
            Full read of table 2104 (HAN Network Information Table) out of the meter
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2104.ServerMACAddress">
            <summary>
            MAC address of the HAN server (Electric Meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2104.ChannelNumber">
            <summary>
            Current HAN Channel Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2104.NetworkID">
            <summary>
            Current HAN PAN ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2104.HANBindingEntries">
            <summary>
            Current HAN Binding Entries
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2104.GetTableLength(Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Helper method to determine the length of the table depending on the
            number of HAN clients specified in table 2099
            </summary>
            <param name="table2099">MFG Table 2099 object</param>
            <returns>length in bytes of table 2104</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2105">
            <summary>
            CHANMfgTable2105 is a read/write table that holds the 128 bit encryption 
            keys for the HAN.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2105.SIZEOF_HAN_SECURITY_KEY_RECORD">
            <summary>
            A HAN security key records consists of a 16-byte key and a 1-byte key type, 
            making the total size of the record 17 bytes.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2105.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2099)">
            <summary>
            Constructor
            </summary>
            <param name="psem"></param>
            <param name="table2099"></param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2105.Write">
            <summary>
            Writes the table to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2105.SetHANSecurityKeys(System.Byte[],System.Byte[])">
            <summary>
            Sets the network and link key member variables.  Should
            be used to prepare for writing the 2105 table to the meter.
            </summary>
            <param name="abyNetworkKey">Unencrypted network security key</param>
            <param name="abyLinkKey">Unencrypted global link key</param>
            <returns>void</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2105.SetHANNetworkSecurityKey(System.Byte[])">
            <summary>
            Sets the network key member variable.  Should
            be used to prepare for writing the 2105 table to the meter.
            </summary>
            <param name="abyNetworkKey"></param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2105.GetTableLength(System.UInt16)">
            <summary>
            Calculates the size, in bytes, of table 2105.  The size will be the
            number of security keys multiplied by the size of one key (128 bits) 
            plus the key type (1 byte);
            </summary>
            <param name="usNumberSecurityKeys">The number of HAN security keys</param>
            <returns>the length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.HANChannels">
            <summary>
            Channels used by the HAN
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.None">
            <summary>
            None selected
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel11">
            <summary>
            Channel 11
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel12">
            <summary>
            Channel 12
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel13">
            <summary>
            Channel 13
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel14">
            <summary>
            Channel 14
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel15">
            <summary>
            Channel 15
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel16">
            <summary>
            Channel 16
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel17">
            <summary>
            Channel 17
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel18">
            <summary>
            Channel 18
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel19">
            <summary>
            Channel 19
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel20">
            <summary>
            Channel 20
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel21">
            <summary>
            Channel 21
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel22">
            <summary>
            Channel 22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel23">
            <summary>
            Channel 23
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel24">
            <summary>
            Channel 24
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel25">
            <summary>
            Channel 25
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.Channel26">
            <summary>
            Channel 26
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.ItronDefault">
            <summary>
            The Default Itron HAN Channels
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANChannels.NonItronDefault">
            <summary>
            The non-Default Itron HAN Channels
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANStartupOptions">
            <summary>
            Possible ways a device can start up using HAN.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANStartupOptions.CoordinatorOnly">
            <summary>
            Coordinatior Only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANStartupOptions.RouterCoordinator">
            <summary>
            Coordinatior Only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANStartupOptions.RouterOnly">
            <summary>
            Router Only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANStartupOptions.HardcodedForm">
            <summary>
            Hardcoded Form
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANStartupOptions.HANDisabled">
            <summary>
            HAN Disabled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2106">
            <summary>
            CHANMfgTable2106 is a read/write table that holds the configuration 
            parameters for the HAN.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.SECURITY_MODE_OFFSET">
            <summary>
            The number of bytes to offset the table write when setting the security mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.SECURITY_MODE_LENGTH">
            <summary>
            The number of bytes that make up the security mode setting.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.CBKE_MODE_OFFSET">
            <summary>
            The number of bytes to offset the table write when setting the CBKE mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.CBKE_MODE_LENGTH">
            <summary>
            The number of bytes that make up the CBKE mode setting.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.DEVICE_AUTH_MODE_OFFSET">
            <summary>
            The number of bytes to offset the table write when setting the Device Auth mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2106.DEVICE_AUTH_MODE_LENGTH">
            <summary>
            The number of bytes that make up the Device Auth mode setting.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="fltFWRev">The register f/w version running in the meter</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.Read">
            <summary>
            Full read of table 2106 (HAN Configuration Parameters Table) out of the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetHANSecurityProfile(System.Byte,System.Byte,System.Byte)">
            <summary>
            Gets the name of the security profile that was selected based on the Security Mode,
            Device Authentication Mode, and the CBKE Mode.
            </summary>
            <param name="bySecurityMode">The security mode selected.</param>
            <param name="byDeviceAuthMode">The device authentication mode selected.</param>
            <param name="byCBKEMode">The CBKE mode selected.</param>
            <returns>The name of the security profile</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetHANSecurityMode(System.Byte)">
            <summary>
            Gets the HAN Security Mode Description using the provided byte.
            </summary>
            <param name="securityMode">The Security Mode byte</param>
            <returns>The description of the security mode.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetHanDeviceAuthMode(System.Byte)">
            <summary>
            Gets the HAN Device Auth Mode Description using the provided byte.
            </summary>
            <param name="deviceAuthMode">The Device Auth Mode byte</param>
            <returns>The description of the Device Auth mode.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetHanCbkeMode(System.Byte)">
            <summary>
            Gets the HAN CBKE Mode Description using the provided byte.
            </summary>
            <param name="cbkeMode">The CBKE Mode byte</param>
            <returns>The description of the CBKE mode.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetInterPANMode(System.Byte)">
            <summary>
            Gets the description for the inter PAN mode
            </summary>
            <param name="byInterPanMode">The Inter PAN mode value</param>
            <returns>The description of the Inter PAN mode</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.ChannelsUsed">
            <summary>
            Gets or sets the channels that have been used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.StartupOptions">
            <summary>
            Returns the start up options field from table 2106.  We can determine
            whether or not the HAN has been disabled from this field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.ConfigVersion">
            <summary>
            Returns the start up options field from table 2106.  We can determine
            whether or not the HAN has been disabled from this field
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.HANSecurityProfile">
            <summary>
            Returns the HANSecurityProfile based on CBKE mode, DeviceAuth mode, Security mode 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.InterPANMode">
            <summary>
            Gets the Inter PAN mode
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.SecurityMode">
            <summary>
            Gets/Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.SecurityModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.DeviceAuthMode">
            <summary>
            Gets/Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.DeviceAuthModeDescription">
            <summary>
            Gets the HAN Device Auth Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.CbkeMode">
            <summary>
            Gets/Sets the HAN CBKE Mode in the HAN Configuration Paramaters Table.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.CbkeModeDescription">
            <summary>
            Gets the HAN Security Mode Description.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.PowerLevel">
            <summary>
            Gets the ZigBee output power level.  Should be a value from -30 to 3.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.SimpleMeteringMultiplier">
            <summary>
            Gets or sets the Multiplier used for Simple Metering values
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2106.SimpleMeteringDivisor">
            <summary>
            Gets or sets the Divisor used for Simple Metering values
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.WriteChannels">
            <summary>
            Writes the channels to the meter.
            </summary>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.WriteSecurityMode">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.WriteDeviceAuthMode">
            <summary>
            Sets the HAN Device Auth Mode in the HAN Configuration Paramaters Table.
            </summary>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.WriteCbkeMode">
            <summary>
            Sets the HAN Security Mode in the HAN Configuration Paramaters Table.
            </summary>
            <returns>The PSEM Response code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.WriteSimpleMeteringMultiplierAndDivisor">
            <summary>
            Writes the Multiplier and Divisor fields to the meter using an offset write.
            </summary>
            <returns>The Result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2106.GetTableLength(System.Single)">
            <summary>
            Determines the length of table 2106 based on the firmware version
            in the meter
            </summary>
            <param name="fltFWRev">the firmware version of the register f/w</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2107">
            <summary>
            OpenWay MFG Table 2107 - HAN Stat Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2107.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.CHANMfgTable2098,Itron.Metering.Device.CHANMfgTable2128)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device.</param>
            <param name="table0">The table 0 object for the current device</param>
            <param name="table2098">The MFG Table 2098 table for the current device.</param>
            <param name="table2128">The MFG Table 2128 table for the current device.</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2107.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The result of the read request.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.CurrentNetworkStatus">
            <summary>
            Gets the current state of the HAN
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.IsHANJoiningEnabled">
            <summary>
            Gets whether or not HAN joining is currently enabled in the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.HANMultiplier">
            <summary>
            Gets the HAN multiplier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.HANDivisor">
            <summary>
            Gets the HAN divisor.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.IsZigBeeFWCompatible">
            <summary>
            Gets whether or not the current ZigBee FW is compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.MinZigBeeVersion">
            <summary>
            Gets the minimum ZigBee FW version compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.MinZigBeeRevision">
            <summary>
            Gets the minimum ZigBee FW revision compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.MinZigBeeBuild">
            <summary>
            Gets the minimum ZigBee FW build compatible with the register FW
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.HANJoiningExpirationDate">
            <summary>
            Gets the Date and Time that HAN Joining will expire
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2107.CurrentMeterTime">
            <summary>
            Gets the Current Meter Time reported to HAN Devices
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2107.ParseData">
            <summary>
            Method to get data out of the Binary Reader and into member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2107.DetermineSize(Itron.Metering.Device.CHANMfgTable2098,Itron.Metering.Device.CHANMfgTable2128,System.UInt32)">
            <summary>
            Determines the size of the table.
            </summary>
            <param name="table2098">The MFG Table 2098 table for the current device.</param>
            <param name="table2128">The MFG Table 2129 table for the current device.</param>
            <param name="sizeOfLTIME">The size of an LTIME date</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2128">
            <summary>
            The CHANMfgTable2128 class handles the reading of the Dimension AMI HAN 
            Limiting table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2128.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single,System.Single)">
            <summary>
            HAN Mfg Table 2128 is a read/write table that defines the maximum values
            for the AMI HAN decade
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="fltFWRev">The firmware version and revision of the meter</param>
            <param name="hardwareVersion">The hardware version of the meter</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2128 Table2128 = new CHANMfgTable2128(m_PSEM);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2128.Read">
            <summary>
            Full read of table 2128
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.NumberAMIDevices">
            <summary>
            Actual number of AMI clients this server is capable of supporting
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.NumberRegServices">
            <summary>
            Actual number of services each AMI HAN device is capable of registering for
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.EncryptCertLen">
            <summary>
            Actual length, in octets, of encryption certificates
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.NbrRsps">
            <summary>
            Actual number of responses the AMI_HAN_RSP_LOG_TBL (table 2131) is 
            capable of supporting per device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.NumberHANPrices">
            <summary>
            Actual number of prices the AMI_HAN_PRICE_TBL (table 2134) can
            store.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.NumberTierLabels">
            <summary>
            Actual number of tier labels in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.RateLabelLength">
            <summary>
            Actual size of the rate label in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2128.TierLabelLength">
            <summary>
            Actual length of the tier labels in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2128.GetTableLength(System.Single,System.Single)">
            <summary>
            Gets the length of table 2128 (ITRON 80) based on f/w version.
            The length increased by 4 bytes starting with SP5.
            </summary>
            <param name="fltFWRev">The version.revision of the register f/w
            in the meter.</param>
            <param name="hardwareVersion">The hardware version of the meter</param>
            <returns>The length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2129">
            <summary>
            The CHANMfgTable2129 class handles the reading of the Actual AMI HAN 
            Limiting table
            </summary>
            <remarks>
            This table is supported only by OpenWay meters.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2129.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single)">
            <summary>
            HAN Mfg Table 2129 is a read/write table that defines the maximum values
            for the AMI HAN decade
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="fltFWRev">The firmware version and revision of the meter</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CHANMfgTable2129 Table2129 = new CHANMfgTable2129(m_PSEM);
            </code></example>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2129.Read">
            <summary>
            Full read of table 2129
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberAMIDevices">
            <summary>
            Actual number of AMI clients this server is capable of supporting
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberRegServices">
            <summary>
            Actual number of services each AMI HAN device is capable of registering for
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberDRLCEvents">
            <summary>
            Gets the number of DRLC events
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.EncryptCertLen">
            <summary>
            Actual length, in octets, of encryption certificates
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NbrRsps">
            <summary>
            Actual number of responses the AMI_HAN_RSP_LOG_TBL (table 2131) is 
            capable of supporting per device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberHANPrices">
            <summary>
            Actual number of prices the AMI_HAN_PRICE_TBL (table 2134) can
            store.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberTierLabels">
            <summary>
            Actual number of tier labels in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.RateLabelLength">
            <summary>
            Actual size of the rate label in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.TierLabelLength">
            <summary>
            Actual length of the tier labels in the AMI_HAN_PRICE_TBL (table 2134).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.MessageLength">
            <summary>
            Actual size of the Message Length in the AMI_HAN_MSG_TBL (table 2133).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2129.NumberHANClientsJoined">
            <summary>
            The number of HAN devices actually joined to this device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2129.GetTableLength(System.Single)">
            <summary>
            Gets the length of table 2129 (ITRON 81) based on f/w version.
            The length increased by 4 bytes starting with SP5.
            </summary>
            <param name="fltFWRev">The version.revision of the register f/w
            in the meter.</param>
            <returns>The length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2130">
            <summary>
            HAN Mfg Table 2130 is a read only table that holds device registration
            information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2130.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.Single,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="fltFWRev">The firmware version and revision of the meter</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2130.Read">
            <summary>
            Full read of table 2130
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2130.AMIHANDevRcds">
            <summary>
            This is essentially a dump of the entire Mfg Table 2130.  Table 2130
            contains the device registration information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2130.GetTableLength(Itron.Metering.Device.CHANMfgTable2129,System.Single)">
            <summary>
            Calculates the length of table 2130
            </summary>
            <param name="table2129"></param>
            <param name="fltFWRev">The firmware version and revision in the meter</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2131">
            <summary>
            AMI HAN table 2131 is a read only table that contains information on the
            link status and response history of devices in the AMI HAN Registration Table.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2131.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2131.Read">
            <summary>
            Full read of table 2131
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2131.AMIHANRspLogRcds">
            <summary>
            This is essentially a dump of table 2131.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2131.GetTableLength(Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Calculates the length of table 2131
            </summary>
            <param name="Table2129">The table 2129 object.</param>
            <returns>Length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2132">
            <summary>
            HAN Table 2132 - Contains the DRLC events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2132.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CTable00,Itron.Metering.Device.CHANMfgTable2099,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="table2099">The Table 2099 object for the current device</param>
            <param name="table2129">The Table 2129 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2132.Read">
            <summary>
            Reads the table from the meter.
            </summary>
            <returns>The Result of the read.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2132.GetDRLCEventsWithExpired">
            <summary>
            Reads the table from the meter. This method is to be used for testing only
            </summary>
            <returns>The Result of the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2132.NumberOfValidEntries">
            <summary>
            Gets the number of valid entries in the log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2132.LastEntryElement">
            <summary>
            Gets the index of the Last DRLC entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2132.LastEntrySequenceNumber">
            <summary>
            Gets the sequence number of the last entry
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2132.DRLCMessages">
            <summary>
            Gets the list of DRLC Messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2132.GetTableSize(Itron.Metering.Device.CTable00,Itron.Metering.Device.CHANMfgTable2099,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Gets the size of the table
            </summary>
            <param name="table0">The Table 0 object for the current device</param>
            <param name="table2099">The Table 2099 object for the current device</param>
            <param name="table2129">The Table 2129 object for the current device</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2132.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2133">
            <summary>
            The CHANMfgTable2133 class handles the reading of the AMI HAN Messaging Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2133.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
            <param name="table2129">The Table 2129 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2133.Read">
            <summary>
            Parses the table data out of the stream and assigns it to member variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2133.Write">
            <summary>
            Write table to Meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2133.MessageRecord">
            <summary>
            Get/Set Message Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2133.GetTableLength(Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Length of table 2133
            </summary>
            <param name="Table2129">The table 2129 object.</param>
            <returns>Length of the table in bytes</returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2134">
            <summary>
            AMI HAN table 2131 is a read only table that contains information on the
            firmware download status and progress of 3rd party devices
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.REFERENCE_DATE">
            <summary>
            UTC Reference date
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
            <param name="includeExpirationDate">Whether or not the expiration date should be included</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.Read">
            <summary>
            Reads the data from the meter
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.Write">
            <summary>
            Write table to Meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.PendingTableWrite(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Writes the pending table to the meter
            </summary>
            <param name="pendingRecord">The pending table header to use</param>
            <returns>The result of the write</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2134.Prices">
            <summary>
            The HAN price records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2134.Tiers">
            <summary>
            The tier label records.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2134.ExpirationDate">
            <summary>
            Gets or sets the Expiration Date for the price
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt32,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="tableID">The ID of the table</param>
            <param name="size">The size of the table</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.GetTableLength(Itron.Metering.Device.CHANMfgTable2129,System.Boolean)">
            <summary>
            Calculates the length of table 2134
            </summary>
            <param name="Table2129">The table 2129 object.</param>
            <param name="includeExpirationDate">Whether or not to include the expiration date</param>
            <returns>Length of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.ParseData">
            <summary>
            Parses the table data out of the stream and assigns it to member variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2134.WriteData">
            <summary>
            Writes the current data to the stream
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.m_table2129">
            <summary>
            Table 2129 object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.m_aAMIHANPriceEntryRcds">
            <summary>
            Price entry records
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.m_aAMITierLabelEntryRcds">
            <summary>
            Tier entry records
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.m_IncludeExpirationDate">
            <summary>
            Whether or not to include the expiration date
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CHANMfgTable2134.m_ExpirationDate">
            <summary>
            The expiration date of a recurring schedule
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2135">
            <summary>
            AMI HAN table 2131 is a read only table that contains information on the
            firmware download status and progress of 3rd party devices
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2135.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2135.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.TransferableImageVersion">
            <summary>
            The version and revision of the HAN device firmware file
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.TotalPagesActiveTransfer">
            <summary>
            The total number of pages in the currently active download
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.LastPageSentActiveTransfer">
            <summary>
            The page number of the last page sent to the HAN device in the 
            firmware download
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.NumberHANDevices">
            <summary>
            The number of HAN devices in table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.LastChangeTime">
            <summary>
            Time of the last change in Table 2130.  The change could be a device
            added, removed, or registration status changed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2135.HANFwDlStatuses">
            <summary>
            Array of statuses of the HAN devices attached to this meter
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2135.GetTableLength(Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Calculates the length of table 2135
            </summary>
            <param name="Table2129">The table 2129 object.</param>
            <returns>Length of the table in bytes</returns>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2135.ParseData">
            <summary>
            Parses the table data out of the stream and assigns it to member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2137">
            <summary>
            HAN Mfg Table 2137 is a read only table that holds HAN device manufacturer info
            information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2137.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="table2129">HAN Mfg table 2129 object</param>
            <param name="STIMEsize">STIME size from Table 0</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2137.Read">
            <summary>
            Full read of table 2137
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2137.AMIHANMfgInfoRcds">
            <summary>
            This is essentially a dump of the entire Mfg Table 2137.  Table 2137
            contains the HAN device manufacturer information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2137.GetTableLength(Itron.Metering.Device.CHANMfgTable2129,System.UInt32)">
            <summary>
            Calculates the length of table 2137
            </summary>
            <param name="table2129">Mfg Table 2129</param>
            <param name="STIMEsize">STIME size from Table 0</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.CHANMfgTable2244">
            <summary>
            HAN Mfg Table 2244 is a read only table that holds HAN Diagnostic Status Read
            information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2244.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="STIMEsize">STIME size from Table 0</param>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2244.Read">
            <summary>
            Full read of table 2244
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CHANMfgTable2244.AMIHANDiagnosticReadRecord">
            <summary>
            This is essentially a dump of the entire Mfg Table 2244.  Table 2244
            contains the HAN Diagnostic Status Read Information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CHANMfgTable2244.GetTableLength(System.UInt32)">
            <summary>
            Calculates the length of table 2244
            </summary>
            <param name="STIMEsize">STIME size from Table 0</param>
            <returns></returns>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2288">
            <summary>
            Table 2288 - HAN Stats Two Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2288.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2288.Read">
            <summary>
            Reads the table from the meter
            </summary>
            <returns>The result of the read</returns>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2288.ParseData">
            <summary>
            Parses the data read from the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.UnicastMessagesSent">
            <summary>
            Gets the number of Unicast messages sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.InterPANMessagesSent">
            <summary>
            Gets the number of InterPAN messages sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.BroadcastMessagesSent">
            <summary>
            Gets the number of broadcast messages sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.ViaBindingMessagesSent">
            <summary>
            Gets the number of messages sent via binding
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.PermitJoinRequestMessagesSent">
            <summary>
            Gets the number of Permit Join Request messages sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.IncomingMessagesReceived">
            <summary>
            Gets the number of incoming messages that have been received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.LeaveRequestMessagesSent">
            <summary>
            Gets the number of Leave Request Message sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.IsQuietModeActive">
            <summary>
            Gets whether or not quiet mode is currently active
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.DroppedResponseMessages">
            <summary>
            Gets the number of response messages that have been dropped
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.OpenWayMFGTable2288.StackResets">
            <summary>
            Gets the number of stack resets that have occurred
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OpenWayMFGTable2297">
            <summary>
            HAN Recurring Price Schedule table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2297.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CHANMfgTable2129)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM </param>
            <param name="table2129">The table 2129 object for the current device</param>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2297.ParseData">
            <summary>
            Parses the data from the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.OpenWayMFGTable2297.WriteData">
            <summary>
            Writes the data to the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DRLCMessageData">
            <summary>
            DRLC Message Data item used to summarize the message details
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCMessageData.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="itemName">The name of the data item</param>
            <param name="itemValue">The value of the data item</param>
        </member>
        <member name="P:Itron.Metering.Device.DRLCMessageData.Name">
            <summary>
            Gets the name of the data item
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCMessageData.Value">
            <summary>
            Gets the value of the data item
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DRLCLogMessage">
            <summary>
            Represents a DRLC Log Message
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DRLCLogMessage.MessageType">
            <summary>
            DRLC Message Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.Unknown">
            <summary>
            Unknown Message Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.Passthrough">
            <summary>
            Passthrough Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.SmartEnergyLoadControl">
            <summary>
            Load Control Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.SmartEnergyCancelLoadControl">
            <summary>
            Cancel Load Control Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.SmartEnergyCancelAllLoadControl">
            <summary>
            Cancel All Load Control Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.GenericZCL">
            <summary>
            Generic ZCL Message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DRLCLogMessage.MessageType.ZigBeeWriteAttribute">
            <summary>
            ZigBee Write Attribute Message
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.MessageTime">
            <summary>
            Gets or sets the Message Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.SequenceNumber">
            <summary>
            Gets or sets the Sequence Number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.Type">
            <summary>
            Gets or sets the Message Type as a byte value
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.EnumeratedType">
            <summary>
            Gets the enumerated Message Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.Description">
            <summary>
            Gets the description of the DRLC Message
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.MessageLength">
            <summary>
            Gets or sets the Message Length
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.TxData">
            <summary>
            Gets or sets the Message Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.MessageData">
            <summary>
            Gets a list of the message data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DRLCLogMessage.EventID">
            <summary>
            Gets the ID of the event. This is only applicable to DRLC events
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.ParseTxData">
            <summary>
            Parses the Tx Data into a readable form for display to the user
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.ReadAttributeValue(Itron.Metering.Device.DRLCLogMessage.DataType,Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Reads the Attribute Value and returns a readable string
            </summary>
            <param name="attributeType">The attribute data type</param>
            <param name="reader">The binary reader storing the data</param>
            <returns>The formatted value</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatBool(System.Boolean)">
            <summary>
            Formats a boolean value
            </summary>
            <param name="booleanValue">The boolean value</param>
            <returns>Yes or No</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatDirection(System.Byte)">
            <summary>
            Formats the Frame Control direction
            </summary>
            <param name="frameControl">The Frame Control bitfield</param>
            <returns>The direction as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatFrameType(System.Byte)">
            <summary>
            Formats the Frame Control frame type
            </summary>
            <param name="frameControl">The Frame Control bitfield</param>
            <returns>The frame type as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatBytes(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatTime(System.UInt32)">
            <summary>
            Formats a uint time value to a readable format
            </summary>
            <param name="seconds">The number of seconds since 2000 GMT</param>
            <returns>The date as a formatted value</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatCancelControl(System.Byte)">
            <summary>
            Formats the Cancel control
            </summary>
            <param name="cancelControl">The cancel event control value</param>
            <returns>The Cancel Control as a formatted string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatEventControl(System.Byte)">
            <summary>
            Formats the eventControl data
            </summary>
            <param name="eventControl">Event Control Data</param>
            <returns>The event control data formatted</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatDutyCycle(System.Byte)">
            <summary>
            Formats the Duty Cycle
            </summary>
            <param name="dutyCycle">The Duty Cycle value</param>
            <returns>The Duty Cycle as a formatted string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatAvgLoadAdjust(System.SByte)">
            <summary>
            Formats the Average Load Adjustment value
            </summary>
            <param name="avgLoadAdjust">The Average Load Adjustment value</param>
            <returns>The Average Load Adjustment as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatTempSetPoint(System.Int16)">
            <summary>
            Formats the temperature set point to a readable format
            </summary>
            <param name="temperatureSetPoint">The raw temperature set point</param>
            <returns>The temperature set point formatted as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.FormatTempOffset(System.Byte)">
            <summary>
            Formats the temperature offset values to a readable format
            </summary>
            <param name="temperatureOffset">The raw offset value</param>
            <returns>The temperature offset formatted as a string</returns>
        </member>
        <member name="M:Itron.Metering.Device.DRLCLogMessage.GetDeviceGroupNames(Itron.Metering.DeviceDataTypes.DRLCDeviceClasses)">
            <summary>
            Gets the list of Device Groups
            </summary>
            <param name="groups">The groups to get</param>
            <returns>The list of deviceGroups as a string</returns>
        </member>
        <member name="T:Itron.Metering.Device.HANClientDataRcd">
            <summary>
            Class that represents a single HAN client data record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANClientDataRcd.#ctor(System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="usDataSize">Size of the client data</param>
        </member>
        <member name="P:Itron.Metering.Device.HANClientDataRcd.ClientAddress">
            <summary>
            MAC address of the HAN client, which is made up of the Open Way meter 
            serial number, Itron's Organizational Unique Identifier, and the node type 
            of the client (Node type 2 = Gas meter)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANClientDataRcd.TimeRecorded">
            <summary>
            Date/time that the HAN module received the client data from the client meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANClientDataRcd.ClientDataSize">
            <summary>
            Number of bytes of data received from the client
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANClientDataRcd.ClientData">
            <summary>
            Byte array containing the HAN client data
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientCmdRcd">
            <summary>
            Class that holds a single command to be sent to the client meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCmdRcd.CmdID">
            <summary>
            Numerical value of the command identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCmdRcd.PacketVer">
            <summary>
            Packet version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCmdRcd.SequenceNum">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCmdRcd.CmdData">
            <summary>
            Any data that might be included in the command.  The content will
            vary with the command
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientCfgRcd">
            <summary>
            Class that holds the list of commands to be sent to the client meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCfgRcd.ClientAddress">
            <summary>
            MAC address of the client meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCfgRcd.NumberCfgCmds">
            <summary>
            Number of command records to be passed to the client
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ClientCfgRcd.ClientCmdList">
            <summary>
            List of command records to be passed to the client
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HAN_OTA_Poll_Msg">
            <summary>
            Class that represents a single OTA Poll Message
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HAN_OTA_Poll_Msg.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.ReceivedTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.DateReceived">
            <summary>
            The datetime that the message was received in UTC.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.ZedEui">
            <summary>
            ZED EUI element of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.FieldControl">
            <summary>
            Field Control element of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.ManufCode">
            <summary>
            Manufacturing Code of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.ImageType">
            <summary>
            Image Type of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.CurrentFileVersion">
            <summary>
            Current File Version of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.FormattedCurrentFileVersion">
            <summary>
            Formatted Current File Version of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.IsHardwareVersionPresent">
            <summary>
            Extracts from the Field Control byte whether the hardware version is present.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.HardwareVersion">
            <summary>
            Hardware Version of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HAN_OTA_Poll_Msg.FormattedHardwareVersion">
            <summary>
            Formatted hardware version of the bound node
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANBindingRcd">
            <summary>
            Class that represents a single HAN binding record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANBindingRcd.LongAddress">
            <summary>
            MAC address of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANBindingRcd.ShortAddress">
            <summary>
            Network address of the bound node
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANDiagnosticsElementRcd">
            <summary>
            Class that represents a single HAN binding record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.ZED_EUI">
            <summary>
            ZED_EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.ActivationCommandSent">
            <summary>
            Activation Command sent to the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.LastFwdlBlockSizeUsed">
            <summary>
            Last Firmware Download Block Size Used
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.CurrentFirmwareVersion">
            <summary>
            Get the current firmware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.FormattedCurrentFileVersion">
            <summary>
            Formatted Current File Version of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.NewFirmwareVersion">
            <summary>
            Get the new firmware version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.FormattedNewFileVersion">
            <summary>
            Formatted new File Version of the bound node
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.NBytesSent">
            <summary>
            Number of bytes sent
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.NBytesRemaining">
            <summary>
            Number of bytes remaining
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.LastCommandRXTimestamp">
            <summary>
            RX Timestamp
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.DateLastCommandReceived">
            <summary>
            The datetime that the last command was received in UTC.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.LastCommandTXTimestamp">
            <summary>
            TX Timestamp
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANDiagnosticsElementRcd.DateLastCommandTransmitted">
            <summary>
            The datetime that the last command was transmitted in UTC.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANClusterDestEndpointElement">
            <summary>
            HAN OTA Cluster Destination Endpoint Element
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANClusterDestEndpointElement.EndpointID">
            <summary>
            Id of the endpoint
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANKeyRcd">
            <summary>
            Class that represents a single HAN key record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANKeyRcd.HANKeyType">
            <summary>
            Enumeration of the currently valid key types for the HAN security table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANKeyRcd.HANKeyType.NetworkKey">
            <summary>
            The HAN network security key type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANKeyRcd.HANKeyType.GlobalLinkKey">
            <summary>
            The HAN network global link key type
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANKeyRcd.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANKeyRcd.KeyType">
            <summary>
            Type of security key:
            0 -- unused
            1 -- Network Key
            2 -- Master Link Key
            3 -- Device Link Key
            4 - 255 -- Undefined
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANKeyRcd.HANKey">
            <summary>
            128 bit encryption key
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANKeyRcd.Equals(Itron.Metering.Device.HANKeyRcd)">
            <summary>
            Determines whether or not the current key is equal to the specified key.
            </summary>
            <param name="other">The key to compare to.</param>
            <returns>True if the keys are the same. False otherwise.</returns>
        </member>
        <member name="T:Itron.Metering.Device.HANOTAStatRcd">
            <summary>
            Class that represents a single HAN OTA Status record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANOTAStatRcd.eZEDState">
            <summary>
            Enumeration for the registration status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.NoFWDLandWaiting">
            <summary>
            No download in progress
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.BlocksBeingExchanged">
            <summary>
            Blocks of data are being exchanged
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.BlokcsDownloaded">
            <summary>
            All the blocks are downloaded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.WaitingToUpgrade">
            <summary>
            Waiting to upgrade
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.UpgradeTimerStarted">
            <summary>
            Upgrade count down timer started
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.MultipleImageUpgrade">
            <summary>
            More than one image needed to upgrade
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eZEDState.ExternalUpgrade">
            <summary>
            Upgrade will be initiated by an external event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState">
            <summary>
            Enumeration for the HAN OTA Coordinator State
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.NoFWDLinProgress">
            <summary>
            No FWDL in progress and waiting for FWDL command
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.ImageAvailable">
            <summary>
            The CRC check will trigger HAN task to start FW download
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.FWDLinProgress">
            <summary>
            FW blocks are being sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.DownloadComplete">
            <summary>
            The HAN task has received confirmation that download 
            complete status has been received from the client
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.ActivateSent">
            <summary>
            The CE has sent the activation command
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.ActivateAck">
            <summary>
            The HAN task has received a countdown status attribute 
            from the client
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.FWDLSuccess">
            <summary>
            The HAN Task has received a status poll from the 
            device with the new FW information
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANOTAStatRcd.eCoordinatorState.HANOTACoordinatorAbort">
            <summary>
            The HAN Coordinator received an Abort request from
            the ZED
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.ZedEui">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.ZedStateStatus">
            <summary>
            Gets or sets the registration status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.ZedStatusString">
            <summary>
            Gets the registration status as a string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.NumBytesTrans">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.TimeLastTransmission">
            <summary>
            The datetime of the last transmission to the ZigBee device in UTC.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.PercentComp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.CoordinatorStateStatus">
            <summary>
            Gets or sets the registration status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.HANOTAStatRcd.CoordinatorStatusString">
            <summary>
            Gets the registration status as a string.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANDevRcd">
            <summary>
            Class that represents a single AMI HAN device registration record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus">
            <summary>
            Enumeration for the registration status
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.NotRegistered">
            <summary>
            The device is not registered.  This state follows PendingRegistration
            in the registration process.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.RegistrationFailed">
            <summary>
            The registration attempt failed.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.RegistrationSuccess">
            <summary>
            The registration attempt succeeded.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.InvalidCertificate">
            <summary>
            The device does not have a valid certificate.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.PendingRegistration">
            <summary>
            The next state after invalid in the registration process
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.NetworkUp">
            <summary>
            The network is up.  This state follows NotRegistered.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.NetworkDown">
            <summary>
            The network is down
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.NetworkForming">
            <summary>
            The network is forming
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.Joining">
            <summary>
            The device is joining
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.PrivateProfile">
            <summary>
            The network is using the private profile
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.ViaBinding">
            <summary>
            The device added itself to the table via binding
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.RegFatalError">
            <summary>
            Registration failed either because table was full
            or registration not allowed. Should never happen
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.ViaKE">
            <summary>
            The device added itself via key establishment
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegStatus.InvalidRegistration">
            <summary>
            Initial state in the registration process
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANDevRcd.HANRegService">
            <summary>
            Enumeration of the services a device can be registered to receive
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegService.Price">
            <summary>
            Price cluster
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegService.DemandResponseAndLoadControl">
            <summary>
            Demand Response and Load Control cluster
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegService.SimpleMetering">
            <summary>
            Simple metering cluster
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANDevRcd.HANRegService.Messaging">
            <summary>
            Messaging cluster
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANDevRcd.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="iRegServiceCount">The number of service in the list.</param>
            <param name="iEncryptCertLength">The length of the encryption certificate.</param>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.DeviceEUI">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.LastStatusChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.RegStatus">
            <summary>
            Gets or sets the registration status
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.RegStatusString">
            <summary>
            Gets the registration status as a string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.RegServiceCount">
            <summary>
            Number of services in the registered service list
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.RegServiceList">
            <summary>
            List of services this device is registered to receive
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.RegServiceStrings">
            <summary>
            Translates the RegServiceList into an array of strings
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.EncryptKey">
            <summary>
            Device specific link key record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.EncryptCertLen">
            <summary>
            Length of the encryption
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDevRcd.EncryptCert">
            <summary>
            Encryption certificate used to authenticate the device on the network
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANMfgInfoRcd">
            <summary>
            Class that represents a single AMI HAN Device Manufacturer Info Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANMfgInfoRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.IndexInTable2130">
            <summary>
            Index in table Mfg table 2130
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.DeviceEUI">
            <summary>
            HAN Device EUI
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.ManufacturerName">
            <summary>
            HAN Device Manufacturer Name
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.ModelIdentifier">
            <summary>
            HAN Device Model Identifier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.DateCode">
            <summary>
            HAN Device FW Date Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.LastUpdate">
            <summary>
            Last time the HAN Device Manufacturer Info was updated.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANMfgInfoRcd.LastRequest">
            <summary>
            Last time the HAN Device Manufacturer Info was requested.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANResetStatusRcd">
            <summary>
            Class that represents a AMI HAN Reset Status Record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANResetStatusRcd.HANResetState">
            <summary>
            Enumeration for the HAN Reset State
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.HANResetState.Running">
            <summary>
            The device is running.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.HANResetState.Halted">
            <summary>
            The device is halted.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.HANResetState.Unknown">
            <summary>
            Unknown state.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType">
            <summary>
            Enumeration for ZigBee Reset Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.NormalReset">
            <summary>
            Normal Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.DetectedFatError">
            <summary>
            Detected Fat Error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.Watchdog">
            <summary>
            Watchdog
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.CoreFault">
            <summary>
            Core Fault
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.StackLookupDetect">
            <summary>
            Stack Lookup Detect
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.FirstUsedReset">
            <summary>
            First Used Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.PeriodicReset">
            <summary>
            Periodic Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.DisableZigBee">
            <summary>
            Disable ZigBee
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.TableEmptyPeriodicReset">
            <summary>
            Table Empty Periodic Reset
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.DiagnosticStop">
            <summary>
            Diagnostic Stop
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AMIHANResetStatusRcd.ZigBeeResetType.NetworkRestart">
            <summary>
            Network Restart
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANResetStatusRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANResetStatusRcd.ResetState">
            <summary>
            Reset State
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANResetStatusRcd.ResetCount">
            <summary>
            Reset Count
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANResetStatusRcd.ResetLimit">
            <summary>
            Reset Limit
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANResetStatusRcd.LastResetType">
            <summary>
            Last Reset Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANResetStatusRcd.LastResetTime">
            <summary>
            Last Reset Time
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANJoinStatusRcd">
            <summary>
            Class that represents a AMI HAN Join Status Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANJoinStatusRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANJoinStatusRcd.JoinIsEnabled">
            <summary>
            Join is enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANJoinStatusRcd.ExtendedDuration">
            <summary>
            Extended duration
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANRadioStatusRcd">
            <summary>
            Class that represents a AMI HAN Radio Status Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANRadioStatusRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRadioStatusRcd.IsRadioEnabled">
            <summary>
            Is Radio Enabled
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRadioStatusRcd.IsQuietModeEnabled">
            <summary>
            Is Quiet Mode Enabled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANDiagnosticReadRcd">
            <summary>
            Class that represents a AMI HAN Diagnostic Read Record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANDiagnosticReadRcd.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDiagnosticReadRcd.ResetStatus">
            <summary>
            HAN Reset Status Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDiagnosticReadRcd.JoinStatus">
            <summary>
            HAN Join Status Record
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANDiagnosticReadRcd.RadioStatus">
            <summary>
            HAN Radio Status Record
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANRspLogRcd">
            <summary>
            Class that represents a single AMI HAN response log record
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANRspLogRcd.#ctor(System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="byNumResponses">The number of responses.</param>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.DeviceEUI">
            <summary>
            EUI-64 of the registered device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.LastMsgRSSI">
            <summary>
            RSSI of the last message received from this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.LastMsgLQI">
            <summary>
            LQI of the last message received from this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.AvgRSSI">
            <summary>
            Average RSSI of all messages sent by this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.AvgLQI">
            <summary>
            Average LQI of all messages sent by this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.NbrMsgsRx">
            <summary>
            Number of messages received from this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.NbrMsgsTx">
            <summary>
            Number of messages transmitted to this device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.NbrTxFailures">
            <summary>
            Number of attempted transmission that this device failed to receive
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANRspLogRcd.RxMsgSeqNbrs">
            <summary>
            Sequence number in the HAN communication log of the most recent
            messages received from this device
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AMIHANPriceEntryRcd">
            <summary>
            Class that represents a single AMI HAN price entry record.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANPriceEntryRcd.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.ProviderID">
            <summary>
            The unique ID of the commodity provider.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.RateLabel">
            <summary>
            The label for the rate as a string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.IssuerEventID">
            <summary>
            The unique ID generated by the commodity provider.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.UnitOfMeasureText">
            <summary>
            The text representing the commodity that is being measured.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.CurrencySymbol">
            <summary>
            The text representing the symbol for the local unit of currency 
            used in the price field.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.CurrencyName">
            <summary>
            The text representing the symbol for the local unit of currency 
            used in the price field.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.PriceTrailingDigit">
            <summary>
            Price trailing digit.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.PriceTier">
            <summary>
            Price tier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.NumberOfPriceTiers">
            <summary>
            Price trailing digit.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.RegisterTier">
            <summary>
            Price tier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.PriceSignalStartTime">
            <summary>
            Time, in UTC 2000, at which the price signal becomes valid.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.Duration">
            <summary>
            Denotes the number of minutes the price is valid.  A value of 65535 
            denotes the price is valid until changed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.CommodityPrice">
            <summary>
            The text representing the price of the commodity. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.CommodityGenerationPrice">
            <summary>
            The text representing the generation price of the commodity. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.NumberTiersAndRegisterTier">
            <summary>
            Bitfield representing the number of price tiers and associated register tier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.PriceTrailandTier">
            <summary>
            Bitfield representing the price trailing digit and tier.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.StartTime">
            <summary>
            Seconds since 1/1/2000 at which the price signal becomes valid.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.UnitOfMeasureByte">
            <summary>
            A byte indicating the commodity that is being measured and its 
            format (binary or BCD).
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.RateLabelLength">
            <summary>
            The length of the rate label.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.Currency">
            <summary>
            Identifying information concerning the local unit of currency used in the
            price field.  The value of the currency field should match the values defined 
            by ISO 4217.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.Price">
            <summary>
            Price of the commodity.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.GenerationPrice">
            <summary>
            Price of a commodity generated.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.PriceRatio">
            <summary>
            Ratio of the price denoted in the price field to the 
            "normal" price chosen by the commodity provider.  This 
            value should be scaled by a factor of 0.1 giving a range
            of ratios from 0.1 to 25.5.  A value of 0xFF indicates the 
            field is not used.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMIHANPriceEntryRcd.GenerationPriceRatio">
            <summary>
            Ratio of the price denoted in the generation price field to the 
            "normal" price chosen by the commodity provider. This 
            value should be scaled by a factor of 0.1 giving a range
            of ratios from 0.1 to 25.5.  A value of 0xFF indicates the 
            field is not used.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANPriceEntryRcd.GetUnitOfMeasureText(Itron.Metering.DeviceDataTypes.UnitOfMeasure)">
            <summary>
            This method gets text that describes the unit of measure given.
            </summary>
            <param name="UOM">The unit of measure.</param>
        </member>
        <member name="M:Itron.Metering.Device.AMIHANPriceEntryRcd.GeneratePriceString(System.UInt32)">
            <summary>
            This method gets text that describes the price.
            </summary>
            <param name="uiPrice">The price to convert.</param>
        </member>
        <member name="T:Itron.Metering.Device.AMITierLabelEntryRcd">
            <summary>
            Class that represents a single AMI Tier label entry record.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AMITierLabelEntryRcd.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMITierLabelEntryRcd.TierID">
            <summary>
            The price tier sub-field.  Values are from 1 to 6 reflecting the least
            expensive tier (1) to the most expensive tier (6).  All other values are 
            reserved.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMITierLabelEntryRcd.TierLabel">
            <summary>
            The label for the tier as a string.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.AMITierLabelEntryRcd.TierLabelLength">
            <summary>
            The length of the tier label.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANTransmitCommand">
            <summary>
            HAN Transmit Command for Table 2102
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANTransmitCommand.WriteCommand(Itron.Metering.Communications.PSEM.PSEMBinaryWriter)">
            <summary>
            Writes the command using the specified binary writer
            </summary>
            <param name="writer">The writer to use to write the command</param>
        </member>
        <member name="P:Itron.Metering.Device.HANTransmitCommand.Size">
            <summary>
            Gets the total size of the command
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANTransmitCommand.#ctor(System.UInt64,System.Byte,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="clientAddress">The address of the client to transmit to.</param>
            <param name="messageType">The message type</param>
            <param name="dataSize">The size of the data to send.</param>
        </member>
        <member name="F:Itron.Metering.Device.HANTransmitCommand.m_ClientAddress">
            <summary>
            The Client's Address
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANTransmitCommand.m_MessageType">
            <summary>
            The Message Type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANTransmitCommand.m_DataSize">
            <summary>
            The size of the data to transmit
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HANTransmitCommand.m_Data">
            <summary>
            The data to transmit
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANScheduleDRLCCommand">
            <summary>
            DR/LC Command to be sent via Table 2102
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANScheduleDRLCCommand.#ctor(System.UInt64,System.DateTime,System.UInt16,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32)">
            <summary>
            Constructor
            </summary>
            <param name="clientAddress">The address of the client to send the command to.</param>
            <param name="startTime">The start time of the DR/LC event</param>
            <param name="duration">The duration of the event</param>
            <param name="deviceClass">The device classes the event should apply to.</param>
            <param name="eventID">The event ID for the DRLC event</param>
        </member>
        <member name="M:Itron.Metering.Device.HANScheduleDRLCCommand.GenerateData">
            <summary>
            Generates the Transmit Data for the command
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANCancelDRLCCommand">
            <summary>
            DR/LC Cancel Command to be sent via Table 2102
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANCancelDRLCCommand.#ctor(System.UInt64,System.DateTime,Itron.Metering.DeviceDataTypes.DRLCDeviceClasses,System.UInt32,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="clientAddress">The address of the client to send the command to.</param>
            <param name="EffectiveTime">The start time of the DR/LC Cancel event</param>
            <param name="deviceClass">The device classes the event should apply to.</param>
            <param name="eventID">The event ID for the DRLC Cancel event</param>
            <param name="CancelControl">Enter 0 to start at effective time, or 1 to start at random time</param>
            
        </member>
        <member name="M:Itron.Metering.Device.HANCancelDRLCCommand.GenerateData">
            <summary>
            Generates the Transmit Data for the command
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANCancelAllDRLCCommand">
            <summary>
            DR/LC Cancel All Events Command to be sent via Table 2102
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANCancelAllDRLCCommand.#ctor(System.UInt64,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="clientAddress">The address of the client to send the command to.</param>
            <param name="CancelControl">Enter 0 to start at effective time, or 1 to start at random time</param>
            
        </member>
        <member name="M:Itron.Metering.Device.HANCancelAllDRLCCommand.GenerateData">
            <summary>
            Generates the Transmit Data for the command
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HANSetUtilityEnrollmentGroupCommand">
            <summary>
            Set Utility Enrollment Group Command to be sent via Table 2102
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HANSetUtilityEnrollmentGroupCommand.#ctor(System.UInt64,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="clientAddress">The address of the client to update the Utility Enrollment Group</param>
            <param name="utilityEnrollmentGroup">The new Utility Enrollment Group</param>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048">
            <summary>
            This CTable2048 class manages the header and config blocks of 2048.  This 
            is the base class and is overriden for device specific changes.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, create the header and config blocks that will be used.
            It reads the header out of the meter to get the offsets.
            </summary>
            <param name="psem">Protocol instance to be used by the table</param>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable2048 Table2048 = new CTable2048( PSEM ); 
            </code></example>
            
        </member>
        <member name="M:Itron.Metering.Device.CTable2048.Dump">
            <summary>
            Dumps the config tables to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.Table2048Header">
            <summary>
            Provides access to the 2048 Header
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.CoefficientsConfig">
            <summary>
            Provides access to the Coefficients config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.ConstantsConfig">
            <summary>
            Provides access to the Constants config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.BillingSchedConfig">
            <summary>
            Provides access to the Billing Schedule Config Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.DemandConfig">
            <summary>
            Provides access to the Demand Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.CalendarConfig">
            <summary>
            Provides access to the Calendar Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.TOUConfig">
            <summary>
            Provides access to the TOU Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.DisplayConfig">
            <summary>
            Provides access to the Display Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.HistoryLogConfig">
            <summary>
            Provides access to the History Log Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.OptionBoardConfig">
            <summary>
            Provides access to the Option Board Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.SelfReadConfig">
            <summary>
            Provides access to the Demand Config table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.ModeControl">
            <summary>
            Provides access to the Mode Control Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.IOConfig">
            <summary>
            Provides access to the IO Config Table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.HasDST">
            <summary>
            Returns true if the meter is configured for DST
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048.TOU_ID">
            <summary>
            Returns the configured TOU ID.  Value is 0 if meter wasn't configured
            for TOU.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_2048Header">
            <summary>
            The header block for table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_CoefficientsConfig">
            <summary>
            The coefficients config block from table 2048.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_ConstantsConfig">
            <summary>
            The constants config block from table 2048, It is up to the inherited
            device object to create the correct constants config block
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_DemandConfig">
            <summary>
            The demand config block from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_SelfReadConfig">
            <summary>
            The self read config block from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_BillingSchedConfig">
            <summary>
            The custom schedule config block from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_OptBoardConfig">
            <summary>
            The option board config block header from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_CalendarConfig">
            <summary>
            The Calendar config from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_IOConfig">
            <summary>
            The IO config from table 2048.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_TOUConfig">
            <summary>
            The TOU config from table 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_DisplayConfig">
            <summary>
            The Display Config from 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_HistoryLogConfig">
            <summary>
            The Event Config from 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_ModeControl">
            <summary>
            The Mode Control table from 2048
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_PSEM">
            <summary>
            The protocol object
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048.m_Logger">
            <summary>
            The debug logger
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048_Shared">
            <summary>
            This CTable2048 class manages the header and config blocks of 2048.  This 
            is the base class and is overriden for device specific changes.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_Shared.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_Shared.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, create the header and config blocks that will be used.
            It reads the header out of the meter to get the offsets.
            </summary>
            <param name="psem">Protocol instance to be used by the table</param>
            <example><code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CTable2048 Table2048 = new CTable2048( PSEM ); 
            </code></example>
            
        </member>
        <member name="M:Itron.Metering.Device.CTable2048_Shared.InitializeSpecialCases">
            <summary>
            Handles device dependent special cases that can't be done during
            construction.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.CTable2048_Shared.m_MaxCalYears">
            <summary>
            The max calendar years supported by this device
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2048Header">
            <summary>
            This CTable2048Header class handles the reading of the header of 2048
            to get the offset information. The reading of this table in the meter
            will be implicit.  (read-only)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CTable2048Header.HEADER_LENGTH_2048">
            <summary>Length of the ANSI Header Table</summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048Header.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>Constructor</summary>
            <param name="psem">The protocol instance to use</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CTable2048Header.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Header Constructor used for file based structure
            </summary>
            <param name="BinaryReader"></param>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048Header.Read">
            <summary>
            Reads table 2048's header out of the meter.  We only care about certain
            offsets.  So, the offsets that we do not want are put into filler arrays.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CTable2048Header.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.DateProgrammed">
            <summary>
            Gets the Configuration Date in 2048.  
            </summary>
            <returns>The Configuration Date from the config block</returns>
            /// <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.SWVerRev">
            <summary>
            Gets the software revision.version  
            </summary>
            /// <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.CPCOffset">
            <summary>
            Get the offset for the CPC data in 2048
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.CoefficientsOffset">
            <summary>
            Gets the offset for Coefficients in 2048.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.ConstantsOffset">
            <summary>
            Gets the offset for Constants in 2048.  If a 0 offset is returned
            then the caller should know that the read failed.
            </summary>
            <returns>The offset to the constants config block</returns>
            /// <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.DemandOffset">
            <summary>
            Gets the offset for demand in 2048.  If a 0 offset is returned
            then the caller should know that the read failed.
            </summary>
            <returns>The offset to the demand config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.SelfReadOffset">
            <summary>
            Gets the offset for self read in 2048.  If a 0 offset is returned
            then the caller should know that the read failed.
            </summary>
            <returns>The offset to the self read config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.OptionBoardOffset">
            <summary>
            Gets the offset for option board in 2048.  If a 0 offset is
            returned then the caller should know that the option board is not
            configured.
            </summary>
            <returns>The offset to the billing schedule config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.IOOffset">
            <summary>
            Gets the offset for IO in 2048.  If a 0 offset is
            returned then the caller should know that the IO is not
            configured.
            </summary>
            <returns>The offset to the IO config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.BillingSchedOffset">
            <summary>
            Gets the offset for billing schedule in 2048.  If a 0 offset is
            returned then the caller should know that the read failed.
            </summary>
            <returns>The offset to the billing schedule config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.CalendarOffset">
            <summary>
            Gets the offset for CalendarOffset in 2048.  If a 0 offset is
            returned then the either the read failed or this is a pre-Saturn
            SENTINEL that doesn't have DST or TOU configured (it might still 
            have a clock).
            </summary>
            <returns>The offset to the billing schedule config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.TOUOffset">
            <summary>
            Gets the offset for TOUOffset in 2048.  If a 0 offset is returned
            then the either the read failed or the meter is not configured for 
            TOU.
            </summary>
            <returns>The offset to the billing schedule config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.DisplayOffset">
            <summary>
            Gets the offset for DisplayOffset in 2048.  If a 0 offset is returned
            then the either the read failed or the meter is not configured for 
            Display.
            </summary>
            <returns>The offset to the Display config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.HistoryLogOffset">
            <summary>
            History Log Offset
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.PQOffset">
            <summary>
            Gets the offset for power quality from 2048.  If a 0 offset is
            returned then power quality is not configured.
            </summary>
            <returns>The offset to the power quality config block</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.ModeControlOffset">
            <summary>
            Gets the offset of the Mode Control sub table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.SiteScanOffset">
            <summary>
            Gets the offset of the SiteScan sub table
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2048Header.ConfigurationVersion">
            <summary>
            Publicly accessible Config Version
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CTable2048Header.PopulateMembers">
            <summary>
            Populates our member variables from the PSEMBinaryReader, which
             has been populated by this time.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CoefficientsConfig">
            <summary>
            This CoefficientConfig class handles the reading/writing of the
            coefficients config block of 2048. The reading of this table will
            be implicit while the writing of this table will need to be explicitly
            called. (read/write)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CoefficientsConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="offset">The offset of the table in 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.CoefficientsConfig.Read">
            <summary>
            Reads the Coefficients Config block out of 2048
            </summary>
            <returns>AA PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.CoefficientsConfig.Write">
            <summary>
            Writes the Coefficients Config block to table 2048. The member
            variables must contain the data that is to be written to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.CoefficientsConfig.Dump">
            <summary>
            Writes the data to the log file for debugging purposes
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CoefficientsConfig.CTMultiplier">
            <summary>
            Gets the CT Multiplier field in table 2048.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CoefficientsConfig.VTMultiplier">
            <summary>
            Gets the VT Multiplier field in table 2048.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CoefficientsConfig.RegisterMultiplier">
            <summary>
            Gets the Register Multiplier field in 2048.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConstantsConfig">
            <summary>
            This ConstantsConfig class handles the reading/writing of the
            the constants config block of 2048. The reading of this table in the 
            meter will be implicit while the writing of this table will need to be
            explicitly called.  (read/write)	
            </summary>
            <remarks>
            This class is specific to the Sentinel meter.  The Image meters use an
            inherited class.  The fields of the table should be defined here.  The
            sizes of the fields are defined in this base class or the inherited class.
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.SENTINEL_CONSTANTS_CONFIG_LENGTH">
            <summary>
            SENTINEL Constant config block length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.IMAGE_CONSTANTS_CONFIG_LENGTH">
            <summary>
            IMAGE Constant config block length
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.OPENWAY_CONSTANTS_CONFIG_LENGTH">
            <summary>
            OpenWay Constatn config block length
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ConstantsConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>
            Constructor
            </summary>		
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            <param name="Size">Meter type dependent size of the calendar 
            configuration</param>
            
        </member>
        <member name="M:Itron.Metering.Device.ConstantsConfig.Read">
            <summary>
            Reads the Constants config block out of table 2048 in the meter.  We only
            care about the User Data 2 field but we need all of the table so that
            we can write it.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.ConstantsConfig.Write">
            <summary>
            Writes the Constants config block to the meter.  The member variable
            must contain the values that are to be written.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            <example><code>
            Procedures.ProcedureResultCodes ProcResult = 
            		Procedures.ProcedureResultCodes.INVALID_PARAM;
            byte[] ProcParam;
            byte[] ProcResponse;
            ProcParam = new byte[0];
            
            ProcResult = ExecuteProcedure( Procedure.OPEN_CONFIG_FILE, 
            						 ProcParam, out ProcResponse );
            
            if( Procedures.ProcedureResultCodes.COMPLETED == ProcResult )
            {
            	Result = GetDSTResult(Table2048.m_CalendarConfig.Write());
            }
            
            if(DSTUpdateResult.SUCCESS == Result)
            {
            	ProcParam = new byte[4];
            	ProcParam.Initialize();
            
            	ProcResult = ExecuteProcedure( Procedure.CLOSE_CONFIG_FILE, 
            								   ProcParam, out ProcResponse );
            </code></example>		
        </member>
        <member name="M:Itron.Metering.Device.ConstantsConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.UserData1">
            <summary>
            Provides access to User data 1
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.UserData2">
            <summary>
            Sets the user data 2 field in 2048.  The calling class will need to 
            explicitly write this table down to the meter.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.UserData3">
            <summary>
            Provides access to User data 3
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.ProgramID">
            <summary>
            Program ID property from the constants config block.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.CustomerSerialNumber">
            <summary>
            CustomSerialNumber property from the constants config block.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.ConstantsConfig.LoadResearchID">
            <summary>
            Load Research ID.  Sentinel meters store this value as a byte.
            Image meters store this value as a string.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
            <remarks>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             03/13/07 mcm 8.00.18 2454   Add Load Research ID support
            </remarks>		
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_CustomerSerialNum">
            <summary>
            Custom serial number
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_Filler1">
            <summary>
            Filler - This is the legacy meter ID, if in the future we need to configure
            the meter ID/unit ID then we will have to write it here for pre-Saturn meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_LoadResearchID">
            <summary>
            Load research ID - Sentinel and Image are different sizes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_NetworkID">
            <summary>
            Network ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_ProgramID">
            <summary>
            Program ID
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_UserData1">
            <summary>
            User data 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_UserData2">
            <summary>
            User Data 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_UserData3">
            <summary>
            User data 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_PrimSec">
            <summary>
            Primary/Secondary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_ClockSync">
            <summary>
            Clock sync
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_IntBaudRate">
            <summary>
            Internal baud rate
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConstantsConfig.m_TimeZoneOffset">
            <summary>
            Time zone offset
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IOConfig">
            <summary>
            This IOConfig class handles the reading/writing of the
            the IO config block of 2048. The reading of this table in the 
            meter will be implicit while the writing of this table will need to be
            explicitly called.  (read/write)	
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.IO_CONFIG_TBL_SIZE">
            <summary>
            Size of IO Configuration
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor.
            </summary>		
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used for file based structures
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.Read">
            <summary>
            Reads the IO config block out of table 2048 in the meter.  
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.Write">
            <summary>
            Writes the IO config block to the meter.  The member variable
            must contain the values that are to be written.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.Dump">
            <summary>
            Writes the IOConfig contents to the logger for debugging.
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.IOConfig.IOData">
            <summary>
            Gets/Sets the KYZ configuration data.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.ParseData">
            <summary>
            Parses the data read by the call to Read. 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.RetrieveKYZConfiguration(Itron.Metering.DeviceDataTypes.KYZData@)">
            <summary>
            This method retrieves the KYZ configuration. 
            </summary>
            <param name="KYZConfig">A reference to the KYZ configuration object.</param>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.PopulateKYZConfiguration(Itron.Metering.DeviceDataTypes.KYZData)">
            <summary>
            This method populates the KYZ configuration. 
            </summary>
            <param name="KYZConfig">A KYZ configuration object.</param>
        </member>
        <member name="M:Itron.Metering.Device.IOConfig.InitializeMemebers">
            <summary>
            This method initializes the member variables.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh1Type">
            <summary>Output Channel 1 Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh1Event">
            <summary>Output Channel 1 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh1Energy">
            <summary>Output Channel 1 Energy</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh1PulseWidth">
            <summary>Output Channel 1 Pulse Width</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh1PulseWeight">
            <summary>Output Channel 1 Pulse Weight</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh1TestMode">
            <summary>Output Channel 1 Test Mode</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh2Type">
            <summary>Output Channel 2 Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh2Event">
            <summary>Output Channel 2 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh2Energy">
            <summary>Output Channel 2 Energy</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh2PulseWidth">
            <summary>Output Channel 2 Pulse Width</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh2PulseWeight">
            <summary>Output Channel 2 Pulse Weight</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh2TestMode">
            <summary>Output Channel 2 Test Mode</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh3Type">
            <summary>Output Channel 3 Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh3Event">
            <summary>Output Channel 3 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh3Energy">
            <summary>Output Channel 3 Energy</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh3PulseWidth">
            <summary>Output Channel 3 Pulse Width</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh3PulseWeight">
            <summary>Output Channel 3 Pulse Weight</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh3TestMode">
            <summary>Output Channel 3 Test Mode</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh4Type">
            <summary>Output Channel 4 Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh4Event">
            <summary>Output Channel 4 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh4Energy">
            <summary>Output Channel 4 Energy</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh4PulseWidth">
            <summary>Output Channel 4 Pulse Width</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh4PulseWeight">
            <summary>Output Channel 4 Pulse Weight</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh4TestMode">
            <summary>Output Channel 4 Test Mode</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh5Type">
            <summary>Output Channel 5 Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh5Event">
            <summary>Output Channel 5 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh5Energy">
            <summary>Output Channel 5 Energy</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh5PulseWidth">
            <summary>Output Channel 5 Pulse Width</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_uiOutputCh5PulseWeight">
            <summary>Output Channel 5 Pulse Weight</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byOutputCh5TestMode">
            <summary>Output Channel 5 Test Mode</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byInputCh1Action">
            <summary>Input Channel 1 Action</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byInputCh1TriggerType">
            <summary>Input Channel 1 Trigger Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_fltInputCh1PulseWeight">
            <summary>Input Channel 1 Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byInputCh2Action">
            <summary>Input Channel 2 Action</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_byInputCh2TriggerType">
            <summary>Input Channel 2 Trigger Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.IOConfig.m_fltInputCh2PulseWeight">
            <summary>Input Channel 2 Event</summary>
        </member>
        <member name="T:Itron.Metering.Device.DemandConfig">
            <summary>
            This DemandConfig class handles the reading of the demand config 
            block of 2048. The reading of this table in the meter will be implicit.
            (read-only)
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DemandConfig.SCHEDCONTROL">
            <summary>Schedule Control</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.SCHEDCONTROL.DEMAND_RESET_DISABLED">
            <summary>
            Demand reset Disabled
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.SCHEDCONTROL.DEMAND_RESET_N_DAYS">
            <summary>Demand Reset Every N Days</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.SCHEDCONTROL.DEMAND_RESET_N_DAY_MONTH">
            <summary>Demand Reset Nth Day of the Month</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.SCHEDCONTROL.DEMAND_RESET_N_DAY_END_MONTH">
            <summary>Demand Reset N Days before the End of the month</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.SCHEDCONTROL.DEMAND_RESET_CUSTOM">
            <summary>Custom Demand Reset</summary>
        </member>
        <member name="T:Itron.Metering.Device.DemandConfig.DemandControl">
            <summary>
            The Demand Control types.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DemandConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.DemandConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            <param name="Size">Size of Table</param>
        </member>
        <member name="M:Itron.Metering.Device.DemandConfig.Read">
            <summary>
            Reads the Demand config block out of table 2048 in the meter.  We only
            care about the schedule control byte, for now put the rest of the block
            in filler arrays.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.DemandConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.CustomSchedSupported">
            <summary>
            Returns whether or not the custom schedule is programmed
            for demand reset billing schedule. (out parameter)
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.NumberOfSubIntervals">
            <summary>
            Gets the number of sub intervals for Demand Registers
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.IntervalLength">
            <summary>
            Gets the interval length for Demand Registers
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.NumberOfTestModeSubIntervals">
            <summary>
            Gets the number of test mode sub intervals for Demand Registers
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.TestModeIntervalLength">
            <summary>
            Gets the test mode interval length for Demand Registers
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.OutageLength">
            <summary>
            Gets the Outage Length before Cold Load Pickup in seconds.
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.ColdLoadPickupTime">
            <summary>
            Gets the Cold Load Pickup Time in minutes
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.DemandControlByte">
            <summary>
            Gets the Demand Control Byte - (In OpenWay bit 7 is used for Load Control reconnect)
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.DemandThreshold_1_Level">
            <summary>
            Gets the Demand Threshold 1 - Level - (In OpenWay this indicates if Load Control is enabled)
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">
            Thrown when a PSEM communications error occurs
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.DemandConfig.Demands">
            <summary>
            Gets the list of configured demands as LID numbers
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DemandConfig.ParseData">
            <summary>
            Parses the data read by the call to Read. This is used so
            that we do not try to parse to much data in the CENTRON_AMI
            version of the DemandConfig table
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byDemandControl">
            <summary>Demand Control</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byNumSubIntervals">
            <summary>Number of Sub Intervals</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byIntervalLength">
            <summary>Interval Length</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byTestModeNumSubIntervals">
            <summary>Test Mode Number of Subintervals</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byTestModeIntervalLength">
            <summary>Test Mode Interval Length</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_SchedControl">
            <summary>Schedule Control</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byDemandResetHour">
            <summary>Demand reset Hour</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byDemandResetMinute">
            <summary>Demand Reset Minute</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byDemandResetDay">
            <summary>Demand Reset Day</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition1">
            <summary>Demand Definition 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition2">
            <summary>Demand Definition 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition3">
            <summary>Demand Definition 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition4">
            <summary>Demand Definition 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition5">
            <summary>Demand Definition 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition6">
            <summary>Demand Definition 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition7">
            <summary>Demand Defintion 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition8">
            <summary>Demand Defintion 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition9">
            <summary>Demand Defintion 9</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiDemandDefinition10">
            <summary>Demand Defintion 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiThresholdSource1">
            <summary>Threshold Source 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_fThresholdLevel1">
            <summary>Threshold Level 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiThresholdSource2">
            <summary>Threshold Source 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_fThresholdLevel2">
            <summary>Threshold Level 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiThresholdSource3">
            <summary>Threshold Source 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_fThresholdLevel3">
            <summary>Threshold Level 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_uiThresholdSource4">
            <summary>Threshold Source 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_fThresholdLevel4">
            <summary>Threshould Level 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_fRegisterFullScale">
            <summary>Register Full Scale</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_usOutageLength">
            <summary>Outage Length</summary>
        </member>
        <member name="F:Itron.Metering.Device.DemandConfig.m_byColdLoadPickupTime">
            <summary>Cold Load Pickup Time</summary>
        </member>
        <member name="T:Itron.Metering.Device.SelfReadConfig">
            <summary>
            This SelfReadConfig class handles the reading of the self read config 
            block of 2048. The reading of this table in the meter will be
            implicit.  (read-only)
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.SelfReadConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.SelfReadConfig.Read">
            <summary>
            Reads the SelfReadConfig component and popuplates its fields
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.SelfReadConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.SelfReadConfig.CustomSchedSupported">
            <summary>
            Returns whether or not the custom schedule is programmed
            for self reads. (out parameter)
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="T:Itron.Metering.Device.BillingSchedConfig">
            <summary>
            This CTable2048CustomSched class handles the writing and reading of the 
            billing schedule (custom schedule) config block to 2048.  This table will 
            need to be explicitly written to the meter. (read-write)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.NUMBER_OF_CUSTOM_SCHED_ITEMS">
            <summary>
            This is the number of custom schedule items allowed in the meter (300)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.NUMBER_OF_CUSTOM_SCHED_ITEMS_AMI">
            <summary>
            This is the number of custom schedule items allowed in AMI meters (8)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.SENTINEL_BILLING_SCHED_CONFIG_LENGTH">
            <summary>
            Size of the table for Sentinel meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.IMAGE_BILLING_SCHED_CONFIG_LENGTH">
            <summary>
            Size of the table for Image meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.AMI_BILLING_SCHED_CONFIG_LENGTH">
            <summary>
            Size of the table for AMI (Open Way) meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.END_OF_CUST_SCHED">
            <summary>
            This needs to be set as the last schedule date
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.BillingSchedConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            <param name="Size">Meter type dependent size of the Billing 
            Schedule configuration</param>
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.BillingSchedConfig.Read">
            <summary>
            Reads the BillingSchedConfig component and popuplates its fields
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.BillingSchedConfig.Write">
            <summary>
            Writes the BillingSchedConfig component to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.BillingSchedConfig.Dump">
            <summary>
            Writes BillingSchedConfig to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.BillingSchedConfig.ScheduleDates">
            <summary>
            Gets or sets all the custom schedule dates as number of days since 01/01/2000
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BillingSchedConfig.ScheduleLength">
            <summary>
            Gets the number of custom schedule dates configured in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BillingSchedConfig.ScheduleName">
            <summary>
            Gets or sets the Schedule Name field in 2048.  The calling class will need to 
            explicitly write this table down to the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.BillingSchedConfig.ScheduleNameSupported">
            <summary>
            Property used to get whether or not the schedule name is supported
            in this config block.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.m_ScheduleDate">
            <summary>
            Schedule dates array
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.BillingSchedConfig.m_ScheduleName">
            <summary>
            Schedule name field, not supported by the Sentinel or Open Way
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.OptionBoardHeader">
            <summary>
            This OptionBoardHeader class handles the reading of the header info
            from the option board config block in 2048.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OPTION_BOARD_HEADER_LENGTH">
            <summary>Option Board Header Length</summary>
        </member>
        <member name="T:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs">
            <summary>
            Option board IDs
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.Modem">
            <summary>Modem</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R300_0ERT_IDs">
            <summary>R300 - 0 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R300_1_ERT_ID">
            <summary>R300 - 1 ERT ID</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R300_2_ERT_IDs">
            <summary>R300 - 2 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R300_3_ERT_IDs">
            <summary>R300 - 3 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R900_0ERT_IDs">
            <summary>R900 - 0 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R900_1_ERT_ID">
            <summary>R900 - 1 ERT ID</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R900_2_ERT_IDs">
            <summary>R900 - 2 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.R900_3_ERT_IDs">
            <summary>R900 - 3 ERT IDs</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.CellNet">
            <summary>CellNet</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.RS232_485_2_Prt">
            <summary>RS232_485 - 2 Port</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.RS232_485_1_Prt">
            <summary>RS232_485 - 1 Port</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.Generic">
            <summary>Generic</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.SmartSync">
            <summary>SmartSync</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.Ethernet_RS232">
            <summary>Ethernet Rs232</summary>
        </member>
        <member name="F:Itron.Metering.Device.OptionBoardHeader.OptionBoardIDs.Ethernet">
            <summary>Ethernet</summary>
        </member>
        <member name="M:Itron.Metering.Device.OptionBoardHeader.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048.</param>
            
        </member>
        <member name="M:Itron.Metering.Device.OptionBoardHeader.Read">
            <summary>
            Reads the option board header out of table 2048 in the meter.
            This class only reads the header, the first 23 bytes.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.OptionBoardHeader.Dump">
            <summary>
            Writes OptionBoardHeader to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.OptionBoardHeader.OptionBoardID">
            <summary>
            Property used to get the option board ID
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="T:Itron.Metering.Device.R300Config">
            <summary>
            This class represents the configuration portion of the R300 option 
            board config.  The option board header info that identifies the board
            is not handled by the OptionBoardHeader class.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.R300Config.R300_ERT_Config">
            <summary>R300 ERT Configuration</summary>
        </member>
        <member name="F:Itron.Metering.Device.R300Config.R300_ERT_Config.uiLid">
            <summary>
            ERT Qty
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.R300Config.R300_ERT_Config.byLidDataType">
            <summary>
            Data type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.R300Config.R300_ERT_Config.byLidDisplayFormat">
            <summary>
            Display Format
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.R300Config.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The Offset is the offset of this config block
            in table 2048. This offset should be the OptionBoardHeader offset +
            the size of the option board header (23 bytes)</param>
            
        </member>
        <member name="M:Itron.Metering.Device.R300Config.Read">
            <summary>
            Reads the R300 config block out of table 2048 in the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.R300Config.Dump">
            <summary>
            Writes R300Config to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.R300Config.R300ERTConfig">
             <summary>
             Property used to get the configuration of an ERT
             </summary>
             <exception>
             Throws: TimeoutException for Timeouts
             		PSEMException for other communication errors.
             </exception>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             06/06/06 mrj 7.30.00 N/A    Created
            
        </member>
        <member name="T:Itron.Metering.Device.ModemConfig">
            <summary>
            This class handles the configuration data for the Modem option board.
            This should only be used if the Option Board ID obtained from the 
            OptionBoardHeader class.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ModemConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">The PSEM communications object for the current session.</param>
            <param name="usOffset">The offset of the table into 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.ModemConfig.Read">
            <summary>
            Reads the Modem Configuration out of the meter
            </summary>
            <returns>The PSEM Response code for the read request.</returns>
        </member>
        <member name="M:Itron.Metering.Device.ModemConfig.Write">
            <summary>
            Writes the table to the meter.
            </summary>
            <returns>The PSEM response code for the write to the meter.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ModemConfig.PhoneNumbers">
            <summary>
            Gets or sets the list of phone numbers configured into the meter.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ModemConfig.InsideWindowSeconds">
            <summary>
            Gets or sets the inside call window wait time in seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ModemConfig.OutsideWindowSeconds">
            <summary>
            Gets or sets the inside call window wait time in seconds.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ModemConfig.AnswerOutsideWindow">
            <summary>
            Gets whether or not the modem is configured to answer calls outside of
            a call window
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CalendarConfig">
            <summary>
            The CalendarConfig class represents the Calendar Configuration data 
            block in table 2048.
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.Byte)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Calendar Configuartion Table Constructor for file based structure
            </summary>
            <param name="BinaryReader">PSEM binary reader</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.UInt16,System.Byte)">
            <summary>
            Calendar Configuartion Table Constructor for file based structure
            </summary>
            <param name="BinaryReader">PSEM binary reader</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Byte offset of the start of this table</param>
            <param name="Size">Size of the table in bytes</param>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.Read">
            <summary>
            Reads the Calendar configuration component from table 2048 and 
            populates the CalendarConfig fields with the values read
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.Write">
            <summary>
            Writes the Calendar configuration portion of table 2048 to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.Clear">
            <summary>
            Clears MOST of the CalendarConfig table.  This is usually done 
            prior to reconfiguration, so unused portions don't explicitly have 
            to be updated. The Control value is not cleared because it's not
            in the TOU schedule.
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.FindYearIndex(System.Int32,System.Byte@)">
            <summary>
            Finds the index of the requested year in the calendar's Years array
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.GetEventType(System.UInt16)">
            <summary>
            Translates the CalendarEventType for a Calendar event into an eEventType
            for the TOUSchedule class.
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.GetSeasonIndex(System.UInt16)">
            <summary>
            Translates the CalendarEventType for a Calendar event into an eEventType
            for the TOUSchedule class.
            </summary>
            <returns>The TOU Schedule object.</returns>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.CalendarID">
            <summary>
            Returns the configured Calendar ID 
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.Control">
            <summary>
            Returns the configured Calendar Control value
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.DSTHour">
            <summary>
            Returns the configured DST change hour
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.DSTMinute">
            <summary>
            Returns the configured DST change minute
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.DSTOffset">
            <summary>
            Returns the configured DST change amount in minutes
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.MaxYears">
            <summary>
            Returns the max calendar years supported by the device.  This value 
            is device and firmware specific.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.Years">
            <summary>
            Gets the CalendarYear data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.EventsPerYear">
            <summary>
            Provides access to the Number of Events per Year
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarConfig.DSTEventsPerYear">
            <summary>
            Provides access to the Number of DST Events per Year
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.ParseData">
            <summary>
            Parses the data read by the call to Read. This is used so
            that we do not try to parse to much data in the CENTRON_AMI
            version of the TOUConfig table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarConfig.InitializeData(System.Byte)">
            <summary>
            Setup data items
            </summary>
            <param name="MaxCalYears">The max calendar years the TOU calendar can 
            support</param>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.CALENDAR_REFERENCE_YEAR">
            <summary>
            Year values have implied century 2000
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_Years">
            <summary>Array of Calendar Years</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_CalendarID">
            <summary>The TOU Calendar ID</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_Control">
            <summary>Control Byte</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_DSTHour">
            <summary>DST Hour </summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_DSTMinute">
            <summary>DST Minute</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarConfig.m_DSTOffset">
            <summary>DST Offset</summary>
        </member>
        <member name="T:Itron.Metering.Device.CalendarYear">
            <summary>
            Represents the structure of a Calendar Year as defined by the
            the device's CONFIGURATION_DATA.doc.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarYear.#ctor(System.Int32)">
            <summary>
            Constructor that takes the number of events per year
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarYear.Year">
            <summary>
            Gets or sets the year that this object represents
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarYear.Events">
            <summary>
            Gets or sets the list of events for the year
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CalendarEvent">
            <summary>
            Represents the structure of a Calendar Day event.  See the
            TIME_MAN_DESIGN.doc, WindChill document #D0209255 for more info.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CalendarEvent.CalendarEventType">
            <summary>
            Calendar Event Types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.ADD_DST">
            <summary>DST Forward</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SUB_DST">
            <summary>DST Backward</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.HOLIDAY">
            <summary>Holiday</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON1">
            <summary>Season 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON2">
            <summary>Season 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON3">
            <summary>Season 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON4">
            <summary>Season 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON5">
            <summary>Season 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON6">
            <summary>Season 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON7">
            <summary>Season 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.SEASON8">
            <summary>Season 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.CalendarEventType.NO_EVENT">
            <summary>No Event</summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarEvent.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarEvent.#ctor(System.UInt16)">
            <summary>
            Constructor. Takes the event data from 2048 as a paramater.
            </summary>
            <param name="usEvent">The event data from the Calendar Config in 2048</param>
        </member>
        <member name="M:Itron.Metering.Device.CalendarEvent.IsDST">
            <summary>
            Returns true if this event is a ToDST or FromDST event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CalendarEvent.IsSeason">
            <summary>
            Returns true if this event is a ToDST or FromDST event
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarEvent.Month">
            <summary>
            Accesses this event's Month - 0 indexed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarEvent.Day">
            <summary>
            Accesses this event's Day - 0 indexed
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarEvent.Type">
            <summary>
            Accesses this event's Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarEvent.TranslatedType">
            <summary>
            Accesses this event's event type as a string for debuggering
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CalendarEvent.Event">
            <summary>
            Gets or sets the event bit field for this event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CalendarEvent.m_usEvent">
            <summary>Calendar Event</summary>
        </member>
        <member name="T:Itron.Metering.Device.TOUConfig">
            <summary>
            The TOUConfig class represents the TOU Configuration data block in
            table 2048. The TOU portion of the configuration defines the seasons
            that are applied across the years of the TOU schedule. Seasons are
            applied to years in the CalendarConfig portion of the configuration.
            </summary>
            
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.HOLIDAY_TYPE_INDEX">
            <summary>
            Holiday Type Index
            </summary> 
        </member>
        <member name="T:Itron.Metering.Device.TOUConfig.TOU_Season">
            <summary>
            Represents the configuration of a TOU Season.  See each meter's
            CONFIGURATION_DATA.doc, WindChill documents 
            #JBAKER01192005-1 (Image), #D0209235 (Sentinel).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.TOU_Season.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.TOU_Season.Clear">
            <summary>
            Clears the data in preparation for writing
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.TOU_Season.Sort">
            <summary>
            Sorts DayEvents by time
            </summary>
                    
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.DayTypesPerSeason">
            <summary>
            Gets the Number of daytypes per Season
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.EventsPerDayType">
            <summary>
            Gets the Number of Events per daytype
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalSunday">
            <summary>
            Gets the daytype index for the typical Sunday.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalMonday">
            <summary>
            Gets the daytype index for the typical Monday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalTuesday">
            <summary>
            Gets the daytype index for the typical Tuesday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalWednesday">
            <summary>
            Gets the daytype index for the typical Wednesday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalThursday">
            <summary>
            Gets the daytype index for the typical Thursday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalFriday">
            <summary>
            Gets the daytype index for the typical Friday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalSaturday">
            <summary>
            Gets the daytype index for the typical Saturday
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.TOU_Season.TypicalHoliday">
            <summary>
            Gets the daytype index for the typical Holiday
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.TOU_Season.IsProgrammed">
            <summary>
            Is this season used?
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.TOU_Season.Daytypes">
            <summary>
            Days of the week to DayType assignments. Two bits used per day
            plus the holiday
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.TOU_Season.TimeOfDayEvents">
            <summary>
            Time of day events - switchpoints
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TOUConfig.DayEvent">
            <summary>
            Time of Day events (TOU Pattern). Rate change and output events.
            See the TIME_MAN_DESIGN.doc, WindChill document #D0209255 for 
            more info.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.EVENT_MASK">
            <summary>The Event Mask</summary>
        </member>
        <member name="T:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent">
            <summary>
            Enumerated values defined for bits 0-3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.NoMoreChanges">
            <summary>No More Changes</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateA">
            <summary>Rate A</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateB">
            <summary>Rate B</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateC">
            <summary>Rate C</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateD">
            <summary>Rate D</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateE">
            <summary>Rate E</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateF">
            <summary>Rate F</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.RateG">
            <summary>Rate G</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output1">
            <summary>Output 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output2">
            <summary>Output 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output3">
            <summary>Output 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output4">
            <summary>Output 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output1Off">
            <summary>Output 1 Off</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output2Off">
            <summary>Output 2 Off</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output3Off">
            <summary>Output 3 Off</summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent.Output4Off">
            <summary>Output 4 Off</summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.DayEvent.#ctor(Itron.Metering.Device.TOUConfig.DayEvent.TOUEvent,System.Byte,System.Byte)">
            <summary>
            Constructor
            </summary>
            <param name="EventType">Event type - DST start/stop, holiday,
            season change</param>
            <param name="Hour">0 based Hour the event starts (0..23)</param>
            <param name="Minute">0 based minute the event starts (0..59)</param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.DayEvent.#ctor(System.UInt16)">
            <summary>
            Constructor - Take Event from Meter
            </summary>
            <param name="usEvent">Meters Event</param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.DayEvent.op_LessThan(Itron.Metering.Device.TOUConfig.DayEvent,Itron.Metering.Device.TOUConfig.DayEvent)">
             <summary>
             Overloaded less than operator.
             </summary>
             <param name="firstEvent">The left hand side.</param>
             <param name="secondEvent">The right hand side.</param>
             <returns>A boolean indicating the result of the comparison.</returns>
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             06/06/06 jrf 7.30.00  N/A   Created
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.DayEvent.op_GreaterThan(Itron.Metering.Device.TOUConfig.DayEvent,Itron.Metering.Device.TOUConfig.DayEvent)">
             <summary>
             Overloaded greater than operator.
             </summary>
             <param name="firstEvent">The left hand side.</param>
             <param name="secondEvent">The right hand side.</param>
             <returns>A boolean indicating the result of the comparison.</returns>
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             06/06/06 jrf 7.30.00  N/A   Created
            
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.DayEvent.Hour">
            <summary>
            Returns the hour the event starts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.DayEvent.Minute">
            <summary>
            Returns the minute the event starts
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.DayEvent.EventType">
            <summary>
            Returns the Event Type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.DayEvent.Description">
            <summary>
            Returns a translated description for debugging
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.DayEvent.Event">
            <summary>
            Packed bits describing A Time of Day event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            TOU Configuration Constructor for file based strucuture.
            </summary>
            <param name="BinaryReader"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            TOU Configuration Constructor for file based strucuture.
            </summary>
            <param name="BinaryReader"></param>
            <param name="TableID">ID of this table</param>
            <param name="Offset"></param>
            <param name="ConfigSize">Size of the TOU config</param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            <param name="ConfigSize">Size of Configuration.</param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16,System.UInt16)">
            <summary>Constructor</summary>
            <param name="psem">Protocol instance to use</param>
            <param name="TableID">ID of this table</param>
            <param name="Offset">Offset of this subtable within table 2048</param>
            <param name="ConfigSize">Size of Configuration.</param>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.Read">
            <summary>
            Reads the TOU configuration component from table 2048 and 
            populates the TOUConfig fields with the values read
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.Write">
            <summary>
            Writes the TOU configuration portion of table 2048 to the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.Clear">
            <summary>
            Clears the TOUConfig table.  This is usually done prior to 
            reconfiguration, so unused portions don't explicitly have to be 
            updated
            </summary>
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.Dump">
            <summary>
            Writes the m_Data contents to the logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.Seasons">
            <summary>
            Gets the array of Season Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.NumberOfSupportedSeasons">
            <summary>
            Provides access to the number of Supported Seasons
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.DayTypesPerSeason">
            <summary>
            Provides access to the number of Day Types per season
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.TOUConfig.EventsPerDayType">
            <summary>
            Provides access to the number of Events Per day Type
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.ParseData">
            <summary>
            Parses the Data during the read
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="M:Itron.Metering.Device.TOUConfig.InitializeData">
            <summary>
            Setup data items
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.m_Seasons">
            <summary>
            TOUConfig season configuration array
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUConfig.m_blnHasSeasonProgrammedByte">
            <summary>
            Paramter that determines if a season programmed byte is defined.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DisplayConfig">
            <summary>
            The DisplayConfig class represents the display configuration data in 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt16)">
            <summary>
            Constuctor for file based strucutre
            </summary>
            <param name="BinaryReader"></param>
            <param name="Offset"></param>
            <param name="Size"></param>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.Read">
            <summary>
            Reads the Displaytconfig block out of table 2048 in the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.NonFatalScrollLockBits">
            <summary>
            Provides Access to the NonFatal Error Scroll and Lock bits
            </summary>
            MM/DD/YY Who Version Issue#   Description
        </member>
        <member name="P:Itron.Metering.Device.DisplayConfig.NormalDisplayData">
            <summary>
            Provides Access to the Normal Display Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayConfig.AlternateDisplayData">
            <summary>
            Provides Access to the Alt Display Data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayConfig.TestDisplayData">
            <summary>
            Provides Access to the Test Display Data
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig.BuildDisplayLists">
            <summary>
            Builds up the Normal and Test Displays (Alt = null)
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.DisplayConfig.ReferenceTime">
            <summary>
            Gets the reference time for the the display items
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig.m_NormalDisplayData">
            <summary>Normal Display Data</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig.m_AltDisplayData">
            <summary>Alternate Displaty Data</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig.m_TestDisplayData">
            <summary>Test Display Data</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig.m_ScrollLockNonFatal">
            <summary>Byte array of NonFatal Scroll Lock Bits</summary>
        </member>
        <member name="T:Itron.Metering.Device.DisplayConfig_Shared">
            <summary>
            Display Configuration Shared Class
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.DISPLAY_CONFIG_SIZE">
            <summary>Display Configuration Size in Bytes</summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16)">
            <summary>
            Constructor for file based strucuture
            </summary>
            <param name="BinaryReader"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt16)">
            <summary>
            Constructor for the Display Configuration piece of 2048.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.Read">
            <summary>
            Reads the Displaytconfig block out of table 2048 in the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors).</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.BuildDisplayLists">
            <summary>
            Builds up the Normal and Test Displays (Alt = null)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.NonFatalScrollLockBits">
            <summary>
            Creates and returns byte array containing Scroll and Lock Bits for NonFatal errors
            </summary>
            MM/DD/YY Who Version Issue#   Description
        </member>
        <member name="M:Itron.Metering.Device.DisplayConfig_Shared.ParseData">
            <summary>
            Parses the data out of the Binary Reader and into the member variables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_DisplayData">
            <summary>Display data</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byDisplayTime">
            <summary>Display Time</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byNormalStart">
            <summary>Normal Start Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byNormalEnd">
            <summary>Normal End Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byAltStart">
            <summary>Alternate List Start Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byAltEnd">
            <summary>Alternate List End Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byTestStart">
            <summary>Test List Start Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byTestEnd">
            <summary>Test List End Index</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byDisplayControl">
            <summary>Display Control Byte</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byScrollNonFatal1">
            <summary>Scroll NonFatal Error 1 Settings</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byScrollNonFatal2">
            <summary>Scroll NonFatal Error 2 Settings</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byLockNonFatal1">
            <summary>Lock NonFatal Error 1 Settings</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byLockNonFatal2">
            <summary>Lock NonFatal Error 2 Settings</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byScrollDiag">
            <summary>Scroll Diagnostic Settings</summary>
        </member>
        <member name="F:Itron.Metering.Device.DisplayConfig_Shared.m_byLockDiag">
            <summary>Lock Diagnostic Settings</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig">
            <summary>
            The HistoryLogConfig class represents the history log configuration in 2048
            </summary>
            <remarks>
            If you add events to this file, be sure to add them also to HistoryEvents in
            ANSIEventTables.cs
            </remarks>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EVENT_CONFIG_SIZE">
            <summary>
            Size of Event Configuration
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_0_15">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.PRIMARY_POWER_DOWN">
            <summary>Power Outage - Index 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.PRIMARY_POWER_UP">
            <summary>Power Restored - Index 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.BILLING_DATA_CLEARED">
            <summary>Clear Billing Data - Index 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.BILLING_SCHED_EXPIRED">
            <summary>Billing Schedule Expirted - Index 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.DST_TIME_CHANGE">
            <summary>DST Time Change - Index 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.CLOCK_RESET">
            <summary>Clock Reset - Index 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.DEMAND_THRESHOLD_EXCEEDED">
            <summary>Demand Threshold Exceeded - Index 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.DEMAND_THRESHOLD_RESTORED">
            <summary>Demand Threshold Restored - Index 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.LOGON_SUCCESSFUL">
            <summary>Logon Successful - Index 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.SECURITY_SUCCESSFUL">
            <summary>Security Successful - Index 12</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.SECURITY_FAILED">
            <summary>Security Failed - Index 13</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_0_15.LOAD_PROFILE_RESET">
            <summary>Load Profile Reset - Index 14</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_16_31">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.HIST_LOG_CLEARED">
            <summary>History Log Cleared - Index 16</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.HIST_PTRS_UPDATED">
            <summary>History Pointers Updated - Index 17</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.EVENT_LOG_CLEARED">
            <summary>Event Log Cleared - Index 18</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.EVENT_LOG_PTRS_UPDATED">
            <summary>Event Log Pointers Updated - Index 19</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.DEMAND_RESET">
            <summary>Demand Reset - Index 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.SELF_READ_OCCURRED">
            <summary>Self Read Occurred - Index 21</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.INPUT_CHANNEL_HI">
            <summary>Input Channel Hi - Index 22</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.INPUT_CHANNEL_LO">
            <summary>Input Channel Low - Index 23</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.TOU_SEASON_CHANGED">
            <summary>TOU Season Changed - Index 24</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.RATE_CHANGE">
            <summary>TOU Rate Change - Index 25</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.EXTERNAL_EVENT">
            <summary>External Event - Index 26</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.SITESCAN_ERROR_OR_CUST_SCHED_CHANGED_EVT">
            <summary>SiteScan for AMI; Custom Schedule Changed - V and I and C12.19 - Index 27</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.PENDING_TABLE_ACTIVATION">
            <summary>Pending table Activation - Index 28</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.PENDING_TABLE_CLEAR">
            <summary>SiteScan for Non-AMI; Pending Table Clear for AMI - Index 29</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.VQ_LOG_PTRS_UPDATED">
            <summary>VQ Log Pointers Updated - Index 30</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_16_31.VQ_LOG_NEARLY_FULL">
            <summary>VQ Log Nearly Full - Index 31</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_32_47">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.ENTER_TEST_MODE">
            <summary>Enter Test Mode - Index 32</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.EXIT_TEST_MODE">
            <summary>Exit Test Mode - Index 33</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.ABC_PH_ROTATION_ACTIVE">
            <summary>ABC Phase Rotation Active - Index 34</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.CBA_PH_ROTATION_ACTIVE">
            <summary>CBA Phase Rotation Active - Index 35</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.METER_REPROGRAMMED">
            <summary>Meter Reprogrammed - Index 36</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.ILLEGAL_CONFIG_ERROR">
            <summary>Illegal Configuration Error - Index 37</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.CPC_COMM_ERROR">
            <summary>CPC Communication Error - Index 38</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.REVERSE_ROTATION_RESTORE">
            <summary>Reverse Rotation Restored - Index 39</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.VQ_LOG_CLEARED">
            <summary>VQ Log Cleared - Index 40</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.TOU_SCHEDULE_ERROR">
            <summary>TOU Schedule Error - Index 41</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.MASS_MEMORY_ERROR">
            <summary>Mass Memory Error - Index 42</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.LOSS_OF_PHASE_RESTORE">
            <summary>Loss of Phase Restore - Index 43</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.LOW_BATTERY">
            <summary>Low Battery - Index 44</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.LOSS_OF_PHASE">
            <summary>Loss of Voltage phase A or Loss of Phase for OpenWay- Index 45</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.REGISTER_FULL_SCALE">
            <summary>Register Full Scale - Index 46</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_32_47.REVERSE_POWER_FLOW_RESTORE">
            <summary>Reverse Power Flow Restore - Index 47</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_48_63">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.REVERSE_POWER_FLOW">
            <summary>Reverse Power Flow - Index 48</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG1_ACTIVE">
            <summary>Site Scan Diagnostic 1 Active - Index 49</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG2_ACTIVE">
            <summary>Site Scan Diagnostic 2 Active - Index 50</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG3_ACTIVE">
            <summary>Site Scan Diagnostic 3 Active - Index 51</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG4_ACTIVE">
            <summary>Site Scan Diagnostic 4 Active - Index 52</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG5_ACTIVE">
            <summary>Site Scan Diagnostic 5 Active - Index 53</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG1_INACTIVE">
            <summary>Site Scan Diagnostic 1 Inactive - Index 54</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG2_INACTIVE">
            <summary>Site Scan Diagnostic 2 Inactive - Index 55</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG3_INACTIVE">
            <summary>Site Scan Diagnostic 3 Inactive - Index 56</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG4_INACTIVE">
            <summary>Site Scan Diagnostic 4 Inactive - Index 57</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG5_INACTIVE">
            <summary>Site Scan Diagnostic 5 Inactive - Index 58</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG6_ACTIVE">
            <summary>Site Scan Diagnostic 6 Active - Index 59</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SS_DIAG6_INACTIVE">
            <summary>Site Scan Diagnostic 6 Inactive - Index 60</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.SELF_READ_CLEARED">
            <summary>Self Read Cleared - Index 61</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.INVERSION_TAMPER">
            <summary>Inversion Tamper - Index 62</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_48_63.REMOVAL_TAMPER">
            <summary>Removal tamper - Index 63</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_64_79">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.REG_DWLD_FAILED">
            <summary>Register Firmware Download Failed - Index 66</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.REG_DWLD_SUCCEEDED">
            <summary>Register Firmware Download Succeeded - Index 67</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.RFLAN_DWLD_SUCCEEDED">
            <summary>RFLAN Firmware Download Succeeded - Index 68</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.ZIGBEE_DWLD_SUCCEEDED">
            <summary>ZigBee Firmware Download Succeeded - Index 69</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.METER_FW_DWLD_SUCCEDED">
            <summary>Display Firmware Download Succeeded - Index 72</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_64_79.METER_DWLD_FAILED">
            <summary>Display Firmware Download Failed - Index 73</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_80_95">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_80_95.ZIGBEE_DWLD_FAILED">
            <summary>ZigBee Firmware Download Failed - Inxed 81</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_80_95.RFLAN_DWLD_FAILED">
            <summary>RFLAN Firmware Download Failed - Index 82</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_80_95.SITESCAN_ERROR_CLEARED">
            <summary>SiteScan Error Cleared - Index 84</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_80_95.LOAD_FIRMWARE">
            <summary>Load Firmare - Index 85</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_96_111">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_96_111.RESET_COUNTERS">
            <summary>Reset Counter - Index 101</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_112_127">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_112_127.FATAL_ERROR">
            <summary>Fatal Error - Index 121</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_112_127.PERIODIC_READ">
            <summary>Periodic Read Occurred - Index 125</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_112_127.SERVICE_LIMITING_ACTIVE_TIER_CHANGED">
            <summary>Service Limiting Active Tier Changed - Index 126</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_128_143">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.TABLE_WRITTEN">
            <summary>Table Written</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.BASE_MODE_ERROR">
            <summary>Base Mode Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.PENDING_RECONFIGURE">
            <summary>Pending Table Activated</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.MAGNETIC_TAMPER_DETECTED">
            <summary>Magnetic Tamper Detected - Index 135</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.MAGNETIC_TAMPER_CLEARED">
            <summary>Magnetic Tamper Cleared - Index 136</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.NETWORK_TIME_UNAVAILABLE">
            <summary>Network Time Unavailable - Index 137</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.CTE_EVENT">
            <summary>Current Threshold Exceeded - Index 140</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_128_143.EVENT_TAMPER_CLEARED">
            <summary>Event Tamper Cleared - Index 141</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_144_159">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_144_159.LAN_HAN_LOG_RESET">
            <summary>HAN/LAN Log Reset - Index 148</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_144_159.DISP_DWLD_INITIATED">
            <summary>Display Firmware Download Initiated - Index 151</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_160_175">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.PENDING_TABLE_ACTIVATE_FAIL">
            <summary>Pending Table Activate Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.HAN_DEVICE_STATUS_CHANGE">
            <summary>HAN Device Status Change</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.ERT_242_COMMAND_REQUEST">
            <summary>ERT 242 Command Request</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.HAN_LOAD_CONTROL_EVENT_STATUS">
            <summary>HAN Load Control Event Status</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.HAN_LOAD_CONTROL_EVENT_OPT_OUT">
            <summary>HAN Load Control Event Opt Out</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.HAN_MESSAGING_EVENT">
            <summary>HAN Messaging Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.HAN_DEVICE_ADDED_OR_REMOVED">
            <summary>HAN Device Added or Removed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.DISP_DWLD_INITIATION_FAILED">
            <summary>Display Firmware Download Initiation Failed - Index 168</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.REG_DWLD_INITIATED">
            <summary>Register Firmware Download Initiated - Index 169</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.RFLAN_DWLD_INITIATED">
            <summary>RFLAN Firmware Download Initiated - Index 170</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.ZIGBEE_DWLD_INITIATED">
            <summary>ZigBee Firmware Download Initiated - Index 171</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.REG_DWLD_INITIATION_FAILED">
            <summary>Register Firmware Download Initiation Failed - Index 172</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.RFLAN_DWLD_INITIATION_FAILED">
            <summary>RFLAN Firmware Download Initiation Failed - Index 173</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.ZIGBEE_DWLD_INITIATION_FAILED">
            <summary>ZigBee Firmware Download Initiation Failed - Index 174</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_160_175.FW_DWLD_EVENT_LOG_FULL">
            <summary>Firmware Download Event Log Full - Index 175</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_176_191">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.RFLAN_FW_DWLD_STATUS">
            <summary>RFLAN Firmawre Download Status - Index 176</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.ZIGBEE_FW_DWLD_STATUS">
            <summary>ZigBee Firmware Download Status - Index 177</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REG_DWLD_ALREADY_ACTIVE">
            <summary>Register Firmware Download Alreaday Active - Index 178</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.RFLAN_DWLD_ALREADY_ACTIVE">
            <summary>RFLAN Firmware Download Already Active - Index 179</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.EXTENDED_OUTAGE_RECOVERY_MODE_ENTERED">
            <summary>Extended Outage Recovery Mode Entered - Index 180</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.THIRD_PARTY_HAN_FW_DWLD_STATUS">
            <summary>Third Party HAN Device Firmware Download Status - Index 181</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.FW_DWLD_ABORT">
            <summary>Firmware Download Abort - Index 184</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REMOTE_CONNECT_FAILED">
            <summary>Remote Connect Failed - Index 185</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REMOTE_DISCONNECT_FAILED">
            <summary>Remote Disconnected Failed - Index 196</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REMOTE_DISCONNECT_RELAY_ACTIVATED">
            <summary>Remote Disconnect Relay Activated - Index 187</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REMOTE_CONNECT_RELAY_ACTIVATED">
            <summary>Remote Connect Relay Activated - Index 188</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.REMOTE_CONNECT_RELAY_INITIATED">
            <summary>Remote Connect Relay Initiated - Index 189/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_176_191.TABLE_CONFIGURATION">
            <summary>Table Write for Asset Synchronization - Index 191</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_192_207">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_192_207.CPP_EVENT">
            <summary>Critical Peak Pricing - Index 192</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_192_207.RMS_VOLTAGE_FROM_BELOW_LOW_THRESHOLD_TO_NORMAL">
            <summary>VRMS Voltage Goes From Below Low To Normal - Index 194</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_192_207.RMS_VOLTAGE_FROM_ABOVE_HIGH_THRESHOLD_TO_NORMAL">
            <summary>VRMS Voltage Goes From Above High To Normal - Index 195</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_192_207.VOLT_HOUR_FROM_BELOW_LOW_THRESHOLD_TO_NORMAL">
            <summary>Vh Goes From Below Low To Normal - Index 196</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_192_207.VOLT_HOUR_FROM_ABOVE_HIGH_THRESHOLD_TO_NORMAL">
            <summary>Vh Goes From Above High To Normal - Index 197</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_208_223">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_208_223.WRONG_CONFIG_CRC">
            <summary>WRONG_CONFIG_CRC - Index 213</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_208_223.CHECK_CONFIG_CRC">
            <summary>CHECK_CONFIG_CRC - Index 214</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_208_223.EVENT_HARDWARE_ERROR_DETECTION">
            <summary>Hardware Error - Index 215</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_208_223.TEMPERATURE_EXCEEDS_THRESHOLD1">
            <summary>Temperature exceeds threshold 1 - Index 223/// </summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_224_239">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.TEMPERATURE_EXCEEDS_THRESHOLD2">
            <summary>Temperature exceeds threshold 2 - Index 224</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.TEMPERATURE_RETURNED_TO_NORMAL">
            <summary>Temperature returned to normal - Index 225</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.NETWORK_HUSH_STARTED">
            <summary>Network Hush Started - Index 228</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.LOAD_VOLT_PRESENT">
            <summary>Load Voltage Preset - Index 230</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.PENDING_TABLE_CLEAR_FAIL">
            <summary>Firmware Download Aborted - Index 231</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.FIRMWARE_PENDING_TABLE_FULL">
            <summary>Pending Table Full - Index 232</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.FIRMWARE_PENDING_TABLE_HEADER_SWAPPED">
            <summary>Pending Table Swap - Index 233</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.EVENT_SCHEDULING_REJECTED">
            <summary>Event Scheduling Rejected - Index 234</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.C12_22_REGISTRATION_ATTEMPT">
            <summary>C12.22 Registration Attempt - Index 235</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.C12_22_REGISTERED">
            <summary>C12.22 Registered - Index 236</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.C12_22_DEREGISTRATION_ATTEMPT">
            <summary>C12.22 Deregistration Attempt - Index 237</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.C12_22_DEREGISTERED">
            <summary>C12.22 Deregistered - Index 238</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_224_239.C12_22_RFLAN_CELL_ID_CHANGE">
            <summary>C12.22 RFLAN Cell ID Change - Index 239/// </summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_240_255">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.TIME_ADJUSTMENT_FAILED">
            <summary>Time Adjustment Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.EVENT_CACHE_OVERFLOW">
            <summary>Event Cache Overflow - Index 241</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.ON_DEMAND_PERIODIC_READ">
            <summary>On Demand Periodic Read - Index 244</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.EVENT_GENERIC_HISTORY_EVENT">
            <summary>Generic history log event. MSB in argument defines type</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.RMS_VOLTAGE_BELOW_LOW_THRESHOLD">
            <summary>RMS Voltage Bleow Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.VOLT_RMS_ABOVE_THRESHOLD">
            <summary>Volt(RMS) Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.VOLT_HOUR_BELOW_LOW_THRESHOLD">
            <summary>Volt Hour Below Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.VOLT_HOUR_ABOVE_THRESHOLD">
            <summary>VOlt Hour Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.PENDING_TABLE_ERROR">
            <summary>Pending Table Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.SECURITY_EVENT">
            <summary>Security Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.KEY_ROLLOVER_PASS">
            <summary>Key Rollover Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.SIGN_KEY_REPLACE_PROCESSING_PASS">
            <summary>Sign Key Rpelace Processing Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_240_255.SYMMETRIC_KEY_REPLACE_PROCESSING_PASS">
            <summary>Symmetric Key Replace Processing Pass</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.Event_256_271">
            <summary>
            Each item in the enum is a bit mask for identifying whether or
            not the meter has been configured to record the event. This range is
            for the M2 Gateway only
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.Event_256_271.GW_CONFIGURATION_DOWNLOAD">
            <summary>Gateway Configuration Download</summary>
        </member>
        <member name="T:Itron.Metering.Device.HistoryLogConfig.EventID">
            <summary>
            The IDs associated with each event
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.POWER_OUTAGE">
            <summary>Power Outage - Index 1</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.POWER_RESTORED">
            <summary>Power Restored - Index 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.CLEAR_BILLING_DATA">
            <summary>Clear Billing Data - Index 3</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.BILLING_SCHED_EXPIRED">
            <summary>Billing Schedule Expirted - Index 4</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DST_TIME_CHANGE">
            <summary>DST Time Change - Index 5</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.CLOCK_RESET">
            <summary>Clock Reset - Index 6</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DEMAND_THRESHOLD_EXCEEDED">
            <summary>Demand Threshold Exceeded - Index 7</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DEMAND_THRESHOLD_RESTORED">
            <summary>Demand Threshold Restored - Index 8</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOGON_SUCCESSFUL">
            <summary>Logon Successful - Index 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SECURITY_SUCCESSFUL">
            <summary>Security Successful - Index 12</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SECURITY_FAILED">
            <summary>Security Failed - Index 13</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOAD_PROFILE_RESET">
            <summary>Load Profile Reset - Index 14</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HIST_LOG_CLEARED">
            <summary>History Log Cleared - Index 16</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HIST_PTRS_UPDATED">
            <summary>History Pointers Updated - Index 17</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EVENT_LOG_CLEARED">
            <summary>Event Log Cleared - Index 18</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EVENT_LOG_PTRS_UPDATED">
            <summary>Event Log Pointers Updated - Index 19</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DEMAND_RESET">
            <summary>Demand Reset - Index 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SELF_READ_OCCURRED">
            <summary>Self Read Occurred - Index 21</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.INPUT_CHANNEL_HI">
            <summary>Input Channel Hi - Index 22</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.INPUT_CHANNEL_LO">
            <summary>Input Channel Low - Index 23</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.TOU_SEASON_CHANGED">
            <summary>TOU Season Changed - Index 24</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RATE_CHANGE">
            <summary>TOU Rate Change - Index 25</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EXTERNAL_EVENT">
            <summary>External Event - Index 26</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SITESCAN_OR_CUSTOM_SCHED_ERROR">
            <summary>SiteScan for AMI; Custom Schedule Changed - V and I and C12.19 - Index 27</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_ACTIVATION">
            <summary>Pending table Activation - Index 28</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SITESCAN_OR_PENDING_TABLE_CLEAR">
            <summary>SiteScan for Non-AMI; Pending Table Clear for AMI - Index 29</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VQ_LOG_PTRS_UPDATED">
            <summary>VQ Log Pointers Updated - Index 30</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VQ_LOG_NEARLY_FULL">
            <summary>VQ Log Nearly Full - Index 31</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ENTER_TEST_MODE">
            <summary>Enter Test Mode - Index 32</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EXIT_TEST_MODE">
            <summary>Exit Test Mode - Index 33</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ABC_PH_ROTATION_ACTIVE">
            <summary>ABC Phase Rotation Active - Index 34</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.CBA_PH_ROTATION_ACTIVE">
            <summary>CBA Phase Rotation Active - Index 35</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.METER_REPROGRAMMED">
            <summary>Meter Reprogrammed - Index 36</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ILLEGAL_CONFIG_ERROR">
            <summary>Illegal Configuration Error - Index 37</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.CPC_COMM_ERROR">
            <summary>CPC Communication Error - Index 38</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REVERSE_ROTATION_RESTORE">
            <summary>Reverse Rotation Restored - Index 39</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VQ_LOG_CLEARED">
            <summary>VQ Log Cleared - Index 40</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.TOU_SCHEDULE_ERROR">
            <summary>TOU Schedule Error - Index 41</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.MASS_MEMORY_ERROR">
            <summary>Mass Memory Error - Index 42</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOSS_OF_PHASE_RESTORE">
            <summary>Loss of Phase Restore - Index 43</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOW_BATTERY">
            <summary>Low Battery - Index 44</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOSS_VOLTAGE_A_OR_LOSS_OF_PHASE">
            <summary>Loss of Voltage phase A or Loss of Phase for OpenWay- Index 45</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REGISTER_FULL_SCALE">
            <summary>Register Full Scale - Index 46</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REVERSE_POWER_FLOW_RESTORE">
            <summary>Reverse Power Flow Restore - Index 47</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REVERSE_POWER_FLOW">
            <summary>Reverse Power Flow - Index 48</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG1_ACTIVE">
            <summary>Site Scan Diagnostic 1 Active - Index 49</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG2_ACTIVE">
            <summary>Site Scan Diagnostic 2 Active - Index 50</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG3_ACTIVE">
            <summary>Site Scan Diagnostic 3 Active - Index 51</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG4_ACTIVE">
            <summary>Site Scan Diagnostic 4 Active - Index 52</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG5_ACTIVE">
            <summary>Site Scan Diagnostic 5 Active - Index 53</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG1_INACTIVE">
            <summary>Site Scan Diagnostic 1 Inactive - Index 54</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG2_INACTIVE">
            <summary>Site Scan Diagnostic 2 Inactive - Index 55</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG3_INACTIVE">
            <summary>Site Scan Diagnostic 3 Inactive - Index 56</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG4_INACTIVE">
            <summary>Site Scan Diagnostic 4 Inactive - Index 57</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG5_INACTIVE">
            <summary>Site Scan Diagnostic 5 Inactive - Index 58</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG6_ACTIVE">
            <summary>Site Scan Diagnostic 6 Active - Index 59</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SS_DIAG6_INACTIVE">
            <summary>Site Scan Diagnostic 6 Inactive - Index 60</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SELF_READ_CLEARED">
            <summary>Self Read Cleared - Index 61</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.INVERSION_TAMPER">
            <summary>Inversion Tamper - Index 62</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOVAL_TAMPER">
            <summary>Removal tamper - Index 63</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_DWLD_FAILED">
            <summary>Register Firmware Download Failed - Index 66</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_DWLD_SUCCEEDED">
            <summary>Register Firmware Download Succeeded - Index 67</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_DWLD_SUCCEEDED">
            <summary>RFLAN Firmware Download Succeeded - Index 68</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ZIGBEE_DWLD_SUCCEEDED">
            <summary>ZigBee Firmware Download Succeeded - Index 69</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DISP_DWLD_SUCCEEDED">
            <summary>Display Firmware Download Succeeded - Index 72</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DISP_DWLD_FAILED">
            <summary>Display Firmware Download Failed - Index 73</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ZIGBEE_DWLD_FAILED">
            <summary>ZigBee Firmware Download Failed - Inxed 81</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_DWLD_FAILED">
            <summary>RFLAN Firmware Download Failed - Index 82</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SITESCAN_ERROR_CLEAR">
            <summary>SiteScan Error Cleared - Index 84</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOAD_FIRMWARE">
            <summary>Load Firmare - Index 85</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RESET_COUNTERS">
            <summary>Reset Counter - Index 101</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.FATAL_ERROR">
            <summary>Fatal Error - Index 121</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SERVICE_LIMITING_ACTIVE_TIER_CHANGED">
            <summary>Service Limiting Active Tier Changed - Index 126</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.TABLE_WRITTEN">
            <summary>Table Written</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.BASE_MODE_ERROR">
            <summary>Base Mode Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_RECONFIGURE">
            <summary>Pending Table Activated</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EVENT_TAMPER_CLEARED">
            <summary>Event Tamper Cleared - Index 141</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LAN_HAN_LOG_RESET">
            <summary>HAN/LAN Log Reset - Index 148</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DISP_DWLD_INITIATED">
            <summary>Display Firmware Download Initiated - Index 151</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_ACTIVATE_FAILED">
            <summary>Pending Table Activate Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_DEVICE_STATUS_CHANGE">
            <summary>HAN Device Status Change</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_SENT">
            <summary>HAN Load Control Event Sent</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_STATUS">
            <summary>HAN Load Control Event Status</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_LOAD_CONTROL_EVENT_OPT_OUT">
            <summary>HAN Load Control Event Opt Out</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_MESSAGING_EVENT">
            <summary>HAN Messaging Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.HAN_DEVICE_ADDED_OR_REMOVED">
            <summary>HAN Device Added or Removed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.DISP_DWLD_INITIATION_FAILED">
            <summary>Display Firmware Download Initiation Failed - Index 168</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_DWLD_INITIATED">
            <summary>Register Firmware Download Initiated - Index 169</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_DWLD_INITIATED">
            <summary>RFLAN Firmware Download Initiated - Index 170</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ZIGBEE_DWLD_INITIATED">
            <summary>ZigBee Firmware Download Initiated - Index 171</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_DWLD_INITIATION_FAILED">
            <summary>Register Firmware Download Initiation Failed - Index 172</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_DWLD_INITIATION_FAILED">
            <summary>RFLAN Firmware Download Initiation Failed - Index 173</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ZIGBEE_DWLD_INITIATION_FAILED">
            <summary>ZigBee Firmware Download Initiation Failed - Index 174</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_FW_DWLD_STATUS">
            <summary>Register Firmware Download Status - Index 175</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_FW_DWLD_STATUS">
            <summary>RFLAN Firmawre Download Status - Index 176</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.ZIGBEE_FW_DWLD_STATUS">
            <summary>ZigBee Firmware Download Status - Index 177</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REG_DWLD_ALREADY_ACTIVE">
            <summary>Register Firmware Download Alreaday Active - Index 178</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RFLAN_DWLD_ALREADY_ACTIVE">
            <summary>RFLAN Firmware Download Already Active - Index 179</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.THIRD_PARTY_HAN_FW_DWLD_STATUS">
            <summary>Third Party HAN Device Firmware Download Status - Index 181</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.FW_DWLD_ABORT">
            <summary>Firmware Download Abort - Index 184</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOTE_CONNECT_FAILED">
            <summary>Remote Connect Failed - Index 185</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOTE_DISCONNECT_FAILED">
            <summary>Remote Disconnected Failed - Index 186</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOTE_DISCONNECT_RELAY_ACTIVATED">
            <summary>Remote Disconnect Relay Activated - Index 187</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOTE_CONNECT_RELAY_ACTIVATED">
            <summary>Remote Connect Relay Activated - Index 188</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.REMOTE_CONNECT_RELAY_INITIATED">
            <summary>Remote Connect Relay Initiated - Index 189/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.CRITICAL_PEAK_PRICING">
            <summary>Critical Peak Pricing - Index 192/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.BILLING_SCHEDULE_CHANGE">
            <summary>Billing Schedule Change - Index 213</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.NETWORK_HUSH_STARTED">
            <summary>Network Hush Started</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.LOAD_VOLT_PRESENT">
            <summary>Load Voltage Preset - Index 230</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_CLEAR_FAILED">
            <summary>Firmware Download Aborted - Index 231</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_FULL">
            <summary>Pending Table Full - Index 232</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_SWAP">
            <summary>Pending Table Swap - Index 233</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EVENT_SCHEDULING_REJECTED">
            <summary>Event Scheduling Rejected - Index 234</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.C12_22_REGISTRATION_ATTEMPT">
            <summary>C12.22 Registration Attempt - Index 235</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.C12_22_REGISTERED">
            <summary>C12.22 Registered - Index 236</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.C12_22_DEREGISTRATION_ATTEMPT">
            <summary>C12.22 Deregistration Attempt - Index 237</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.C12_22_DEREGISTERED">
            <summary>C12.22 Deregistered - Index 238</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.C12_22_RFLAN_CELL_ID_CHANGE">
            <summary>C12.22 RFLAN Cell ID Change - Index 239/// </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.TIME_ADJUSTMENT_FAILED">
            <summary>Time Adjustment Failed</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.EVENT_CACHE_OVERFLOW">
            <summary>Event Cache Overflow - Index 241</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.RMS_VOLTAGE_BELOW_LOW_THRESHOLD">
            <summary>RMS Voltage Bleow Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VOLT_RMS_ABOVE_THRESHOLD">
            <summary>Volt(RMS) Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VOLT_HOUR_BELOW_LOW_THRESHOLD">
            <summary>Volt Hour Below Low Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.VOLT_HOUR_ABOVE_THRESHOLD">
            <summary>VOlt Hour Above Threshold</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.PENDING_TABLE_ERROR">
            <summary>Pending Table Error</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SECURITY_EVENT">
            <summary>Security Event</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.KEY_ROLLOVER_PASS">
            <summary>Key Rollover Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SIGN_KEY_REPLACE_PROCESSING_PASS">
            <summary>Sign Key Rpelace Processing Pass</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.EventID.SYMMETRIC_KEY_REPLACE_PROCESSING_PASS">
            <summary>Symmetric Key Replace Processing Pass</summary>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM protocol object</param>
            <param name="Offset">The offset of this config block</param>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used for file based structures
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.Read">
            <summary>
            Reads the HistoryLogConfig component and populates its fields
            </summary>
            <returns>PSEMResponse</returns>
        </member>
        <member name="P:Itron.Metering.Device.HistoryLogConfig.HistoryLogEventList">
            <summary>
            Retrieves the History Log configuration from the meter and stores
            it in a list of items each of which contains a description and a
            boolean telling whether or not it is enabled
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.AddEventItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Adds an event item to the list.
            </summary>
            <param name="strResourceString">The description of the event</param>
            <param name="usEventField">The raw data from the meter</param>
            <param name="usEventMask">The mask to apply to determine whether or not
            the event is enabled</param>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.GetEventItem(System.String,System.UInt16,System.UInt16)">
            <summary>
            Gets the Event Item
            </summary>
            <param name="strResourceString"> The Description of the Event</param>
            <param name="usEventField">The raw data from the device</param>
            <param name="usEventMask">The mast to apply to determ if the event is enabled</param>
            <returns></returns>
        </member>
        <member name="M:Itron.Metering.Device.HistoryLogConfig.ParseData">
            <summary>
            Get the data out of the PSEMBinaryRead and into the member variables
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent0_15">
            <summary>Events 0-15</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent16_31">
            <summary>Events 16-31</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent32_47">
            <summary>Events 32-47</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent48_63">
            <summary>Events 48-63</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent64_79">
            <summary>Events 64-79</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent80_95">
            <summary>Events 80-95</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent96_111">
            <summary>Events 96-111</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent112_127">
            <summary>Events 112-127</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent128_143">
            <summary>Events 128-143</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent144_159">
            <summary>Events 144-159</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent160_175">
            <summary>Events 160-175</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent176_191">
            <summary>Events 176-191</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent192_207">
            <summary>Events 192-207</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent208_223">
            <summary>Events 208-223</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent224_239">
            <summary>Events 224- 239</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent240_255">
            <summary>Events 240-255</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_usEvent256_271">
            <summary>Events 256-271</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_bytLogType">
            <summary>Log Type</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_lstEvents">
            <summary>The Event List</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.m_rmStrings">
            <summary>The Resource Manager</summary>
        </member>
        <member name="F:Itron.Metering.Device.HistoryLogConfig.RESOURCE_FILE_PROJECT_STRINGS">
            <summary>The Resource Project strings</summary>
        </member>
        <member name="T:Itron.Metering.Device.ModeControl">
            <summary>
            The ModeControl class represents the Mode Control configuration for the device.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ModeControl.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor
            </summary>
            <param name="psem">The PSEM communications object for the current device</param>
            <param name="Offset">The offset of the Mode Control table in 2048.</param>
        </member>
        <member name="M:Itron.Metering.Device.ModeControl.Read">
            <summary>
            Reads the Mode Control table from the meter.
            </summary>
            <returns>PSEM response code for the read.</returns>
        </member>
        <member name="P:Itron.Metering.Device.ModeControl.ModeTimeout">
            <summary>
            Gets the time in minutes it will take for the display to return to the Normals Display
            mode after being changed to Alt, Test, or Scroll Lock modes.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ModeControl.DRLockoutTime">
            <summary>
            Gets the time in minutes since a Demand Reset button push to ignore
            further Demand Reset button pushes.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ModeControl.m_byModeTimeout">
            <summary>
            The timeout for the current display mode.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ModeControl.m_usDRLockoutTime">
            <summary>
            The time in minutes since a Demand Reset button push to ignore
            further Demand Reset button pushes.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ModeControl.m_byDisableSwitches">
            <summary>
            Whether buttons are enabled/disabled.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MFG2048EventItem">
            <summary>
            Simple class to represent an MFG table 2048 event item as a description
            and a boolean, which tells whether or not the event is enabled in
            the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFG2048EventItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.MFG2048EventItem.Equals(Itron.Metering.Device.MFG2048EventItem)">
            <summary>
            Determines whether the two Events are equal
            </summary>
            <param name="other">The event to compare to</param>
            <returns>True if the evenst are equal. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2048EventItem.Equals(System.Object)">
            <summary>
            Determines whether the values are equal.
            </summary>
            <param name="obj">The object to compare to.</param>
            <returns>True if they are equal. False otherwise.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2048EventItem.GetHashCode">
            <summary>
            Gets the hash code for the event.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Itron.Metering.Device.MFG2048EventItem.CompareTo(Itron.Metering.Device.MFG2048EventItem)">
            <summary>
            Compares the two events.
            </summary>
            <param name="other">The event to compare to.</param>
            <returns>0 if the values are equal. A negative number if less than or a positve number if greater than.</returns>
        </member>
        <member name="P:Itron.Metering.Device.MFG2048EventItem.Description">
            <summary>
            Gets or sets the event's description
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFG2048EventItem.Enabled">
            <summary>
            Gets or sets whether or not the event has been enabled
            in the meter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.MFG2048EventItem.ID">
            <summary>
            Gets or sets the event's ID code.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CommModuleLogConfig">
            <summary>
            The CommModuleLogConfig class
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CommModuleLogConfig.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16)">
            <summary>
            Constructor for Comm Module Log Config class
            </summary>
            <param name="psem"></param>
            <param name="Offset"></param>
        </member>
        <member name="M:Itron.Metering.Device.CommModuleLogConfig.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Constructor used to get Comm Module Event Data from the EDL file
            </summary>
            <param name="EDLBinaryReader"></param>
        </member>
        <member name="P:Itron.Metering.Device.CommModuleLogConfig.CommModuleEventList">
            <summary>
            Returns the list of Comm Module Events
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommModuleLogConfig.m_lstCommModuleEvents">
            <summary>The Comm Module Event List</summary>
        </member>
        <member name="T:Itron.Metering.Device.MeterClass">
            <summary>
            The Meter Class ratings
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_2">
            <summary>Class 2</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_10">
            <summary>Class 10</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_20">
            <summary>Class 20</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_100">
            <summary>Class 100</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_150">
            <summary>Class 150</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_200">
            <summary>Class 200</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_320">
            <summary>Class 320</summary>
        </member>
        <member name="F:Itron.Metering.Device.MeterClass.CLASS_480">
            <summary>Class 480</summary>
        </member>
        <member name="T:Itron.Metering.Device.MCPType">
            <summary>
            The External MCP types.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MCPType.Full">
            <summary>
            Spansion full size memory chip. 8M Flash and 4M RAM.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MCPType.Half">
            <summary>
            ESMT half size memory chip. 4M Flash and 2M RAM.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CMeterKeyTable">
            <summary>
            The CMeterKeyTable class handles the reading of MFG Table 2054. The reading of 
            this table in the meter will be implicit.  (read-only)
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CMeterKeyTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, initializes the table
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CMeterKeyTable MeterKeyTable = new CMeterKeyTable( PSEM ); 
            </code>
            </example> 
        </member>
        <member name="M:Itron.Metering.Device.CMeterKeyTable.Read">
            <summary>
            Reads table 2054 (MeterKey) out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="M:Itron.Metering.Device.CMeterKeyTable.Dump">
            <summary>
            Writes the contents to the MeterKey table logger for debugging
            </summary>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MultipleCustomScheduleEnabled">
            <summary>
            Returns whether or not the multiple custom schedule MeterKey bit
            is set.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.TOURatesSupported">
            <summary>
            Returns the value for the number of supported rates.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.PQSupported">
            <summary>
            Returns whether or not the power quality MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.DisconnectAvailable">
            <summary>
            Returns whether or not the MISC - Disconnect Avaiable bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.PoleTopCellRelaySupported">
            <summary>
            Returns whether or not the MISC - Pole Top Cell Relay bit is set
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.IOSupported">
            <summary>
            Returns whether or not the IO MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MCPTypeUsed">
            <summary>
            Returns the type of multi-chip package used.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.WhRecSupported">
            <summary>
            Returns whether or not the Wh rec quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhQ1Supported">
            <summary>
            Returns whether or not the Varh Q1 quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhQ2Supported">
            <summary>
            Returns whether or not the Varh Q2 quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhQ3Supported">
            <summary>
            Returns whether or not the Varh Q3 quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhQ4Supported">
            <summary>
            Returns whether or not the Varh Q4 quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhNetDelSupported">
            <summary>
            Returns whether or not the Varh net del quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhNetRecSupported">
            <summary>
            Returns whether or not the Varh net rec quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VAhDelArithSupported">
            <summary>
            Returns whether or not the VAh del arithmetic quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VAhRecArithSupported">
            <summary>
            Returns whether or not the VAh rec arithmetic quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VAhDelVecSupported">
            <summary>
            Returns whether or not the VAh del vectorial quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VAhRecVecSupported">
            <summary>
            Returns whether or not the VAh rec vectorial quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VAhLagSupported">
            <summary>
            Returns whether or not the VAh lag quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.QhDelSupported">
            <summary>
            Returns whether or not the Qh del quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VhASupported">
            <summary>
            Returns whether or not the Vh Phase A quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VhBSupported">
            <summary>
            Returns whether or not the Vh Phase B quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VhCSupported">
            <summary>
            Returns whether or not the Vh Phase C quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VhPhaseAverageSupported">
            <summary>
            Returns whether or not the Vh Phase Average quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AhPhaseASupported">
            <summary>
            Returns whether or not the Ah Phase A quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AhPhaseBSupported">
            <summary>
            Returns whether or not the Ah Phase B quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AhPhaseCSupported">
            <summary>
            Returns whether or not the Ah Phase C quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AhNeutralSupported">
            <summary>
            Returns whether or not the Ah Neutral quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.V2hAggregateSupported">
            <summary>
            Returns whether or not the V Squared h Aggregate quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.I2hAggregateSupported">
            <summary>
            Returns whether or not the I Squared h Aggregate quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhDelSupported">
            <summary>
            Returns whether or not the Varh del quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhRecSupported">
            <summary>
            Returns whether or not the Varh rec quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.WhNetSupported">
            <summary>
            Returns whether or not the Wh net quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.VarhNetSupported">
            <summary>
            Returns whether or not the Varh net quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.QhRecSupported">
            <summary>
            Returns whether or not the Qh rec quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.WhUnidirectionalSupported">
            <summary>
            Returns whether or not the Wh unidirectional quantity MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MaxPeaks">
            <summary>
            Returns what the maximum number of peaks MeterKey bits are set to.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.CoincidentDemandSupported">
            <summary>
            Returns whether or not the Coincident Demand MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.ThermalDemandSupported">
            <summary>
            Returns whether or not the Thermal Demand MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.DemandThresholdsAllowed">
            <summary>
            Returns whether or not the Demand Thresholds Allowed MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MaxDemandResets">
            <summary>
            Returns what the maximum number of scheduled demand resets MeterKey bits are set to.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.ScheduledResetsAllowed">
            <summary>
            Returns whether or not the Scheduled Demand Resets Allowed MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MaximumLPMemorySize">
            <summary>
            Returns what the maximum load profile  MeterKey bits are set to.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.EnhancedBlurtsSupported">
            <summary>
            Returns whether or not the Request Enhanced Blurts MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AdvancedBlurtsSupported">
            <summary>
            Returns whether or not the Request Advanced Blurts MeterKey bit is set.
            Note that this meter key is used for the ITRD device class and indicates that
            varh in returned instead of VAh
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.Enable9SIn6SServiceSupported">
            <summary>
            Returns whether or not the Enable 9S in 6S Service MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.UseSR1DeviceClass">
            <summary>
            Returns whether or not the Use SR1.0 Device Class MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.ZigBeeDebug">
            <summary>
            Returns whether or not the ZigBee Debug MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.TransparentDevice">
            <summary>
            Returns whether or not the Transparent Device MeterKey bits are set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.DisableCoreDump">
            <summary>
            Returns whether or not the Disable Core Dump MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.InjectEventsEnabled">
            <summary>
            Returns whether or not the Inject Events MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.InjectFWDownloadEventsEnabled">
            <summary>
            Returns whether or not the Inject FW Download Events MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.HANEventInjectionLimitDisabled">
            <summary>
            Gets whether or not the MeterKey bit to disable the HAN Event Injection Limit is set
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.DisableCoreDumpOnTotalStackUseLimit">
            <summary>
            Returns whether or not the Disable Core Dump on Total Stack Use Limit MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.AdvancedPolySupported">
            <summary>
            Returns whether or not the Advanced Poly MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.OptionBoardConfigSupported">
            <summary>
            Returns whether or not the Option Board Config MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.ModemAllowed">
            <summary>
            Returns whether or not the ANSI C12.21 Modem MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.CPCVarsSupported">
            <summary>
            Returns whether or not the CPC Instantaneous Vars MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.CPCVASupported">
            <summary>
            Returns whether or not the CPC Instantaneous VA MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.SRConfigSupported">
            <summary>
            Returns whether or not the Self Read Config Allowed MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.NumberAdditionalSRs">
            <summary>
            Returns what the number of additional self read buffers MeterKey bits are set to.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.CalendarConfigSupported">
            <summary>
            Returns whether or not the Calendar Config Allowed MeterKey bit is set.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.QuantityConfiguration">
            <summary>
            Returns a string representing the quantity configuration based on the meter key settings.
            </summary> 
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.EnergyKey1">
            <summary>
            Gets the Energy 1 MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.EnergyKey2">
            <summary>
            Gets the Energy 2 MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.DemandKey">
            <summary>
            Gets the Demand MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.TOUKey">
            <summary>
            Gets the TOU MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.LoadProfileKey">
            <summary>
            Gets the Load Profile MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.PowerQualityKey">
            <summary>
            Gets the Power Quality MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.MiscKey">
            <summary>
            Gets the Misc MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.IOKey">
            <summary>
            Gets the I/O MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.OptionBoardKey">
            <summary>
            Gets the Option Board MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.InstantaneousKey">
            <summary>
            Gets the Instantaneous MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.SelfReadKey">
            <summary>
            Gets the Self Read MeterKey
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CMeterKeyTable.CalendarKey">
            <summary>
            Gets the Calendar MeterKey
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CTable2084">
            <summary>
            The CTable2084 class handles the reading of MFG Table 2084 (MCS). The 
            reading of this table in the meter will be implicit.  (read-only)
            </summary>
            <remarks>
            This table is only supported by meters which have the MCS MeterKey bit
            set.
            
            This table currently only supports a partial read of this table.  It reads
            the status field only.
            </remarks>
        </member>
        <member name="M:Itron.Metering.Device.CTable2084.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, initializes the table
            </summary>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("username");
            CTable2084 Table2084 = new CTable2084( PSEM ); 
            </code>
            </example> 
        </member>
        <member name="M:Itron.Metering.Device.CTable2084.Read">
            <summary>
            Partial read of table 2084 (Multiple Custom Schedules) out of the
            meter.  It only reads the status bytes.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CTable2084.TotalDataFlashWriteCount">
            <summary>
            Returns the Total number of Data Flash Writes
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2084.MultipleCustomScheduleConfigured">
            <summary>
            Returns whether or not the multiple custom schedule are configured
            in this table.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CTable2084.NumberOfSealUnsealEntriesRemainingForPolyPhaseMeter">
            <summary>
            Returns the number of Seal/Unseal entries remaining in the FWDL event log
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.CTable2084.NumberOfSealUnsealEntriesRemainingForSinglePhaseMeter">
            <summary>
            Returns the number of Seal/Unseal entries remaining in the FWDL event log
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.Table2088">
            <summary>
            The Table2088 class handles the reading of MFG Table 2088, SiteScan
            Snapshot Status.
            </summary>
            <remarks>
            This table is only supported by Image Poly meters and Sentinel Saturn
            meters.
            </remarks>	
        </member>
        <member name="M:Itron.Metering.Device.Table2088.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor, initializes the table
            </summary>		
        </member>
        <member name="M:Itron.Metering.Device.Table2088.Read">
            <summary>
            Reads out table 2088 out of the meter.
            </summary>
            <returns>
            A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)
            </returns>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.NumberSnapshots">
            <summary>
            Property to get the number of snapshots in 2089.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotSize">
            <summary>
            Property to get the size of each snapshot in 2089.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SizeOfTable2089">
            <summary>
            Property that will return the size of table 2089 based off the values in
            table 2088.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotProgramID">
            <summary>
            Property to get the program ID in the snapshot
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotMeterClass">
            <summary>
            Property to get the byte representing the meter class in the snapshot.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotMeterForm">
            <summary>
            Property to get the byte representing the meter form in the snapshot.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotMeterBase">
            <summary>
            Property to get the byte representing the meter base in the snapshot.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotFirmwareVer">
            <summary>
            Property to get the meter firmware from the snapshot.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.Table2088.SnapshotPeakDemandCurrent">
            <summary>
            Property to get the peak demand current in the snapshot.  The Image
            Poly firmware always returns 0.0 for this field.
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.Table2088.ReadTable">
            <summary>
            This method reads the table only if it is unloaded
            </summary>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="T:Itron.Metering.Device.Table2089">
            <summary>
            The Table2089 class handles the reading of MFG Table 2089, SiteScan
            Snapshot Data.
            </summary>
            <remarks>
            This table is only supported by Image Poly meters and Sentinel Saturn
            meters.
            </remarks>	
        </member>
        <member name="M:Itron.Metering.Device.Table2089.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.Table2088,System.Boolean,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="table2088">Table 2088 object</param>			
            <param name="bPQEnabled">Boolean for power quality supported</param>
            <param name="bIRMSSupported">Boolean for I RMS supported</param>
        </member>
        <member name="M:Itron.Metering.Device.Table2089.Read">
             <summary>
             Reads table 74 out of the meter.
             </summary>
             <returns>A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors)</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="P:Itron.Metering.Device.Table2089.Table2089SnapshotData">
             <summary>
             Access to the list of snapshots
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             09/18/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="T:Itron.Metering.Device.Table2089Snapshot">
            <summary>
            This class represents the individual snapshot entries as represented in
            table 2089.
            </summary>	
        </member>
        <member name="M:Itron.Metering.Device.Table2089Snapshot.#ctor">
            <summary>
            Constructor
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.SnapshotTimeSeconds">
            <summary>
            Snapshot time in seconds since 1/1/2000
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.SnapshotTrigger">
            <summary>
            The dianostic number that triggered the snapshot.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.MeterService">
            <summary>
            The number representing the meter service.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.PhaseRotation">
            <summary>
            The number representing the meter phase rotation.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.InsWatt">
            <summary>
            The instantaneous watts, in milli-watt units.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.InsVA">
            <summary>
            The instantaneous VA, in milli-volt/amp units.
            </summary>	
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.InsVar">
            <summary>
            The instantaneous var, in milli-var units.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.InsPF">
            <summary>
            The instantaneous PF, in units of 0.0001.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.IRMS">
            <summary>
            The instantaneous PF, in units of 0.0001.
            </summary>		
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.LineFrequency">
            <summary>
            The line frequency  in units of 0.01 Hz.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltagePhaseA">
            <summary>
            Voltage in units of 0.025 V.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltagePhaseB">
            <summary>
            Voltage in units of 0.025 V.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltagePhaseC">
            <summary>
            Voltage in units of 0.025 V.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltageAnglePhaseA">
            <summary>
            Voltage angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltageAnglePhaseB">
            <summary>
            Voltage angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VoltageAnglePhaseC">
            <summary>
            Voltage angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentPhaseA">
            <summary>
            Current in units based on meter class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentPhaseB">
            <summary>
            Current in units based on meter class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentPhaseC">
            <summary>
            Current in units based on meter class
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentAnglePhaseA">
            <summary>
            Current angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentAnglePhaseB">
            <summary>
            Current angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.CurrentAnglePhaseC">
            <summary>
            Current angle in units of 0.1 degree
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag1Counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag2Counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag3Counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag4Counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag5ACounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag5BCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag5CCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag5TCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.Diag6Counter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.PowerOutageCount">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VQSagCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VQSwellCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VQInterruptionCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VQImbalanceVCounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.VQImbalanceICounter">
            <summary>
            Counter
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.THDPhaseA">
            <summary>
            %THD
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.THDPhaseB">
            <summary>
            %THD
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.THDPhaseC">
            <summary>
            %THD
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.TDDPhaseA">
            <summary>
            %TDD
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.TDDPhaseB">
            <summary>
            %TDD
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.Table2089Snapshot.TDDPhaseC">
            <summary>
            %TDD
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable121">
            <summary>
            Table 121 - Network Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable121.#ctor(Itron.Metering.Communications.PSEM.CPSEM)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable121 Table121 = new CStdTable127( PSEM ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable121.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader)">
            <summary>
            Table 121 Constructor used when parsing an EDL file
            </summary>
            <param name="BinaryReader">A binary Reader contain the stream for 121</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable121.Read">
            <summary>
            Reads table 121 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfInterfaces">
            <summary>
            Returns the number of network interfaces supported
            </summary>
            <returns>A byte that is the number of registrations</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfRegistrations">
            <summary>
            Returns the number of registrations
            </summary>
            <returns>A byte that is the number of registrations</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfStatistics">
            <summary>
            Returns the Number of Statistics
            </summary>
            <returns>A ushort that is the number of statistics </returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfMulticastAddresses">
            <summary>
            Returns the number of multicast addresses supported
            </summary>
            <returns>A byte that is the number of multicast addresses.</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NativeAddressLength">
            <summary>
            Returns the native address length
            </summary>
            <returns>A byte that is the native address length</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.StaticAptitle">
            <summary>
            Returns whether or not this node can be programmed with a static ApTitle
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.ProgNativeAddress">
            <summary>
            Returns whether or not interface native addresses can be set in table 122
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.ProgBroadcastAddress">
            <summary>
            Returns whether or not interface broadcast addresses can be set in table 122
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.StaticRelay">
            <summary>
            Returns whether or not interface broadcast addresses can be set in table 122
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.StaticApTitle">
            <summary>
            Returns whether or not node can be programmed with a static ApTitle
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.StaticMasterRelay">
            <summary>
            Returns whether or not the association with a master relay can be
            programmed with a static ApTitle in table 122
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.ClientResponseControl">
            <summary>
            Returns whether or not table 122 is capable of providing client response
            control parameters
            </summary>
            <returns>true or false</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfExceptionHosts">
            <summary>
            Returns the number of exception hosts in table 123.
            </summary>
            <returns>A ushort that is the number of exception hosts.</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.NumberOfExceptionEvents">
            <summary>
            Returns the number of exception events in table 123.
            </summary>
            <returns>A ushort that is the number of exception events.</returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable121.SizeOfTable122">
            <summary>
            Returns the size of standard table 122
            </summary>
            <returns>An unsigned integer that is the size of table 122</returns>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable121.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable122">
            <summary>
            Table 122 - Interface Control Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable122.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="tbl121">Pointer to Table 121</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable127 Table127 = new CStdTable127( PSEM, uiLenght ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable122.Read">
            <summary>
            Reads table 122 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable122.ElectronicSerialNumber">
            <summary>
            Returns the Electronic Serial Number
            </summary>
            <returns>A string that is the Electronic Serial Number
            </returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable122.NativeAddress">
            <summary>
            Native Address assigned to this interface
            </summary>
            <returns>A string that is the Native Address</returns>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable122.RawNativeAddress">
            <summary>
            Raw Native Address assigned to this interface
            </summary>
            <returns>A string that is the Native Address</returns>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable122.UtilityID">
            <summary>
            Utility ID portion of the Raw Native Address.
            </summary>
            <returns>A byte that is the Utility ID</returns>
            <exception>
            Throws: PSEMException for communication errors.
            </exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable122.MulticastAddresses">
            <summary>
            Multicast Addresses assigned to this interface.
            </summary>
            <returns>A string[] that contains the multicast addresses.</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable123">
            <summary>
            Table 123 - Exception Report Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable123.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CStdTable121,Itron.Metering.Device.ANSIEventDictionary)">
            <summary>
            Constructor.
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="Table121">Pointer to Table 121</param>
            <param name="eventDictionary">The device's event dictionary</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable123.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CStdTable121,Itron.Metering.Device.ANSIEventDictionary)">
            <summary>
            Table 123 Constructor used when parsing an EDL file
            </summary>
            <param name="BinaryReader">A binary Reader contain the stream for 123</param>
            <param name="Table121">A table 121 object.</param>
            <param name="eventDictionary">The device's event dictionary</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable123.Read">
            <summary>
            Reads table 123 out of the meter.
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable123.ExceptionHostRecords">
            <summary>
            Returns an array of exception report entry records.
            </summary>
            <returns>An array of exception report entry records.
            </returns>
            <exception>
            Throws: TimeoutException for Timeouts
            		PSEMException for other communication errors.
            </exception>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable123.ParseData">
            <summary>
            Parses the data out of the reader and into the member variables.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable123.GetTableSize(Itron.Metering.Device.CStdTable121)">
            <summary>
            Determines the size of table 123.
            </summary>
            <param name="Table121">Table 121 object for the current device.</param>
            <returns>The size of the table in bytes.</returns>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable126">
            <summary>
            Table 126 - Registration Status Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="tbl121">Pointer to Table 121</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable126 Table126 = new CStdTable126( PSEM, Table121 ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
            <param name="tbl121">Pointer to Table 121.</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt32,Itron.Metering.Device.CStdTable121)">
            <summary>
            Protected constructor used by CStdTable126_2008
            </summary>
            <param name="psem">PSEM Protocol</param>
            <param name="TableID">The Table ID - 126</param>
            <param name="Size">The calculated size of the table</param>
            <param name="tbl121">Pointer to Table 121</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,System.UInt16,System.UInt32,Itron.Metering.Device.CStdTable121)">
            <summary>
            Protected Constructor used by CStdTable126_2008
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
            <param name="TableID">The Table ID - 126</param>
            <param name="Size">The calculated size of the table</param>
            <param name="tbl121">Pointer to Table 121</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.Read">
            <summary>
            Reads Standard table 126 out of the meter
            </summary>
            <returns>A PSEMResponse encapsulating the layer 7 response to the 
            layer 7 request. (PSEM errors)</returns>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.RelayNativeAddress">
            <summary>
            Native address used to access the C12.22 Relay on this
            route for the C12.22 Node's local C12.22 Network Segment.
            </summary>
            <returns>Returns the Relay Native Address</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.MasterRelayAptitle">
            <summary>
            Relative or absolute object identifier assigned to the C12.22 Master
            Relay responsible for this C12.22 node.
            </summary>
            <returns>Returns the Master Relay Aptitle</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.NodeAptitle">
            <summary>
            Relative or absolute object identifier assigned to this C12.22 node
            </summary>
            <returns>Returns the Node Aptitle</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.RegistrationDelay">
            <summary>
            Maximum random delay, in seconds, between each power up
            and the automatic issuance of the first Registration Service
            request by the C12.22 node.  This function is disabled when
            this field is set to zero.
            </summary>
            <returns>Returns the Registration Delay</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.RegistrationPeriod">
            <summary>
            Maximum duration, in minutes, before the C12.22 Node's registration
            expires.  The C12.22 Node needs to reregister itself before this 
            period lapses in order to remain registered.
            </summary>
            <returns>Returns the Registration Period</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="P:Itron.Metering.Device.CStdTable126.RegistrationCountDown">
            <summary>
            The amount of time in minutes left before the registration period
            expires.
            </summary>
            <returns>Returns the Registration Count Down</returns>
            <exception>
            Throws: PSEMException for communication errors.
            		</exception>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126.ParseData">
            <summary>
            Method to get data out of the Binary Reader and into member variables.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_tbl121">
            <summary>Table 121 Object</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_strRelayNativeAddress">
            <summary>Relay Native Address</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_strMasterRelayAptitle">
            <summary>Master Relay Aptitle</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_strNodeAptitle">
            <summary>Node Aptitle</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_usRegistrationDelay">
            <summary>Registration Delay</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_tsRegistrationPeriod">
            <summary>Registration Period</summary>
        </member>
        <member name="F:Itron.Metering.Device.CStdTable126.m_tsRegistrationCountDown">
            <summary>Registration Countdown</summary>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable126_2008">
            <summary>
            Table 126 - This is the 126 Table as finally balloted in 2008.
                This Version of the table is used in 1.50.40 and higher.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126_2008.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="tbl121">Pointer to Table 121</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable126_2008 Table126 = new CStdTable126( PSEM, Table121 ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126_2008.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader">Binary reader associated with the tables data array.</param>
            <param name="tbl121">Pointer to Table 121.</param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable126_2008.ParseData">
            <summary>
            Method to get data out of the Binary Reader and into member variables.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CStdTable127">
            <summary>
            Table 127 - Network Statistics Table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.#ctor(Itron.Metering.Communications.PSEM.CPSEM,Itron.Metering.Device.CStdTable121)">
            <summary>
            Constructor
            </summary>
            <param name="psem">PSEM object for this current session</param>
            <param name="tbl121">Pointer to Table 121</param>
            <example>
            <code>
            Communication comm = new Communication();
            comm.OpenPort("COM4:");
            CPSEM PSEM = new CPSEM(comm);
            PSEM.Logon("");
            PSEM.Security"("");
            CStdTable127 Table127 = new CStdTable127( PSEM, uiLenght ); 
            </code>
            </example>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.#ctor(Itron.Metering.Communications.PSEM.PSEMBinaryReader,Itron.Metering.Device.CStdTable121)">
            <summary>
            Table 127 constructor used when reading from an EDL file.
            </summary>
            <param name="Binaryreader"></param>
            <param name="tbl121"></param>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.Read">
             <summary>
             Reads table 127 out of the meter.
             </summary>
             <returns>A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors)</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/15/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.GetStatistics">
             <summary>
             Returns the Statistic Collection
             </summary>
             <returns>A PSEMResponse encapsulating the layer 7 response to the 
             layer 7 request. (PSEM errors)</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/15/06 KRC 7.35.00 N/A    Created
            
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.ParseData">
            <summary>
            Method to get data out of Binary Reader and into member variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.PopulateStatisticDescriptions">
             <summary>
             Populates the Statistic Description Dictionary
             </summary>
             <returns>void</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             08/24/06 KRC 7.35.00 N/A    Created
             05/09/14 AF  3.50.91 WR504154 Added ICS Statistics
            
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.BuildStatistics(System.Int32,System.Int64)">
            <summary>
            Builds a list of CStatistic objects
            </summary>
            <returns>void</returns>
        </member>
        <member name="M:Itron.Metering.Device.CStdTable127.TranslateStatisticValue(System.Int32,System.Int64)">
             <summary>
             Translates numeric statisic data into something meaningful
             </summary>
             <returns>void</returns>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             06/60/07 KRC 8.01.05 N/A    Created
             10/11/12 jrf 2.70.28 237120 Modified to interpret RSSI as a signed byte.
             05/09/14 AF  3.50.91 WR504154 Added missing statistics translations for ICM statistics
            
        </member>
        <member name="T:Itron.Metering.Device.ExceptionReportEntryRecord">
            <summary>
            Exception report entry record.  Table 123 is an array of these records.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExceptionReportEntryRecord.#ctor(Itron.Metering.Device.ANSIEventDictionary)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.Events">
            <summary>
            Gets an array of strings that represent the configured exception host events.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.ExceptionHostApTitle">
            <summary>
            Gets a string that represents the ApTitle for the exception host.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.ApTitleNotify">
            <summary>
            Sets the raw ApTitle of the exception host.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.MaxNbrRetries">
            <summary>
            Sets the maximum number of times that an exception will be repeated
            if an EPSEM &lt;ok&gt; response is not recieved. 
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.RetryDelay">
            <summary>
            Sets the minimum delay between retries of an event.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.ExclusionPeriod">
            <summary>
            Sets the lockout period after an event occurs before an event of the same 
            type can generate a new exception.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ExceptionReportEntryRecord.RawEvents">
            <summary>
            Sets the raw exception event ids.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ExceptionReportEntryRecord.PopulateEvents">
            <summary>
            This method populates the list of events with meaningful names.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.InterfaceControlEntryRecord">
            <summary>
            Interface Control Record - Contains the configuration of the network interface.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.InterfaceControlEntryRecord.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.NativeAddress">
            <summary>
            Gets/Sets a string that represents the native address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.BroadcastAddress">
            <summary>
            Gets/Sets a string that represents the broadcast address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.RelayNativeAddress">
            <summary>
            Gets/Sets a string that represents the relay native address.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.ApTitle">
            <summary>
            Gets/Sets a byte array that represents the ApTitle.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.MasterRelayApTitle">
            <summary>
            Gets/Sets a byte array that represents the master relay ApTitle.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.NumberRetries">
            <summary>
            Gets/Sets a byte that represents the number of retries allowed.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.InterfaceControlEntryRecord.ResponseTimeout">
            <summary>
            Gets/Sets a UInt16 that represents the response timeout.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.AnsiTable">
            <summary>
            Abstract base class for C12.19 standard and manufacturer defined tables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="psem">Protocol instance being used by the device</param>
            <param name="TableID">C12.19 table ID with the MFG bit included as ushort</param>
            <param name="Size">Size in bytes of this table</param>
            <param name="ExpirationTimeout">The amount of time (ms) before the table expires.</param>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.UInt32)">
            <summary>
            Abstract base class for C12.19 standard and manufacturer defined tables
            </summary>
            <param name="psem">Protocol instance being used by the device</param>
            <param name="TableID">C12.19 table ID with the MFG bit included as 
            <param name="Size">Size in bytes of this table</param>
            needed. i.e. Std table 1 ID = 1, MFG table 1 ID = 2049</param>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.#ctor(System.UInt16,System.UInt32)">
            <summary>
            Constructor used for File bases inheritance
            </summary>
            <param name="TableID"></param>
            <param name="Size"></param>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.Read">
            <summary>
            Performs a full read of this table.  The table will be marked as
            Loaded if the read succeeds.
            </summary>
            <overloads>Read(ushort Offset, ushort Count)</overloads>
            <returns>protocol response</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.Read(System.Int32,System.UInt16)">
            <summary>
            Performs an offset read of this table.  The table state is NOT
            changed by this method.
            </summary>
            <overloads>Read()</overloads>
            <param name="Offset">byte offset to start reading from</param>
            <param name="Count">number bytes to read</param>
            <returns>protocol response</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.Write">
            <summary>
            Writes the table's data to the meter. If the write succeeds, the
            table will be marked as Loaded.
            </summary>
            <remarks>
            No checking is done to see if the table is Loaded or Dirty before
            writing it to the meter, so you can write a 0 filled, Unloaded
            table if you weren't careful or really wanted to.
            </remarks>
            <overloads>Write(ushort Offset, ushort Count)</overloads>
            <returns>protocol response</returns>
            
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.Write(System.UInt16,System.UInt16)">
            <summary>
            Writes a portion of the table's data to the meter.  This method
            does not affect the (Unloaded/Loaded/Dirty) state of the table. 
            </summary>
            <remarks>
            No checking is done to see if the table is Loaded or Dirty before
            writing it to the meter, so you can write a 0 filed, Unloaded data
            if you weren't careful or really wanted to.
            </remarks>
            <param name="Offset">0 based byte offset to start writing from</param>
            <param name="Count">the number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.PendingTableWrite(Itron.Metering.Device.PendingEventRecord)">
            <summary>
            Writes the table to the meter as a pending table
            </summary>
            <param name="pendingRecord">The pending event record to use for the table write</param>
            <returns>The result of the write.</returns>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.PendingTableWrite(Itron.Metering.Device.PendingEventRecord,System.UInt16,System.UInt16)">
            <summary>
            Writes the table to the meter as a pending table using an offset write
            </summary>
            <param name="pendingRecord">The pending event record to use for the table write</param>
            <param name="offset">The offset of the table to write</param>
            <param name="count">The number of bytes to write</param>
            <returns>The result of the write</returns>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.Dump">
            <summary>
            Writes the m_Data contents to the logger.  The contents are written
            as a received protocol stream with a line before and after denoting
            the table.
            </summary>
            <remarks>
            This method is intended for debugging.  It is expected that most
            derived tables will override this method to dump their fields.
            </remarks>
            <exception>
            None.  This debugging method catches its exceptions
            </exception>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/09/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.FormatBytesString(System.Byte[])">
            <summary>
            Formats a byte array into a hex string
            </summary>
            <param name="data">The data to format</param>
            <returns>The hex string</returns>
        </member>
        <member name="P:Itron.Metering.Device.AnsiTable.TableID">
            <summary>
            The C12.19 TABLE_IDB represented as an unsigned, 16 bit integer.
            Note that the MFG bit is rolled into the value so MFG table 0 is
            interpretted as Table 2048. 
            </summary>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="P:Itron.Metering.Device.AnsiTable.State">
            <summary>
            Tables are Unloaded, Loaded, or Dirty.  Unloaded tables have never been 
            read or written to.  Loaded tables are synchronized with the meter.  
            Dirty tables are usually in a mixed state prior to writing.
            </summary>
            <remarks>
            This property does not depend on the loaded/unloaded/dirty state of
            the table.
            </remarks>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/09/06 mcm 7.30.00 N/A	Created
            03/09/07 mcm 8.00.17 2574   Added Set property so owners can make it dirty
        </member>
        <member name="T:Itron.Metering.Device.AnsiTable.TableState">
            <summary>
            Unloaded (never read), Loaded (in synch with meter), or 
            Dirty (unknown, probably in preparation for writing)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.TableState.Unloaded">
            <summary>
            An Unloaded table has never been read or written to
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.TableState.Loaded">
            <summary>
            A Loaded table is synchronized with the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.TableState.Dirty">
            <summary>
            A Dirty table has been written to by its clients.  Its members
            may or may not have been initialized with actual meter values.
            This is an unknown state, usually in preparation for writing to
            the meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.TableState.Expired">
            <summary>
            A table is marked expired after a time specified in the constructor.
            This will allow better performance from status tables with multiple
            values.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.PENDING_BIT">
            <summary>
            Value (4096) for constructing the table id of a pending table
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.InitializeMembers">
            <summary>
            Used by constructor to initialize the Member Variables
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.TableExpired(System.Object)">
            <summary>
            Timer callback that marks the table as expired.
            </summary>
            <param name="state">The current state.</param>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.ReadUnloadedTable">
            <summary>
            Reads the table if the current state is not loaded.
            </summary>
            <exception cref="T:Itron.Metering.Device.PSEMException">Thrown if an error occurs while reading the table.</exception>
        </member>
        <member name="M:Itron.Metering.Device.AnsiTable.ChangeTableSize(System.UInt32)">
            <summary>
            Changes the size of the table to the specified value
            </summary>
            <param name="size">The new size of the table.</param>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_PSEM">
            <summary>Protocol object</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_TableID">
            <summary>C12.19 table ID</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_Data">
            <summary>The official copy of the table's data</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_Size">
            <summary>Size of the table</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_Logger">
            <summary>Debug logger</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_DataStream">
            <summary>MemoryStream associated with the table's data array</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_Reader">
            <summary>Binary reader associated with the table's data array</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_Writer">
            <summary>Binary writer associated with the table's data array</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_TableState">
            <summary>Unloaded (never read), Loaded (in synch with meter), or 
            Dirty (unknown, probably in preparation for writing)</summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_ExpirationTimer">
            <summary>
            Timer used for marking the table as expired.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_iTimeout">
            <summary>
            The amount of time to wait before setting the table as expired.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.AnsiTable.m_blnAllowAutomaticTableResizing">
            <summary>
            Indicates whether a table should be allowed to be resized base on length of data received
            from a full table read. It should only be set to true under special circumstances.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ANSISubTable">
            <summary>
            The ANSISubTable handles portions of C12.19 tables that you want to
            treat as tables.  This has been implemented for the configuration
            components that are dependent on other values in the table (2048) they
            are contain in.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.Int32,System.UInt16)">
            <summary> Constructor</summary>
            <param name="psem">instance of protocol to be used</param>
            <param name="TableID">C12.19 table ID including MFG bit</param>
            <param name="Offset">byte offset of this portion the table</param>
            <param name="Size">Size in bytes of this portion of the table</param>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.#ctor(Itron.Metering.Communications.PSEM.CPSEM,System.UInt16,System.Int32,System.UInt16,System.Int32)">
            <summary> Constructor</summary>
            <param name="psem">instance of protocol to be used</param>
            <param name="TableID">C12.19 table ID including MFG bit</param>
            <param name="Offset">byte offset of this portion the table</param>
            <param name="Size">Size in bytes of this portion of the table</param>
            <param name="ExpirationTimeout">Number of Seconds until Table needs to refresh</param>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            11/20/09 KRC 2.30.18 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.#ctor(System.UInt16,System.UInt32)">
            <summary>
            This constructor is used for our file based inheritance
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.Read">
            <summary>
            Reads the SubTable from the meter and marks it as Loaded if 
            successful.
            </summary>
            <returns>protocol response</returns>
            <overloads>Read(ushort Offset, ushort Count)</overloads>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.Read(System.Int32,System.UInt16)">
            <summary>
            Reads a portion of the table from the meter.  The table's state is
            NOT updated to Loaded as a result of the read.
            </summary>
            <param name="Offset">offset WITHIN the subtable to read from</param>
            <param name="Count">Number of bytes to read</param>
            <returns>protocol response</returns>
            <overloads>Read()</overloads>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.Write">
            <summary>
            Writes the SubTable's data to the meter. If the write succeeds, the
            table will be marked as Loaded.
            </summary>
            <remarks>
            No checking is done to see if the table is Loaded or Dirty before
            writing it to the meter, so you can write a 0 filed, Unloaded table
            if you weren't careful or really wanted to.
            </remarks>
            <returns>protocol response</returns>
            <overloads>Write(ushort Offset, ushort Count)</overloads>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            
        </member>
        <member name="M:Itron.Metering.Device.ANSISubTable.Write(System.UInt16,System.UInt16)">
            <summary>
            Writes a portion of the table's data to the meter.  This method
            does not affect the (Unloaded/Loaded/Dirty) state of the table. 
            </summary>
            <remarks>
            No checking is done to see if the table is Loaded or Dirty before
            writing it to the meter, so you can write a 0 filed, Unloaded data
            if you weren't careful or really wanted to.
            </remarks>
            <param name="Offset">Offset WITNIN the table to write to</param>
            <param name="Count">Number of bytes to write</param>
            <returns>protocol response</returns>
            <overloads>Write()</overloads>
            
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            06/08/06 mcm 7.30.00 N/A	Created
            10/21/09 jrf 2.30.12 N/A    Removed call to base.Write().  It would fail
                                        when m_SubTableOffset + Offset + Count was greater 
                                        than m_Data.Length.  Rewrote method to use the
                                        internal subtable offset when comparing against 
                                        m_Data.Length and the full table offset when calling
                                        m_PSEM.OffsetWrite().
            
        </member>
        <member name="F:Itron.Metering.Device.ANSISubTable.m_SubTableOffset">
            <summary>
            Offset for this subtable within its C12.19 table
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IConfiguration">
            <summary>
            Interface which needs to be implemented by device capable of
            configuring a meter
            </summary>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            08/27/06 RCG 7.35.00    N/A Created
               
        </member>
        <member name="M:Itron.Metering.Device.IConfiguration.Configure(System.String)">
            <summary>
            Configures a device with the specified program.
            </summary>
            <param name="sProgramName">Name or path of the program.</param>
            <returns>A ConfigurationError code</returns>
        </member>
        <member name="M:Itron.Metering.Device.IConfiguration.Configure(System.String,Itron.Metering.DeviceDataTypes.PromptForData)">
            <summary>
            Configures a device with the specified program and Prompt for data.
            </summary>
            <param name="sProgramName">Name or path of the program.</param>
            <param name="PFData">The prompt for data for the program.</param>
            <returns>A ConfigurationError code.</returns>
        </member>
        <member name="T:Itron.Metering.Device.ICustomSchedule">
             <summary>
             Interface which needs to be implemented by devices capable of 
             supporting custom schedules.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/12/06 mrj 7.30.00    N/A Created
            
        </member>
        <member name="P:Itron.Metering.Device.ICustomSchedule.CustomScheduleConfigured">
            <summary>
            Gets a boolean indicating whether the device is configured
            for custom schedules or not.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ICustomSchedule.MultipleCustomScheduleConfigured">
            <summary>
            Gets a boolean indicating whether the device is configured
            for multiple custom schedules or not (in 2084).
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ICustomSchedule.Reconfigure(System.String,System.String,System.Boolean)">
            <summary>
            Reconfigure the custom schedule using the supplied schedule
            </summary>
            <param name="sPathName">Path to the custom schedule</param>
            <param name="sScheduleName">custom schedule name</param>
            <param name="bWriteUserData2">Write schedule name to user data 2 flag</param>
            <returns>A CSReconfigResults</returns>
        </member>
        <member name="T:Itron.Metering.Device.IERTCheck">
             <summary>
             Interface which needs to be implemented by devices capable of 
             supporting the ERT Check in HH-Pro (Sentinel only).
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/12/06 mrj 7.30.00    N/A Created
            
        </member>
        <member name="P:Itron.Metering.Device.IERTCheck.RFConfigured">
            <summary>
            Gets a boolean indicating whether the device is configured
            for RF or not
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.IERTCheck.ERTCheck">
            <summary>
            Gets the ERT Check data.  The array should be sized by the number
            of SCM ERTs configured in the meter.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ERTConfig">
             <summary>
             This structure represent all of the data needed for the HH-Pro ERT check. 
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/12/06 mrj 7.30.00    N/A Created
            
        </member>
        <member name="F:Itron.Metering.Device.ERTConfig.m_iERTID">
            <summary>
            The ERT ID.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTConfig.m_strQty">
            <summary>
            String representing the quantity.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTConfig.m_bytTotalDigits">
            <summary>
            Total number of digits.  If 0, then the ERT represents a date/time and
            "/" must be added when formatting.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ERTConfig.m_bytDecDigits">
            <summary>
            Number of decimal digits.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.IFirmwareDownload">
            <summary>
            Interface which needs to be implemented by devices capable of
            supporting the download of firmware to the meter. 
            </summary>
            Revision History
            MM/DD/YY Who Version Issue# Description
            -------- --- ------- ------ -----------------------------------------
            08/09/06 AF  7.35.00 N/A	Created
        </member>
        <member name="M:Itron.Metering.Device.IFirmwareDownload.DownloadFW(System.String)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            On download failure, the pending table is cleared, if possible.
            The activation will cause the meter to drop the psem task; therefore,
            a log off the meter is necessary after calling this method.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Result code for firmware downloads</returns>
        </member>
        <member name="M:Itron.Metering.Device.IFirmwareDownload.DownloadFWNoActivate(System.String)">
            <summary>
            Downloads the firmware file to the device but does NOT
            activate.  On download failure, the pending table is cleared, if.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.IFirmwareDownload.DownloadFWBlocks(System.String,System.UInt16,System.UInt16)">
            <summary>
            This method just downloads the firmware file blocks to the device for a 
            given range of blocks.  Use 1-based indexing for blocks.
            </summary>
            <param name="path">Complete path to the firmware file</param>
            <param name="usStartBlock">The first block to download.</param>
            <param name="usEndBlock">The last block to download.</param>
            <returns>FWDownloadResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.IFirmwareDownload.DownloadFW(System.String,System.UInt16@,System.Boolean,System.Boolean)">
            <summary>
            Downloads the firmware file to the meter and activates it.    
            The activation will cause the meter to drop the psem task so meter log off must
            follow this function call on success.  This method supports resuming
            a previous failed FWDL attempt.
            </summary>
            <param name="path">Complete file path of the firmware file</param>
            <param name="usBlockIndex">Dual purpose parameter. The passed in value indicates 
            which block to begin downloading. The passed out parameter indicates which block to
            resume downloading in case there was a failure. This can then passed in again to 
            restart the download at the point where it left off.</param>
            <param name="blnRetry">Whether or not to leave the FWDL in a state
            to permit subsequent retries at point of faliure. If false the pending table 
            will be cleared on failure.</param>
            <param name="blnActivate">Whether or not to activate the firmware.</param>
            <returns>Itron.Metering.Device.FWDownloadResult</returns>
        </member>
        <member name="T:Itron.Metering.Device.ISiteScan">
             <summary>
             Interface which needs to be implemented by devices capable of 
             supporting SiteScan.
             </summary>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/12/06 mrj 7.30.00    N/A Created
            
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.ToolboxData">
            <summary>
            Gets the toolbox data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.Diagnostics">
            <summary>
            Gets the diagnostics data
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.ServiceType">
            <summary>
            Gets the service type
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.MeterForm">
            <summary>
            Gets the meter form
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.SnapshotsSupported">
            <summary>
            Property can be used to determine if snapshots are supported.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.SnapshotCount">
            <summary>
            Property to get the number of available snapshots.
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.ISiteScan.SiteScanSnapshots">
            <summary>
            Returns the list of snapshots in the meter.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ISiteScan.ResetDiagCounters">
            <summary>
            Resets the diagnostic counters in the meter.
            </summary>
            <returns>A ItronDeviceResult</returns>
        </member>
        <member name="M:Itron.Metering.Device.ISiteScan.ClearSiteScanSnapshots">
            <summary>
            Clears the sitescan snapshots in the meter.
            </summary>
            <returns>A ItronDeviceResult</returns>
        </member>
        <member name="T:Itron.Metering.Device.ItronDevice">
            <summary>
            ItronDevice class - This is the base class of all meter objects.
            </summary>
            <remarks>
            Revision History	
            MM/DD/YY who Version Issue# Description
            -------- --- ------- ------ ---------------------------------------
            04/12/06 mrj 7.30.00    N/A Created
            12/05/06 MAH 8.00.00    Added load profile status properties
            01/16/14 DLG 3.50.26        Moved the DisplayMode Enum to the CANSIDevice object.
            </remarks>
        </member>
        <member name="E:Itron.Metering.Device.ItronDevice.ShowProgressEvent">
            <summary>
            Event used to display a progress bar
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.ItronDevice.StepProgressEvent">
            <summary>
            Event used to cause a progress bar to perform a step
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.ItronDevice.HideProgressEvent">
            <summary>
            Event used to hide a progress bar
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.#ctor">
             <summary>Constructor.</summary>
             <example>
             <code>
             VECTRON m_Vectron;
             ItronDevice m_ItronDevice;
            
             m_Vectron = new VECTRON( m_CommPort );
             m_ItronDevice = m_Vectron;
            	
            	//Logon to the meter
             m_ItronDevice.Logon();
             </code>
             </example>
             Revision History	
             MM/DD/YY who Version Issue# Description
             -------- --- ------- ------ ---------------------------------------
             04/12/06 mrj 7.30.00    N/A Created
             02/05/07 jrf 8.00.10        Added intitialization for new member var
            
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.Logon">
            <summary>
            The abstract logon method which must be implemented by the derived
            class.
            </summary>
            <returns>A ItronDeviceResult object</returns>
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.Logoff">
            <summary>
            The abstract logoff method which must be implemented by the derived
            class.
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.OnShowProgress(Itron.Metering.Progressable.ShowProgressEventArgs)">
            <summary>
            Raises the event to show the progress bar.
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.OnStepProgress(Itron.Metering.Progressable.ProgressEventArgs)">
            <summary>
            Raises the event that causes the progress bar to perform a step
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="M:Itron.Metering.Device.ItronDevice.OnHideProgress(System.EventArgs)">
            <summary>
            Raises the event that hides or closes the progress bar
            </summary>
            <param name="e">The event arguments to use.</param>
        </member>
        <member name="T:Itron.Metering.Device.ItronDeviceResult">
            <summary>
            Enumerates the common return codes from many different meter operations
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ItronDeviceResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ItronDeviceResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ItronDeviceResult.UNSUPPORTED_OPERATION">
            <summary>
            UNSUPPORTED_OPERATION = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ItronDeviceResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 3, insufficient security clearance
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.DSTUpdateResult">
            <summary>
            Enumerates the possible return codes from a DST update operation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.SUCCESS_PREVIOUSLY_UPDATED">
            <summary>
            DST dates have already been updated = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.SUCCESS_NO_LOGGING">
            <summary>
            Logging failed, but everything else succeeded = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.SUCCESS_NOT_CONFIGURED_FOR_DST">
            <summary>
            Meter is not configured for DST = 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.ERROR">
            <summary>
            Unrecoverable, fatal error = 20
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.INSUFFICIENT_DISC_SPACE">
            <summary>
            Insufficient disc space = 22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.IO_TIMEOUT">
            <summary>
            I/O Timeout = 23
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.CLOCK_ERROR">
            <summary>
            Clock not running = 24
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.PROTOCOL_ERROR">
            <summary>
            Protocol Error = 25
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.INSUFFICIENT_SECURITY_ERROR">
            <summary>
            Insufficient security clearance = 27
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.ERROR_DST_DATA_MISSING">
            <summary>
            DST file was not found or not valid = 29
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.ERROR_DST_DATES_EXPIRED">
            <summary>
            DST dates in the meter have expired so an update is not
            possible.  Meter needs to be initialized or TOU should
            be reconfigured = 30.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.DSTUpdateResult.ERROR_RETRY">
            <summary>
            ERROR_RETRY = 31, operation failed at a critical time. The meter 
            may be left in a bad state. Try operation again.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.TOUReconfigResult">
            <summary>
            Enumerates the possible return codes from a Time of Use reconfiguration
            request.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.SUCCESS_PREVIOUSLY_UPDATED">
            <summary>
            DST dates have already been updated = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.SUCCESS_NO_LOGGING">
            <summary>
            Logging failed, but everything else succeeded = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.SUCCESS_NOT_CONFIGURED_FOR_TOU">
            <summary>
            Meter is not configured for DST = 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.SUCCESS_DST_NOT_SUPPORTED">
            <summary>
            Unrecoverable, fatal error = 20
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR">
            <summary>
            Unrecoverable, fatal error = 20
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.INSUFFICIENT_DISC_SPACE">
            <summary>
            Insufficient disc space = 22
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.IO_TIMEOUT">
            <summary>
            I/O Timeout = 23
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.CLOCK_ERROR">
            <summary>
            Clock not running = 24
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.PROTOCOL_ERROR">
            <summary>
            Protocol Error = 25
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.INSUFFICIENT_SECURITY_ERROR">
            <summary>
            Insufficient security clearance = 27
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_DST_DATA_MISSING">
            <summary>
            DST file was not found or not valid = 29
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_TOU_EXPIRED">
            <summary>
            DST dates in the meter have expired so an update is not
            possible.  Meter needs to be initialized or TOU should
            be reconfigured = 30.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_RETRY">
            ERROR_RETRY = 31, operation failed at a critical time. The meter 
            may be left in a bad state. Try operation again.
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_TOU_NOT_VALID">
            <summary>
            ERROR_TOU_NOT_VALID = 34, TOU file was not found or not valid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_SCHED_NOT_SUPPORTED">
            <summary>
            ERROR_SCHED_NOT_SUPPORTED = 35, TOU schedule not supported by this meter type
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.ERROR_NO_FUNCTIONS_REQUESTED">
            <summary>
            ERROR_NO_FUNCTIONS_REQUESTED = 38, no TOU or DST filename was sent
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.FILE_NOT_FOUND">
            <summary>
            FILE_NOT_FOUND, the specified file was not found
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.TOUReconfigResult.PENDING_BUFFERS_FULL">
            <summary>
            PENDING_BUFFERS_FULL, there are not enough Pending table buffers available to perform the operation
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.WritePendingTOUResult">
            <summary>
            Enumerates the possible return codes from a request to write pending 
            Time of Use tables.  Note that pending tables are only supported by OpenWay
            meters
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.SUCCESS">
            <summary>
            SUCCESS = 0, the operation completed succesfully
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.FILE_NOT_FOUND">
            <summary>
            FILE_NOT_FOUND = 1, the specified file was not found
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.INVALID_EDL_FILE">
            <summary>
            INVALID_EDL_FILE = 2, the specified file was not a valid EDL file
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.NO_TOU_DATA">
            <summary>
            NO_TOU_DATA = 3, the specified file does not contain TOU data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.NO_BILLING_SCHEDULE_DATA">
            <summary>
            NO_BILLING_SCHEDULE_DATA = 4, the specified file does not contain Billing Schedule data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.NO_CALENDAR_DATA">
            <summary>
            NO_CALENDAR_DATA = 5, the specified file does not contain Calendar data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.PENDING_BUFFERS_FULL">
            <summary>
            PENDING_BUFFERS_FULL = 10, there are not enough Pending table buffers available to perform the operation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.PROTOCOL_ERROR">
            <summary>
            PROTOCOL_ERROR = 20, a protocol error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.WritePendingTOUResult.INSUFFICIENT_SECURITY_ERROR">
            <summary>
            INSUFFICIENT_SECURITY_ERROR = 21, the user has insufficient clearance to perform this operation
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.PasswordReconfigResult">
            <summary>
            Enumerates the possible return codes from a request to reconfigure a meter's
            password(s)
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.PROTOCOL_ERROR">
            <summary>
            Protocol Error = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 3, insufficient security clearance
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.IO_TIMEOUT">
            <summary>
            I/O Timeout = 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.PasswordReconfigResult.DUPLICATE_SECURITY_ERROR">
            <summary>
            DUPLICATE_SECURITY_ERROR = 5, Pre-Saturn Sentinels did not allow
            duplicate security codes.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClockAdjustResult">
            <summary>
            Enumerates the possible return codes from a request to adjust the clock on a meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.SUCCESS_24_HOUR_MAXIMUM_ADJUST">
            <summary>
            SUCCESS_24_HOUR_MAXIMUM_ADJUST = 1, success but clock was only adjusted 24 hours.
            This is a limitation of the ANSI meters because of the potential for timeouts and 
            thus should only be return by them.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.ERROR">
            <summary>
            ERROR = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.UNSUPPORTED_OPERATION">
            <summary>
            UNSUPPORTED_OPERATION = 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 4, insufficient security clearance
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.ERROR_CROSSES_INTERVAL">
            <summary>
            ERROR_CROSSES_INTERVAL = 5, clock adjust crosses the interval boundary
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.ERROR_CLOCK_NOT_RUNNING">
            <summary>
            ERROR_CLOCK_NOT_RUNNING = 6, clock is not running in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.ERROR_NO_ADJUST_OVER_DST">
            <summary>
            ERROR_NO_ADJUST_OVER_DST = 7, can not adjust clock over dst change
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClockAdjustResult.ERROR_TIMEOUT">
            <summary>
            ERROR_TIMEOUT = 8, meter timed out, clock adjust result unknown
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CSReconfigResult">
            <summary>
            Enumerates the possible return codes from a request to reconfigure
            a meter's custom schedule.  Note that custom schedules are currently
            only supported on ANSI meters.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.SUCCESS_SCHEDULE_TRUNCATED">
            <summary>
            SUCCESS_SCHEDULE_TRUNCATED = 2, success but the custom schedule was truncated
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 3, insufficient security clearance
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.ERROR_CS_FILE_NOT_FOUND">
            <summary>
            ERROR_CS_FILE_NOT_FOUND = 4, CS file was not found or not valid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CSReconfigResult.ERROR_MCS_ENALBED">
            <summary>
            ERROR_MCS_ENALBED = 5, cannot reconfigure CS when MCS is enabled
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.FWDownloadResult">
            <summary>
            Firmware download results enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.WRITE_ERROR">
            <summary>
            WRITE_ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.UNKNOWN_DRIVER_ERROR">
            <summary>
            UNKNOWN_DRIVER_ERROR = 2
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.INVALID_CONFIG">
            <summary>
            INVALID_CONFIG = 3
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.UNSUPPORTED_OPERATION">
            <summary>
            UNSUPPORTED_OPERATION = 4
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 5, insufficient security clearance
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.FW_IMAGE_TOO_BIG">
            <summary>
            FW_IMAGE_TOO_BIG = 6 - The Firmware Image is too big to fit into flash
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.HW_REVISION_OUTSIDE_RANGE">
            <summary>
            HW_REVISION_OUTSIDE_RANGE = 7 - HW Revision is outside permitted register hardware revision
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.HW_VERSION_OUTSIDE_RANGE">
            <summary>
            HW_VERSION_OUTSIDE_RANGE = 8 - HW Version is outside permitted register hardware version
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.FW_TYPE_IS_INVALID">
            <summary>
            FW_TYPE_IS_INVALID = 9 - The Firmware Type parameter is invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.ZIGBEE_FW_TYPE_INVALID">
            <summary>
            ZIGBEE_FW_TYPE_INVALID = 10 - Firmware Version does not match the Zigbee device supported.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.DEVICE_BUSY">
            <summary>
            DEVICE_BUSY = 11 - The initiate failed due to a timing constraint.  The meter was busy performing other operations.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.FWDownloadResult.ICS_SAME_VERSION_REJECTION">
            <summary>
            ICS_SAME_VERSION_REJECTION = 12 - The initiate failed because ICS firmware does not allow the same version to be downloaded.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ConfigurationResult">
            <summary>
            Enumerates the possible return codes from a request to initialize a meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.SUCCESS">
            <summary>
            SUCCES = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.PROGRAM_NOT_FOUND">
            <summary>
            PROGRAM_NOT_FOUND = 2, program name or file was not found
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.PROGRAM_NOT_VALID">
            <summary>
            PROGRAM_NOT_VALID = 3, the specified program is not valid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.USER_ABORT">
            <summary>
            USER_ABORT = 4, the user has aborted configuration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.IO_TIMEOUT">
            <summary>
            IO_TIMEOUT = 5, the device has timed out 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.NETWORK_ERROR">
            <summary>
            NETWORK_ERROR = 6, a networking error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.PROTOCOL_ERROR">
            <summary>
            PROTOCOL_ERROR = 7, a protocol error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 8, a security error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.MEMORY_ERROR">
            <summary>
            MEMORY_ERROR = 9, there was a problem either allocating or freeing memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.OFFLINE">
            <summary>
            OFFLINE = 10, there is no communication with the device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.IO_ERROR">
            <summary>
            IO_ERROR = 11, an I/O error has occcured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.UNKNOWN_DRIVER_ERROR">
            <summary>
            UNKNOWN_DRIVER_ERROR = 12, this error occurs when driver errors cannot be 
            mapped to defined errors
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.UNSUPPORTED_FUNCTION">
            <summary>
            UNSUPPORTED_FUNCTION = 13, the function is not supported
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.MISMATCH_ID">
            <summary>
            MISMATCH_ID = 14, the supplied device ID does not match the device ID in the meter
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.DB_ACCESS_ERROR">
            <summary>
            DB_ACCESS_ERROR = 15, there was a problem accessing the database
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.INVALID_CONFIG">
            <summary>
            INVALID_CONFIG = 16, the device program is invalid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ConfigurationResult.MEMORY_MAP_ERROR">
            <summary>
            MEMORY_MAP_ERROR = 17, there was a memory map error
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.MIFCreationResult">
            <summary>
            Enumerates the possible return codes from a request to create a meter image file (MIF). 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.SUCCESS">
            <summary>
            SUCCES = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.IO_TIMEOUT">
            <summary>
            PROGRAM_NOT_VALID = 3, the specified program is not valid
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.NETWORK_ERROR">
            <summary>
            NETWORK_ERROR = 6, a networking error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 8, a security error has occurred
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.MEMORY_ERROR">
            <summary>
            MEMORY_ERROR = 9, there was a problem either allocating or freeing memory
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.OFFLINE">
            <summary>
            OFFLINE = 10, there is no communication with the device
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.IO_ERROR">
            <summary>
            IO_ERROR = 11, an I/O error has occcured
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.UNSUPPORTED_FUNCTION">
            <summary>
            UNSUPPORTED_FUNCTION = 13, the function is not supported
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.MEMORY_MAP_ERROR">
            <summary>
            MEMORY_MAP_ERROR = 17, there was a memory map error
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.CANNOT_OPEN_MIF">
            <summary>
            CANNOT_OPEN_MIF = 18, there was an error opening the MIF
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.MIFCreationResult.CANNOT_READ_MIF">
            <summary>
            CANNOT_READ_MIF = 19, there was an error reading the MIF
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CreateEDLResult">
            <summary>
            Enumerates the possible return codes from a request to create an EDL file from
            a meter.  Note that EDL files are only supported on OpenWay meters and are
            roughly equivalent to HHF files.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.SUCCESS">
            <summary>
            SUCCES = 0, Operation succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.INVALID_PATH">
            <summary>
            INVALID_PATH = 1, The file path does not exist
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.INSUFFICIENT_DISC_SPACE">
            <summary>
            INSUFFICIENT_DISC_SPACE = 2, There is not enough disc space to complete the operation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.PROTOCOL_ERROR">
            <summary>
            PROTOCOL_ERROR = 3, An error occurred while reading the data
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 4, There is insufficient security to perform the operation
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CreateEDLResult.ERROR">
            <summary>
            ERROR = 5, A General error has occurred.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.CommandErrorResult">
            <summary>
            Result enumeration for HAN client commands
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.UNKNOWN_COMMAND">
            <summary>
            Command not recognized
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.INVALID_PARAM_SIZE_OR_COUNT">
            <summary>
            Invalid parameter size or count
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.INVALID_PARAM_VALUE">
            <summary>
            Invalid parameter value
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.INVALID_TIMESTAMP">
            <summary>
            Invalid timestamp
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.INVALID_SECURITY_KEY_CHANGE_SEQ">
            <summary>
            Invalid security key change sequence
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.INVALID_PACKET_VERSION">
            <summary>
            Invalid packet version
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.CommandErrorResult.UNKNOWN_ERROR">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ClientMeterCmdResult">
            <summary>
            Result enumeration
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeterCmdResult.SUCCESS">
            <summary>
            Operation succeeded
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeterCmdResult.TOO_MANY_COMMANDS">
            <summary>
            Client's config command area is already full
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeterCmdResult.TIMEOUT">
            <summary>
            Meter timed out
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeterCmdResult.UNSUPPORTED_COMMAND">
            <summary>
            Support for this command is not yet available
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ClientMeterCmdResult.ERROR">
            <summary>
            Unspecified error
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ForceTimeSyncResult">
            <summary>
            Enumerates the possible return codes from a request to force a time sync on a meter.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.SUCCESS">
            <summary>
            The operation succeeded.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.ERROR">
            <summary>
            An unspecified error occurred.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.SECURITY_ERROR">
            <summary>
            Insufficient security clearance.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.OUT_OF_SYNC_LESS_THAN_HYSTERESIS">
            <summary>
            The amount of time the meter was out of sync was less than 
            the supplied hysteresis.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.TIME_SYNC_IN_PROGRESS">
            <summary>
            Time synchronization request is in progress.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.INVALID_PARAMETERS">
            <summary>
            Invalid parameters were used.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.DEVICE_BUSY">
            <summary>
            The device was busy and could not process the time sync.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ForceTimeSyncResult.UNSUPPORTED_OPERATION">
            <summary>
            The time sync was not supported.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.SiteScanReconfigResult">
            <summary>
            Results for SiteScan Reconfigure.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SiteScanReconfigResult.SUCCESS">
            <summary>
            Reconfigure was successful 
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SiteScanReconfigResult.ERROR">
            <summary>
            Reconfigure failed due to a general error.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SiteScanReconfigResult.SECURITY_ERROR">
            <summary>
            Reconfigure failed due to a security error.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.SiteScanReconfigResult.PROTOCOL_ERROR">
            <summary>
            Reconfigure failed due to a protocol error.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.ToggleRadioCommsResult">
            <summary>
            Enumerates the return codes from toggling radio (RF/HAN) communications to be enabled or disabled.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.SUCCESS">
            <summary>
            SUCCESS = 0
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.ERROR">
            <summary>
            ERROR = 1
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.SECURITY_ERROR">
            <summary>
            SECURITY_ERROR = 3, insufficient security clearance
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.RF_RADIO_CONFIG_ERROR">
            <summary>
            Reconfigure failed due to error while reconfiguring RF radio.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.HAN_RADIO_CONFIG_ERROR">
            <summary>
            Reconfigure failed due to error while reconfiguring HAN radio.
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.ToggleRadioCommsResult.CONFIG_TAG_WRITE_ERROR">
            <summary>
            Reconfigure failed to update the config tag.
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEn">
            <summary>
            Device object for the RAVEn ZigBee module
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.DataUpdated">
            <summary>
            Event that occurs when the billing data is updated
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.MessageReceived">
            <summary>
            Event that occurs when a message has been received
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.DeviceInfoUpdated">
            <summary>
            Event that occurs when the device information has been updated
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.PriceUpdated">
            <summary>
            Event that occurs when the price information has been updated
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.DeviceTimeUpdated">
            <summary>
            Event that occurs when the device time has been updated
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.InformationReceived">
            <summary>
            Event that occurs when an Information update has occurred
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.ErrorReceived">
            <summary>
            Event that occurs when an Error is received
            </summary>
        </member>
        <member name="E:Itron.Metering.Device.RAVEn.InstantPowerReceived">
            <summary>
            Event that occurs when an Instantaneous Power value is received
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="commPort">The COM port that the device is on</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.Connect">
            <summary>
            Connect to the RAVEn device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.Disconnect">
            <summary>
            Disconnects from the RAVEn device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.Restart">
            <summary>
            Restarts the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.FactoryReset">
            <summary>
            Performs a Factory Reset which clears any currently joined networks 
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetDeviceInfo">
            <summary>
            Gets the device info
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetScheduleInfo(Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID)">
            <summary>
            Gets the schedule information
            </summary>
            <param name="scheduleID">The schedule being requested</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.SetScheduleInfo(Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID,System.Boolean,System.UInt32)">
            <summary>
            Sets the schedule information
            </summary>
            <param name="scheduleID">The schedule to set</param>
            <param name="enabled">Whether or not auto updating of the item should be enabled</param>
            <param name="frequency">The frequency to update the item</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.SetScheduleDefault(Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID)">
            <summary>
            Sets the specified schedule to the default value
            </summary>
            <param name="scheduleID">The schedule to reset</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetTime">
            <summary>
            Gets the time from the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetMessage">
            <summary>
            Gets the messages from the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.ConfirmMessage(System.UInt32)">
            <summary>
            Confirms the specified message from the device
            </summary>
            <param name="messageID">The message to confirm</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetCurrentPrice">
            <summary>
            Gets the current price information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetInstantaneousDemand">
            <summary>
            Gets the Instantaneous Demand
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetCurrentSummationDelivered">
            <summary>
            Gets the current summation
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetCurrentPeriodDelivered">
            <summary>
            Gets the current period demand
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.GetLastPeriodDelivered">
            <summary>
            Gets the last period demand
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CloseCurrentPeriodDelivered">
            <summary>
            Closes the current period in the device
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.SetFastPoll(System.UInt16,System.UInt16)">
            <summary>
            Sets the RAVEn to fast poll mode
            </summary>
            <param name="frequency">The frequency to poll</param>
            <param name="duration">The duration of fast poll mode</param>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.Port">
            <summary>
            Gets the Port Name for the RAVEn module
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.CurrentElements">
            <summary>
            Gets the list of current unhandled elements
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.DeviceInformation">
            <summary>
            Gets the last received Device Information
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.ScheduleInformation">
            <summary>
            Gets the last received Schedule Information
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.DeviceTime">
            <summary>
            Gets the last received Device Time
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.Messages">
            <summary>
            Gets the list of messages received from the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.Price">
            <summary>
            Gets the pricing information last received from the device
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.InstantaneousDemand">
            <summary>
            Gets the Instantaneous Demand
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.CurrentSummationDelivered">
            <summary>
            Gets the Current Summation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.CurrentPeriodDelivered">
            <summary>
            Gets the value for the Current Period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.LastPeriodDelivered">
            <summary>
            Gets the value for the last period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.CurrentPeriodStartDate">
            <summary>
            Gets the start date for the current period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.LastPeriodStartDate">
            <summary>
            Gets the start date for the last period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.LastPeriodEndDate">
            <summary>
            Gets the end date for the last period
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.LastInformationMessage">
            <summary>
            Gets the last Information message received
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEn.LastErrorMessage">
            <summary>
            Gets the last error message received
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.WaitForResponse(System.UInt16)">
            <summary>
            Waits for a response for the specified command
            </summary>
            <param name="usCmdID">The command to wait for</param>
            <returns>The response to the command</returns>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CreateCommandElement(System.String,System.Boolean)">
            <summary>
            Creates a basic Command element used for sending commands to the RAVEn
            </summary>
            <param name="command">The command to send</param>
            <param name="useCommandID">Whether or not a Command ID should be sent with the command</param>
            <returns>The generated Command</returns>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.m_Comm_DataReceived(System.Object,System.EventArgs)">
            <summary>
            Handles the Data Received event from the Communications object
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForSpecialResponse">
            <summary>
            Checks the list of XML fragments received for special fragments and reads out the relevant information
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForErrorMessages">
            <summary>
            Checks the list of XML fragments received for Error Messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForInformationMessages">
            <summary>
            Checks for Information messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForSimpleMeteringClusterMessages">
            <summary>
            Checks the list of received messages for SimpleMeteringCluster messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForScheduleInfoMessages">
            <summary>
            Checks the list of received messages for ScheduleInfo messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForDeviceInfoMessages">
            <summary>
            Checks the list of received messages for DeviceInfo messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForTimeClusterMessages">
            <summary>
            Checks the list of received messages for TimeCluster messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForMessageClusterMessages">
            <summary>
            Checks the list of received messages for MessageCluster messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.CheckForPriceClusterMessages">
            <summary>
            Checks the list of received messages for PriceCluster messages
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnInformationReceived(System.String)">
            <summary>
            Raises the Information Received event
            </summary>
            <param name="status">The Information text</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnErrorReceived(System.String)">
            <summary>
            Raises the error received event
            </summary>
            <param name="status">The error text</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnDeviceTimeUpdated">
            <summary>
            Raises the Device Time Updated event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnDeviceInfoUpdated">
            <summary>
            Raises the Device Info updated event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnMessageReceived">
            <summary>
            Raises the Message Received event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnDataUpdated">
            <summary>
            Raises the Data Updated event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnPriceUpdated">
            <summary>
            Raises the PriceUpdated event
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEn.OnPowerUpdated">
            <summary>
            Raises the Instantaneous event
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnDeviceInformation">
            <summary>
            Device Information object for the RAVEn ZigBee module
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnDeviceInformation.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Constructor
            </summary>
            <param name="xmlElement">The element containing the Device Information</param>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.MACAddress">
            <summary>
            Gets the MAC Address
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.InstallCode">
            <summary>
            Gets the Install Code
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.FWVersion">
            <summary>
            Gets the FW Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.HWVersion">
            <summary>
            Gets the HW Version
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.Manufacturer">
            <summary>
            Gets the Manufacturer
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.ModelID">
            <summary>
            Gets the Model ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnDeviceInformation.DateCode">
            <summary>
            Gets the Date Code
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnDeviceInformation.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the Device Info from the XML element
            </summary>
            <param name="xmlElement">The element to parse from</param>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnScheduleInformation">
            <summary>
            Schedule Information object for the RAVEn ZigBee module
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID">
            <summary>
            Schedule types
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.Time">
            <summary>
            Time update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.Message">
            <summary>
            Message update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.Price">
            <summary>
            Price update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.Summation">
            <summary>
            Summation update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.Demand">
            <summary>
            Demand update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.None">
            <summary>
            None update schedule
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnScheduleInformation.ScheduleID.All">
            <summary>
            All schedules
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnScheduleInformation.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnScheduleInformation.UpdateScheduleInfo(System.Xml.Linq.XElement)">
            <summary>
            Updates the schedule info from the specified ScheduleInfo element
            </summary>
            <param name="element">The element to update from</param>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdateTimeEnabled">
            <summary>
            Gets or Sets whether or not Time should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdateMessageEnabled">
            <summary>
            Gets or Sets whether or not Messages should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdatePriceEnabled">
            <summary>
            Gets or Sets whether or not Prices should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdateSummationEnabled">
            <summary>
            Gets or Sets whether or not Summations should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdateDemandEnabled">
            <summary>
            Gets or Sets whether or not Demands should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.UpdateNoneEnabled">
            <summary>
            Gets or Sets whether or not None should be automatically updated
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.TimeUpdateFrequency">
            <summary>
            Gets or sets the Time Update Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.MessageUpdateFrequency">
            <summary>
            Gets or sets the Message Update Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.PriceUpdateFrequency">
            <summary>
            Gets or sets the Price Update Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.SummationUpdateFrequency">
            <summary>
            Gets or sets the Summation Update Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.DemandUpdateFrequency">
            <summary>
            Gets or sets the Demand Update Frequency
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnScheduleInformation.NoneUpdateFrequency">
            <summary>
            Gets or sets the None Update Frequency
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnMessage">
            <summary>
            Message object for the RAVEn ZigBee module
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnMessage.QueueType">
            <summary>
            Which message queue the message belongs to
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnMessage.QueueType.NotSpecified">
            <summary>
            The Queue was not specified in the message
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnMessage.QueueType.Active">
            <summary>
            Message is in the Active Queue
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnMessage.QueueType.CancelPending">
            <summary>
            Message is in the Cancel Pending Queue
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnMessage.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnMessage.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the message from the specified element
            </summary>
            <param name="element">The element to parse from</param>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnMessage.Equals(Itron.Metering.Device.RAVEnMessage)">
            <summary>
            Determines if the Messages are equal
            </summary>
            <param name="other">The message to compare to.</param>
            <returns>True if the messages are equal. False otherwise.</returns>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnMessage.MessageID">
            <summary>
            Gets the Message ID
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnMessage.Message">
            <summary>
            Gets the Message text
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnMessage.ConfirmationRequired">
            <summary>
            Gets whether or not the message requires confirmation
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnMessage.Confirmed">
            <summary>
            Gets whether or not the message has been confirmed
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnPrice">
            <summary>
            Price object for the RAVEn ZigBee module
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.RAVEnPrice.CurrencyType">
            <summary>
            ISO 4217 Currency Codes
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.Unknown">
            <summary>
            Unknown/Not Used Currency
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.AUD">
            <summary>
            Australian Dollar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.CAD">
            <summary>
            Canadian Dollar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.CNY">
            <summary>
            Chinese Yen
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.INR">
            <summary>
            Indian Rupee
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.JPY">
            <summary>
            Japanese Yen
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.MXN">
            <summary>
            Mexican Peso
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.QAR">
            <summary>
            Qatari Rial
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.GBP">
            <summary>
            Pound Sterling
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.USD">
            <summary>
            US Dollar
            </summary>
        </member>
        <member name="F:Itron.Metering.Device.RAVEnPrice.CurrencyType.EUR">
            <summary>
            Euro
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnPrice.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnPrice.Equals(Itron.Metering.Device.RAVEnPrice)">
            <summary>
            Determines whether or not the two RAVEn Price objects are equal
            </summary>
            <param name="other">The RAVEn price to compare against</param>
            <returns>True if the prices are equal. False otherwise</returns>
        </member>
        <member name="M:Itron.Metering.Device.RAVEnPrice.ParseElement(System.Xml.Linq.XElement)">
            <summary>
            Parses the Price info from the specified element
            </summary>
            <param name="element">The element to parse from</param>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnPrice.Price">
            <summary>
            Gets the current price
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnPrice.Currency">
            <summary>
            Gets the currency type for the price
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnPrice.Tier">
            <summary>
            Gets the current tier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnPrice.TierLabel">
            <summary>
            Gets the label for the current tier
            </summary>
        </member>
        <member name="P:Itron.Metering.Device.RAVEnPrice.RateLabel">
            <summary>
            Gets the label for the current rate
            </summary>
        </member>
        <member name="T:Itron.Metering.Device.StatusEventHandler">
            <summary>
            Status Event Handle delegate
            </summary>
            <param name="sender">The object that sent the event</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Itron.Metering.Device.StatusEventArgs">
            <summary>
            Status event arguments
            </summary>
        </member>
        <member name="M:Itron.Metering.Device.StatusEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="status">The events status</param>
        </member>
        <member name="P:Itron.Metering.Device.StatusEventArgs.Status">
            <summary>
            Gets the status
            </summary>
        </member>
    </members>
</doc>
